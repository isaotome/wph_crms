<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.ActiveReports</name>
  </assembly>
  <members>
    <member name="T:GrapeCity.ActiveReports.LayoutAction">
      <summary>セクションのFormatイベント発生時に実装するアクションを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.LayoutAction.PrintSection">
      <summary>セクションが出力されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.LayoutAction.MoveLayout">
      <summary>レイアウト位置がページ上の次の出力位置に移動します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.LayoutAction.NextRecord">
      <summary>次のレコードに進みます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.PageSettings.PrinterCollate">
      <summary>レポートの複数の部数を印刷するときの丁合いの順序を指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.Default">
      <summary>現在のプリンタ設定を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.Collate">
      <summary>１部全体を印刷してから、次の部の印刷を開始します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.PageSettings.PrinterCollate.DontCollate">
      <summary>各ページを印刷前に指定した部数印刷してから、次のページの印刷を開始します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportProcessingError">
      <summary>エラーの詳細処理のために使用可能なエラーコードを記述します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InternalError">
      <summary>ただの内部のエラーです。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidReport">
      <summary>レポート構造になにか間違いがあります。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidTheme">
      <summary>無効なテーマを指定しました。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InfinitePages">
      <summary>ページ処理の内部ループが観察されました。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoMasterReport">
      <summary>マスターレポートが見つかりませんでした。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.CyclicParameter">
      <summary>パラメータにある循環依存関係：はパラメータの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ParameterValueIsNotValid">
      <summary>パラメータの検証エラー：はパラメータの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NullValueAssignedToNonNullableParameter">
      <summary>パラメータの検証エラー：はパラメータの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.BlankValueAssignedToNonBlankParameter">
      <summary>パラメータの検証エラー：はパラメータの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidDataTypeForParameter">
      <summary>パラメータの検証エラー：はパラメータの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoPermission">
      <summary>DB アクセスエラー。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidSharedDataSource">
      <summary>共有データソースへのアクセスなし：は、データソースの名前を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidData">
      <summary>無効なデータか現在の構成で日付をアクセスできません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidQueryParameters">
      <summary>データセットクエリパラメータを解析/処理できません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ScriptCompilationFailed">
      <summary>スクリプトのコンパイルの問題を説明します：はエラーの配列を提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ScriptError">
      <summary>スクリプト実装の問題を説明します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport.ReportState">
      <summary>レポートエンジンの現在の状態を決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.Idle">
      <summary>レポート処理はアイドル状態です。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.InProgress">
      <summary>ドキュメントを作成するためのレポート処理の実装中です。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReport.ReportState.Completed">
      <summary>レポート処理は完了しています。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport.RpxFormat">
      <summary>レポートを保存するフォーマットを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet">
      <summary>レイアウトを標準のRPXファイルとして保存します。コンポーネントトレイ内の項目は保存されません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReport.RpxFormat.Arnet3">
      <summary>コンポーネントトレイ内のコンポーネントをRPXファイルに保存できます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.LocateCredentialsEventArgs">
      <summary>LocateCredentialsイベントにデータを提供します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.LocateDataSourceEventArgs">
      <summary>LocateDataSourceイベントにデータを提供します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.PageReport">
      <summary>レポート定義をロード、修正、および保存します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.PageSettings">
      <summary>レポートドキュメントページの印刷に使用するページ設定を指定します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportDataException">
      <summary>この例外は、レポートのデータソースに接続中にエラーが発生したときにスローされます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportException">
      <summary>レポートの実装中にエラーが発生したときに、この例外またはその派生クラスの１つがスローされます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportScriptException">
      <summary>ReportScriptExceptionは、レポートのスクリプトコードまたはレポートのDataFieldの計算式でエラーが発生したときにスローされます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionCollection">
      <summary>レポートレイアウト内のすべてのセクション（Sectionオブジェクト）のコレクションを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport">
      <summary>SectionReportクラスは、すべてのレポートの基本クラスです。このクラスは、レポートの実装や出力のために使われます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport.FetchEventArgs">
      <summary>FetchEventArgsクラスは、FetchDataイベントに必要なデータを提供します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.Password">
      <summary>検索する資格情報のパスワードを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.PromptText">
      <summary>資格情報を検索するリクエストのプロンプト文字列を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.ReportPath">
      <summary>資格情報を検索するレポートの名前を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.UserName">
      <summary>検索する資格情報のユーザー名を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Data">
      <summary>イベントハンドラにより返されたデータを表します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Report">
      <summary>データセットを検索するレポートを取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.#ctor">
      <summary>PageReportクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.#ctor(System.IO.FileInfo)">
      <summary>レポート定義ファイルを指定して、PageReportクラスの新しいインスタンスを初期化します。</summary>
      <param name="reportDefinitionFile">ロードするレポート定義（*.rdlx）のファイル。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.#ctor(System.IO.TextReader)">
      <summary>レポートの定義を指定して、PageReportクラスの新しいインスタンスを初期化します。</summary>
      <param name="reportDefinitionReader">ロードするレポートの定義（*.rdlx）。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Initialize">
      <summary>初期設定後、レポート定義のインスタンスの初期化を許可します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Run">
      <summary>
        <para>指定したレポート定義ファイルを実装します。</para>
      </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.ToRdlString">
      <summary>レポート定義でレポート定義言語（RDL）をSystem.Stringとして返します。</summary>
      <returns>RDLを含む文字列。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.CreateFromMaster(System.Uri)">
      <summary>マスターレポートで指定したコンテンツプレースホルダを含む空のレポートを作成します。</summary>
      <param name="masterUri">マスターレポートへのURI。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Load(System.IO.FileInfo)">
      <summary>指定したレポート定義のファイルをロードします。</summary>
      <param name="reportDefinitionFile">ロードするレポート定義（*.rdlx）ファイル。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Load(System.IO.TextReader)">
      <summary>指定したレポートの定義をロードします。</summary>
      <param name="reportDefinitionReader">ロードするレポートの定義（*.rdlx）。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Save(System.IO.FileInfo)">
      <summary>Reportを指定したファイルに保存します。</summary>
      <param name="file">レポートを保存するファイル。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.Save(System.Xml.XmlWriter)">
      <summary>Reportを指定した<paramref name="xmlWriter"></paramref>に保存します。</summary>
      <param name="xmlWriter">レポートを保存する。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.ConfigurationProvider">
      <summary>PageReportに関連する<see cref="T:GrapeCity.ActiveReports.Configuration.IConfigurationProvider">IConfigurationProvider</see>を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.Document">
      <summary>ドキュメントを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.Report">
      <summary>現在のレポートオブジェクトを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.ResourceLocator">
      <summary>レポートのリソースを解決するオブジェクトを取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageSettings.#ctor">
      <summary>PageSettingsクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageSettings.Dispose">
      <summary>PageSettingsオブジェクトをメモリから解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.Collate">
      <summary>丁合いの設定を示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.DefaultPaperSize">
      <summary>レポートドキュメントをプリンタのデフォルト用紙サイズで印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.DefaultPaperSource">
      <summary>プリンタのデフォルト用紙トレイを使用するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.Duplex">
      <summary>レポートドキュメントの両面印刷設定を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.Gutter">
      <summary>とじしろの値を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.Margins">
      <summary>デフォルトのページ余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.MirrorMargins">
      <summary>ドキュメントを見開きページで印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.Orientation">
      <summary>ドキュメントを縦横どちらの向きで印刷するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperHeight">
      <summary>ユーザー定義サイズの用紙を使う場合に、用紙の長さを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperKind">
      <summary>用紙の種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperName">
      <summary>用紙の種類名を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperSource">
      <summary>用紙トレイの給紙方法を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperSourceName">
      <summary>用紙のソースを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageSettings.PaperWidth">
      <summary>ユーザー定義サイズの用紙を使う場合に、用紙の幅を示す値を取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.PageSettings.Changed">
      <summary>PageSettingsプロパティのいずれかが変更されると発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.String)">
      <summary>エラーメッセージを指定して、ReportDataExceptionクラスの新しいインスタンスを初期化します。</summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.String,System.Exception)">
      <summary>
        <para>エラーメッセージ、およびこの例外の原因である内部例外への参照を指定して、ReportDataExceptionクラスの新しいインスタンスを初期化します。</para>
      </summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
      <param name="innerException">現在の例外の原因である例外。innerExceptionパラメーターがnull参照(Visual Basicの場合はNothing)でない場合、現在の例外は、内部の例外を処理するcatchブロックで発生します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportException.#ctor">
      <summary>ReportExceptionクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.String)">
      <summary>エラーメッセージを指定して、ReportExceptionクラスの新しいインスタンスを初期化します。</summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.String,System.Exception)">
      <summary>エラーメッセージ、およびこの例外の原因である内部例外への参照を指定して、ReportExceptionクラスの新しいインスタンスを初期化します。</summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
      <param name="innerException">現在の例外の原因である例外。innerExceptionパラメーターがnull参照(Visual Basicの場合はNothing)でない場合、現在の例外は、内部の例外を処理するcatchブロックで発生します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportException.ErrorCode">
      <summary>詳細的な処理のためのエラーコードです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportException.ErrorData">
      <summary>エラーデータはエラーコードに依存します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.String)">
      <summary>エラーメッセージを指定して、ReportScriptExceptionクラスの新しいインスタンスを初期化します。</summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.String,System.Exception)">
      <summary>エラーメッセージ、およびこの例外の原因である内部例外への参照を指定して、ReportScriptExceptionクラスの新しいインスタンスを初期化します。</summary>
      <param name="message">
        <para>例外が発生するときに表示する、原因を説明するためのエラーメッセージ。</para>
      </param>
      <param name="innerException">現在の例外の原因である例外。innerExceptionパラメーターがnull参照(Visual Basicの場合はNothing)でない場合、現在の例外は、内部の例外を処理するcatchブロックで発生します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Clear">
      <summary>コレクションからすべてのセクションを削除します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>指定したSectionオブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <returns>ブール値。セクションがコレクションに存在する場合 <strong>True</strong> を返します。それ以外の場合は <strong>False</strong>。</returns>
      <param name="section">
        <para>コレクション内で検索するSectionオブジェクト。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.CopyTo(GrapeCity.ActiveReports.SectionReportModel.Section[],System.Int32)">
      <summary>レポートから、指定したSectionに項目をコピーします。コピーはSection内の指定されたインデックス位置から開始します。</summary>
      <param name="sections">コピー先のSection。</param>
      <param name="index">
        <para>コピーの開始位置となる、Sectionのインデックス番号。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Dispose">
      <summary>SectionCollectionをメモリから解放します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Add(GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
      <summary>指定した名前でコレクションに新しいセクションを追加します。</summary>
      <param name="type">新しいセクションの SectionType 。</param>
      <param name="name">新しいセクションの名前。レポート内で一意である必要があります。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Add(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>SectionCollectionに指定されたセクションを追加します。</summary>
      <param name="section">コレクションに追加されるセクションオブジェクトを指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>コレクション内の指定したセクションの指定したインデックスを判定します。</summary>
      <param name="section">Sectionオブジェクトを指定します、</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>コレクション内の指定したインデックスにセクションを追加します。</summary>
      <param name="index">新しいセクションを挿入する位置を指定する、０から始まるインデックス。</param>
      <param name="section">挿入する Section 。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Insert(System.Int32,GrapeCity.ActiveReports.Document.Section.SectionType,System.String)">
      <summary>種類と名前を指定して新しいセクションを作成し、SectionCollection内の指定したインデックスに挿入します。</summary>
      <returns>
        <para>作成してコレクションに追加するセクション。</para>
      </returns>
      <param name="index">新しいセクションを挿入する位置を指定する、０から始まるインデックス。</param>
      <param name="type">挿入するセクションの SectionType 。</param>
      <param name="name">新しいセクションの一意の名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertGroupHF">
      <summary>GroupHeader1およびGroupFooter1というデフォルト名（名前で1が順番を示す）を付けて、それぞれグループヘッダおよび該当したグループフッタをSectionCollectionに挿入します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertGroupHF(System.String,System.String)">
      <summary>grHeaderNameおよびgrFooterName引数に名前を指定し、グループヘッダおよび該当したグループフッタをSectionCollectionに挿入します。</summary>
      <param name="grHeaderName">GroupHeaderセクションの名前を指定します。</param>
      <param name="grFooterName">GroupFooterセクションの名前を指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertPageHF">
      <summary>PageHeader1およびPageFooter1というデフォルト名（名前で1が順番を示す）を付けて、それぞれページヘッダおよび該当したページフッタをSectionCollectionに挿入します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.InsertReportHF">
      <summary>レポートヘッダおよび該当したレポートフッタをSectionCollectionに挿入します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>指定したSectionをSectionCollectionから削除します（存在する場合）。</summary>
      <param name="section">コレクションから削除する Section 。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.Remove(System.Int32)">
      <summary>指定したインデックスのSectionをSectionCollectionから削除します。</summary>
      <param name="index">削除する Section のインデックス。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionCollection.Item(System.Int32)">
      <summary>SectionCollection内の指定したインデックス位置にあるSectionオブジェクトを取得します。</summary>
      <param name="index">取得するセクションのインデックス。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionCollection.Item(System.String)">
      <summary>SectionCollection内の指定した名前を持つSectionオブジェクトを取得します。</summary>
      <param name="name">取得するSectionの一意の名前。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionCollection.Changed">
      <summary>SectionCollectionのメンバが変更されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AddCode(System.String)">
      <summary>レポートのスクリプトコンテキストに有効なスクリプトコードを追加します。AddCodeを使用すると、実装時に完全な関数をレポートのスクリプトに追加できます。追加された関数は、スクリプト内のレポートイベントから呼び出せます。</summary>
      <param name="script">指定したレポートスクリプト言語で記述したスクリプトコード。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AddControlLicense(System.String,System.String)">
      <summary>レポートにライセンスキーを追加します。実装時にControls.Addメソッドを使用することにより、ライセンス付きコントロールがセクションに追加されます。</summary>
      <param name="className">ライセンス付きコントロールのクラス名。</param>
      <param name="license">ライセンス付きコントロールのライセンス情報文字列。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AddNamedItem(System.String,System.Object)">
      <summary>スクリプトのグローバル名前空間にオブジェクトを追加します。このメソッドを使用すると、プロジェクトに含まれるカスタムクラスをスクリプトに認識させることができます。アイテムが追加されると、スクリプトは、objectName文字列を使用して、オブジェクトとクラスに含まれる関数を参照できるようになります。</summary>
      <param name="objectName">新しいオブジェクトの名前。</param>
      <param name="objectReference">新しいオブジェクトの値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AddScriptReference(System.String)">
      <summary>指定したアセンブリの参照を追加して、スクリプトの実装時にロードされるようにします。</summary>
      <param name="scriptRef">スクリプトが実装される時にスクリプト内でアセンブリが使用できるように、そのアセンブリ名を指定。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Cancel">
      <summary>レポートの処理をキャンセルします。描画されたページはすべてレポート Document から削除されます。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.CmToInch(System.Single)">
      <summary>値をセンチからインチに変換します。</summary>
      <returns>
        <para>指定したセンチ単位の値をインチ単位で表した値。</para>
      </returns>
      <param name="value">インチに変換するセンチ単位の値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.InchToCm(System.Single)">
      <summary>インチからセンチに値を変換します。</summary>
      <returns>
        <para>指定したインチ単位の値をセンチ単位で表した値。</para>
      </returns>
      <param name="value">センチに変換するインチ単位の値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.ResetScripts">
      <summary>AddNamedItem メソッドによって追加されたアイテムのスクリプト、または<see cref="GrapeCity.ActiveReports.v12~GrapeCity.ActiveReports.SectionReport~AddCode.html">AddCode</see>
メソッドによって追加されたコードをクリアします。このときクリアされるのは、これらのメソッドを使用して追加されたコードのみです。保存前のレポートレイアウト（RPX）ファイルが影響を受けることはありません。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.ResetWatermark">
      <summary>ウォーターマークをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Restart">
      <summary>レポートデータソースをリセットし、レポート処理を再実装します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Stop">
      <summary>レポート処理を停止します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Dispose">
      <summary>レポートインスタンスをメモリから解放します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.String)">
      <summary>
        <para>互換性のために残されています。LoadLayout（XmlReader）オーバーロードをご使用ください。</para>
        <para>ファイルからレポートのXMLレイアウトを取得します。</para>
      </summary>
      <param name="fileName">レポートレイアウト（RPX）ファイル名。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.IO.Stream)">
      <summary>
        <para>互換性のために残されています。LoadLayout（XmlReader）オーバーロードをご使用ください。</para>
        <para>ストリームからレポートのXMLレイアウトを取得します。</para>
      </summary>
      <param name="stream">
        <para>有効なレポートのXMLレイアウトを含むストリーム。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.IO.Stream,System.Collections.ArrayList@)">
      <summary>
        <para>互換性のために残されています。LoadLayout（XmlReader）オーバーロードをご使用ください。</para>
      </summary>
      <param name="stream">
        <para>有効なレポートのXMLレイアウトを含むストリーム</para>
      </param>
      <param name="errors">
        <para>LoadLayoutメソッドの実装時に発生するエラーを格納する配列。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Type,System.String)">
      <summary>
        <para>互換性のために残されています。LoadLayout（XmlReader）オーバーロードをご使用ください。</para>
        <para>リソースからレポートのXMLレイアウトを取得します。</para>
      </summary>
      <param name="type">リソースの種類。</param>
      <param name="resourceName">レポートのXMLレイアウトを含むリソースエントリの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Xml.XmlReader)">
      <summary>XmlReaderからレポートのXMLレイアウトを取得し、レポートオブジェクトに読み込みます。</summary>
      <param name="reader">有効なレポートのXMLレイアウトを含むXmlReader</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadStyles(System.String)">
      <summary>外部スタイルシートからレポートのスタイルを取得します。</summary>
      <param name="fileName">スタイルシートを​​ロードするファイルの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadStyles(System.IO.Stream)">
      <summary>外部スタイルシートからレポートのスタイルを取得します。</summary>
      <param name="inStream">外部スタイルシートがロードされるストリーム。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Run(System.Boolean)">
      <summary>レポートの実装を開始し、オプションで、ビューワコントロールにリンクされたドキュメントとレポートのドキュメントの同期を維持します。</summary>
      <param name="syncDocument">Trueに設定すると、リンクされたビューワコントロールドキュメントをレポート処理に同期させます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Run">
      <summary>ブロックモードでレポート処理を開始します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.String)">
      <summary>
        <para>互換性のために残されています。SaveLayout（XmlWriter）オーバーロードをご使用ください。</para>
        <para>レポートのXMLレイアウトを指定したファイルに保存します。</para>
      </summary>
      <param name="fileName">レイアウトを保存するファイルの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.IO.Stream)">
      <summary>
        <para>互換性のために残されています。SaveLayout（XmlWriter）オーバーロードをご使用ください。</para>
        <para>レポートのXMLレイアウトを指定したストリームに保存します。</para>
      </summary>
      <param name="stream">レポートレイアウトを保存するストリームオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.Xml.XmlWriter)">
      <summary>レポートのXMLレイアウトを指定したXmlWriterに保存します。</summary>
      <param name="writer">レポートレイアウトを保存するXmlWriterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveStyles(System.String)">
      <summary>レポートスタイルを外部スタイルシートへ保存します。</summary>
      <param name="fileName">レポートのスタイルシートを保存するファイルの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveStyles(System.IO.Stream)">
      <summary>レポートスタイルを外部スタイルシートへ保存します。</summary>
      <param name="outStream">外部スタイルシートが保存されるストリーム。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.CalculatedFields">
      <summary>レポート内のすべての計算フィールドを含むFieldCollectionオブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Culture">
      <summary>特定のカルチャ（名前や書式設定）に関する情報を提供します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.CurrentPage">
      <summary>現在のページインスタンスを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.DataMember">
      <summary>レポートを連結する DataSource 内の指定したリストを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.DataSource">
      <summary>レポートがデータを取得するデータソースを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Document">
      <summary>レポート出力のDocumentオブジェクトを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.EnableScriptDebugging">
      <summary>スクリプトでのデバッグ機能を有効にします。デフォルトは<strong>False</strong>です。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ExpressionErrorMessage">
      <summary>正常に式を構文解析できないか、もしくは０による除算によって発生する例外エラーを制御します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Fields">
      <summary>現在のデータ連結コレクションを返します。このコレクションには、レポートのコントロールやセクションを連結できるFieldオブジェクトが含まれています。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.IsDirty">
      <summary>レポートレイアウトの現在の状態を取得または設定します。このプロパティは、レポートレイアウトが最後に保存されてから、何らかの変更が加えられたときにTrueに設定されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.LayoutAction">
      <summary>現在のレコードの描画後のカスタムアクションを取得または設定します。以下のアクションを制御できます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.MaxPages">
      <summary>レポートが作成するページの最大数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Name">
      <summary>レポートの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.PageNumber">
      <summary>レポートの実装中に、現在処理されているページ番号を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.PageSettings">
      <summary>現在のレポートページ設定への参照を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Parameters">
      <summary>データソースクエリーのパラメータコレクションへの参照を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ParentReport">
      <summary>親レポートへの参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.PrintWidth">
      <summary>レポートの印刷可能な幅を設定または返します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ReportServerUri">
      <summary>レポートサーバーのURIを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Script">
      <summary>レポートイベントのスクリプトコードを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ScriptLanguage">
      <summary>ActiveReportsがスクリプトプロパティの書き込みと解釈に使用するスクリプト言語を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Sections">
      <summary>レポートのセクションコレクションへの参照を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ShowParameterUI">
      <summary>レポートを実装するときに、クエリーパラメータダイアログボックスが表示されるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.State">
      <summary>現在レポートが、実装中、アイドル状態、完了、キャンセルのいずれかの状態にあるかを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.StyleSheet">
      <summary>レポート内のコントロールを書式設定するのに使用する書式スタイルのコレクションを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.UserData">
      <summary>ユーザー定義の値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Version">
      <summary>製品のバージョン番号を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Watermark">
      <summary>指定したインスタンスをレポートの背景に追加します。各種ウォーターマークプロパティを使用することにより、ウォーターマーク（透かし）画像を指定したページで、位置決め、サイズ変更、整列、および配置できます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkAlignment">
      <summary>ウォーターマーク（透かし）をキャンバスに追加するときの垂直／水平位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkPrintOnPages">
      <summary>ウォーターマーク（透かし）を追加する特定のページを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.WatermarkSizeMode">
      <summary>画像がページに描画されるときに、ウォーターマーク（透かし）サイズを変更する方法を取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.DataInitialize">
      <summary>ここではレポートフィールドコレクションにカスタムフィールドを追加できます。ReportStart
イベントの後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.DataSourceChanged">
      <summary>レポートのデータソースのプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.FetchData">
      <summary>新しいレコードが処理されるごとに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.NoData">
      <summary>レポートのデータソースが何もデータを返さず、処理するデータがない場合に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.PageEnd">
      <summary>1ページの処理が完了すると発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.PageStart">
      <summary>レポートが新しいページへの出力を描画する前に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.ParameterUIClosed">
      <summary>ユーザーがクエリーパラメータダイアログを閉じた後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.PrintAborted">
      <summary>ユーザーが印刷ジョブをキャンセルしたときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.PrintProgress">
      <summary>レポートドキュメントの各ページがプリンタへ送信されるごとに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.ReportEnd">
      <summary>レポートがすべてのページの処理を完了した後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.ReportStart">
      <summary>レポートが処理を開始する前に発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.FetchEventArgs.#ctor(System.Boolean)">
      <summary>新しいFetchEventArgsインスタンスを作成します。</summary>
      <param name="eof">
        <para>ブール値。</para>
        <para>このパラメータは参照によって渡されます。デフォルト値はtrueです。レポートにデータがまったくないときに、さらにレコードの処理を続行する場合は、明示的にfalseに設定する必要があります。</para>
      </param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.FetchEventArgs.EOF">
      <summary>このパラメータは参照によって渡されます。デフォルト値は <strong>true</strong> です。レポートにデータコントロールがまったくないときに、さらにレコードの処理を続行する場合は、明示的に <strong>false</strong>
に設定する必要があります。レポートがデータコントロールに連結されている場合、このパラメータの値は無視され、すべてのレコードが処理されるまで、レポートの実装が継続されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.LocateCredentialsEventHandler">
      <summary>LocateCredentialsイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.LocateDataSourceEventHandler">
      <summary>PageDocumentの<see cref="E:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSource">LocateDataSource</see>イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport.FetchEventHandler">
      <summary>FetchDataイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReport.ParameterUIClosedHandler">
      <summary>ParameterUIClosedイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.IConfigurationManager">
      <summary>構成情報へのアクセスを許可するインタフェースを定義します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.IConfigurationProvider">
      <summary>なまの構成情報を提供するインタフェースを定義します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.CustomItemDesigners">
      <summary>カスタムデザイナを持つカスタムレポートアイテムのマップを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.DataProviders">
      <summary>カスタムデータプロバイダのコレクションを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.MapTileServerConfiguration">
      <summary>
        <span>マップタイル</span>
        <span>サーバ</span>
        <span>との通信のために設定を戻します。</span>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.RenderingExtensions">
      <summary>プロバイダにより定義された描画拡張機能を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.ReportItems">
      <summary>CustomReportItemの型名に該当するSystem.Typeを関連付けるマッピングを提供します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.Settings">
      <summary>構成設定のコレクションを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.TileProviders">
      <summary>Mapタイルのプロバイダーを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.ToolboxItems">
      <summary>ツールボックス項目の構成エントリを返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationProvider.Content">
      <summary>構成を表すXMLを取得します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary">
      <summary>コンポーネントに対して構成されたカスタムデザイナの辞書を表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider">
      <summary>実装可能なディレクトリ内のファイルから構成情報を取得するを実装します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo">
      <summary>描画拡張機能の情報を含むクラスを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"></see>のコレクションを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary">
      <summary>CustomReportItem型の名前と該当するSystem.Typeを含む辞書を表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig">
      <summary>ツールボックスの構成項目のエントリを表します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.#ctor">
      <summary>CustomDesignerConfigurationDictionaryクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetCustomTypeNameForDesigner(System.Type)">
      <summary>指定したデザイナに関連するの値を取得します。</summary>
      <returns>CustomReportItem RDLの要素のType属性の適切な値。</returns>
      <param name="designerType">呼び出し側がカスタムレポートアイテムの種類の名前を求めるデザイナの。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetDesignerForCustomTypeName(System.String)">
      <summary>指定したコンポーネントのタイプに対して構成されたカスタムデザイナのを返すか、またはnullを返します。</summary>
      <returns>
        <para>指定したコンポーネントに対して構成されたカスタムデザイナの 、または、指定したコンポーネントに対してカスタムデザイナが構成されていない場合、nullを返します。</para>
      </returns>
      <param name="customTypeName">構成されたデザイナのの値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider.#ctor">
      <summary>の新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.DefaultConfigurationProvider.Content">
      <summary>構成情報をXML内容として返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.AssemblyName">
      <summary>アセンブリの完全修飾名を表します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.MenuName">
      <summary>描画拡張機能の名前に対して、エクスポートメニュー項目名。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.TypeName">
      <summary>描画拡張機能の実装クラス名。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Add(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
      <summary>RenderingExtensionInfoをRenderingExtensionsCollectionの末尾に追加します。</summary>
      <param name="value">コレクションに追加するRenderingExtensionInfoオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Contains(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
      <summary>RenderinExtensionsCollectionでは特定のRenderingExtensionInfoが含まれているかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.IndexOf(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
      <summary>指定したRenderingExtensionsを検索し、RenderingExtensionCollectionから最初のゼロベースインデックスを返します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Remove(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
      <summary>最初に見つかった特定のRenderingExtensionInfoをRenderingExtensionsCollectionから削除します。</summary>
      <param name="value">コレクションから削除するRenderingExtensionInfoオブジェクト。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Item(System.Int32)">
      <summary>指定したインデックスにを取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.ContentChanged">
      <summary>内容が変更されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.GetCustomTypeNameForReportItem(System.Type)">
      <summary>指定したReportItemに関連付けられている<see cref="P:GrapeCity.ActiveReports.PageReportModel.CustomReportItem.Type">Type</see>の値を取得します。</summary>
      <returns>CustomReportItemのRDL要素のType属性値に対して適切な値を返します。</returns>
      <param name="reportItemType">呼び出し元がカスタムレポートアイテム型を検索しているデザイナのSystem.Type。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.ReportItemsConfigurationDictionary.GetReportItemForCustomTypeName(System.String)">
      <summary>指定したコンポーネント型、またはNullに対して構成されているカスタムレポートアイテムのSystem.Typeを返します。</summary>
      <returns>指定したコンポーネントに対して構成されているカスタムデザイナのを返します。カスタムデザイナが設定されていない場合、Nullを返します。</returns>
      <param name="customReportItemTypeName">構成されたデザイナが検索されているTypeの値。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.BitmapResource">
      <summary>ツールボックス項目用のビットマップのリソースのアセンブリ修飾名を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.ClearItems">
      <summary>既存項目をクリアするかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ToolboxItemConfig.ReportItemDesignerType">
      <summary>ツールボックス項目がレポートアイテムのデザイナの種類（デザイナに関連するコンポーネントのこと）を表示するアセンブリ修飾型名を取得します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.ContentChangedEventHandler">
      <summary>ContentChangedイベントを処理するメソッドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.FieldTypeEnum">
      <summary>FieldクラスのFieldTypeプロパティで使用する値セットを提供します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.None">
      <summary>データ値の型が指定されていません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.String">
      <summary>フィールドが文字列値を含むことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Date">
      <summary>フィールドが日付値を含むことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Int32">
      <summary>フィールドが整数値を含むことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Float">
      <summary>フィールドが浮動小数点値を含むことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Double">
      <summary>フィールドが倍精度値を含むことを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.FieldTypeEnum.Boolean">
      <summary>フィールドがブール値を含むことを指定します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.CsvDataSource">
      <summary>CSVドキュメントに基づくセクションレポートのデータソースを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.Field">
      <summary>Fieldクラスは、ActiveReportsのデータ連結で使用できる任意のデータフィールドを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.FieldCollection">
      <summary>FieldCollectionクラスは、レポートで使用するデータ連結フィールドを管理します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.ListDataSource">
      <summary>
        <para>.NET FrameworkのIDataRecordメンバとIDataReaderメンバに基づくレポートのデータソースを表します。</para>
        <para>この型のすべてのメンバの一覧については、ListDataSourceメンバを参照してください。</para>
      </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.OdbcDataSource">
      <summary>ODBCデータプロバイダを基にしたレポートデータソースを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.OleDBDataSource">
      <summary>OleDB ADO.NETデータプロバイダを基にしたレポートデータソースを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.SqlDBDataSource">
      <summary>SqlDB ADO.NETデータプロバイダを基にしたレポートデータソースを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.XMLDataSource">
      <summary>XMLドキュメントに基づいたセクションレポートデータソースおよびレコードとして使用されるXMLのノードを選択するXPathパターンを表します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Field(System.String)">
      <summary>指定された名前のフィールドの値を返します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.GetColumns">
      <summary>csv列名のリストを返します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Load(System.Func{System.String,System.IO.Stream})">
      <summary>接続文字列で指定されたソースからcsvデータを読み込みます。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.MoveNext">
      <summary>現在の位置を次のデータレコードに移動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Dispose">
      <summary>に使用されるリソースを解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.CsvDataSource.ConnectionString">
      <summary>csvファイルからデータをロードする文字列を指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.CsvDataSource.EOF">
      <summary>CurrentPositionがNodeListの最後にあるかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.#ctor">
      <summary>Fieldクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.ToString">
      <summary>Fieldオブジェクトを表す文字列を返します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.Dispose">
      <summary>Fieldオブジェクトのインスタンスをメモリから解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.DefaultValue">
      <summary>データフィールドのデフォルト値を取得または設定します。この値はformulaプロパティまたはvalueプロパティの値がNULLの場合に有効になります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.FieldType">
      <summary>フィールドのデータ種別を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.Formula">
      <summary>計算フィールドのレポート実装時の値を算出するための計算式を取得または設定します。数式がNULLでない場合、その前のすべての値が上書きされます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.Name">
      <summary>フィールド名を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.Tag">
      <summary>フィールドオブジェクトに関連するユーザー定義の値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.Field.Value">
      <summary>フィールドオブジェクトの現在の値を取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Data.Field.Disposed">
      <summary>Fieldオブジェクトのインスタンスがメモリから解放されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.#ctor(System.ComponentModel.IComponent)">
      <summary>FieldCollectionクラスの新しいインスタンスを初期化します。</summary>
      <param name="parent">フィールドコレクションの親オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.CopyTo(GrapeCity.ActiveReports.Data.Field[],System.Int32)">
      <summary>指定したインデックスのフィールドコレクションにフィールドコレクションをコピーします。</summary>
      <param name="fields">コピー先のフィールドコレクション。</param>
      <param name="index">コピーを開始する位置のコピー先フィールドコレクションのインデックス。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Insert(System.Int32,GrapeCity.ActiveReports.Data.Field)">
      <summary>コレクション内の指定したインデックスの位置にFieldオブジェクトを挿入します。</summary>
      <param name="index">Fieldを挿入するコレクション内の位置。０から始まるインデックス番号。</param>
      <param name="field">挿入するFieldオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Add(System.String)">
      <summary>コレクションに新しいフィールドを追加します。</summary>
      <param name="fieldName">
        <para>コレクションに追加するフィールドの名前。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Add(GrapeCity.ActiveReports.Data.Field)">
      <summary>コレクションに新しいフィールドを追加します。</summary>
      <param name="field">コレクションに追加するフィールド。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Contains(System.String)">
      <summary>フィールドコレクションに指定した名前のフィールドが含まれるかどうかを表す値を返します。</summary>
      <returns>ブール型：コレクションに指定した名前の要素が含まれる場合は<strong>True</strong>、そうでなければ<strong>False</strong>を返します。</returns>
      <param name="fieldName">コレクション内で検索するフィールドの名前を指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Contains(GrapeCity.ActiveReports.Data.Field)">
      <summary>フィールドコレクションに指定した名前のフィールドが含まれるかどうかを表す値を返します。</summary>
      <returns>ブール型：コレクションに指定した名前の要素が含まれる場合は<strong>True</strong>、そうでなければ<strong>False</strong>を返します。</returns>
      <param name="field">コレクション内で検索するフィールドの名前を指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Dispose">
      <summary>フィールドコレクションをメモリから解放します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.IndexOf(GrapeCity.ActiveReports.Data.Field)">
      <summary>コレクション内の指定したFieldのインデックスを取得します。</summary>
      <returns>コレクション内のFieldの位置を指定する整数値。</returns>
      <param name="field">
        <para>コレクション内で検索するField。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(GrapeCity.ActiveReports.Data.Field)">
      <summary>コレクションから、指定したフィールドを削除します。</summary>
      <param name="value">コレクションから削除するフィールドを指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(System.String)">
      <summary>コレクションから、指定した名前のフィールドを削除します。</summary>
      <param name="fieldName">コレクションから削除するフィールドの名前を指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Remove(System.Int32)">
      <summary>指定したインデックスのフィールドをコレクションから削除します。</summary>
      <param name="index">
        <para>コレクションから削除するフィールドのインデックスを指定します。</para>
      </param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.Item(System.Int32)">
      <summary>FieldColloection内の指定したインデックス位置にあるFieldオブジェクトを取得します。</summary>
      <param name="index">コレクション内でのFieldオブジェクトの位置を示すインデックス。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.Item(System.String)">
      <summary>FieldCollection内の指定した名前を持つFieldオブジェクトを取得します。</summary>
      <param name="fieldName">コレクション内でのFieldオブジェクトの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.#ctor(System.Collections.IList)">
      <summary>ListDataSourceクラスの新しいインスタンスを初期化します。</summary>
      <param name="list">System.Collections.IList</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.OdbcDataSource.#ctor">
      <summary>デフォルトで、接続文字列およびコマンドのテキストが空の文字列、また、コマンドタイムアウトはデフォルトのタイムアウトで指定されています。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.OdbcDataSource.#ctor(System.String,System.String,System.Int32)">
      <summary>OdbcDataSourceクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.#ctor">
      <summary>OleDbDataSourceクラスの新しいインスタンスを初期化します。デフォルトで、接続文字列および接続テキストは空文字列です。また、コマンドタイムアウトはDefaultTimeoutです。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.OleDBDataSource.#ctor(System.String,System.String,System.Int32)">
      <summary>OleDbDataSourceクラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">データベースを開くために使用する接続。</param>
      <param name="sql">クエリのテキスト。</param>
      <param name="timeout">コマンド実装の試行を終了するまでの待機時間。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.#ctor">
      <summary>SqlDBDataSourceクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.SqlDBDataSource.#ctor(System.String,System.String,System.Int32)">
      <summary>指定したパラメータを使用してSqlDBDataSourceクラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">データベースを開くために使用する接続。</param>
      <param name="sql">クエリのテキスト。</param>
      <param name="timeout">コマンド実装の試行を終了するまでの待機時間。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.#ctor">
      <summary>XMLDataSourceクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.#ctor(System.String,System.String)">
      <summary>XMLDataSourceクラスの新しいインスタンスを初期化します。</summary>
      <param name="fileUrl">XMLファイルへのパス。</param>
      <param name="recordsetPattern">レコードのパターンを指定するXPath式。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.LoadXML(System.String)">
      <summary>文字列からXMLフラグメントをロードします。<!--DXMETADATA end --></summary>
      <param name="xmlFragment">XMLドキュメントにロードする有効なXMLフラグメント文字列を指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.MoveFirst">
      <summary>CurrentPositionをNodeList内の最初のノードに移動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.MoveNext">
      <summary>CurrentPositionをNodeList内の次のノードに移動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.Field(System.String,System.Boolean)">
      <summary>現在のノード（レコード）を基準に相対指定されたXPathパターンを使用して、XMLノードまたはノードリストを返します。</summary>
      <param name="name">現在のノードを基準にXPathパターンを相対指定します。</param>
      <param name="asNodeList">XPathパターンが単一のノードを返すかノードのリストを返すかを表すブール値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.XMLDataSource.Field(System.String,System.Boolean,System.Boolean)">
      <summary>現在のノード（レコード）を基準に相対指定されたXPathパターンを使用して、XMLノードまたはノードリストを返します。</summary>
      <param name="name">現在のノードを基準にXPathパターンを相対指定します。</param>
      <param name="asNodeList">XPathパターンが単一のノードを返すかノードのリストを返すかを表すブール値。</param>
      <param name="isOutputformatNull">現在のノードのテキストを使用するかどうかを指定します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.BOF">
      <summary>CurrentPositionがNodeList内の最初のノードにあるかどうかを特定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.Count">
      <summary>ノード一覧にあるノードの数を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.CurrentPosition">
      <summary>NodeList内の現在のノードのインデックスを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.Document">
      <summary>データソースとして使用するためにロードされたXmlDocumentへの参照を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.EOF">
      <summary>CurrentPositionがNodeListの最後にあるかどうかを特定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.FileURL">
      <summary>データソースとして使用されるXMLドキュメントを取得するためにファイル名、または、URLを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.NodeList">
      <summary>RecordsetPatternのXPathパターンを適用した結果のXmlNodeListへの参照を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.RecordsetPattern">
      <summary>レポートに印刷するデータソースノードの選択に使用するXPathパターンを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.XMLDataSource.ValidateOnParse">
      <summary>取得したXmlDocumentの解析時に妥当性を検証するかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Document.PageDocument">
      <summary>レポートを処理するために必要な機能を提供します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.#ctor(GrapeCity.ActiveReports.PageReport)">
      <summary>新しいレポートを初期化します。</summary>
      <param name="pageReport">ページドキュメントが作成されるページレポートのオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Dispose">
      <summary>リソースの解放に関連付けられているタスクを実装します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.ResetPrinter">
      <summary>プリンタのプロパティをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
      <summary>レポートの出力を指定した描画拡張機能に提供します。</summary>
      <exception caption="" cref="T:System.ArgumentNullException">%renderingExtension%、または、%streams%はNullのときにスローされます。レポート固有のエラーが発生したときにスローされます。</exception>
      <param name="renderingExtension">レポートを描画表示するために使用する描画拡張機能。</param>
      <param name="streams">描画されたレポート出力を保存するStreamProvider。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
      <summary>指定した値を使用する指定した描画拡張機能にレポートの出力を提供します。</summary>
      <exception caption="" cref="T:System.ArgumentNullException">%renderingExtension%または%streams%はNullのときにスローされます。レポート固有のエラーが発生したときにスローされます。</exception>
      <param name="renderingExtension">レポート出力を描画するIRenderingExtension。</param>
      <param name="streams">描画されたレポート出力を保存するStreamProvider。</param>
      <param name="settings">IRenderingExtensionの設定を含むSystem.Collections.Specialized.NameValueCollection。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean)">
      <summary>レポートの出力を指定した値および更新されたデータを使用して、指定した描画拡張機能に提供します。</summary>
      <exception caption="" cref="T:System.ArgumentNullException">%renderingExtension%または%streams%はNullのときにスローされます。レポート固有のエラーが発生したときにスローされます。</exception>
      <param name="renderingExtension">レポート出力を描画するIRenderingExtension。</param>
      <param name="streams">描画されたレポート出力を保存するStreamProvider。</param>
      <param name="settings">IRenderingExtensionの設定を含むSystem.Collections.Specialized.NameValueCollection。</param>
      <param name="forceDataRefresh">DataMapが既に必要なデータを取得した場合も、Trueに設定されているので、データの強制的な更新または再クエリを実装します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean)">
      <summary>レポートの出力を指定した値および更新されたデータを使用して、指定した描画拡張機能に提供します。</summary>
      <exception caption="" cref="T:System.ArgumentNullException">%renderingExtension%または%streams%はnullです。レポートに関連するエラーが発生しました。</exception>
      <param name="streams">描画されるレポートの出力を格納するための。</param>
      <param name="settings">の設定を含む<see cref="T:System.Collections.Specialized.NameValueCollection"></see>。</param>
      <param name="forceDataRefresh">DataMapが既に必要なデータを取得した場合も、Trueに設定されているので、データの強制的な更新または再クエリを実装します。</param>
      <param name="forceParameterDataRefresh">パラメータデータの強制的な更新または再クエリのためにTrueに設定します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.PageReport">
      <summary>レポートの定義を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.Parameters">
      <summary>レポートのパラメータを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.Printer">
      <summary>ドキュメントのプリンタ設定への参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.PrintOptions">
      <summary>ドキュメントの印刷のオプションへの参照を取得します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.LocateCredentials">
      <summary>レポートが呼び出し元のアプリケーションからデータソースの資格情報を取得するときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSource">
      <summary>レポートが呼び出し元のアプリケーションからデータソースを検索するときに発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.PrintAborted">
      <summary>ユーザーが印刷ジョブをキャンセルしたときに発生します。<!--DXMETADATA end --></summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.PrintingThreadErrorEvent">
      <summary>印刷スレッドによって例外がスローされるときに発生します。<!--DXMETADATA end --></summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.PrintProgress">
      <summary>レポートドキュメントの各ページが印刷されるごとに発生します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration">
      <summary>マップ タイルサーバーとの通信のために構成の設定を表します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.AppID">
      <summary>bingアプリケーションidを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.MaxConnections">
      <summary>最大接続の数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.MapTileServerConfiguration.Timeout">
      <summary>秒でタイムアウトを取得または設定します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition">
      <summary>バーコードシンボルに対するバーコードキャプションの相対的な位置を表します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.None">
      <summary>キャプションは印刷されません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.Above">
      <summary>キャプションはバーコードシンボルの上に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeCaptionPosition.Below">
      <summary>キャプションはバーコードシンボルの下に印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection">
      <summary>バーコードシンボルを印刷する向きを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.LeftToRight">
      <summary>バーコードシンボルは左から右に印刷されます（デフォルト）。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.RightToLeft">
      <summary>バーコードシンボルは右から左に印刷されます。JapanesePostal、QRCode、PDF417、Code49については、デフォルトから180度回転したイメージで出力されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.TopToBottom">
      <summary>バーコードシンボルは上から下に印刷されます。JapanesePostal、QRCode、PDF417、Code49については、デフォルトから90度回転したイメージで出力されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeDirection.BottomToTop">
      <summary>バーコードシンボルは下から上に印刷されます。JapanesePostal、QRCode、PDF417、Code49については、デフォルトから270度回転したイメージで出力されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle">
      <summary>コードの種類（コード体系）。バーコードを生成するために、バーコードコントロールが使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.None">
      <summary>なし。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Ansi39">
      <summary>ANSI 3 of 9（Code 39）では、英字の大文字、数字、-、.、*、$、/、+、%、を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Ansi39x">
      <summary>ANSI Extended 3 of 9（Extended Code 39）では、ASCII文字セットのすべての文字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_2_of_5">
      <summary>Code 2 of 5では、数字のみを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code25intlv">
      <summary>ITF（Interleaved 2 of 5）では、数字のみを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Matrix_2_of_5">
      <summary>Matrix 2 of 5は3つの黒バーおよび2つの白バーを含む高密度のバーコードです。Matrix 2 of 5では、数字のみを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code39">
      <summary>Code 39では、数字、スペース、%、*、$、/、.、-、+、英字の大文字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code39x">
      <summary>Extended Code 39では、ASCII文字セットの文字すべてを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_A">
      <summary>スタートキャラクタが "CODE-A" のCODE128を表します。制御文字、数字、記号、英字の大文字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_B">
      <summary>スタートキャラクタが "CODE-B" のCODE128を表します。記号、数字、英字の大文字、小文字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128_C">
      <summary>スタートキャラクタが "CODE-C" のCODE128を表します。数字のみを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_128auto">
      <summary>Autoでは、ASCII文字セットのすべての文字を使用します。CODE128の "CODE-A"、"CODE-B"、"CODE-C" のいずれかのコードから最も小さなバーコードになるコードを自動的に選択します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_93">
      <summary>Code 93では、英字の大文字、%、$、*、.、+、-、スペース、数字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code93x">
      <summary>Extended Code 93では、ASCII文字セットの文字すべてを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MSI">
      <summary>MSIコードでは、数字のみを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.PostNet">
      <summary>PostNetでは、数字のみを使用し、チェックディジットが付きます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Codabar">
      <summary>Codabar（NW-7）では、大文字のアルファベット（A、B、C、D）、+、-、:、.、/、＄、数字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN_8">
      <summary>EAN-8（JAN8）では数字のみ（７桁の数字とチェックディジット）を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN_13">
      <summary>EAN-13（JAN13）では数字のみ（12桁の数字とチェックディジット）を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_A">
      <summary>UPC-Aでは数字のみ（11桁の数字とチェックディジット）を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_E0">
      <summary>UPC-E0では数字のみを使用します。UPCシンボルのゼロ圧縮タイプです。Captionプロパティには、６桁のUPC-Eコードまたは11桁（コードタイプ「０」を含む）の完全なUPC-Aコードを入力できます。11桁のコードが入力されると、Barcordeコントロールによって、６桁のUPC-Eコードに変換されます（可能な場合）。変換できない場合は、何も表示されません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UPC_E1">
      <summary>UPC-E1では、数字のみを使用します。通常、小売店の棚札に使用されます。UPC-E1の入力文字列の長さは６桁の数字です。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RM4SCC">
      <summary>Royal Mail RM4SCCでは、英字と数字のみを使用します（チェックディジット付き）。これはイギリスのRoyal Mailが使用しているバーコードです。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.UCCEAN128">
      <summary>GS1-128（コンビニバーコード、旧称UCC/EAN-128）では、ASCII文字セットのすべての文字を使用します。このコードは健康産業で使用される、Code 128の特殊なバージョンです。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.QRCode">
      <summary>QRCode（モデル1/モデル2）ではASCII/バイナリ データを使用します。モデル１では最大で、英数字707字、数字1167字、バイナリ468バイト、漢字299文字を、モデル２では最大で、英数字4296字、数字7089字、バイナリ2953バイト、漢字1817文字を１つのシンボルに収容できます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code49">
      <summary>Code49ではASCIIキャラクタ全128文字を使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.JapanesePostal">
      <summary>カスタマバーコードでは数字、ハイフン（-）および英字から構成される郵便番号および住所表示番号を収容します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Pdf417">
      <summary>PDF417では、ASCII/バイナリ データを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.EAN128FNC1">
      <summary>
        <para>GS1-128（コンビニバーコード、旧称UCC/EAN-128）は、アプリケーション識別子データの英数字１次元表記です。</para>
        <para>このタイプのバーコードには、以下のセクションが含まれています。</para>
        <list type="bullet">
          <item>先頭のクワイエットゾーン（空白領域）</item>
          <item>Code 128のスタートキャラクタ

        <ul><li>Aは、標準の英数字 + 制御文字／特殊文字を許可します。</li><li>Bは、標準の英数字 + 英小文字／特殊文字を許可します。</li><li>Cは、00～99の100個の数字ペアセットを許可します。</li></ul></item>
          <item>スキャナにGS1-128（コンビニバーコード、旧称UCC/EAN-128）バーコードであることを認識させるFNC（ファンクション）1キャラクタ</item>
          <item>Data（AIまたはアプリケーション識別子 + データフィールド）</item>
          <item>シンボルチェックキャラクタ（スタートコード値 + 各文字位置の積 + 103で乗算した各文字の値。チェックサムは剰余値です）。</item>
          <item>ストップキャラクタ</item>
          <item>末尾のクワイエットゾーン（空白領域）</item>
        </list>
        <para>DataセクションのAI（アプリケーション識別子）は、後続するデータのタイプ（つまり、ID、日付、数量、単位など）を設定します。各データタイプには特定のデータ構造があります。このAIによって、GS1-128（コンビニバーコード、旧称UCC/EAN-128）とCode 128が区別されます。</para>
        <para>複数のAI（およびそのデータ）を、単一のバーコードに組み合わせることができます。</para>
        <para>EAN128FNC1は、GS1-128（コンビニバーコード、旧称UCC/EAN-128）タイプのバーコードで、FNC1キャラクタの任意位置への挿入や、バー幅補正が可能です。</para>
        <para>FNC1キャラクタを挿入するには、実装時にTextプロパティにC#の場合は“\n”、VBの場合は“vbLf”を設定します。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14">
      <summary>
        <para>RSS14 (GS1 DataBar)。</para>
        <para>RSSとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite Component（CC）拡張EANとUPC情報を省スペースで格納します。このバージョンは14桁EAN.UCC識別を対応するオムニスキャナでの読み取りが想定できるものです。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14Truncated">
      <summary>
        <para>RSS14 Truncated(GS1 DataBar Truncated)。</para>
        <para>RSS14Truncatedとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite
Component（CC）拡張EANとUPC情報を省スペースで格納します。このバージョンは14桁EAN.UCC＋インジケータ桁を対応する小物商品用のバーコードシンボルです。オムニスキャナでの読み取りはサポートされていません。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14Stacked">
      <summary>
        <para>RSS14 Stacked(GS1 DataBar Stacked)。</para>
        <para>RSS14Stackedとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite
Component（CC）拡張EANとUPC情報を省スペースで格納します。ほぼRSS14Truncatedと同じですが、RSS14Truncatedの幅が非常に広い場合、２行に多段化されます。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSS14StackedOmnidirectional">
      <summary>
        <para>RSS14 Stacked Omnidirectional(GS1 DataBar Stacked Omnidirectional)。</para>
        <para>RSS14StackedOmnidirectionalとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite
Component（CC）拡張EANとUPC情報を省スペースで格納します。ほぼRSS14と同じですが、RSS14の幅が非常に広い場合、２行に多段化されます。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSExpanded">
      <summary>
        <para>RSS Expanded(GS1 DataBar Expanded)。</para>
        <para>RSSExpandedとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite
Component（CC）拡張EANとUPC情報を省スペースで格納します。このバージョンは、14桁EAN.UCC＋アプリケーション識別子（有効期限日、重さなど）とデータを組み合わせて、オムニスキャナで使用するものです。</para>
        <para>FNC1キャラクタを挿入するには、実装時にTextプロパティにC#の場合は“\n”、VBの場合は“vbLf”を設定します。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSExpandedStacked">
      <summary>
        <para>RSS Expanded Stacked(GS1 DataBar Expanded Stacked)。</para>
        <para>RSSExpandedStackedとは、Reduced Space Symbology（省スペースシンボル）の略称で、Composite
Component（CC）拡張EANとUPC情報を省スペースで格納します。ほぼRSSExpandedと同じですが、RSSExpandedの幅が非常に広い場合、多段化されます。</para>
        <para>FNC1キャラクタを挿入するには、実装時にTextプロパティにC#の場合は“\n”、VBの場合は“vbLf”を設定します。</para>
      </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.RSSLimited">
      <summary>RSSとは、Reduced Space Symbology（省スペースシンボル）の略称で、省スペースで情報を拡張されたEANおよびUCCを含むComposite Component
(CC)をエンコードします。店頭のスキャナーでスキャンできない小さいシンボルで0~1に限定されたインジケータ桁を示す14桁EAN.UCC項目。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.DataMatrix">
      <summary>Data Matrixとは、四角形・長方形のパターンで表示されている四角モジュールを示す2次元のバーコードです。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MicroPDF417">
      <summary>MicroPDF417は、PDF417から派生した2次元（2D）多段型のシンボル体系です。MicroPDF417は、2次元（2D）シンボルで表されたデータ（最大150バイト、英数字250文字、または数字366桁）を最小限のシンボルサイズでエンコードできます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IntelligentMail">
      <summary>Intelligent Mail（4-State Customer Barcode）は、USで内部の郵便システムで使用される65-バーコードを示します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection">
      <summary>マルチカラムレポートでのカラムの向きを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection.DownAcross">
      <summary>各セクションを左カラムの上から下まで印刷し、次に右のカラムに印刷します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ColumnDirection.AcrossDown">
      <summary>各セクションを最初の段の各カラムに、左から右に印刷し、次に２番目の段に同様に印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether">
      <summary>グループヘッダセクションおよびグループフッタセクションのペアを１つのブロックとして１ページ内に収めて印刷するかどうかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.None">
      <summary>グループヘッダの直後で改ページできます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.FirstDetail">
      <summary>グループヘッダは、同じページまたはカラムの最初の詳細セクションと共に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GroupKeepTogether.All">
      <summary>グループヘッダ、詳細、グループフッタの各セクションは同じページに印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ImageTypes">
      <summary>グラフに使用する画像の種類を指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ImageTypes.Metafile">
      <summary>これはデフォルト値です。メタファイルを使用します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ImageTypes.PNG">
      <summary>PNGファイルを使用します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.LineStyle">
      <summary>線の描画に使用するペンの種類を指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Transparent">
      <summary>線なし。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Solid">
      <summary>実線。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Dash">
      <summary>破線。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Dot">
      <summary>点線。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.DashDot">
      <summary>一点鎖線。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.DashDotDot">
      <summary>二点鎖線。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.NewColumn">
      <summary>新しいカラムをセクションの前後どちらで開始するかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.None">
      <summary>セクションは同じカラムに続けて印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.Before">
      <summary>現在のセクションが新しいカラムに印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.After">
      <summary>次のセクションから新しいカラムに印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewColumn.BeforeAfter">
      <summary>現在のセクションおよび次のセクションが新しいカラムに印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.NewPage">
      <summary>新しいページをセクションの前後どちらで開始するかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.None">
      <summary>現在のセクション以降のセクションが現在のページに印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.Before">
      <summary>現在のセクションが新しいページに印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.After">
      <summary>次のセクションから新しいページに印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.NewPage.BeforeAfter">
      <summary>現在のセクション以降のセクションが新しいページに印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType">
      <summary>レポートパラメータ値を収集するための入力コントロールの作成に使用するデータ型を指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.String">
      <summary>パラメータ値を文字列として取得するテキストボックスを作成します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.Date">
      <summary>パラメータ値を日付型として取得するカレンダードロップダウンダイアログを作成します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Parameter.DataType.Boolean">
      <summary>パラメータ値をブール型として取得するチェックボックスを作成します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode">
      <summary>レポートのパラメータ値を解析した結果を指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.Success">
      <summary>Parameter値が成功したことを示します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.MissingCloseParam">
      <summary>Parameter値にcloseパラメータが見つからないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResultCode.MissingParamName">
      <summary>Parameter値にパラメータの名前が見つからないことを示します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment">
      <summary>コントロール領域内の画像の位置を決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.TopLeft">
      <summary>画像はコントロールの左上隅に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.TopRight">
      <summary>画像はコントロールの右上隅に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.Center">
      <summary>画像はコントロールの中央に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.BottomLeft">
      <summary>画像はコントロールの左下隅に印刷されます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.PictureAlignment.BottomRight">
      <summary>画像はコントロールの右下隅に印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle">
      <summary>グループヘッダセクションを詳細セクションごとに繰り返すかどうかを指定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.None">
      <summary>新しいページの関連詳細セクションでは、グループヘッダは繰り返されません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnPage">
      <summary>新しいページごとにグループヘッダセクションを繰り返します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnColumn">
      <summary>新しいカラムごとにグループヘッダセクションを繰り返します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.All">
      <summary>新しいページまたはカラムごとにグループヘッダセクションを繰り返します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RepeatStyle.OnPageIncludeNoDetail">
      <summary>関連する詳細セクションまたはグループフッタセクションを含むページごとにグループヘッダセクションを印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions">
      <summary>RichTextBoxコントロールでテキスト検索を実装する方法を指定します。この列挙体にはFlagsAttribute属性が含まれ、メンバの値をビット単位で組み合わせることができます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.None">
      <summary>検索キーワードに一致するすべての文字列を検索します。一致したテキストが単語であるかどうかを問いません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.MatchCase">
      <summary>大文字と小文字を区別して、検索キーワードを検索します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.Reverse">
      <summary>コントロールのドキュメントの末尾から先頭に向けて検索します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions.WholeWord">
      <summary>検索キーワードに完全に一致する単語のみを検索します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType">
      <summary>RichTextコントロールのコンテンツタイプを決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.PlainText">
      <summary>RichTextコントロールには、プレーンテキストストリームが含まれ、OLE（Object Linking and Embedding）オブジェクトの代わりにスペースが含まれています。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.UnicodePlainText">
      <summary>RichTextコントロールには、テキストストリームが含まれ、OLE（Object Linking and Embedding）オブジェクトの代わりにスペースが含まれています。テキストはUnicodeでエンコードされています。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RichTextStreamType.RichText">
      <summary>RichTextコントロールには、RTF（Rich Text Format）ストリームが含まれています。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextType">
      <summary>RichTextBoxにロードするストリームの種類を決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Rtf">
      <summary>RTFストリームをRichTextBoxコントロールにロードします。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Html">
      <summary>HTMLストリームをRichTextBoxコントロールにロードします。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextType.Text">
      <summary>TEXTストリームをRichTextBoxコントロールにロードします。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ShapeType">
      <summary>Shapeコントロールが印刷する図形の種類を表します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.Rectangle">
      <summary>長方形を印刷します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.Ellipse">
      <summary>楕円形を印刷します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ShapeType.RoundRect">
      <summary>角が丸い四角形を印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.SizeModes">
      <summary>コントロール領域における画像のサイズの扱いを決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Clip">
      <summary>画像はコントロール領域のサイズに合わせて切り取られます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Stretch">
      <summary>画像はコントロール領域のサイズに合わせて引き伸ばされます。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SizeModes.Zoom">
      <summary>画像がコントロール領域の垂直水平サイズに合わせて拡大／縮小されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc">
      <summary>フィールド値の集計関数を決定します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Sum">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の合計を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Avg">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の平均を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Count">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の総数を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Min">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の最小値を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Max">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の最大値を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.Var">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の分散を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.VarP">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の母分散を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.StdDev">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の標準偏差を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.StdDevP">
      <summary>指定した集計領域（グループ、ページ、またはレポート）のすべての値の母標準偏差を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DSum">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の合計を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DAvg">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の平均を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DCount">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の総数を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DVar">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の分散を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DVarP">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の母分散を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DStdDev">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の標準偏差を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryFunc.DStdDevP">
      <summary>指定した集計領域（グループ、ページ、またはレポート）の重複を除いた値の母標準偏差を計算します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning">
      <summary>集計値を累積して計算するか、特定のレベルでリセットするかを決定します。<!--DXMETADATA end --></summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.None">
      <summary>集計値は累積されません。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.Group">
      <summary>同一グループレベルで累計（各値は、現在の値とそれまでのすべての値の合計）を計算します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryRunning.All">
      <summary>すべての値の累計を計算します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.SummaryType">
      <summary>フィールド集計の種類を決定します。<!--DXMETADATA end --></summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.None">
      <summary>集計なし。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.GrandTotal">
      <summary>レポート内のすべてのレコードに対して、指定した集計関数を評価します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.PageTotal">
      <summary>各ページのすべてのレコードに対して、指定した集計関数を評価します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.SubTotal">
      <summary>各グループレベルのすべてのレコードに対して、指定した集計関数を評価します。</summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.SummaryType.PageCount">
      <summary>ページ数またはページ番号を印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControl">
      <summary>ARControlは、ActiveReportsの各コントロールの基本クラスです。このクラスをアプリケーション内で使用する必要はありません。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Barcode">
      <summary>Barcodeコントロールは、レポートにバーコードを印刷するために使用します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ChartControl">
      <summary>
        <para>レポート上にグラフを描画します。</para>
        <para>この型のすべてのメンバの一覧については、ChartControlメンバを参照してください。</para>
      </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CheckBox">
      <summary>チェックボックスは、ブール値のON/OFFを印刷するのに使用します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ControlCollection">
      <summary>ARControlのコレクションを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox">
      <summary>
        <para>CrossSectionBoxコントロールは、ヘッダセクションから、相対するフッタセクションまで、セクションを跨って長方形を描画します。</para>
      </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl">
      <summary>ARControlクラスはActiveReports
CrossSectionコントロールのベースクラスです。このクラスをアプリケーションに使う必要はありません。<!--DXMETADATA end --></summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine">
      <summary>CrossSectionLineコントロールは、縦線であり、始点となるヘッダセクションから、相対するフッタセクションまで、セクションを跨って線を描画します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CustomControl">
      <summary>CustomControlは、ラッパークラスです。このクラスを使用すると、System.Windows.Forms.Controlから継承している .NETコントロールを印刷できます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Detail">
      <summary>Detailセクションは、レポートのメインのセクションです。データソースの各レコードに対して１回ずつ印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupFooter">
      <summary>GroupFooterセクションは、Detailセクションおよび対応するグループヘッダに直接関係します。グループフッタは、類似レコードのグループ（GroupHeader.DataFieldで定義）が終了するたびに１回ずつ印刷されます。GroupFooterセクションは、対応するGroupHeaderセクションなしでは存在できません。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.GroupHeader">
      <summary>GroupHeaderセクションは、DataFieldプロパティで指定したフィールドを使用して定義したデータグループごとに１回ずつ印刷されます。GroupHeaderセクションには対応するGroupFooterセクションが必要です。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Label">
      <summary>レポートに固定テキストを印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Line">
      <summary>レポートに線を印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.OleObject">
      <summary>OleObjectは、OLEオブジェクトを印刷するためのラッパー クラスです。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageBreak">
      <summary>ページ上のコントロールの位置で、PageBreakによって現在のページを終了し、新しいページを開始します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageFooter">
      <summary>PageFooterセクションは、レポートの各ページの下部に１回ずつ印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.PageHeader">
      <summary>PageHeaderセクションは、レポートの各ページの先頭に１回ずつ印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Parameter">
      <summary>Parameterは、レポートのデータソースSQLクエリーテキストのパラメータプレースホルダの値を置換するために使用します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection">
      <summary>データソースSQLクエリーで、ActiveReportsがパラメータプレースホルダから解析したパラメータのコレクションを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Picture">
      <summary>レポートに画像を印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportFooter">
      <summary>ReportFooterセクションは、レポートの末尾に１回だけ印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportHeader">
      <summary>ReportHeaderセクションは、レポートの先頭に１回だけ印刷されます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ReportInfo">
      <summary>ReportInfoコントロールは、FormatStringプロパティで指定した情報を表示します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextBox">
      <summary>リッチテキスト（RTF）としてフォーマットされたテキストをレポートに印刷します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Section">
      <summary>Sectionは、ActiveReportsのすべての種類のセクションの基本クラスです。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Shape">
      <summary>レポート上に長方形、楕円形、角丸四角形を印刷します。<!--DXMETADATA end --></summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Style">
      <summary>コントロールの書式プロパティを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.StyleSheet">
      <summary>コントロールの書式設定に使用するStyleオブジェクトのコレクションを表します。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.SubReport">
      <summary>現在のレポートの一部としてリンクされたレポートオブジェクトを印刷します。サブレポートは、Reportプロパティを使用してリンクされます。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.TextBox">
      <summary>バウンドまたはアンバウンドのフォーマット済みテキストの値を印刷します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.BringToFront">
      <summary>コントロールをzオーダーの前に移動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.SendToBack">
      <summary>コントロールをzオーダーの奥に移動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.SetBounds(System.Drawing.RectangleF)">
      <summary>コントロールの境界を指定した矩形に設定します。</summary>
      <returns>矩形は、浮動小数点値または単精度浮動小数点値（インチ単位）を使用して定義します。</returns>
      <param name="bounds">コントロールの位置とサイズを定義する矩形。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.Dispose">
      <summary>メモリから、コントロールのインスタンスを解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Border">
      <summary>コントロールの各辺の罫線スタイルを定義する罫線オブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Bounds">
      <summary>コントロールの位置とサイズを定義する矩形を設定するか返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.DataField">
      <summary>データソースの、コントロールに連結するフィールドの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Height">
      <summary>コントロールの高さを取得または設定します（インチ単位）。デザイン時の最大値は、10,000インチです（実装時にCanGrowプロパティによって自動的に伸長した場合は除きます）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Left">
      <summary>コントロールの左端の座標を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Location">
      <summary>コントロールの位置を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Name">
      <summary>コントロールの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Parent">
      <summary>コントロールの親セクションへの参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Size">
      <summary>コントロールのサイズを取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Tag">
      <summary>コントロールに付随するユーザー定義の情報を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Top">
      <summary>セクション内のコントロールの上端の、セクションに対する相対的な座標を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Visible">
      <summary>コントロールを印刷するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControl.Width">
      <summary>コントロールの幅を取得または設定します（インチ単位）。最大値は、800インチです。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.#ctor">
      <summary>Barcodeクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Alignment">
      <summary>コントロール内のテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.AutoSize">
      <summary>バーコードがコントロールに適合するために自動的に伸縮するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BackColor">
      <summary>バーコードの背景色または塗りつぶしの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarHeight">
      <summary>バーの高さをインチ単位で取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CaptionGrouping">
      <summary>キャプション内の文字グループにスペースを追加し、長い数値などを読みやすく表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CaptionPosition">
      <summary>キャプションのバーコードシンボルに対する相対的な垂直位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.CheckSumEnabled">
      <summary>バーコードのチェックサム（チェックディジット）を計算してバーコードに含めるかどうかを決定します（適用可能な場合）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code128">
      <summary>Code128Optionsオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code49">
      <summary>バーコードコントロールのためにCode49Optionsを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataField">
      <summary>データソースの、コントロールに連結するフィールドの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataMatrix">
      <summary>[DataMatrix]プロパティには、[EccMode]、[Ecc200SymbolSize]、[Ecc200EncodingMode]、[Ecc000_140SymbolSize]、[StructuredAppend]、[StructureNumber]と[FileIdentifier]が含まれています。オプションごとに定義済みの値から選択し、[StructureNumber]と[FileIdentifier]には数値を入力します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.GS1Composite">
      <summary>バーコードコントロールのGS1Compositeオプションを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroPDF417">
      <summary>バーコードコントロールのMicroPDF417オプションを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroQRCode">
      <summary>BarcodeコントロールのためにMicroQRCodeOptionsを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.NarrowBarWidth">
      <summary>
        <para>バーコードのナローバー（細バー）の幅を設定します。単位はピクセルです。小さい値を設定する場合は、バーコードリーダーで正しく読み取れるか確認してください。</para>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.NWRatio">
      <summary>N次元と呼ばれるこの値は、2つの幅のみを含む小さいおよび大きいバーの比率の倍数をシンボルで定義します。例えば、3:1の場合は、値は3です。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.PDF417">
      <summary>PDF417固有の情報を設定するための、PDF417Optionsオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QRCode">
      <summary>QRCode固有の情報を設定するための、QRCodeOptionsオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneBottom">
      <summary>バーコードの下部剰余余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneLeft">
      <summary>バーコードの左の剰余余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneRight">
      <summary>バーコードの右の剰余余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QuietZoneTop">
      <summary>バーコードの上部剰余余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Rotation">
      <summary>バーコードの回転角度を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.RssExpandedStacked">
      <summary>BarcodeコントロールのStyleプロパティをRssExpandedStackedに設定した場合、RowCountプロパティを使用して多段化方法でコードを表示できます。行数を２行から１１行まで指定できます。多段化によってバーコードが短くなりますので、梱包方法によっては、RSSExpanded
バーコードを多段化して表示したほうが適切な場合もあります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Style">
      <summary>バーコードテキストの印刷に使用するバーコードの種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementBarHeight">
      <summary>補助バーコードでバーの高さを表します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementCaptionPosition">
      <summary>バーコードキャプションを表示する方法を定義します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementDataField">
      <summary>バーコードデータの補助オプション。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementSpacing">
      <summary>メインと補助バーコードの間の間隔を表します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.SupplementText">
      <summary>バーコードデータの補助オプション。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Text">
      <summary>規定のコードのバーコードシンボルおよびキャプションとして印刷するバーコードテキストの値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ValueBinary">
      <summary>バイナリデータをバーコードに渡すための特別なプロパティです。主にQRコードバーコード用に存在します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.#ctor">
      <summary>ChartControlクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Load(System.String)">
      <summary>指定したファイルからChartオブジェクトを再構築します。</summary>
      <param name="filename">グラフのロード元のファイル名。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Restart">
      <summary>グラフのデータソースをリセットし、グラフ処理を再起動します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Save(System.String)">
      <summary>Chartオブジェクトとその現在の状態のXMLエンコードを作成します。その場合、データは含みません。</summary>
      <param name="filename">グラフの保存先のファイル名。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Dispose">
      <summary>メモリから、コントロールのインスタンスを解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.AutoRefresh">
      <summary>プロパティの変更ごとにグラフを自動的に更新（再描画）するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Backdrop">
      <summary>チャートコントロールの背景に使用するBackdropItemを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.BlackAndWhiteMode">
      <summary>ハッチパターンと破線を使用して色を指定してグラフを白黒で描画するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartAreas">
      <summary>チャートコントロール内に描画するChartAreaオブジェクトのコレクション。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartBorder">
      <summary>グラフの周りに描画する境界線を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ColorPalette">
      <summary>系列に使用するカラーパレット列挙体を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Culture">
      <summary>ChartControlのカルチャを設定または参照します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DataSource">
      <summary>グラフのグローバルデータソースを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GridLayout">
      <summary>グラフのGridLayoutオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ImageType">
      <summary>レポート上でグラフとして描画される画像の種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Legends">
      <summary>チャートコントロールのLegendオブジェクトのコレクションを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Series">
      <summary>Chartオブジェクトの系列のコレクションを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Titles">
      <summary>タイトルコレクションを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.UIOptions">
      <summary>グラフの指定のユーザーインタフェース機能を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.#ctor">
      <summary>CheckBoxクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.BackColor">
      <summary>コントロールの背景色または塗りつぶしの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.CheckAlignment">
      <summary>コントロールの描画領域内のチェックボックステキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Checked">
      <summary>チェックボックスがONであるかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.ClassName">
      <summary>スタイルルールのクラス名を取得または設定します。スタイルルールはコントロールの書式設定に使用されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Padding">
      <summary>コントロールの各辺からテキストまでの余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Style">
      <summary>チェックボックスのスタイル文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Text">
      <summary>チェックボックスの印刷キャプションを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.WrapMode">
      <summary>
        <para>CSSを使用して、コントロールの折り返しモードを取得または設定します。</para>
      </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>ControlCollectionクラスの新しいインスタンスを初期化します。</summary>
      <param name="section">コントロールコレクションが常駐するレポートセクション。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Add(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>コントロールコレクションに指定したコントロールを追加します。</summary>
      <param name="control">コレクションに追加する control。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.ARControl[])">
      <summary>ARControlオブジェクトの配列をコレクションに追加します。</summary>
      <param name="controls">コレクションに追加する ARControl オブジェクトの配列。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Clear">
      <summary>コレクションからすべてのコントロールを削除します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>指定したコントロールがコレクションのメンバであるかどうかを決定します。</summary>
      <returns>
        <para>コントロールがコレクションのメンバである場合は <strong>True</strong>、そうでなければ <strong>False</strong> を返します。</para>
      </returns>
      <param name="control">コレクション内で検索するコントロール。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.CopyTo(GrapeCity.ActiveReports.SectionReportModel.ARControl[],System.Int32)">
      <summary>指定したインデックスのControlコレクションにControlコレクションをコピーします。</summary>
      <param name="values">コピー先のControlコレクション</param>
      <param name="index">
        <para>コピーを開始する位置のコピー先Controlコレクションのインデックス。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Dispose">
      <summary>メモリから、コントロールのインスタンスを解放します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>コントロールコレクションにおける指定したコントロールのインデックスを取得します。</summary>
      <returns>
        <para>指定したコントロールのコレクション内の位置を表す、０から始まる値。</para>
      </returns>
      <param name="control">コレクション内で検索するコントロール。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>コレクション 内の指定したインデックスの位置にARControlオブジェクトを挿入します。</summary>
      <param name="index">valueを挿入するコレクション内の位置。０から始まるインデックス番号。</param>
      <param name="control">挿入するARControl。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>指定したコントロールをコントロールコレクションから削除します。</summary>
      <param name="control">コレクションから削除するコントロール。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.RemoveAt(System.Int32)">
      <summary>コントロールのコレクションの指定したインデックスにあるコントロールを削除します。</summary>
      <param name="index">コレクションから削除するコントロールのインデックス。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Item(System.String)">
      <summary>ControlCollection内の指定した名前を持つControlオブジェクトを取得します。</summary>
      <param name="name">コレクション内のコントロールの名前。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Changed">
      <summary>コレクションに対してARControlが追加または削除されたときに発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.#ctor">
      <summary>CrossSectionBoxクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.GetDoubleRadius">
      <summary>Radiusプロパティの実装時の値を取得します。</summary>
      <returns>単精度浮動小数点値または浮動小数点値（ピクセル単位）。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.Radius">
      <summary>ボックスの丸みを設定するためにRadiusプロパティを設定してください。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.End">
      <summary>フッタセクションでの終点座標。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Left">
      <summary>
        <para>コントロールの左端の位置を取得または設定します。（インチ単位）</para>
      </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineColor">
      <summary>コントロールの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineStyle">
      <summary>線の描画に使用するペンの種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.LineWeight">
      <summary>線のペン幅を取得または設定します（ピクセル単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Start">
      <summary>クロスセクションコントロールのヘッダセクションでの始点座標。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Top">
      <summary>セクション内でのコントロールの上位置を設定または参照します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Width">
      <summary>コントロールの幅を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.#ctor">
      <summary>CustomControlクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.#ctor(System.Type)">
      <summary>指定した種類のコントロールのインスタンスをラップするCustomControlの新しいインスタンスを初期化します。</summary>
      <param name="type">作成するコントロールの種類を指定します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.Control">
      <summary>ホストされたコントロールへの参照を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ImageType">
      <summary>レポート上でカスタムコントロールが描画される画像の種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.Type">
      <summary>カスタムコントロールのタイプを設定するか返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnCount">
      <summary>レポートの段組みの段数を指定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnDirection">
      <summary>マルチカラムレポートの詳細セクションを印刷する方向を決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.ColumnSpacing">
      <summary>マルチカラムレポートのカラム間のスペースを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.KeepTogether">
      <summary>セクションを１ページ内に収めて印刷するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.NewColumn">
      <summary>セクションの印刷前に新しいカラムを開始するか、印刷後に開始するか、または印刷前と印刷後の両方で開始するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.NewPage">
      <summary>セクションの印刷前に新しいページを挿入するか、印刷後に挿入するか、または印刷前と印刷後の両方で挿入するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Detail.RepeatToFill">
      <summary>詳細セクションに出力するデータが少なく１ページに満たない場合、ページ全体に満たされるまで、空行を繰り返し出力するかどうかを決める値を取得または設定します。<br></br>
RepeatToFillプロパティを使用すると、十分なデータが入力されているかどうかにかかわらず、各ページに同じ数の書式設定された行を入力できます。これは、行や緑色のバーのような一貫した書式、または各ページを一番下のフッターセクションまで塗りつぶす背景色などの請求書などのレポートに特に使用されています。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.#ctor">
      <summary>GroupFooterクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.ColumnLayout">
      <summary>このセクションで詳細セクションと同じカラムレイアウトを使用するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.Height">
      <summary>グループフッターの高さを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.KeepTogether">
      <summary>セクションを１ページ内に収めて印刷するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.NewColumn">
      <summary>セクションの印刷前に新しいカラムを開始するか、印刷後に開始するか、または印刷前と印刷後の両方で開始するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.NewPage">
      <summary>セクションの印刷前に新しいページを挿入するか、印刷後に挿入するか、または印刷前と印刷後の両方で挿入するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupFooter.PrintAtBottom">
      <summary>セクションをページ下部のページフッタセクションの直前に印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.#ctor">
      <summary>GroupHeaderクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.ColumnGroupKeepTogether">
      <summary>グループを同じカラムの１つのブロックとして印刷するかどうかを指定または取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.ColumnLayout">
      <summary>このセクションで詳細セクションと同じカラムレイアウトを使用するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.DataField">
      <summary>データソースレコードのグループ化に使用するフィールドの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.GroupKeepTogether">
      <summary>セクションとフッタを１つのブロックとして同じページ内に印刷するかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.Height">
      <summary>グループヘッダーの高さを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.KeepTogether">
      <summary>セクションを１ページ内に収めて印刷するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.NewColumn">
      <summary>セクションの印刷前に新しいカラム（マルチカラムレポート）を開始するか、印刷後に開始するか、または印刷前と印刷後の両方で開始するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.NewPage">
      <summary>セクションの印刷前に新しいページを挿入するか、印刷後に挿入するか、または印刷前と印刷後の両方で挿入するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.RepeatStyle">
      <summary>カラムごとに、またはDetailセクションや関連フッタが印刷されるページごとにセクションを印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.UnderlayNext">
      <summary>次のセクションをこのセクションの上に重ねて印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.#ctor">
      <summary>Labelコントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Alignment">
      <summary>コントロールの境界内のテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Angle">
      <summary>コントロール領域のテキストの角度（傾き）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.CharacterSpacing">
      <summary>文字ピッチを取得または設定します。単位はポイントです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ClassName">
      <summary>スタイルルールのクラス名を取得または設定します。スタイルルールはコントロールの書式設定に使用されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.HyperLink">
      <summary>ビューワのHyperLinkイベントで指定した場所に移動するためのURLを取得または設定します。HTMLやPDFにエクスポートした場合、URLは自動的にアンカータグやハイパーリンクに変換されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.LineSpacing">
      <summary>行間を取得または設定します。単位はポイントです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.MultiLine">
      <summary>ラベルコントロールでテキストを複数行表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Padding">
      <summary>コントロールの各辺からテキストまでの余白を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.RightToLeft">
      <summary>右から左へ記述するフォントを使う地域をサポートするために、コントロールの要素を並びかえるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.ShrinkToFit">
      <summary>Labelが内容を適合するためにフォントサイズを小さくする必要があるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Style">
      <summary>ラベルのスタイル文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Text">
      <summary>印刷するラベルのテキストを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.TextJustify">
      <summary>AlignmentプロパティがJustifyに設定された場合に、テキストの配置（位置揃え）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Value">
      <summary>Labelコントロールの現在の値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.VerticalAlignment">
      <summary>コントロールの境界内におけるラベルテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.VerticalText">
      <summary>縦書きかどうかを設定または参照します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.WrapMode">
      <summary>CSSを使用してコントロールの折り返しモードを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Line.#ctor">
      <summary>Lineコントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.AnchorBottom">
      <summary>罫線の末尾を隣接したセクションまで引きます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineColor">
      <summary>Lineコントロールの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineStyle">
      <summary>線の描画に使用するペンの種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.LineWeight">
      <summary>線のペン幅を設定または参照します（1/144インチ単位）。デフォルトは1です。144を設定すると1インチになります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Location">
      <summary>コントロールの位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Size">
      <summary>コントロールのサイズを取得または設定します（インチ単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.X1">
      <summary>線の始点の水平座標を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.X2">
      <summary>線の終点の水平座標を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Y1">
      <summary>線の始点の垂直座標を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Y2">
      <summary>線の終点の垂直座標を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.#ctor">
      <summary>OleObjectクラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.CreateFrom(System.String)">
      <summary>コントロールに埋め込むOLEオブジェクトを指定したファイルから作成します。</summary>
      <param name="fileName">埋め込みOLEオブジェクトの作成に使用するファイルを指定します。ファイルインスタンスを処理するため、指定したファイル形式の有効なOLEサーバーがインストールされている必要があります。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.Class">
      <summary>OLEオブジェクトのクラス名を指定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.HyperLink">
      <summary>ビューワのHyperLinkイベントで指定した場所に移動するためのURLを取得または設定します。HTMLやPDFにエクスポートした場合、URLは自動的にアンカータグやハイパーリンクに変換されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.PictureAlignment">
      <summary>コントロール領域内におけるオブジェクトのコンテンツの位置を取得または設定します。<!--DXMETADATA end --></summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.SizeMode">
      <summary>コントロール領域に合わせて画像のサイズを調整する方法を決定する値を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageBreak.#ctor">
      <summary>PageBreakコントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Enabled">
      <summary>PageBreakが現在有効かどうかを示します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Location">
      <summary>コントロールの位置を取得または設定します（インチ単位）。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageFooter.#ctor">
      <summary>PageFooterクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageFooter.Height">
      <summary>ページフッターの高さを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.PageHeader.#ctor">
      <summary>PageHeaderクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageHeader.Height">
      <summary>ページヘッダーの高さを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.#ctor">
      <summary>Parameterクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Clone">
      <summary>Parameterオブジェクトのクローンを作成します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.ReadXml(System.Xml.XmlNode)">
      <summary>XmlElementからパラメータを読み込みます。</summary>
      <param name="baseNode">XML要素のベースノード。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.ToString">
      <summary>Parameterオブジェクトを表す文字列を返します。</summary>
      <returns>このインスタンスを表すSystem.Stringです。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.WriteXml(System.Xml.XmlElement)">
      <summary>XmlElementからパラメータを書きます。</summary>
      <param name="baseNode">XML要素のベースノード。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Dispose">
      <summary>Parameterをメモリから解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.DefaultValue">
      <summary>パラメータの入力ダイアログでデフォルト値として使用する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Key">
      <summary>パラメータの一意の名前。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Prompt">
      <summary>ユーザーにパラメータ値の入力を求めるパラメータ入力ダイアログで使用されるパラメータキャプションです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.PromptUser">
      <summary>ユーザーにパラメータ値の入力を求める、パラメータ入力ダイアログを使用するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.QueryCreated">
      <summary>データソースのSQLストリング内で作成されたクエリ、もしくはユーザが作成したクエリかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Tag">
      <summary>コントロールに付随するユーザー定義の情報を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Type">
      <summary>ユーザーからパラメータ値を収集するために作成する入力コントロールの種類を示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Parameter.Value">
      <summary>パラメータプレースホルダの置換で使用するパラメータの値を取得または設定します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Parameter.Disposed">
      <summary>コンポーネントのDisposedイベントを待機する、イベントハンドラを追加します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.#ctor(System.ComponentModel.IComponent)">
      <summary>ParameterCollectionクラスの新しいインスタンスを初期化します。</summary>
      <param name="parent">パラメータコレクションの親オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Add(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
      <summary>ParameterCollectionに新しいParameterオブジェクトを追加します。</summary>
      <param name="parameter">コレクションに追加するParameterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AtLeastOneNeedsPrompt">
      <summary>クエリプロンプトを表示するかどうかを決定します。コレクションに格納されているParameterクラスのうち、１つでもPromptUserプロパティがTrueに設定されているものが存在すれば、Trueを返します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AtLeastOneQueryCreated">
      <summary>コレクションでパラメータのためにクエリが作成されたかどうかを決定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Contains(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
      <summary>指定したParameterオブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <returns>パラメータがコレクションに存在する場合は<b>True</b>、それ以外の場合は<b>False</b>を返します。</returns>
      <param name="parameter">コレクション内で検索するParameterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.IndexOf(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
      <summary>コレクション内の指定したParameterオブジェクトのインデックスを特定します。</summary>
      <returns>指定されたParameterのインデックスを表す整数値。</returns>
      <param name="parameter">検索するParameterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Insert(System.Int32,GrapeCity.ActiveReports.SectionReportModel.Parameter)">
      <summary>コレクション内の指定したインデックスにParameterオブジェクトを追加します。</summary>
      <param name="index">パラメータが挿入されるインデックス。</param>
      <param name="parameter">挿入するParameterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Remove(GrapeCity.ActiveReports.SectionReportModel.Parameter)">
      <summary>ParameterCollectionからParameterオブジェクトを削除します。</summary>
      <param name="parameter">削除するParameterオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.Parameter[])">
      <summary>ParameterコレクションにParameterオブジェクトの領域セットを追加します。</summary>
      <param name="parameters">追加するパラメータ領域セット。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.AddRange(GrapeCity.ActiveReports.SectionReportModel.ParameterCollection)">
      <summary>ParameterCollection オブジェクトをParameterコレクションへ追加します。</summary>
      <param name="parameters">追加するParameterCollectionオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Dispose">
      <summary>ParameterCollectionをメモリから解放します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ParseResult">
      <summary>レポートのパラメータ値を解析した結果を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Item(System.String)">
      <summary>ParameterCollection内の指定したキーを持つParameterオブジェクトを取得します。</summary>
      <param name="key">要求するパラメータのキーを指定します。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Modified">
      <summary>ParameterCollectionが修正される場合に発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.#ctor">
      <summary>Pictureコントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.ResetImage">
      <summary>現在の画像をNullに設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Description">
      <summary>Pictureの視覚的な外観の説明を取得または設定します。Htmlエクスポートにおいて、imgタグプロパティの「alt」に使用されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.HyperLink">
      <summary>ビューワのHyperLinkイベントで指定した場所に移動するためのURLを取得または設定します。HTMLやPDFにエクスポートした場合、URLは自動的にアンカータグやハイパーリンクに変換されます。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Image">
      <summary>Pictureコントロールを使用して印刷する画像を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineColor">
      <summary>Pictureコントロールの周囲の境界線色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineStyle">
      <summary>Pictureコントロールの周囲の境界線の描画に使用するペンスタイルを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.LineWeight">
      <summary>線のペン幅を設定または参照します（1/144インチ単位）。デフォルトは1です。144を設定すると1インチになります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.PictureAlignment">
      <summary>コントロール領域内の画像の位置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.SizeMode">
      <summary>Pictureコントロール領域に合わせて画像のサイズを調整する方法を表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.Title">
      <summary>ビューワのHyperLinkイベントで指定した場所に移動するためのURLを取得または設定します。HTMLやPDFにエクスポートした場合、URLは自動的にアンカータグやハイパーリンクに変換されます。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.#ctor">
      <summary>ReportFooterクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.Height">
      <summary>レポートフッターセクションの高さを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.KeepTogether">
      <summary>セクションを１ページ内に収めて印刷するかどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.NewPage">
      <summary>セクションの印刷前に新しいページを挿入するか、印刷後に挿入するか、または印刷前と印刷後の両方で挿入するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportFooter.PrintAtBottom">
      <summary>セクションをページ下部のページフッタセクションの直前に印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.#ctor">
      <summary>ReportHeaderクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.Height">
      <summary>レポートヘッダーセクションの高さを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportHeader.NewPage">
      <summary>セクションの印刷前に新しいページを挿入するか、印刷後に挿入するか、または印刷前と印刷後の両方で挿入するかを決定する値を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.#ctor">
      <summary>ReportInfoクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Alignment">
      <summary>コントロールの境界内のテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.CanGrow">
      <summary>コントロールの内容に合わせて、コントロールの高さを拡大するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.CanShrink">
      <summary>フィールドの値に合わせて、フィールドの高さを縮小するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.ClassName">
      <summary>スタイルルールのクラス名を取得または設定します。スタイルルールはコントロールの書式設定に使用します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.FormatString">
      <summary>使用する書式を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.MultiLine">
      <summary>テキストボックスコントロールで複数の行を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.RightToLeft">
      <summary>右から左へ記述するフォントを使う地域をサポートするために、コントロールの要素を並びかえるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Style">
      <summary>テキストボックスのスタイル文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryGroup">
      <summary>小計を計算するときに集計値をリセットするのに使用するグループヘッダセクションの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.SummaryRunning">
      <summary>データフィールドの集計値が各レベル（詳細、グループ、ページ）で累積されているかリセットされているかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Text">
      <summary>コントロールに表示する書式付きテキストの値を取得します。このプロパティはReadOnlyです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.VerticalAlignment">
      <summary>コントロールの境界内におけるテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.WrapMode">
      <summary>CSSを使用して、コントロールの折り返しモードを取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.#ctor">
      <summary>RichTextBoxクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Clear">
      <summary>RichTextBoxコントロールの内容をクリアします。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.InsertField(System.String)">
      <summary>テキスト内の現在の位置にRichTextBoxのマージフィールドを挿入します。</summary>
      <param name="fieldName">一意の名前を指定します。この名前は、ReplaceField メソッドでこのフィールドを参照するときに使用されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.ReplaceField(System.String,System.String)">
      <summary>RTFストリームの内容と指定したフィールド値をマージします。</summary>
      <param name="fieldName">指定したテキストで置換するマージフィールドの名前。</param>
      <param name="replaceText">指定したフィールドの置換に使用する値。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.Char[])">
      <summary>RichTextBoxコントロールのテキスト内で、文字リストに含まれる文字のうち最初に見つかる文字を検索します。</summary>
      <returns>
        <para>検索文字が見つかったコントロール内の位置、または検索文字が見つからない場合、あるいは <i>char</i> パラメータに空の検索文字が指定された場合は -１。</para>
      </returns>
      <param name="characterSet">検索対象の文字の配列。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String)">
      <summary>RichTextBoxコントロール内のテキストで文字列を検索します。</summary>
      <returns>
        <para>検索文字列が見つかったコントロール内の位置、または検索文字列が見つからない場合、あるいは <i>char</i> パラメータに空の検索文字列が指定された場合は -１。</para>
      </returns>
      <param name="str">
        <para>コントロール内で検索するテキスト。</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String,System.Int32)">
      <summary>RichTextBoxコントロール内のテキストで、検索開始位置を指定して文字列を検索します。</summary>
      <returns>
        <para>検索テキストが見つかったコントロール内の位置。</para>
      </returns>
      <param name="str">コントロール内で検索するテキスト。</param>
      <param name="start">コントロールのテキスト内で検索を開始する位置。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Find(System.String,System.Int32,GrapeCity.ActiveReports.SectionReportModel.RichTextBox.FindOptions)">
      <summary>特定の検索オプションを適用し、RichTextBoxコントロール内のテキストで、検索開始位置を指定して文字列を検索します。</summary>
      <returns>
        <para>検索テキストが見つかったコントロール内の位置。</para>
      </returns>
      <param name="str">コントロール内で検索するテキスト。</param>
      <param name="start">コントロールのテキスト内で検索を開始する位置。</param>
      <param name="findOptions">FindOptions値のビットごとの組み合わせ。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Load(System.IO.Stream,GrapeCity.ActiveReports.SectionReportModel.RichTextType)">
      <summary>Rtf、TextまたはHtmlファイルのストリームをロードします。</summary>
      <param name="stream">ストリームの内容。</param>
      <param name="type">
        <para>RichTextType列挙体：rtf、htmlまたはText</para>
      </param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.LoadFile(System.String)">
      <summary>HTMLまたはRtfファイルをロードします。</summary>
      <param name="fileName">RichTextBoxの内容をロードするためのファイルの名前。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.LoadFile(System.IO.Stream)">
      <summary>HTMLまたはRtfのストリームをロードします。</summary>
      <param name="stream">RichTextBoxの内容をロードするためのストリーム。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.AutoReplaceFields">
      <summary>コントロール内のフィールドをデータソースのフィールドデータで置換するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.BackColor">
      <summary>コントロールの背景色または塗りつぶしの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.BulletIndent">
      <summary>テキストに箇条書きスタイルが適用されたときに、コントロール内で使用するインデントを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.CanGrow">
      <summary>コントロールの内容に合わせて、コントロールの高さを拡大するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.CanShrink">
      <summary>フィールドの値に合わせて、フィールドの高さを縮小するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Html">
      <summary>コントロール内に描画するハイパーテキストを設定するか返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.MaxLength">
      <summary>コントロール内の最大文字数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Multiline">
      <summary>RichTextBoxで複数行を印刷するか、単一行のみかを決定する値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RTF">
      <summary>コントロールのリッチテキストの内容を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectedText">
      <summary>コントロール内で選択したテキストを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionAlignment">
      <summary>現在の選択内容または挿入ポイントに適用する配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionBackColor">
      <summary>現在選択されているテキストの背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionBullet">
      <summary>現在の選択内容に箇条書きスタイルが適用されているかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionCharOffset">
      <summary>コントロールのテキストが、ベースラインより上に上付き文字として表示されるのか、ベースラインより下に下付き文字として表示されるのかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionColor">
      <summary>現在選択されているテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionFont">
      <summary>現在選択されているテキストのフォントを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionHangingIndent">
      <summary>選択されている段落の最初のテキスト行の左端から、同じ段落の後続行の左端までの距離を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionIndent">
      <summary>RichTextBox
の左端から、現在選択されているテキストの左端までの距離をピクセル単位で取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionLength">
      <summary>コントロール内で選択されている文字の数を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionRightIndent">
      <summary>RichTextBoxコントロールの右端から、選択されているテキストの右端までの距離（ピクセル単位）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionStart">
      <summary>テキストボックス内で選択されているテキストの開始点を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.Text">
      <summary>RichTextBox内の現在のテキストを設定または取得します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.AddBookmark(System.String)">
      <summary>レポートの見出し一覧にブックマークを追加します。セクションのFormatイベント内でブックマークを追加すると、ブックマークはそのセクションの開始位置に表示を移動します。ブックマークのテキストは目次のツリービュー上に表示されます。<br></br></summary>
      <param name="text">ブックマークのテキスト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.Dispose">
      <summary>Sectionインスタンスをメモリから解放します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.SizeToFit">
      <summary>セクションの大きさを、セクションに含まれるコントロールの大きさに合わせます。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.SizeToFit(System.Boolean)">
      <summary>セクションの大きさを、セクションに含まれるコントロールの大きさに合わせます。オプションとして、コントロールの大きさに合わせて縮小します。</summary>
      <param name="bAllowShrink">含まれるコントロールの大きさに合わせてセクションを縮小する場合はtrue。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.BackColor">
      <summary>セクションの背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CanGrow">
      <summary>セクション内のコントロールが元の高さより大きくなったときに、セクションの高さを拡大するかどうかを示します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CanShrink">
      <summary>セクション内のコントロールの高さの正確な合計に合わせて、セクションの高さを調整するかどうかを示します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Controls">
      <summary>セクション内に含まれるすべてのコントロールのコレクションを取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Height">
      <summary>セクションの高さを取得または設定します（インチ単位）。デザイン時の最大値は、10,000インチです（実装時にCanGrowプロパティによって自動的に伸長した場合は除きます）。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Name">
      <summary>セクションの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Tag">
      <summary>セクションに付随するユーザー定義の情報を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Type">
      <summary>セクションの種類を取得します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Visible">
      <summary>セクションを印刷するかどうかを示します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.AfterPrint">
      <summary>セクションがページに描画された後に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.BeforePrint">
      <summary>セクションがページに描画される直前に発生します。</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.Format">
      <summary>セクションのデータがロードされ、セクションのコントロールに連結された後、セクションがキャンバスに描画される前に発生します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.#ctor">
      <summary>Shapeクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineColor">
      <summary>図形の線の色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineStyle">
      <summary>線の描画に使用するペンの種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.LineWeight">
      <summary>図形の描画に使用するペン幅を取得または設定します（1/144インチ単位）。デフォルトは1です。144を設定すると1インチになります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.RoundingRadius">
      <summary>RoundRectに設定されたShapeの角丸の丸みを取得または設定します。単位はパーセント（0～100％）です。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.Style">
      <summary>印刷する図形の種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Alignment">
      <summary>スタイルを適用するコントロールの水平方向のテキスト配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.BackColor">
      <summary>コントロールの背景色を取得または設定します。プロパティが親スタイルから継承されている場合、またはコントロールにこのプロパティを設定しない場合は <strong>Null</strong> になります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.CharacterSet">
      <summary>コントロールのCharacterSetを取得または設定します。設定値はバイトへキャストする必要があります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontBold">
      <summary>コントロールのFont.Boldプロパティを取得または設定します。プロパティが親スタイルから継承されている場合、またはコントロールにこのプロパティを設定しない場合は <strong>Null</strong>になります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontItalic">
      <summary>コントロールのFont.Italicプロパティを取得または設定します。プロパティが親スタイルから継承されている場合、またはコントロールにこのプロパティを設定しない場合は、<strong>Null</strong> になります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontName">
      <summary>コントロールのFont.Nameプロパティを取得または設定します。プロパティが親スタイルから継承されている場合、またはコントロールにこのプロパティを設定しない場合は <strong>Null</strong>になります。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontSize">
      <summary>コントロールの表示に使用するフォントのサイズを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontStrikeThrough">
      <summary>コントロールのFont.StrikeThroughプロパティを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontUnderline">
      <summary>コントロールのFont.Underlineプロパティを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.FontVertical">
      <summary>コントロールのFont.Verticalプロパティを設定または参照します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.ForeColor">
      <summary>コントロールのテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Name">
      <summary>スタイルの一意の名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Parent">
      <summary>親スタイルの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.Value">
      <summary>StyleプロパティのCSS（Cascaded Style Sheets）文字列表現を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Style.VerticalAlignment">
      <summary>コントロールの境界内のテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Clear">
      <summary>コレクションからStyleSeetオブジェクトを削除します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Contains(System.Object)">
      <summary>StyleSheetオブジェクトに指定されたオブジェクトが含まれるかどうかを決定します。</summary>
      <returns>ブール値。コレクションが値を含む場合は<strong>True</strong>、そうでなければ<strong>False</strong>を返します。</returns>
      <param name="value">確認する値です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.CopyTo(System.Array,System.Int32)">
      <summary>スタイルを指定した位置にコピーします。</summary>
      <param name="array">StyleSheetからコピーされた要素の対象となる一次元の配列。配列はゼロベースのインデックスが指定されています。</param>
      <param name="index">コピーが開始される配列内のゼロベースのインデックス。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IndexOf(System.Object)">
      <summary>コレクション内で値が最初に見つかった位置のインデックスを返します。</summary>
      <returns>リストにインデックスの値が見つかった場合、それ以外の場合は「-1」。</returns>
      <param name="value">コレクション内で検索するオブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Insert(System.Int32,System.Object)">
      <summary>StyleSheetをコレクションの指定したインデックス位置に挿入します。</summary>
      <param name="index">StyleSheetオブジェクトの挿入位置のインデックス。</param>
      <param name="value">挿入するStyleSheet。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.RemoveAt(System.Int32)">
      <summary>指定したインデックス位置にあるStyleSheetオブジェクトをコレクションから削除します。</summary>
      <param name="index">削除するStyleSheetのインデックス。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(System.String)">
      <summary>新しいStyleオブジェクトを指定した名前でコレクションに追加します。</summary>
      <param name="name">新しいスタイルの名前を指定します。スタイルにアクセスするためのキーとして使用されます。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(System.String,System.String)">
      <summary>新しいStyleオブジェクトをコレクションに追加し、親スタイルを指定した親Styleオブジェクトに設定します。</summary>
      <param name="name">新しいStyleオブジェクトの名前を指定します。</param>
      <param name="nameOfParent">新しいStyleのプロパティの継承元となる親Styleを指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Remove(System.Int32)">
      <summary>指定したインデックスのStyleオブジェクトを削除します。</summary>
      <param name="index">コレクションから削除するStyleオブジェクトのインデックスを指定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Remove(System.String)">
      <summary>指定した名前のStyleオブジェクトを削除します。</summary>
      <param name="name">コレクションから削除するStyleオブジェクトの名前を指定します。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Count">
      <summary>コレクション内のStyleオブジェクトの数を返します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Item(System.String)">
      <summary>StyleSheetコレクション内の指定した名前を持つStyleSheetオブジェクトを取得します。</summary>
      <param name="name">取得するStyleSheetオブジェクトの名前。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Changed">
      <summary>
        <para>StyleSheetの数が変更されたときに発生します。</para>
      </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.SubReport.#ctor">
      <summary>SubReportクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CanGrow">
      <summary>コントロールの内容に合わせて、コントロールの高さを拡大するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CanShrink">
      <summary>フィールドの値に合わせて、フィールドの高さを縮小するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.CloseBorder">
      <summary>サブレポートの罫線を綴じるかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.Report">
      <summary>このコントロールを含み、セクションの一部として出力するレポートのインスタンスへの参照を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.ReportName">
      <summary>サブレポートの名前を示します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.#ctor">
      <summary>TextBoxクラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Alignment">
      <summary>コントロールの境界内のテキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.BackColor">
      <summary>コントロール領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CanGrow">
      <summary>コントロールの内容に合わせて、コントロールの高さを拡大するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CanShrink">
      <summary>フィールドの値に合わせて、フィールドの高さを縮小するかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CharacterSpacing">
      <summary>文字ピッチを取得または設定します。単位はポイントです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ClassName">
      <summary>スタイルルールのクラス名を取得または設定します。スタイルルールはコントロールの書式設定に使用します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CountNullValues">
      <summary>DBNull値を集計フィールドにゼロとして含めるかどうかを決定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Culture">
      <summary>TextBoxのカルチャを設定または参照します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.DistinctField">
      <summary>重複を除去する集計関数で使用するデータフィールドの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Font">
      <summary>コントロールテキストの印刷に使用するフォントオブジェクトを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ForeColor">
      <summary>コントロールの前景色（フォント）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.HyperLink">
      <summary>テキストコントロールへのハイパーリンクを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.LineSpacing">
      <summary>行間を取得または設定します。単位はポイントです。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.MultiLine">
      <summary>テキストボックスコントロールで複数の行を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.OutputFormat">
      <summary>ValueプロパティをTextプロパティに格納する前に書式設定するマスク文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Padding">
      <summary>コントロールの各辺からテキストまでの余白を設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.RightToLeft">
      <summary>右から左へ記述するフォントを使う地域をサポートするために、コントロールの要素を並びかえるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.ShrinkToFit">
      <summary>TextBoxが内容を適合するためにフォントサイズを小さくする必要があるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Style">
      <summary>テキストボックスのスタイル文字列を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryFunc">
      <summary>DataField値の処理に使用する集計関数の種類を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryGroup">
      <summary>小計を計算するときに集計値をリセットするのに使用するグループヘッダセクションの名前を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryRunning">
      <summary>データフィールドの集計値が各レベル（詳細、グループ、ページ）で累積されているかリセットされているかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.SummaryType">
      <summary>実装する集計の種類を表す値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Text">
      <summary>コントロールに表示する書式付きテキストの値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.TextJustify">
      <summary>AlignmentプロパティがJustifyに設定された場合に、テキストの配置（位置揃え）を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Value">
      <summary>書式設定前のコントロールの値を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.VerticalAlignment">
      <summary>コントロールの境界内におけるテキストの垂直方向の配置を取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.VerticalText">
      <summary>縦のレイアウトルールによってコントロールのテキストを描画するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.WrapMode">
      <summary>テキストを描画するために折り返しモードを取得または設定します。</summary>
    </member>
    <member name="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo">
      <summary>構成されたデータプロバイダに関する情報を指定します。</summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.AssemblyQualifiedName">
      <summary>このプロバイダのを実装するクラスの完全アセンブリ修飾名。</summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.HumanReadableName">
      <summary>データプロバイダのユーザーにより判読できる名前。</summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.InvariantName">
      <summary>レポート内にデータプロバイダを参照するために使用できる名前。</summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.QueryDesignerSupported">
      <summary>このデータプロバイダがクエリデザイナによりサポートされている場合は、Trueに設定されています。</summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.IPersistControl">
      <summary>
            IPersistControlインタフェース
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IPersistControl.WriteXml(System.Xml.XmlElement)">
      <summary>
            指定されたXMLノードにXMLとしてコントロールを書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IPersistControl.ReadXml(System.Xml.XmlNode)">
      <summary>
            指定されたXMLノードからコントロールを読み取ります。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.#ctor">
      <summary>
            コンストラクタ
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.#ctor(System.Drawing.SizeF)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ARControl"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="size">コントロールのサイズ。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。.
            </summary>
      <param name="bdisposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.GetBounds">
      <summary>
           コントロールのバウンドを返します。 
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteBounds(System.IO.BinaryWriter)">
      <summary>
            指定されたバイナリライターに境界を保存します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.QuickSave(System.IO.BinaryWriter)">
      <summary>
            指定されたバイナリライターにコントロールを保存します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadBounds(System.IO.BinaryReader)">
      <summary>
            指定されたバイナリリーダーからコントロールの境界を読み取ります。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.QuickLoad(System.IO.BinaryReader)">
      <summary>
            指定されたバイナリリーダーからコントロールを読み込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteBounds(System.Xml.XmlElement)">
      <summary>
            コントロールの境界を書き込みます。
            </summary>
      <param name="controlNode"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadBounds(System.Xml.XmlNode)">
      <summary>
            コントロールの境界を読み込みます。
            </summary>
      <param name="controlNode"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RaiseOnComponentChanging">
      <summary>
           IComponentChangeService.OnComponentChangingを発生させます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RaiseOnComponentChanged">
      <summary>
            IComponentChangeService.OnComponentChanged
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.WriteXml(System.Xml.XmlElement)">
      <summary>
            コントロールをXMLとして指定されたXMLノードに書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.ReadXml(System.Xml.XmlNode)">
      <summary>
            指定されたXMLノードからコントロールを読み込みます。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.ARControl.Disposed">
      <summary>
            コンポネントの<see cref="E:System.ComponentModel.IComponent.Disposed"></see>イベントをハンドルするメッソドを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Direction">
      <summary>
            バーコードの方向を取得または設定します、水平または垂直に。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarWidth">
      <summary>
            バーコードの狭いバーの幅をインチで設定または返します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException">
      <summary>
            バーコードデータの例外を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.String)">
      <summary>
            指定したエラー メッセージを使用して<see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.String,System.Exception)">
      <summary>
            指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、 <see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外。 <paramref name="innerException"></paramref> パラメーターが null 参照 (Visual Basic の場合は Nothing) でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            シリアル化したデータを使用して、<see cref="T:GrapeCity.ActiveReports.SectionReportModel.Barcode.BarCodeDataException"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="info">シリアル化されたオブジェクトデータを保持するオブジェクト。</param>
      <param name="context">ソースまたは例外の転送先に関する文脈情報。</param>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code25mat">
      <summary>
            Code25mat
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MicroQRCode">
      <summary>
           Micro QR Codeは、バーコードサイズを縮小したQRコードの変種です。位置検出パターンは1つだけあります。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.Rotation">
      <summary>
            バーコードのバーの方向を定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate90Degrees">
      <summary>
            90 度
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate180Degrees">
      <summary>
            180 度
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Rotation.Rotate270Degrees">
      <summary>
            270 度
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.ChartControl.SetDirtyFired">
      <summary>
            SetDirtyFired - ActiveReports 6デザイナで使用する内部イベント
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.Parameters">
      <summary>
            Parameters - ActiveReports 6デザイナで使用する内部プロパティ
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DataField">
      <summary>
            コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.WordWrap">
      <summary>
            CSSを使用して、コントロールのWordWrapを設定または取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute">
      <summary>
            DefaultSizeAttributeを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute.#ctor(System.Single,System.Single)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="width">幅です。</param>
      <param name="height">高さです。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.DefaultSizeAttribute.Size">
      <summary>
            サイズ値を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.IARControlSite">
      <summary>
            デザイン時のペインティングおよび座標の移動のために使用されます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDeviceF(System.Drawing.SizeF)">
      <summary>
            コントロール座標を変換します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDevice(System.Drawing.RectangleF)">
      <summary>
            コントロールの座標とサイズを変換します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IARControlSite.ToDeviceF(System.Drawing.RectangleF)">
      <summary>
            コントロールの座標とサイズを変換します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.PointFConverter">
      <summary>
            内部使用。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定されたコンテキストを使用して、このコンバータが指定された型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="sourceType">変換したい型を表す<see cref="T:System.Type"></see>。</param>
      <returns>このコンバータが変換を実行できる場合は、true。それ以外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定されたコンテキストを使用して、このコンバータがオブジェクトを指定された型に変換できるかどうかを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="destinationType">変換したい型を表す<see cref="T:System.Type"></see>。</param>
      <returns>このコンバータが変換を実行できる場合は、true。それ以外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            指定されたコンテキストおよびカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="culture">現在のカルチャとして使用する<see cref="T:System.Globalization.CultureInfo"></see>。</param>
      <param name="value">変換する<see cref="T:System.Object"></see>。</param>
      <returns>変換された値を表す<see cref="T:System.Object"></see>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            指定されたコンテキストおよびカルチャ情報を使用して、指定された値オブジェクトを指定された型に変換します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo"></see>です。 nullが渡される場合は、現在のカルチャが想定されます。</param>
      <param name="value">変換する<see cref="T:System.Object"></see>。</param>
      <param name="destinationType">
        <paramref name="value"></paramref>パラメータを変換する<see cref="T:System.Type"></see>。</param>
      <returns>変換された値を表す<see cref="T:System.Object"></see>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"></see> is associated with, using the specified context, given a set of property values for the object.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"></see> of new property values.</param>
      <returns>An <see cref="T:System.Object"></see> representing the given <see cref="T:System.Collections.IDictionary"></see>, or null if the object cannot be created. This method always returns null.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value, using the specified context.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <returns>true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            指定されたコンテキストと属性を使用して、値パラメータによって指定された配列型のプロパティのコレクションを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="value">An <see cref="T:System.Object"></see> that specifies the type of array for which to get properties.</param>
      <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
      <returns>指定されたデータ型に対して公開されているプロパティを格納している<see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see>。プロパティが格納されていない場合はnull。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.PointFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.SizeFConverter">
      <summary>
            内部使用。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定されたコンテキストを使用して、このコンバータが指定された型のオブジェクトをこのコンバータの型に変換できるかどうかを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="sourceType">変換したい型を表す<see cref="T:System.Type"></see>。</param>
      <returns>このコンバータが変換を実行できる場合は、true。それ以外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定されたコンテキストを使用して、このコンバータがオブジェクトを指定された型に変換できるかどうかを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="destinationType">変換したい型を表す<see cref="T:System.Type"></see>。</param>
      <returns>このコンバータが変換を実行できる場合は、true。それ以外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            指定されたコンテキストおよびカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="culture">現在のカルチャとして使用する<see cref="T:System.Globalization.CultureInfo"></see>。</param>
      <param name="value">変換する<see cref="T:System.Object"></see>。</param>
      <returns>変換された値を表す<see cref="T:System.Object"></see>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            指定されたコンテキストおよびカルチャ情報を使用して、指定された値オブジェクトを指定された型に変換します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo"></see>です。 nullが渡される場合は、現在のカルチャが想定されます。</param>
      <param name="value">変換する<see cref="T:System.Object"></see>。</param>
      <param name="destinationType">
        <paramref name="value"></paramref>パラメータを変換する<see cref="T:System.Type"></see>。</param>
      <returns>変換された値を表す<see cref="T:System.Object"></see>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value, using the specified context.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <returns>true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value; otherwise, false.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"></see> is associated with, using the specified context, given a set of property values for the object.
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"></see> of new property values.</param>
      <returns>An <see cref="T:System.Object"></see> representing the given <see cref="T:System.Collections.IDictionary"></see>, or null if the object cannot be created. This method always returns null.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            指定されたコンテキストと属性を使用して、値パラメータによって指定された配列型のプロパティのコレクションを返します。
            </summary>
      <param name="context">フォーマットコンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="value">An <see cref="T:System.Object"></see> that specifies the type of array for which to get properties.</param>
      <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
      <returns>指定されたデータ型に対して公開されているプロパティを格納している<see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see>。プロパティが格納されていない場合はnull。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージリソースとアンマネージリソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は<c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.RemoveNoDestroy(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>
            コントロールはコレクションから削除されますが、破棄することはあります。デザイナとエンジン間の通信（セクション間でのコントロールの移動）のために使用されます。
            </summary>
      <param name="control"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
            OnInsertComplete
            </summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスから要素を削除するときに、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">位置の 0 から始まるインデックス  <paramref name="value"></paramref> にあります。</param>
      <param name="value">削除する要素の値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.OnClear">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスの内容をクリアするときに、追加のカスタム処理を実装します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ControlCollection.Item(System.Int32)">
      <summary>
            指定されたインデックスでコレクションにコントロールを返します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.CornersRadius">
      <summary>
            この構造は四角形の角の半径を表します
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.#ctor(System.Nullable{System.Single})">
      <summary>
            指定された値で初期化された新規構造を作成します。
            </summary>
      <param name="Default">デフォルトの半径。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
      <summary>
            指定された値で初期化された新規構造を作成します。
            </summary>
      <param name="Default">デフォルトの半径。</param>
      <param name="TopLeft">左上隅の半径</param>
      <param name="TopRight">右上隅の半径</param>
      <param name="BottomLeft">左下隅の半径</param>
      <param name="BottomRight">右下隅の半径</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Implicit(System.Single)~GrapeCity.ActiveReports.Controls.CornersRadius">
      <summary>
            floatを新しいコーナータイプに変換します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Implicit(System.Int32)~GrapeCity.ActiveReports.Controls.CornersRadius">
      <summary>
            intを新しいコーナータイプに変換します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Multiply(System.Single,GrapeCity.ActiveReports.Controls.CornersRadius)">
      <summary>
            *を実装します。
            </summary>
      <param name="multiplier">乗数です。</param>
      <param name="radiuses">半径です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.CornersRadius.op_Multiply(GrapeCity.ActiveReports.Controls.CornersRadius,System.Single)">
      <summary>
            *を実装します。
            </summary>
      <param name="radiuses">半径です。</param>
      <param name="multiplier">乗数です。</param>
      <returns>演算子の結果。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.Default">
      <summary>
            デフォルトのコーナー半径。指定されたコーナーの半径が設定されていない場合は、この値が代わりに使用されます。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.TopLeft">
      <summary>
            左上隅の半径
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.TopRight">
      <summary>
            右上隅の半径
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.BottomRight">
      <summary>
            右下隅の半径
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.CornersRadius.BottomLeft">
      <summary>
            左下隅の半径
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.SetStartImpl(System.Drawing.PointF)">
      <summary>
            　開始点を適用します。
            </summary>
      <param name="start"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.SetEndImpl(System.Drawing.PointF)">
      <summary>
            終了点を適用します。
            </summary>
      <param name="end"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteXml(System.Xml.XmlElement)">
      <summary>
            コントロールをXMLとして指定されたXMLノードに書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadXml(System.Xml.XmlNode)">
      <summary>
            指定されたXMLノードからコントロールを読み取ります。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.QuickSave(System.IO.BinaryWriter)">
      <summary>
            指定されたバイナリライターにコントロールを保存します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.QuickLoad(System.IO.BinaryReader)">
      <summary>
            指定されたバイナリリーダーからコントロールを読み込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteBounds(System.Xml.XmlElement)">
      <summary>
            コントロールの境界を書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadBounds(System.Xml.XmlNode)">
      <summary>
            コントロールの境界を読み込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.WriteBounds(System.IO.BinaryWriter)">
      <summary>
            指定されたバイナリライターに境界を保存します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.ReadBounds(System.IO.BinaryReader)">
      <summary>
            指定されたバイナリリーダーからコントロールの境界を読み取ります。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Size">
      <summary>
            設計時に非表示にするオーバーライドされたサイズ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Location">
      <summary>
            設計時に非表示にするオーバーライドされた位置。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.DataField">
      <summary>
            コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Right">
      <summary>
            右のバウンドの位置。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionControl.Bottom">
      <summary>
            下のバウンドの位置。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.Border">
      <summary>
            コントロールの各辺の境界スタイルを定義する境界オブジェクトを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionLine.Border">
      <summary>
            コントロールの各辺の境界スタイルを定義する境界オブジェクトを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ShouldSerializeTypeName">
      <summary>
            タイプ名をシリアル化する場合は、True。
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.ShouldSerializeTypeAssemblyName">
      <summary>
      タイプアセンブリ名をシリアル化する場合は、Trueです。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.BeginInit">
      <summary>
            初期化の開始を通知するシグナルをオブジェクトに送信します。　
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.EndInit">
      <summary>
            初期化の完了を通知するシグナルをオブジェクトに送信します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.TypeName">
      <summary>
         タイプ名。
       
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CustomControl.TypeAssemblyName">
      <summary>
           タイプのアセンブリ名。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.WordWrap">
      <summary>
            CSSを使用して、コントロールのWordWrapを設定または取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.DataField">
      <summary>
            コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Line.Border">
      <summary>
            コントロールの各辺の境界スタイルを定義する境界オブジェクトを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.CreateEmbedded">
      <summary>
            コントロールに埋め込むOleオブジェクトを作成します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.Value">
      <summary>
            値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.DataValue">
      <summary>
            データ値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.CanEdit">
      <summary>
            このインスタンスが編集できるかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.ContentSize">
      <summary>
            コンテンツのサイズを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Size">
      <summary>
            コントロールのサイズをインチ単位で取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.DataField">
      <summary>
           コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Border">
      <summary>
            コントロールの各辺の境界スタイルを定義する境界オブジェクトを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.PageBreak.Visible">
      <summary>
            コントロールを印刷するかどうかを示す値を設定または返します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.ImageData">
      <summary>
            画像のデータを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.WordWrap">
      <summary>
            CSSを使用して、コントロールのWordWrapを設定または取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.SelectionProtected">
      <summary>
            範囲が保護されている場合は、True。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DesignTarget">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget">
      <summary>
            IRichEditDesignTarget　インタフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Clear">
      <summary>
            コントロールのコンテンツをクリアします。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.BackColor">
      <summary>
            コントロールの背景色またはFill Colorを設定または取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.ForeColor">
      <summary>
            コントロールの前景色（フォント）を取得または返します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionFont">
      <summary>
            現在のテキスト範囲のフォントを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.RTF">
      <summary>
            コントロールのリッチテキストコンテンツを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectedText">
      <summary>
            コントロールの現在選択されているテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionAlignment">
      <summary>
            現在の選択またはカーソルの位置に適用する配置を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionBullet">
      <summary>
            現在の選択またはカーソルの位置に行頭文字スタイルが適用されるかどうかを示す値を取得または設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionCharOffset">
      <summary>
            上付き文字とは、ベースラインの下の添字として、ベースラインより上コントロール内のテキストが表示されるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionHangingIndent">
      <summary>
            選択した段落のテキストの最初の行の左端と同じ段落内のそれ以降の行の左端の間の距離を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionIndent">
      <summary>
            RichTextBox の左端から、現在選択されているテキストの左端またはカーソル位置以降に追加されたテキストの左端までの距離をインチ単位で取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionRightIndent">
      <summary>
            右端からの距離をインチ単位で、 RichTextBox コントロールとが選択されているか、現在のカーソルの位置に追加されるテキストの右端。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionLength">
      <summary>
            コントロールで選択されている文字数を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionProtected">
      <summary>
           範囲は保護されている場合は、True。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionStart">
      <summary>
            コントロール内で選択されているテキストの開始点を取得または設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.SelectionBackColor">
      <summary>
            現在選択されているテキストの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Text">
      <summary>
            コントロールの現在のテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.DataField">
      <summary>
           コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.SubReport.DataField">
      <summary>
            コントロールにバインドするデータ ソースからフィールド名を取得または設定します。
            </summary>
      <value>The data field.</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.WordWrap">
      <summary>
           CSSを使用して、コントロールのWordWrapを取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.CurrencyCulture">
      <summary>
            This property is 内部使用のみ。
            Used to store the currency's culture name if user select a currency type OutputFormat.
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Data.XMLDataSource.Changed">
      <summary>
            データソースフィールドが変わるとき発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.ProviderSerializer">
      <summary>
            Used to serialize/deserialize data sources. 内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ProviderSerializer.ToStream(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ProviderSerializer.FromStream(System.IO.Stream)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="bdisposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.WriteXml(System.Xml.XmlElement)">
      <summary>
            コントロールをXMLとして指定されたXMLノードに書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.Field.ReadXml(System.Xml.XmlNode)">
      <summary>
            コントロールを指定されたXMLノードから読み込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスから要素を削除した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">位置の 0 から始まるインデックス  <paramref name="value"></paramref> にあります。</param>
      <param name="value">削除する要素の値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnClearComplete">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスの内容を消去した後に、追加のカスタム プロセスを実装します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスに新しい要素を挿入した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">挿入する位置の 0 から始まるインデックス  <paramref name="value"></paramref>します。</param>
      <param name="value">位置にある要素の新しい値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.FieldCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see>インスタンスに値を設定した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">位置の 0 から始まるインデックス  <paramref name="oldValue"></paramref> にあります。</param>
      <param name="oldValue">置換後の値  <paramref name="newValue"></paramref>です。</param>
      <param name="newValue">位置にある要素の新しい値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Modified">
      <summary>
            コレクションが修正される場合に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Cleared">
      <summary>
            コレクションが消去される場合に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Data.FieldCollection.Loaded">
      <summary>
            コレクションがロードされる場合に発生します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Dispose">
      <summary>
            解放します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.NextResult">
      <summary>
            バッチ SQL ステートメントの結果を読み込むときに、次の結果にデータ リーダーを進めます。
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Close">
      <summary>
            IDataReader オブジェクトを閉じます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetSchemaTable">
      <summary>
        <see cref="T:System.Data.DataTable"></see> の列メタデータを記述する  <see cref="T:System.Data.IDataReader"></see>を返します。
            </summary>
      <returns>列メタデータを記述する <see cref="T:System.Data.DataTable"></see></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt32(System.Int32)">
      <summary>
            指定されたフィールドの32 ビット符号付き整数値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス</param>
      <returns>指定されたフィールドの32 ビット符号付き整数値</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValue(System.Int32)">
      <summary>
            プロパティの提供されたインデックスに値を返します。
            </summary>
      <param name="i">フィールドコレクションのプロパティのインデックス。</param>
      <returns>指定されたインデックスにあるプロパティの値です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValue(System.String,System.Int32)">
      <summary>
            Notationsのデータフィールドの値を取得します。
            </summary>
      <param name="fieldName">フィールド名です（例えば、Field1.Field2など）</param>
      <param name="iDontUseThisOne">使用されていません。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetTargetObject(System.Object,System.String,System.Int32)">
      <summary>
            データフィールドの.notationの名前に基づくtargetObjectを取得します。
            </summary>
      <param name="target"></param>
      <param name="splitString"></param>
      <param name="level"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.IsDBNull(System.Int32)">
      <summary>
            指定されたフィールドがnullに設定されているかどうかを返します。
            </summary>
      <param name="i">検索するフィールドのインデックス</param>
      <returns>指定されたフィールドがnullに設定されている場合は、true、それ以外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
            指定した列オフセットから、指定したバッファー オフセットから始まるバイトのストリームを、配列としてバッファーに読み取ります。
            </summary>
      <param name="i">0 から始まる列序数。</param>
      <param name="fieldOffset">読み取り操作を開始する位置を示すフィールド内のインデックス。</param>
      <param name="buffer">バイトのストリームを読み込むバッファー。</param>
      <param name="bufferoffset">読み取り操作を開始する <paramref name="buffer"></paramref> のインデックス。</param>
      <param name="length">読み取るバイト数。</param>
      <returns>実際に読み取られたバイト数。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetByte(System.Int32)">
      <summary>
            指定された列の 8 ビット符号なし整数値を取得します。
            </summary>
      <param name="i">0 から始まる列序数。</param>
      <returns>指定された列の 8 ビット符号なし整数値。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetFieldType(System.Int32)">
      <summary>
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>から返される<see cref="T:System.Object"></see>の種類に対応する <see cref="T:System.Type"></see>情報を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックスです。</param>
      <returns>
        <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>から返される<see cref="T:System.Object"></see>の種類に対応する <see cref="T:System.Type"></see>情報です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDecimal(System.Int32)">
      <summary>
            指定されたフィールドの固定位置の数値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの固定位置の数値。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetValues(System.Object[])">
      <summary>
            現在のレコードの列の値を持つオブジェクトの配列を設定します。
            </summary>
      <param name="values">属性フィールドのコピー先の  <see cref="T:System.Object"></see> の配列。</param>
      <returns>配列に含まれる <see cref="T:System.Object"></see> のインスタンスの数。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetName(System.Int32)">
      <summary>
            検索するフィールドの名前を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>返す値がない場合は、フィールドの名前または空の文字列（""）</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt64(System.Int32)">
      <summary>
            指定されたフィールドの64 ビット符号付き整数の値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの64 ビット符号付き整数の値</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDouble(System.Int32)">
      <summary>
            指定されたフィールドの倍精度浮動小数点値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの倍精度浮動小数点値です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetBoolean(System.Int32)">
      <summary>
            指定された列の値を Boolean として取得します。
            </summary>
      <param name="i">0 から始まる列序数。</param>
      <returns>列の値。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetGuid(System.Int32)">
      <summary>
            指定されたフィールドのGUID値を返します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドのGUID値です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDateTime(System.Int32)">
      <summary>
            指定されたフィールドの日付と時間のデータ値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの日付と時間のデータ値です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetOrdinal(System.String)">
      <summary>
            名前付きフィールドのインデックスを返します。
            </summary>
      <param name="name">検索するフィールドの名前。</param>
      <returns>名前付きフィールドのインデックス。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetDataTypeName(System.Int32)">
      <summary>
            指定されたフィールドのデータ型情報を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドのデータ型情報です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetFloat(System.Int32)">
      <summary>
            指定されたフィールドの単精度浮動小数点値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの単精度浮動小数点値。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetData(System.Int32)">
      <summary>
            指定された列のOrdinalの<see cref="T:System.Data.IDataReader"></see>を返します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>An <see cref="T:System.Data.IDataReader"></see>.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
            指定したバッファー オフセットから始まる配列として、文字のストリームを指定した列オフセットからバッファーに読み取ります。
            </summary>
      <param name="i">0 から始まる列序数。</param>
      <param name="fieldoffset">読み取り操作を開始位置を示すフィールド内のインデックス。</param>
      <param name="buffer">バイトのストリームを読み取るバッファー。</param>
      <param name="bufferoffset">内のインデックス、<paramref name="buffer"></paramref> 書き込み操作を開始することができます。</param>
      <param name="length">読み取る複数のbytes</param>
      <returns>実際に読み取られた文字数。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetString(System.Int32)">
      <summary>
            指定されたフィールドの文字列値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>指定されたフィールドの文字列値。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetChar(System.Int32)">
      <summary>
            指定された列の文字値を取得します。
            </summary>
      <param name="i">0 から始まる列序数。</param>
      <returns>指定された列の文字値です。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.GetInt16(System.Int32)">
      <summary>
            指定されたフィールドの16 ビット符号付き整数の値を取得します。
            </summary>
      <param name="i">検索するフィールドのインデックス。</param>
      <returns>16 ビット符号付き整数として指定された列の値。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.RecordsAffected">
      <summary>
            SQL ステートメントの実装によって変更、挿入、または削除された行の数を取得します。
            Documentationを参照してください。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.IsClosed">
      <summary>
            データリーダーが閉じられているかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.Depth">
      <summary>
            現在の行の入れ子の深さを示す値を取得します。
            深さを返します == 0
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.Item(System.String)">
      <summary>
            指定された名前で列を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageSettings.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Parameter.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="bdisposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollectionModifiedEventArgs.QueryCreatedModified">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.ClearQueryCreated">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスから要素を削除した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">位置の 0 から始まるインデックス  <paramref name="value"></paramref> にあります。</param>
      <param name="value">削除する要素の値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスに新しい要素を挿入した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">挿入する位置の 0 から始まるインデックス  <paramref name="value"></paramref>します。</param>
      <param name="value">位置にある要素の新しい値  <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.OnClearComplete">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスの内容を消去した後に、追加のカスタム プロセスを実装します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.SetParameterQueryAsCustom">
      <summary>
            ReportExplorerでクエリが作成されたパラメータにパラメータのプロパティを使用させます。
            この種類のパラメータを使用する場合、「param：」のような接頭はクエリに追加する必要があります。例えば、「select * from customer where country='&lt;%param:parameter1%&gt;' 」
            注意：ユーザーがこの種のパラメータを使用する場合は、"select * from customer where country='&lt;%param:parameter1%&gt;' "のようなクエリに「param：」というプレフィックスを追加する必要があります（country = '＆lt;％param：parameter1％＆gt;
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Loaded">
      <summary>
            ParameterCollectionがロードされる場合に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Cleared">
      <summary>
            ParameterCollectionが消去される場合に発生します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ParameterCollection.Item(System.Int32)">
      <summary>
            指定されたインデックスで要素を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter">
      <summary>
            パラメータ型コンバータを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            このコンバーターが指定のコンテキストを使用して、オブジェクトを指定の型に変換できるかどうかを返します。
            </summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <param name="destinationType">変換先の型を表す <see cref="T:System.Type"></see></param>
      <returns>コンバーターが変換を実装できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ParameterTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            指定したコンテキストとカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。
            </summary>
      <param name="context">書式指定コンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo"></see>です。 nullが渡されると、現在のカルチャが想定されます。</param>
      <param name="value">変換対象の <see cref="T:System.Object"></see></param>
      <param name="destinationType">
        <paramref name="value"></paramref>に変換する<see cref="T:System.Type"></see>。</param>
      <returns>
        <see cref="T:System.Object"></see> 変換後の値を表します。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.ParamQuery">
      <summary>
            BuildParamQueryの概要の説明。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ParamQuery.Build(GrapeCity.ActiveReports.SectionReport,System.String,System.Boolean)">
      <summary>
            パラメータクエリをビルドします。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ParamQuery.Build(GrapeCity.ActiveReports.SectionReport,GrapeCity.ActiveReports.SectionReportModel.ParameterCollection,System.String,System.Boolean)">
      <summary>
            これはチャートパラメータのみを処理します。
            </summary>
      <param name="report"></param>
      <param name="chartParameters"></param>
      <param name="sql"></param>
      <param name="bDesignTime"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.ScriptReferences">
      <summary>
            ユーザーが実装時に追加できる文字列に基づく名前空間のコレクションです。  
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ScriptReferences.#ctor">
      <summary>
            デフォルトのコンストラクタ
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ScriptReferences.ToString">
      <summary>
            このインスタンスを表す <see cref="T:System.String"></see>を返します。
            </summary>
      <returns>このインスタンスを表す <see cref="T:System.String"></see>です。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.ScriptReferences.DefaultNamespaces">
      <summary>
            デフォルトの名前空間のリストを取得します（スクリプトスコープに明示的に追加されます）
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs">
      <summary>
            ARControlEventArgs
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.ARControl)">
      <summary>
            ARControlEventArgs Constructor
            </summary>
      <param name="control"></param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.Control">
      <summary>
            Control
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ARControlEventArgs.Index">
      <summary>
            Index
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.IPersistSection">
      <summary>
            IPersistSectionインタフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.IPersistSection.WriteXml(System.Xml.XmlElement)">
      <summary>
            XMLを指定されたXMLノードに書き込みます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.IPersistSection.ReadXml(System.Xml.XmlNode)">
      <summary>
            指定されたXMLノードからXMLを読み取ります。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ARControlEventHandler">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Section.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.Section._repeatToFill">
      <summary>
         繰り返しのフラグです。   
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.Site">
      <summary>
        <see cref="T:System.ComponentModel.IComponent"></see>に関連付けられた<see cref="T:System.ComponentModel.ISite"></see>を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.IsRepeated">
      <summary>
            このセクションを繰り返すかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.Disposed">
      <summary>
            コンポネントの<see cref="E:System.ComponentModel.IComponent.Disposed"></see> イベントを処理するメッソドを表します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.ControlAdded">
      <summary>
            セクションにコントロールが追加されたときに発生させます。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReportModel.Section.ControlRemoved">
      <summary>
            セクションからコントロールが削除されたときに発生させます。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Section.CurrentLocation">
      <summary>
            コントロールの現在の位置を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.GroupHeader.IsRepeating">
      <summary>
            このインスタンスが繰り返しているかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.IStyleSheetProvider">
      <summary>
            IStyleSheetProviderインタフェース。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.IStyleSheetProvider.StyleSheet">
      <summary>
            スタイルシートを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.InvalidateStyles">
      <summary>
           キャッシュされたスタイルのデータをリセットするレポートを生成します。プログラムでスタイルを更新した後に本メソッドを呼び出します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AllFields">
      <summary>
            すべてのフィールド。
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.String,GrapeCity.ActiveReports.SectionReport.RpxFormat)">
      <summary>
            ファイルにレポートのレイアウトを保存します。
            </summary>
      <param name="fileName">レイアウトを保存するファイルの名前</param>
      <param name="rpxFormat">形式を保存</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.SaveLayout(System.IO.Stream,GrapeCity.ActiveReports.SectionReport.RpxFormat)">
      <summary>
            レポートのレイアウトを保存します。
            </summary>
      <param name="stream">レイアウトを保存するストリーム</param>
      <param name="rpxFormat">形式を保存</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.String,System.Collections.ArrayList@)">
      <summary>
            ファイルからレポートのレイアウトを読み込みます。
            </summary>
      <param name="fileName">レイアウトのあるファイルの名前</param>
      <param name="errors">読み込み中に発生したエラーのリスト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.LoadLayout(System.Xml.XmlReader,System.Collections.ArrayList@)">
      <summary>
            レポートのレイアウトを読み込みます。
            </summary>
      <param name="reader">レポートを読み込むために使用するxmlリーダー</param>
      <param name="errors">レイアウト検証エラーのリスト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.OnLayoutLoading(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.ActiveReports.SectionReport.LayoutLoading"></see> イベントを発生します。
            </summary>
      <param name="args">イベントに関する追加情報</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.OnLayoutLoaded(System.EventArgs)">
      <summary>
        <see cref="E:GrapeCity.ActiveReports.SectionReport.LayoutLoaded"></see> イベントを発生します。
            </summary>
      <param name="args">イベントに関する追加情報</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.RaiseParameterUIClosed(System.Boolean)">
      <summary>
            ParameterUIClosedイベントを発生させます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.AddAssembly(System.Reflection.Assembly)">
      <summary>
            指定された外部アセンブリを追加します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ScriptReferences">
      <summary>
            実装時に追加/削除することができる名前空間のコレクションです。
            この文字列は、スクリプトのコンパイルに"using"ステートメントまたは"Imports"ステートメントで使用されます。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.CurrentMasterReportQueue">
      <summary>
            masterReportQueue - 内部使用のみ。
            RS: CR 24624 - Could return null
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.IsSerializing">
      <summary>
           レポートがシリアル化状態にあることを示します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.OnCancel">
      <summary>
          モデルでのLoadStateを変更するために使用されます。Cancelメソッドで呼び出されます。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.Disposed">
      <summary>
            コンポネントの<see cref="E:System.ComponentModel.IComponent.Disposed"></see>イベントを処理するメッソドを表します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.SectionAdded">
      <summary>
            レポートにセクションが追加されたときに発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.SectionRemoved">
      <summary>
            レポートからセクションが削除されたときに発生します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.UseEvidence">
      <summary>
           スクリプトをコンパイルするときにエビデンスをスクリプトエンジンに追加するかどうかを取得または設定します。デフォルト値はfalseです。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.LayoutLoaded">
      <summary>
            レポートのインスタンスにレポートXMLレイアウトが読み込まれた後に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.LayoutLoading">
      <summary>
            レポートのインスタンスにレポートXMLレイアウトが読み込まれる前に発生します。
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.Changed">
      <summary>
            いずれかのレポートプロパティが変更されたときに発生します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Initializing">
      <summary>
            レポートが初期状態にあることを示します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.MasterReport">
      <summary>
            レポートがマスターレポートかどうかを決定する値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.Components">
      <summary>
            rpxに保存されたデータソース以外のデータソースコンポーネントを取得します。loadlayoutの実装時のみに読み込まれます。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionEventArgs">
      <summary>
            SectionEventArgs
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SectionEventArgs"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="section">セクション</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionEventArgs.#ctor(GrapeCity.ActiveReports.SectionReportModel.Section,System.Int32)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SectionEventArgs"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionEventArgs.Section">
      <summary>
            セクションを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionEventArgs.SectionIndex">
      <summary>
            セクションのインデックスを取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionEventHandler">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Design.LanguageConverter">
      <summary>
            内部使用。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            このコンバーターが、指定したコンテキストを使用して、指定された型のオブジェクトをこのコンバーターの型に変換できるかどうかを返します。
            </summary>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <param name="sourceType">A <see cref="T:System.Type"></see> から変換する型を表します。</param>
      <returns>コンバーターが変換を実装できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            このコンバーターが、指定したコンテキストを使用して、指定された型のオブジェクトをこのコンバーターの型に変換できるかどうかを返します。
            </summary>
      <param name="context">書式指定コンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <param name="destinationType">A <see cref="T:System.Type"></see>から変換する型を表します。</param>
      <returns>コンバーターが変換を実装できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            指定したコンテキストとカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。
            </summary>
      <param name="context">書式指定コンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo"></see>、現在のカルチャとして使用します。</param>
      <param name="value">変換対象の<see cref="T:System.Object"></see></param>
      <returns>
        <see cref="T:System.Object"></see>変換後の値を表します。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            指定したコンテキストとカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。
            </summary>
      <param name="context">書式指定コンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo"></see>。nullが渡される場合、現在のカルチャーが仮定されます。</param>
      <param name="value">変換対象の<see cref="T:System.Object"></see></param>
      <param name="destinationType">
        <paramref name="value"></paramref>パラメータを<see cref="T:System.Type"></see>に変換します。</param>
      <returns>
        <see cref="T:System.Object"></see> 変換後の値を表します。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            指定したコンテキストを使用して、リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。
            </summary>
      <param name="context">書式指定コンテキストを提供する<see cref="T:System.ComponentModel.ITypeDescriptorContext"></see></param>
      <returns>オブジェクトがサポートしている標準値セットを見つけるために true を呼び出す必要がある場合は<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see>それ以外の場合は false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Design.LanguageConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            フォーマット コンテキストが提供されている場合、この型コンバーターが対象とするデータ型の標準値のコレクションを返します。
            </summary>
      <param name="context">書式コンテキストを提供する  <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>。これを使用すると、このコンバーターが呼び出される環境についての追加情報を抽出できます。 このパラメーターまたはこのパラメーターのプロパティとして null を指定することができます。</param>
      <returns>正しい値の標準セットを保持する <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see>。データ型が標準値セットをサポートしていない場合は null。</returns>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.SubreportNotFound">
      <summary>
            サブレポートが見つかりませんでした。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.JsonSchemaNotAvailableOrInvalid">
      <summary>
            JSONデータプロバイダの接続文字列で指定されているJsonスキーマが使用できないか、無効です。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.UnexpectedCharacterWhileParsingPath">
      <summary>
            パスの解析中に予期しない文字があります。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.InvalidKeyInConnectionString">
      <summary>
            接続文字列のキーが無効です
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.DataSetNotSpecified">
      <summary>
            指定されていない共有データセット。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.NoDataSets">
      <summary>
            指定されていない共有データセット。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.DataSetNotFound">
      <summary>
            指定されたデータセットが見つかりません。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.UnableToCreateConnection">
      <summary>
            データソースに接続できません。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            シリアル化されたデータを使用して、<see cref="T:GrapeCity.ActiveReports.ReportException"></see> クラスの新しいインスタンスを初期化します。　　
            </summary>
      <param name="info">シリアル化されたオブジェクトデータを保持するオブジェクト。</param>
      <param name="context">ソースまたは例外の転送先に関する文脈情報。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            シリアル化されたデータを使用して、<see cref="T:GrapeCity.ActiveReports.ReportDataException"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="info">シリアル化されたオブジェクトデータを保持するオブジェクト。</param>
      <param name="context">ソースまたは例外の転送先に関する文脈情報。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            シリアル化されたデータを使用して、<see cref="T:GrapeCity.ActiveReports.ReportScriptException"></see> クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="info">シリアル化されたオブジェクトデータを保持するオブジェクト。</param>
      <param name="context">ソースまたは例外の転送先に関する文脈情報。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.GetNewSectionName(GrapeCity.ActiveReports.Document.Section.SectionType)">
      <summary>
            LayoutChangingイベントに渡すために生成されたセクション名を取得するためにデザイナから使用されます。 セクションリストは変更されません。
            </summary>
      <param name="sectionType"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスに新しい要素を挿入した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">挿入する位置の 0 から始まるインデックス <paramref name="value"></paramref>します。</param>
      <param name="value">位置にある要素の新しい値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスから要素を削除した後に、追加のカスタム プロセスを実装します。
            </summary>
      <param name="index">位置の 0 から始まるインデックス  <paramref name="value"></paramref> にあります。</param>
      <param name="value">削除する要素の値 <paramref name="index"></paramref>です。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.CollectionBase"></see>インスタンスを反復処理する列挙子を返します。
            </summary>
      <returns>
        <see cref="T:System.Collections.CollectionBase"></see> インスタンスのための<see cref="T:System.Collections.IEnumerator"></see></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.SerializationManager">
      <summary>
            SerializationManagerクラス。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.#ctor">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SerializationManager"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.SerializationManager"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.Serialize(GrapeCity.ActiveReports.SectionReport)">
      <summary>
            シリアライズ。         
            </summary>
      <param name="report"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.Xml.XmlDocument)">
      <summary>
            非直列化する
            </summary>
      <param name="report"></param>
      <param name="xmlDocument"></param>
      <returns>&gt;ファイルを読み込んで生成されたエラーの配列を返します。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.IO.Stream)">
      <summary>
            非直列化する
            </summary>
      <param name="report"></param>
      <param name="stream"></param>
      <returns>&gt;ファイルを読み込んで生成されたエラーの配列を返します。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.Deserialize(GrapeCity.ActiveReports.SectionReport,System.String)">
      <summary>
            非直列化する
            </summary>
      <param name="report"></param>
      <param name="fileName"></param>
      <returns>ファイルを読み込んで生成されたエラーの配列を返します。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.ReadObject(System.ComponentModel.IComponent,System.Xml.XmlNode,System.Collections.ArrayList)">
      <summary>
            ReadObjectはオブジェクトタグを読み取ります。
            </summary>
      <param name="node"></param>
      <param name="errors"></param>
      <returns>新規作成されたオブジェクトのインスタンスまたはエラーの場合はnull</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.GetEnumerator">
      <summary>
            コレクションを反復処理する列挙子を返します。
            </summary>
      <returns>コレクションの反復処理に使用できる<see cref="T:System.Collections.IEnumerator"></see>オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Add(DDCssLib.StyleSheetRule)">
      <summary>
            指定されたスタイルオブジェクトをコレクションに追加します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.Item(System.Int32)">
      <summary>
            StyleSheetCollectionの指定されたインデックス位置にあるStyleSheetオブジェクトを取得します。　　　　　
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList"></see>が読み取り専用かどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが読み取り専用である場合は <c>true</c>。それ以外の場合は <c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList"></see>が固定サイズかどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが固定サイズの場合は<c>true</c>。それ以外の場合は <c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが同期されている場合は <c>true</c>。それ以外の場合は <c>false</c>.</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.StyleSheet.SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>へのアクセスを同期するために使用できるオブジェクトを取得します。
            </summary>
      <value>同期ルート。</value>
    </member>
    <member name="T:GrapeCity.ActiveReports.Latch">
      <summary>
            ラッチされた実装パターン。簡単にするために、ExecuteIfOpenメソッドを使用します。
             </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Latch.Execute(System.Action)">
      <summary>
            フラグ（IsClosedは'true'を返す）、アクションの実装、フラグのリセット（IsClosedは'false'を返します）を設定します。
            </summary>
      <param name="action"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Latch.ExecuteIfOpen(System.Action)">
      <summary>
             フラグ（IsClosedは'true'を返す）、アクションの実装、フラグのリセット（IsClosedは'false'を返します）を設定します。ラッチは閉じている場合、何もしません。
           </summary>
      <param name="action"></param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Latch.IsClosed">
      <summary>
           「既に何かが実装されていますか？」という質問に答えます。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSDeclaration">
      <summary>
           CSSDeclarationは、CSSルールの宣言ブロックを表します。CSS宣言に直接プログラムインターフェイスを提供します。
            </summary>
      <remarks>
            公にアクセス可能なm_pXxxx構造を使用して、既知のプロパティ値を取得します。  
            不明なプロパティとそのテキスト値は、一般にアクセス可能なm_unknownPropTable変数で使用することができます。
            AppendValueを使用して、このCSSDeclarationに値を追加します。
            </remarks>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pFont">
      <summary>
            このCSSDeclarationに任意フォントプロパティの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pColor">
      <summary>
            このCSSDeclarationに任意の色に関づけられた宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pText">
      <summary>
            このCSSDeclarationのテキストに関連づけられた宣言（間隔、デコレーション、配置）を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pMargin">
      <summary>
            このCSSDeclarationに任意のテキストマージンの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pPosition">
      <summary>
            このCSSDeclarationのテキストの位置の宣言（間隔、デコレーション、配置）を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pList">
      <summary>
            このCSSDeclarationに任意のテキストリストの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pDisplay">
      <summary>
            このCSSDeclarationに任意のテキスト表示の宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pTable">
      <summary>
            このCSSDeclarationに任意のテキストテーブルの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pBreaks">
      <summary>
            このCSSDeclarationに任意のテキスト区切りの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pPage">
      <summary>
            このCSSDeclarationに任意のテキストページの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pContent">
      <summary>
            このCSSDeclarationに任意のテキストコンテンツの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pUserInterface">
      <summary>
            このCSSDeclarationに任意のテキストユーザーインターフェイスの宣言を取得します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pAural">
      <summary>
            このCSSDeclarationに任意のテキスト聴覚の宣言を取得します
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pLine">
      <summary>
            このCSSDeclarationに任意のテキスト行の宣言を取得します
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_pMisc">
      <summary>
            このCSSDeclarationに任意のテキストユーザーインターフェイスの宣言を取得します
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDeclaration.m_unknownPropTable">
      <summary>
            不明なプロパティテーブル
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.#ctor">
      <summary>
            CSSDeclarationのデフォルトのコンストラクタ。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.Reset">
      <summary>
            この宣言に含まれる全てのCSSValuesをリセットします。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.AppendValue(DDCssLib.eCSSProperty,DDCssLib.CSSValue)">
      <summary>
            このCSSDeclarationに指定されたプロパティの指定された値を追加します。
            </summary>
      <param name="aProperty">値が使用されるプロパティ。</param>
      <param name="aValue">プロパティの値。</param>
      <remarks>
            このメッソドは、プロパティが追加された順番を確認します。その結果、CSS文字列が再作成されると、元々宣言ブロックに指定された順番と同じ順番にプロパティをリストする機能を使用することができます。
            </remarks>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.AppendUnknownValue(System.String,System.String)">
      <summary>
            この宣言に不明なプロパティを追加するために使用します。
            不明な名前と値は、CSS文字列を再構築するときにのみ使用されます。
            </summary>
      <param name="sPropertyName">変更されていないCSSプロパティの名前が解析されます。</param>
      <param name="sPropertyValue">変更されていないCSSプロパティの値。</param>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.SetValueImportant(DDCssLib.eCSSProperty)">
      <summary>
         重要な値を設定します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetValue(DDCssLib.eCSSProperty)">
      <summary>
            指定されたプロパティの値をCSSValueオブジェクトとして返します。
            </summary>
      <param name="aProperty">値を取得するプロパティ。</param>
      <returns>指定されたプロパティの値を含むCSSValueオブジェクト。</returns>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetValue(DDCssLib.eCSSProperty,System.String@)">
      <summary>
            この宣言インスタンスから指定されたCSSプロパティの値を取得し、その値をsValueに配置します。
            </summary>
      <param name="aProperty">値を取得するCSSプロパティ。</param>
      <param name="sValue">指定されたプロパティの値の文字列表現に設定する文字列変数。</param>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetImportantValues(DDCssLib.CSSDeclaration@)">
      <summary>
            ！important宣言でマークされたこのCSSDeclarationインスタンス内のすべてのプロパティ/値を返します。
            </summary>
      <param name="pResult"></param>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetValueIsImportant(DDCssLib.eCSSProperty,System.Boolean@)">
      <summary>
            このCSSDeclarationインスタンスに格納されている指定されたプロパティに！important宣言が設定されているかどうかを決定します。
            </summary>
      <param name="aProperty">重要性をチェックするプロパティです。</param>
      <param name="bImportant">指定されたプロパティが重要だとマークされた場合、ブール変数の値がｔrueですまたは、指定されたプロパティが重要だとマークされてない場合はfalseです。</param>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetValueIsImportant(System.String,System.Boolean@)">
      <summary>
            このCSSDeclarationインスタンスに格納されている指定されたプロパティに！important宣言が設定されているかどうかを決定します。
            </summary>
      <param name="aProperty">重要性をチェックするプロパティの文字列名です。</param>
      <param name="aIsImportant">指定されたプロパティが重要だとマークされた場合、ブール変数の値がｔrueですまたは、指定されたプロパティが重要だとマークされてない場合はfalseです。</param>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.Count">
      <summary>
            このCSSDeclarationインスタンスによって格納された宣言の数を返します（AppendValueで追加されたインスタンス）。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.GetProperty(System.Int32)">
      <summary>
            プロパティ順序配列の指定されたインデックス内のeCSSPropertyを返します。
            </summary>
      <param name="nIndex">要素を取得する順序配列内のインデックスです。</param>
      <returns>順序配列内の指定されたインデックスにあるeCSSProperty値です。</returns>
      <remarks>順序配列は宣言に追加されたプロパティの順番を確認します。その結果、CSS文字列が再作成されると、プロパティは元の順序になります。</remarks>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.ToString">
      <summary>
            このCSSDeclarationに含まれるプロパティ/値のペアを、標準ベースのCSS宣言のブロック構文で返します。
            </summary>
      <returns>CSSテキスト文字列。 このCSSDeclarationに格納されているプロパティーがない場合は、空の文字列が返されます。</returns>
    </member>
    <member name="M:DDCssLib.CSSDeclaration.Clone(DDCssLib.CSSDeclaration@)">
      <summary>
            このインスタンスのコピーを作成し、指定された変数に配置します。
            </summary>
      <param name="pClone">
           CSSDeclarationのインスタンスのコピーを格納する変数には、Cloneメソッドが呼び出されます。　
            </param>
    </member>
    <member name="T:DDCssLib.CSSList">
      <summary>
            CSSList構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSList.m_vType">
      <summary>
            Type
            </summary>
    </member>
    <member name="F:DDCssLib.CSSList.m_vImage">
      <summary>
            画像
            </summary>
    </member>
    <member name="F:DDCssLib.CSSList.m_vPosition">
      <summary>
            位置
            </summary>
    </member>
    <member name="M:DDCssLib.CSSList.#ctor(DDCssLib.CSSList)">
      <summary>
        <see cref="T:DDCssLib.CSSList"></see> 構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSList.Reset">
      <summary>
            インスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSContent">
      <summary>
            CSSContent構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSContent.m_vlContent">
      <summary>
            内容。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSContent.m_cdCounterIncrement">
      <summary>
            カウンターの増加
            </summary>
    </member>
    <member name="F:DDCssLib.CSSContent.m_cdCounterReset">
      <summary>
             カウンタのリセット
            </summary>
    </member>
    <member name="F:DDCssLib.CSSContent.m_vMarkerOffset">
      <summary>
            マーカーのオフセット
            </summary>
    </member>
    <member name="F:DDCssLib.CSSContent.m_Quotes">
      <summary>
            Quotes
            </summary>
    </member>
    <member name="M:DDCssLib.CSSContent.#ctor(DDCssLib.CSSContent)">
      <summary>
        <see cref="T:DDCssLib.CSSContent"></see> 構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSContent.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSPosition">
      <summary>
            CSSPosition構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vPosition">
      <summary>
            位置
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vWidth">
      <summary>
            幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vMinWidth">
      <summary>
            最小幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vMaxWidth">
      <summary>
            最大幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vHeight">
      <summary>
            高さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vMinHeight">
      <summary>
            最小高さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vMaxHeight">
      <summary>
            最大高さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vBoxSizing">
      <summary>
           ボックスのサイズ。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_rcOffset">
      <summary>
            オフセット
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPosition.m_vZIndex">
      <summary>
            Zインデックス
            </summary>
    </member>
    <member name="M:DDCssLib.CSSPosition.#ctor(DDCssLib.CSSPosition)">
      <summary>
        <see cref="T:DDCssLib.CSSPosition"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSPosition.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSMargin">
      <summary>
            CSSMargin構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcMargin">
      <summary>
            余白
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcPadding">
      <summary>
            パディング
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcBorderWidth">
      <summary>
            境界線幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcBorderColor">
      <summary>
            境界線色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcBorderStyle">
      <summary>
            境界線スタイル
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcBorderRadius">
      <summary>
            境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_vOutlineWidth">
      <summary>
            輪郭の幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_vOutlineColor">
      <summary>
            輪郭の色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_vOutlineStyle">
      <summary>
            輪郭のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_rcOutlineRadius">
      <summary>
            輪郭の半径
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMargin.m_vFloatEdge">
      <summary>
            Floatの端
            </summary>
    </member>
    <member name="M:DDCssLib.CSSMargin.#ctor(DDCssLib.CSSMargin)">
      <summary>
        <see cref="T:DDCssLib.CSSMargin"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSMargin.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSText">
      <summary>
            CSSText構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vWordSpacing">
      <summary>
            単語の間隔
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vLetterSpacing">
      <summary>
            文字間隔
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vDecoration">
      <summary>
            Decoration
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vVerticalAlign">
      <summary>
            上下の整列
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vTextTransform">
      <summary>
            テキストの変換
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vTextAlign">
      <summary>
            文字配置
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vTextJustify">
      <summary>
            テキスト両端揃え
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vTextIndent">
      <summary>
            テキストのインデント
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_pTextShadow">
      <summary>
            文字の影
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vUnicodeBidi">
      <summary>
            ユニーコードbidi
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vLineHeight">
      <summary>
            行の高さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vWhiteSpace">
      <summary>
            空白
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vShrinkToFit">
      <summary>
            縮小して全体を表示します。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vWrapMode">
      <summary>
            折り返しモード。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSText.m_vEnableKinsoku">
      <summary>
            禁則を有効にします。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSText.#ctor(DDCssLib.CSSText)">
      <summary>
        <see cref="T:DDCssLib.CSSText"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSText.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSColor">
      <summary>
            CSSColor構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vColor">
      <summary>
            色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackColor">
      <summary>
            背景色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackImage">
      <summary>
            背景画像
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackRepeat">
      <summary>
            BackRepeat
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackAttachment">
      <summary>
            BackAttachment
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackPositionX">
      <summary>
            BackPositionX
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackPositionY">
      <summary>
            BackPositionY
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vBackStyle">
      <summary>
            BackStyle
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vlCursor">
      <summary>
            Cursor
            </summary>
    </member>
    <member name="F:DDCssLib.CSSColor.m_vOpacity">
      <summary>
            Opacity
            </summary>
    </member>
    <member name="M:DDCssLib.CSSColor.#ctor(DDCssLib.CSSColor)">
      <summary>
        <see cref="T:DDCssLib.CSSColor"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSColor.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSFont">
      <summary>
            CSSFont構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vFamily">
      <summary>
            Family
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vStyle">
      <summary>
            スタイル
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vVariant">
      <summary>
            Variant
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vWeight">
      <summary>
            重さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vSize">
      <summary>
            サイズ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vSizeAdjust">
      <summary>
            サイズの調整
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vStretch">
      <summary>
            Stretch
            </summary>
    </member>
    <member name="F:DDCssLib.CSSFont.m_vVerticalFont">
      <summary>
            縦フォント
            </summary>
    </member>
    <member name="M:DDCssLib.CSSFont.#ctor(DDCssLib.CSSFont)">
      <summary>
        <see cref="T:DDCssLib.CSSFont"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSFont.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSMisc">
      <summary>
            CSSMisc構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMisc.m_vCanGrow">
      <summary>
            拡張することができます。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMisc.m_vCanShrink">
      <summary>
            縮小することができます。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSMisc.m_vCharset">
      <summary>
            Charset
            </summary>
    </member>
    <member name="M:DDCssLib.CSSMisc.#ctor(DDCssLib.CSSMisc)">
      <summary>
        <see cref="T:DDCssLib.CSSMisc"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSMisc.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSPage">
      <summary>
            CSSPage構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPage.m_vMarks">
      <summary>
            マーク
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPage.m_vSizeWidth">
      <summary>
            サイズの幅
            </summary>
    </member>
    <member name="F:DDCssLib.CSSPage.m_vSizeHeight">
      <summary>
            サイズの高さ
            </summary>
    </member>
    <member name="M:DDCssLib.CSSPage.#ctor(DDCssLib.CSSPage)">
      <summary>
        <see cref="T:DDCssLib.CSSPage"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSPage.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSAural">
      <summary>
            CSSAural構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vAzimuth">
      <summary>
            Azimuth
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vElevation">
      <summary>
            Elevation
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vCueAfter">
      <summary>
            Cueafter
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vCueBefore">
      <summary>
            Cuebefore
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPauseAfter">
      <summary>
            Pauseafter
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPauseBefore">
      <summary>
            Pausebefore
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPitch">
      <summary>
            ピッチ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPitchRange">
      <summary>
            ピッチ範囲
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPlayDuring">
      <summary>
            Playduring
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vPlayDuringFlags">
      <summary>
            Playduringflags
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vRichness">
      <summary>
            Richness
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vSpeak">
      <summary>
            Speak
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vSpeakHeader">
      <summary>
            Speakheader
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vSpeakNumeral">
      <summary>
            Speaknumeral
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vSpeakPunctuation">
      <summary>
            Speakpunctuation
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vSpeechRate">
      <summary>
            音声速度
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vStress">
      <summary>
            ストレス
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vVoiceFamily">
      <summary>
            音声ファミリ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSAural.m_vVolume">
      <summary>
            Volume
            </summary>
    </member>
    <member name="M:DDCssLib.CSSAural.#ctor(DDCssLib.CSSAural)">
      <summary>
        <see cref="T:DDCssLib.CSSAural"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSAural.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSBreaks">
      <summary>
            CSSBreaks構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vOrphans">
      <summary>
            Orphans
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vWidows">
      <summary>
            Widows
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vPage">
      <summary>
            Page
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vPageBreakAfter">
      <summary>
            PageBreakAfter
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vPageBreakBefore">
      <summary>
            PageBreakBefore
            </summary>
    </member>
    <member name="F:DDCssLib.CSSBreaks.m_vPageBreakInside">
      <summary>
            PageBreakInside
            </summary>
    </member>
    <member name="M:DDCssLib.CSSBreaks.#ctor(DDCssLib.CSSBreaks)">
      <summary>
        <see cref="T:DDCssLib.CSSBreaks"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSBreaks.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSTable">
      <summary>
            CSSTable構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vBorderCollapse">
      <summary>
            BorderCollapse
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vBorderSpacingX">
      <summary>
            Borderspacing x
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vBorderSpacingY">
      <summary>
            Borderspacing y
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vCaptionSide">
      <summary>
            Captionside
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vEmptyCells">
      <summary>
            空のセル
            </summary>
    </member>
    <member name="F:DDCssLib.CSSTable.m_vLayout">
      <summary>
            レイアウト
            </summary>
    </member>
    <member name="M:DDCssLib.CSSTable.#ctor(DDCssLib.CSSTable)">
      <summary>
        <see cref="T:DDCssLib.CSSTable"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSTable.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSLine">
      <summary>
            CSSLine構造。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSLine.m_vColor">
      <summary>
            色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSLine.m_vWeight">
      <summary>
            重さ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSLine.m_vStyle">
      <summary>
            スタイル
            </summary>
    </member>
    <member name="F:DDCssLib.CSSLine.m_vMulti">
      <summary>
            Multi
            </summary>
    </member>
    <member name="M:DDCssLib.CSSLine.#ctor(DDCssLib.CSSLine)">
      <summary>
        <see cref="T:DDCssLib.CSSLine"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSLine.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSDisplay">
      <summary>
            CSSDisplay構造。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vDirection">
      <summary>
            方向
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vDisplay">
      <summary>
            表示
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vFloat">
      <summary>
            Float
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vClear">
      <summary>
            Clear
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_rcClip">
      <summary>
            クリップ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vOverflow">
      <summary>
            Overflow
            </summary>
    </member>
    <member name="F:DDCssLib.CSSDisplay.m_vVisibility">
      <summary>
            Visibility
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDisplay.#ctor(DDCssLib.CSSDisplay)">
      <summary>
        <see cref="T:DDCssLib.CSSDisplay"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSDisplay.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSUserInterface">
      <summary>
            CSSUserInterface構造です。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vUserInput">
      <summary>
            ユーザー入力
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vUserModify">
      <summary>
            ユーザー更新
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vUserSelect">
      <summary>
            ユーザー選択
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vlKeyEquivalent">
      <summary>
            Keyequivalent
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vUserFocus">
      <summary>
            ユーザーのフォーカス
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vResizer">
      <summary>
            Resizer
            </summary>
    </member>
    <member name="F:DDCssLib.CSSUserInterface.m_vBehavior">
      <summary>
            Behavior
            </summary>
    </member>
    <member name="M:DDCssLib.CSSUserInterface.#ctor(DDCssLib.CSSUserInterface)">
      <summary>
        <see cref="T:DDCssLib.CSSUserInterface"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSUserInterface.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSQuotes">
      <summary>
            CSSQuotes構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSQuotes.m_vOpen">
      <summary>
            Open
            </summary>
    </member>
    <member name="F:DDCssLib.CSSQuotes.m_vClose">
      <summary>
            Close
            </summary>
    </member>
    <member name="F:DDCssLib.CSSQuotes.m_oNext">
      <summary>
            Next
            </summary>
    </member>
    <member name="M:DDCssLib.CSSQuotes.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSCounterData">
      <summary>
            CSSCounterData構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSCounterData.m_oNext">
      <summary>
            次
            </summary>
    </member>
    <member name="F:DDCssLib.CSSCounterData.m_vCounter">
      <summary>
            カウンタ
            </summary>
    </member>
    <member name="F:DDCssLib.CSSCounterData.m_vValue">
      <summary>
            値
            </summary>
    </member>
    <member name="M:DDCssLib.CSSCounterData.#ctor(DDCssLib.CSSCounterData)">
      <summary>
        <see cref="T:DDCssLib.CSSCounterData"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSCounterData.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSShadow">
      <summary>
            CSSShadow構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSShadow.m_oNext">
      <summary>
            次
            </summary>
    </member>
    <member name="F:DDCssLib.CSSShadow.m_vColor">
      <summary>
            色
            </summary>
    </member>
    <member name="F:DDCssLib.CSSShadow.m_vXOffset">
      <summary>
            Xオフセット
            </summary>
    </member>
    <member name="F:DDCssLib.CSSShadow.m_vRadius">
      <summary>
            半径
            </summary>
    </member>
    <member name="F:DDCssLib.CSSShadow.m_vYOffset">
      <summary>
            Yオフセット
            </summary>
    </member>
    <member name="M:DDCssLib.CSSShadow.#ctor(DDCssLib.CSSShadow)">
      <summary>
        <see cref="T:DDCssLib.CSSShadow"></see>構造の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSShadow.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSValueList">
      <summary>
            CSSValueオブジェクトのリンクリストを作成するために使用されます。
            </summary>
    </member>
    <member name="F:DDCssLib.CSSValueList.m_vValue">
      <summary>
            値
            </summary>
    </member>
    <member name="F:DDCssLib.CSSValueList.m_oNext">
      <summary>
            次
            </summary>
    </member>
    <member name="M:DDCssLib.CSSValueList.Reset">
      <summary>
            このインスタンスをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.CSSRect">
      <summary>
            CSSRect構造
            </summary>
    </member>
    <member name="F:DDCssLib.CSSRect.m_vTop">
      <summary>
            上
            </summary>
    </member>
    <member name="F:DDCssLib.CSSRect.m_vRight">
      <summary>
            右
            </summary>
    </member>
    <member name="F:DDCssLib.CSSRect.m_vBottom">
      <summary>
            下
            </summary>
    </member>
    <member name="F:DDCssLib.CSSRect.m_vLeft">
      <summary>
            左
            </summary>
    </member>
    <member name="M:DDCssLib.CSSRect.#ctor(DDCssLib.CSSRect)">
      <summary>
            指定されたCSSRectオブジェクトの上、右、下、左のメンバーの値をコピーする新しいCSSRectインスタンスを作成します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSRect.Reset">
      <summary>
            この構造に含まれる各CSSValueオブジェクトをリセットします。
            </summary>
    </member>
    <member name="T:DDCssLib.eCSSProperty">
      <summary>
            CSSプロパティ名の数値識別子の列挙型。
            </summary>
      <remarks>eCSSProperty列挙型の値は、s_kCSSRawProperties配列のインデックスとして使用して、対応するプロパティ名を文字列として返すことができます。</remarks>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Unknown">
      <summary>
            不明
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.border_radius">
      <summary>
            境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.border_radius_topLeft">
      <summary>
            左上の境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.border_radius_topRight">
      <summary>
            右上の境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.border_radius_bottomLeft">
      <summary>
            左下の境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.border_radius_bottomRight">
      <summary>
            右下の境界半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.outline_radius">
      <summary>
            アウトライン半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.outline_radius_topLeft">
      <summary>
            左上のアウトライン半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.outline_radius_topRight">
      <summary>
            右上のアウトライン半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.outline_radius_bottomLeft">
      <summary>
            左下のアウトライン半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.outline_radius_bottomRight">
      <summary>
            右下のアウトライン半径
          </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Azimuth">
      <summary>
            Azimuth
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background">
      <summary>
            背景
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_attachment">
      <summary>
            Backgroundattachment
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_color">
      <summary>
            背景色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_image">
      <summary>
            背景画像
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_position">
      <summary>
            背景位置
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_repeat">
      <summary>
            Backgroundrepeat
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_x_position">
      <summary>
            Backgroundxposition
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Background_y_position">
      <summary>
            Backgroundyposition
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Behavior">
      <summary>
            Behavior
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border">
      <summary>
            境界。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_bottom">
      <summary>
            下の境界。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_bottom_color">
      <summary>
            下の境界の色。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_bottom_style">
      <summary>
            下の境界のスタイル。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_bottom_width">
      <summary>
            下の境界の幅。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_collapse">
      <summary>
            BorderCollapse
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_color">
      <summary>
            境界の色。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_left">
      <summary>
            境界の左
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_left_color">
      <summary>
            境界の色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_left_style">
      <summary>
            境界のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_left_width">
      <summary>
            境界の左の幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_right">
      <summary>
            境界の右
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_right_color">
      <summary>
            境界の右の色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_right_style">
      <summary>
            境界の右のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_right_width">
      <summary>
            境界の右の幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_spacing">
      <summary>
            境界の間隔。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_style">
      <summary>
            境界のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_top">
      <summary>
            境界の上
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_top_color">
      <summary>
            境界の上の色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_top_style">
      <summary>
            境界の上のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_top_width">
      <summary>
            境界の上の幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_width">
      <summary>
            境界の幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_x_spacing">
      <summary>
            Borderxspacing
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Border_y_spacing">
      <summary>
            Borderyspacing
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Bottom">
      <summary>
            下
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Box_sizing">
      <summary>
            Boxsizing
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Caption_side">
      <summary>
            Captionside
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clear">
      <summary>
            Clear
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clip">
      <summary>
            クリップ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clip_bottom">
      <summary>
            クリップの下
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clip_left">
      <summary>
            クリップの左
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clip_right">
      <summary>
            クリップの右
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Clip_top">
      <summary>
            クリップの上
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Color">
      <summary>
            色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Content">
      <summary>
            コンテンツ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Counter_increment">
      <summary>
            カウンターの増加
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Counter_reset">
      <summary>
            カウンタのリセット
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Cue">
      <summary>
            Cue
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Cue_after">
      <summary>
            Cueafter
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Cue_before">
      <summary>
            Cuebefore
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Cursor">
      <summary>
            Cursor
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Direction">
      <summary>
            Direction
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Display">
      <summary>
            Display
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Elevation">
      <summary>
            Elevation
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Empty_cells">
      <summary>
           空のセル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Float">
      <summary>
            Float
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Float_edge">
      <summary>
            Floatの端
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font">
      <summary>
            フォント
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_family">
      <summary>
            フォントファミリー
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_size">
      <summary>
            フォントサイズ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_size_adjust">
      <summary>
            フォントサイズの調整
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_stretch">
      <summary>
            Font stretch
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_style">
      <summary>
            フォントスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_variant">
      <summary>
            Fontvariant
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Font_weight">
      <summary>
            フォントの重さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Height">
      <summary>
            高さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Key_equivalent">
      <summary>
            Keyequivalent
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Left">
      <summary>
            左
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Letter_spacing">
      <summary>
            文字間隔
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Line_height">
      <summary>
            線の高さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.List_style">
      <summary>
            リストのスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.List_style_image">
      <summary>
            リストのスタイルの画像
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.List_style_position">
      <summary>
            リストのスタイルの位置
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.List_style_type">
      <summary>
            リストのスタイル型
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Margin">
      <summary>
            余白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Margin_bottom">
      <summary>
            下の余白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Margin_left">
      <summary>
            左の余白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Margin_right">
      <summary>
            右の余白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Margin_top">
      <summary>
            上の余白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Marker_offset">
      <summary>
            マーカーのオフセット
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Marks">
      <summary>
            マーク
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Max_height">
      <summary>
            最大高さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Max_width">
      <summary>
            最大幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Min_height">
      <summary>
            最小の高さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Min_width">
      <summary>
            最小幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Opacity">
      <summary>
            Opacity
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Orphans">
      <summary>
            Orphans
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Outline">
      <summary>
            アウトライン
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Outline_color">
      <summary>
            アウトラインの色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Outline_style">
      <summary>
            アウトラインのスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Outline_width">
      <summary>
            アウトラインの幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Overflow">
      <summary>
            Overflow
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Padding">
      <summary>
            パディング
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Padding_bottom">
      <summary>
            下のパディング
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Padding_left">
      <summary>
            左のパディング
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Padding_right">
      <summary>
            右のパディング
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Padding_top">
      <summary>
           　上のパディング
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Page">
      <summary>
            Page
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Page_break_after">
      <summary>
            Pagebreakafter
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Page_break_before">
      <summary>
            Pagebreakbefore
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Page_break_inside">
      <summary>
            Pagebreakinside
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Pause">
      <summary>
            Pause
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Pause_after">
      <summary>
            Pauseafter
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Pause_before">
      <summary>
            Pausebefore
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Pitch">
      <summary>
            ピッチ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Pitch_range">
      <summary>
            ピッチの範囲
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Play_during">
      <summary>
            Playduring
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Play_during_flags">
      <summary>
            Playduringflags
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Position">
      <summary>
            位置
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Quotes">
      <summary>
            Quotes
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Quotes_close">
      <summary>
            Quotesclose
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Quotes_open">
      <summary>
            Quotesopen
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Resizer">
      <summary>
            Resizer
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Richness">
      <summary>
            Richness
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Right">
      <summary>
            右
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Size">
      <summary>
            サイズ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Size_height">
      <summary>
            サイズの高さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Size_width">
      <summary>
            サイズの幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Speak">
      <summary>
            Speak
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Speak_header">
      <summary>
            Speakheader
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Speak_numeral">
      <summary>
            Speaknumeral
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Speak_punctuation">
      <summary>
            Speakpunctuation
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Speech_rate">
      <summary>
            音声速度
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Stress">
      <summary>
            ストレス
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Table_layout">
      <summary>
            テーブルのレイアウト
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_align">
      <summary>
            テキスト配置
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_decoration">
      <summary>
            テキストのデコレーション
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_indent">
      <summary>
            テキストのインデント
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_justify">
      <summary>
            テキスト両端揃え
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shadow">
      <summary>
            テキストの影
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shadow_color">
      <summary>
            テキストの影の色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shadow_radius">
      <summary>
            テキストの影の半径
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shadow_x">
      <summary>
            Textshadowx
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shadow_y">
      <summary>
            Textshadowy
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_transform">
      <summary>
            テキスト変換
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Top">
      <summary>
            上
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Unicode_bidi">
      <summary>
            ユニーコードbidi
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.User_focus">
      <summary>
            ユーザーのフォーカス
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.User_input">
      <summary>
            ユーザー入力
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.User_modify">
      <summary>
            ユーザー更新
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.User_select">
      <summary>
            ユーザー選択
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Vertical_align">
      <summary>
            垂直方向の配置
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Visibility">
      <summary>
            Visibility
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Voice_family">
      <summary>
            音声ファミリ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Volume">
      <summary>
            Volume
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.White_space">
      <summary>
            空白
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Widows">
      <summary>
            Widows
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Width">
      <summary>
            幅
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Word_spacing">
      <summary>
            単語の間隔
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Z_index">
      <summary>
            Zインデクス
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_line_color">
      <summary>
            Ddoの線の色
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_line_weight">
      <summary>
            Ddoの線の重さ
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_line_style">
      <summary>
            Ddoの線のスタイル
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_multi_line">
      <summary>
            Ddoの複数線
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_can_grow">
      <summary>
            Ddoは展開することができます
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_can_shrink">
      <summary>
            Ddoは縮小することができます
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_char_set">
      <summary>
            Ddocharset
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Ddo_font_vertical">
      <summary>
            Ddoの縦フォント
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_shrink_to_fit">
      <summary>
            テキストを縮小して全体を表示します。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_wrap_mode">
      <summary>
            テキストの折り返すモード。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Text_enable_kinsoku">
      <summary>
            テキストを有効にする禁則
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSProperty.Count">
      <summary>
            カウント
            </summary>
    </member>
    <member name="T:DDCssLib.CSSValue">
      <summary>
            CSSPropertyの値をカプセル化します。
            </summary>
      <remarks>
           Get ... Value（）のいずれかのプロパティを呼び出すときは、現在のユニット型が有効である必要があります。 ユニット型がCSS Value.Unitを使用して有効であることを確認します。
            </remarks>
    </member>
    <member name="M:DDCssLib.CSSValue.#ctor(DDCssLib.eCSSUnit)">
      <summary>
            指定された単位型を使用して、クラスを構築します。
            </summary>
      <param name="aUnit"></param>
    </member>
    <member name="M:DDCssLib.CSSValue.#ctor(System.Int32,DDCssLib.eCSSUnit)">
      <summary>
            指定された単位型および整数値を使用して、クラスを構築します。
            </summary>
      <param name="aValue">クラスを構築するための整数値。</param>
      <param name="aUnit">クラスの幅を構築する単位型。 整数または列挙型である必要があります。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.#ctor(System.Single,DDCssLib.eCSSUnit)">
      <summary>
            指定された単位型または値を使用して、クラスを構築します。
            </summary>
      <param name="aValue">クラスを構築するための値。</param>
      <param name="aUnit">クラスの幅を構築する単位型。 eCSSUnit.Percentである必要があります。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.#ctor(System.String,DDCssLib.eCSSUnit)">
      <summary>
            指定された単位型または文字列の値を使用して、クラスを構築します。
            </summary>
      <param name="aValue">クラスを構築するための文字列の値</param>
      <param name="aUnit">クラスの幅を構築する単位型。eCSSUnit.StringまたはeCSSUnit.Countersである必要があります。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.#ctor(DDCssLib.eCSSUnit,System.Drawing.Color,System.String)">
      <summary>
            指定された色を使用して、クラスを構築します。
            </summary>
      <param name="aValue">クラスを構築するための色の値</param>
      <param name="eColorUnit">
            保存されている色型。
            </param>
      <param name="sOriginalSyntax">
            文字列として出力されたときにカラー値を出力する方法。
            </param>
    </member>
    <member name="M:DDCssLib.CSSValue.IsColorUnit">
      <summary>
            現在の単位型は有効な色単位（eCSSUnit.Color_HexまたはeCSSUnit.Color_NameまたはeCSSUnit.Color_RGBFuncまたはeCSSUnit.Color_System）である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsLengthUnit">
      <summary>
            　現在の単位型が有効な長単位（固定または相対）である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsFixedLengthUnit">
      <summary>
            現在の単位型が有効な固定長単位である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsRelativeLengthUnit">
      <summary>
            現在の単位型が有効な相対長単位である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsAngularUnit">
      <summary>
            現在の単位型が有効な角度単位である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsFrequencyUnit">
      <summary>
            現在の単位型が有効な度数単位である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.IsTimeUnit">
      <summary>
            現在の単位型が有効な時間単位である場合はtrueを返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetIntValue">
      <summary>
            整数値を返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetPercentValue">
      <summary>
            現在のパーセント値をfloatとして返します。　　　
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetFloatValue">
      <summary>
            値をfloatとして返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetStringValue">
      <summary>
            現在の文字列値を返します。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetColorValue">
      <summary>
           　現在の色値をColorオブジェクトとして返します。現在の単位型は文字列である場合は、ColorTranslator.FromHtml()を使用して、変更されます。
            現在の値がColorの場合は、直接返されます。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetLengthTwips(System.Single)">
      <summary>
            長さの値をtwip単位で返します。
            </summary>
      <param name="aTwipsPerPixel">
            この値は、デバイス非依存の長単位（mm、cm、inchなど）をデバイス依存のピクセル単位から変換するために必要です。
            値がデバイス非依存単位で指定された場合、この値は使用されません。</param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetLengthPixels(System.Single)">
      <summary>
            長さの値をピクセル単位で返します。
            </summary>
      <param name="aPixelsPerTwip">
            twipあたりのピクセル数。
            この値は、デバイス非依存の長単位（mm、cm、picaなど）からの変換が必要な場合に使用されます。 長さの値が最初にピクセルとして指定された場合、この値は使用されません。
            </param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.SetIntValue(System.Int32,DDCssLib.eCSSUnit)">
      <summary>
            値を整数で指定します。
            </summary>
      <param name="aValue">格納する整数値。</param>
      <param name="aUnit">値はCSS単位型です。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.SetPercentValue(System.Single)">
      <summary>
            値をパーセントで指定します。
            </summary>
      <param name="aValue">パーセント（0-100）の値。 CSSによると、この値は負の値から100を超える値の範囲になる可能性があります。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.Reset">
      <summary>
            この現在の値をリセットします。 すべての値メンバを適切な空値に設定し（数値は0に設定されます）、現在の単位型をeJS Unit.Nullに設定します。</summary>
    </member>
    <member name="M:DDCssLib.CSSValue.SetFloatValue(System.Single,DDCssLib.eCSSUnit)">
      <summary>
            この現在の値をfloatとして指定します。
            </summary>
      <param name="aValue">格納する値。</param>
      <param name="aUnit">CSS単位型に値があります。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.SetStringValue(System.String,DDCssLib.eCSSUnit)">
      <summary>
            このクラスの現在の値を文字列として指定します。
            </summary>
      <param name="aValue">格納する文字列値。</param>
      <param name="aUnit">値のCSS単位型。</param>
    </member>
    <member name="M:DDCssLib.CSSValue.SetColorValue(DDCssLib.eCSSUnit,System.Drawing.Color,System.String)">
      <summary>
            このクラスの現在の値をSystem.Drawing.Colorオブジェクトとして指定します。
            Unit値をeCSSUnit.Colorに設定します。
            </summary>
      <param name="aValue">System.Drawing.Colorの色値です。</param>
      <param name="sOriginalSyntax">
            CSS文字列が再構築されたときに色値を出力する方法。
            </param>
    </member>
    <member name="M:DDCssLib.CSSValue.SetAutoValue">
      <summary>
            このCSSValueの値がCSSキーワード'auto'だと指定します。
            </summary>
      <remarks>
            上余白、右余白、下余白、左余白、余白、幅、および高さの値に使用されます。
            </remarks>
    </member>
    <member name="M:DDCssLib.CSSValue.SetInheritValue">
      <summary>
            この値がnullではないnoneでもないが、この値が適用するスタイルのオブジェクトの親オブジェクトから継承する必要があります。
            CSSでは、これはスタイルが指定されていない多くの* child *要素の（ただし必ずしもすべてではない）スタイルプロパティのデフォルト値です。
            </summary>
      <remarks>
            CSSレベル1のリコメンデーションを参照してください。1.3継承：
            http://www.w3.org/TR/REC-CSS1#inheritance
            このセクションの重要なステートメントは次のとおりです。
            いくつかのスタイルプロパティは、親要素から子要素に継承されません。
            ほとんどの場合、なぜこれが当てはまらないのかは直感的です。 たとえば、 'background'プロパティは継承されませんが、親要素の背景がデフォルトで輝きます。
            </remarks>
    </member>
    <member name="M:DDCssLib.CSSValue.SetNoneValue">
      <summary>
            このクラスの値を特別なCSS値 'none'（境界線のプロパティ、背景画像、表示など）に設定します。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSValue.SetNormalValue">
      <summary>
            このクラスの値を特別なCSS値 'normal'に設定します。 （フォントスタイル、フォントバリアント、フォントの太さ、単語間隔、文字間隔、行の高さなど）。
            </summary>
    </member>
    <member name="M:DDCssLib.CSSValue.ToDebugString">
      <summary>
            現在の単位型と値を、デバッグするために適切にフォーマットされた文字列で書き込みます。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.ToString">
      <summary>
            このクラスの現在の値を文字列形式で書き込みます。
            </summary>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.CopyFrom(DDCssLib.CSSValue)">
      <summary>
            このCSSValueインスタンスに指定されたCSS値を「ディープコピー」（メンバーおよび子メンバー）します。
            </summary>
      <param name="aTarget"></param>
    </member>
    <member name="M:DDCssLib.CSSValue.Equals(System.Object)">
      <summary>
            System.Object.Equals()のオーバーライド。オブジェクトに含まれている値または単位の値の平等をチェックします。
            </summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.op_Equality(DDCssLib.CSSValue,DDCssLib.CSSValue)">
      <summary>
            nullの引数をチェックした後、valA.Equals(valB)を使用します。
            いずれかの引数がnullの場合、falseが返されます。
            </summary>
      <param name="valA"></param>
      <param name="valB"></param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.op_Inequality(DDCssLib.CSSValue,DDCssLib.CSSValue)">
      <summary>
            nullの両方の引数をチェックした後、!valA.Equals(valB)を使用します。
            いずれかの引数がnullの場合、trueが返されます。
            </summary>
      <param name="valA"></param>
      <param name="valB"></param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.CSSValue.GetHashCode">
      <summary>
            XORingのUnit.GetHashCode()および{value}.GetHashCode()によってハッシュコードを提供します。
            </summary>
      <returns></returns>
    </member>
    <member name="P:DDCssLib.CSSValue.Unit">
      <summary>
            単位値を取得または設定します。
            </summary>
    </member>
    <member name="T:DDCssLib.eCSSUnit">
      <summary>
            CSSUnitsの使用可能な型。
            </summary>
    </member>
    <member name="F:DDCssLib.eCSSUnit.Null">
            (n/a)null単位、値が指定されていません
        </member>
    <member name="F:DDCssLib.eCSSUnit.Auto">
            (n/a)値はアルゴリズム的です
        </member>
    <member name="F:DDCssLib.eCSSUnit.Inherit">
            (n/a)値は継承されます
        </member>
    <member name="F:DDCssLib.eCSSUnit.None">
            (n/a) value is none　　値は
        </member>
    <member name="F:DDCssLib.eCSSUnit.Normal">
            (n/a)値は正常です（アルゴリズム、autoとは異なります）
        </member>
    <member name="F:DDCssLib.eCSSUnit.String">
            (string)文字列値
        </member>
    <member name="F:DDCssLib.eCSSUnit.URL">
            (string)URL値
        </member>
    <member name="F:DDCssLib.eCSSUnit.Attr">
            (string)attr（文字列）値
        </member>
    <member name="F:DDCssLib.eCSSUnit.Counter">
            (string)カウンタ(string,[string])の値
        </member>
    <member name="F:DDCssLib.eCSSUnit.Counters">
            (string)カウンタ(string,string[,string])の値
        </member>
    <member name="F:DDCssLib.eCSSUnit.Integer">
            (int) シンプルな値  //FYI:　新しいint値は整数より大きくて、列挙型より小さい必要があります。単位チェックは次のような比較をします：( (eCSSUnit_Integer &lt;= m_unit) &amp;&amp; (m_unit &lt;= eCSSUnit.Enumerated) )の場合、値はintです。
        </member>
    <member name="F:DDCssLib.eCSSUnit.Enumerated">
            (int)　値は列挙された意味を持っています
        </member>
    <member name="F:DDCssLib.eCSSUnit.Color_Hex">
            (color + string) RGBA値が "#xxxxxx"と指定されました。 (color)色が含まれています。 (string)は、それが最初に指定された方法が含まれています。
        </member>
    <member name="F:DDCssLib.eCSSUnit.Color_RGBFunc">
            (color + string) RGBA値は "RGB（iR、iG、iB）"として指定されています(color)は色を含み、(string)は元の色の指定方法を含みます。
        </member>
    <member name="F:DDCssLib.eCSSUnit.Color_Name">
            (color + string) 色はCSSの色名で指定します。 (string)には元の名前が含まれ、(color)には色が含まれます
        </member>
    <member name="F:DDCssLib.eCSSUnit.Color_System">
            (color + string) 色はCSSの色名で指定します。 (string)に元のシステムカラーキーワード（例：アクティブボーダー、ボタンテキスト、ハイライトなど）が含まれています。(color)には色が含まれています
        </member>
    <member name="F:DDCssLib.eCSSUnit.Percent">
            (float) 1.0 == 100%) 値はぺーセントを示します。 
        </member>
    <member name="F:DDCssLib.eCSSUnit.Number">
            (float) 値は数値です（通常は乗数、パーセントとは異なる動作）
        </member>
    <member name="F:DDCssLib.eCSSUnit.Inch">
            (float) 標準長さ
        </member>
    <member name="F:DDCssLib.eCSSUnit.Foot">
            (float) 12インチ
        </member>
    <member name="F:DDCssLib.eCSSUnit.Mile">
            (float) 5280フィート
        </member>
    <member name="F:DDCssLib.eCSSUnit.Millimeter">
            (float) 1/1000メートル
        </member>
    <member name="F:DDCssLib.eCSSUnit.Centimeter">
            (float) 1/100メートル
        </member>
    <member name="F:DDCssLib.eCSSUnit.Meter">
            (float) 標準長さ
        </member>
    <member name="F:DDCssLib.eCSSUnit.Kilometer">
            (float) 1000メートル
        </member>
    <member name="F:DDCssLib.eCSSUnit.Point">
            (float) 1/72インチ
        </member>
    <member name="F:DDCssLib.eCSSUnit.Pica">
            (float) 12ポイント== 1/6インチ
        </member>
    <member name="F:DDCssLib.eCSSUnit.Didot">
            (float) 15ディドー== 16ポイント
        </member>
    <member name="F:DDCssLib.eCSSUnit.Cicero">
            (float) 12ディドー
        </member>
    <member name="F:DDCssLib.eCSSUnit.EM">
            (float) ==現在のフォントサイズ
        </member>
    <member name="F:DDCssLib.eCSSUnit.EN">
            (float) .5 em
        </member>
    <member name="F:DDCssLib.eCSSUnit.XHeight">
            (float) 小文字xの上端からベースラインまでの距離
        </member>
    <member name="F:DDCssLib.eCSSUnit.CapHeight">
            (float) 大文字小文字Hの上端からベースラインまでの距離
        </member>
    <member name="F:DDCssLib.eCSSUnit.Char">
            (float) モノスペースフォントで幅に使用される文字数
        </member>
    <member name="F:DDCssLib.eCSSUnit.Pixel">
            (float)
        </member>
    <member name="F:DDCssLib.eCSSUnit.Degree">
            (float) １円当たり 360
        </member>
    <member name="F:DDCssLib.eCSSUnit.Grad">
            (float) １円当たり 400
        </member>
    <member name="F:DDCssLib.eCSSUnit.Radian">
            (float) １円当たり2pi
        </member>
    <member name="F:DDCssLib.eCSSUnit.Hertz">
            (float)
        </member>
    <member name="F:DDCssLib.eCSSUnit.Kilohertz">
            (float)
        </member>
    <member name="F:DDCssLib.eCSSUnit.Seconds">
            (float)
        </member>
    <member name="F:DDCssLib.eCSSUnit.Milliseconds">
            (float)
        </member>
    <member name="T:DDCssLib.StyleSheet">
      <summary>
            StyleSheetの概要の説明。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheet.#ctor">
      <summary>
        <see cref="T:DDCssLib.StyleSheet"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheet.#ctor(System.Boolean)">
      <summary>
        <see cref="T:DDCssLib.StyleSheet"></see> クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheet.Add(System.String,System.String)">
      <summary>
            指定された情報からStyleSheetRuleオブジェクトを作成します。
            </summary>
      <param name="className">このスタイルシートルールを識別するためのClassName</param>
      <param name="cssText">返されたStyleSheet Ruleオブジェクトが表すCSS宣言ブロック文字列。</param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.Add(System.String,System.String,System.String)">
      <summary>
            指定された情報からStyleSheetRuleオブジェクトを作成します。
            </summary>
      <param name="className">このスタイルシートルールを識別するためのClassNameです。</param>
      <param name="cssText">返されたStyleSheet Ruleオブジェクトが表すCSS宣言ブロック文字列です。</param>
      <param name="parentStyle">親StyleSheetRuleです。 </param>
      <returns></returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.GetRuleByClassName(System.String)">
      <summary>
            指定されたクラスの名前を使用して、ルールを返します。このスタイルシートにルールがない場合、nullが返されます。
            </summary>
      <param name="className">大文字小文字を区別しないクラスの名前。</param>
      <returns>指定されたクラス名を持つスタイルシートルール。</returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.RemoveRule(System.String)">
      <summary>
            このスタイルシートから指定されたクラス名のルールを削除します。　　
            </summary>
      <param name="className"></param>
    </member>
    <member name="M:DDCssLib.StyleSheet.Clear">
      <summary>
            このスタイルシートのすべてのルールを削除します。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheet.Dispose(System.Boolean)">
      <summary>
            アンマネージ リソースおよび (オプションで) マネージ リソースを解放します。
            </summary>
      <param name="disposing">
        マネージ リソースとアンマネージ リソースの両方を解放する場合は <c>true</c>。アンマネージ リソースのみ解放する場合は <c>false</c>。</param>
    </member>
    <member name="M:DDCssLib.StyleSheet.Dispose">
      <summary>
            アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実装します。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheet.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>の要素を<see cref="T:System.Array"></see>にコピーします。<see cref="T:System.Array"></see>の特定のインデックスからコピーが開始されます。
            </summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection"></see>から要素がコピーされる 1 次元の<see cref="T:System.Array"></see>。 <see cref="T:System.Array"></see>には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array"></paramref>のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:DDCssLib.StyleSheet.GetEnumerator">
      <summary>
             コレクションを反復処理する列挙子を返します。
            </summary>
      <returns>コレクションを反復処理するために使用することができる<see cref="T:System.Collections.IEnumerator"></see>オブジェクトです。</returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.RemoveAt(System.Int32)">
      <summary>
            指定されたインデックスで<see cref="T:System.Collections.IList"></see>項目を削除します。　
            </summary>
      <param name="index">削除する項目のインデックス (0 から始まる)。 </param>
    </member>
    <member name="M:DDCssLib.StyleSheet.Insert(System.Int32,System.Object)">
      <summary>
            指定されたインデックスで<see cref="T:System.Collections.IList"></see>に項目を挿入します。
            </summary>
      <param name="index">
        <paramref name="value"></paramref>挿入するインデックス (0 から始まる)。</param>
      <param name="value">
        <see cref="T:System.Collections.IList"></see>に挿入する<see cref="T:System.Object"></see></param>
    </member>
    <member name="M:DDCssLib.StyleSheet.Remove(System.Object)">
      <summary>
            特定のオブジェクトで最初に出現したものを <see cref="T:System.Collections.IList"></see>から削除します。
            </summary>
      <param name="value">
        <see cref="T:System.Collections.IList"></see>から削除する<see cref="T:System.Object"></see>。</param>
    </member>
    <member name="M:DDCssLib.StyleSheet.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList"></see>に特定の値が含まれているかどうかを決定します。
            </summary>
      <param name="value">
        <see cref="T:System.Collections.IList"></see>内で検索する<see cref="T:System.Object"></see>。</param>
      <returns>
        <see cref="T:System.Object"></see>が<see cref="T:System.Collections.IList"></see>に存在する場合はtrue。それ以外の場合は false。</returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList"></see>に指定された項目のインデックスを決定します。
            </summary>
      <param name="value">
        <see cref="T:System.Collections.IList"></see>内で検索する<see cref="T:System.Object"></see>。</param>
      <returns>リストに検索された場合<paramref name="value"></paramref>のインデックス。それ以外の場合は、 -1。</returns>
    </member>
    <member name="M:DDCssLib.StyleSheet.Add(System.Object)">
      <summary>
        <see cref="T:System.Collections.IList"></see>に項目を追加します。
            </summary>
      <param name="value">
        <see cref="T:System.Collections.IList"></see>に追加する<see cref="T:System.Object"></see>。</param>
      <returns>新しい要素が挿入された位置。</returns>
    </member>
    <member name="P:DDCssLib.StyleSheet.Count">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>に含まれた要素の数を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheet.Item(System.Int32)">
      <summary>
            指定されたインデックスで要素を取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheet.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが同期されている場合は<c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:DDCssLib.StyleSheet.SyncRoot">
      <summary>
        <see cref="T:System.Collections.ICollection"></see>へのアクセスを同期するために使用できるオブジェクトを取得します。
            </summary>
      <value>同期されたルート。</value>
    </member>
    <member name="P:DDCssLib.StyleSheet.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.IList"></see>が読み取り専用かどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが読み取り専用である場合は <c>true</c>。それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:DDCssLib.StyleSheet.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.IList"></see> が固定サイズかどうかを示す値を取得します。
            </summary>
      <value>
        このインスタンスが固定サイズの場合は<c>true</c>。それ以外の場合は<c>false</c>.</value>
    </member>
    <member name="T:DDCssLib.StyleSheetRule">
      <summary>
            StyleSheet Ruleは、CSSスタイルと.NET互換の変換を提供するためのCSS Declarationクラスをカプセル化します。
            </summary>
    </member>
    <member name="T:DDCssLib.IStyleSheetRule">
      <summary>
            IStyleSheetRuleインタフェース。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.FontFamily">
      <summary>
            フォントファミリの名前を文字列として設定または取得します。
            </summary>
      <remarks>
            複数のコンマ区切り値を返すことができます。
            </remarks>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.FontSize">
      <summary>
            フォントサイズを設定または取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.FontUnit">
      <summary>
            フォント単位を設定または取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.FontStyle">
      <summary>
            スタイルの'font-style' プロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.FontWeight">
      <summary>
            スタイルの 'font-weight'プロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.TextDecoration">
      <summary>
            スタイルの'text-decoration'プロパティを取得または設定します。  Blink、Linethrough、Overline、およびUnderlineの値はマスクすることができます。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.Font">
      <summary>
            取得すると、現在のCSS情報に関するフォントに基づくSystem.Drawing.Fontオブジェクトを返します。
            　設定すると、指定されたフォントに基づくCSS情報に関するフォントを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.ShrinkToFit">
      <summary>
           　取得すると、現在のCSSプロパティに基づくSystem.Booleanオブジェクトを返します。
            設定すると、CSSプロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.BackColor">
      <summary>
            取得すると、現在の'background-color'プロパティに基づくSystem.Drawing.Colorオブジェクトを返します。
            CSS文字列にbackground-colorプロパティが指定されてない場合はColor.Emptyを返す可能性があります。
            設定すると、提供された色オブジェクトに基づくCSS'background-color'プロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.ForeColor">
      <summary>
            取得すると、現在のCSS'color'プロパティに基づくSystem.Drawing.Colorオブジェクトを返します。
            CSS文字列にCSS colorプロパティが指定されてない場合はColor.Emptyを返す可能性があります。　　
            設定すると、提供された色オブジェクトに基づくCSS'color'プロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.TextAlign">
      <summary>
            'text-align' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.VerticalAlign">
      <summary>
            'vertical-align' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.TextJustify">
      <summary>
            'text-justify' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.WhiteSpace">
      <summary>
            'white-space' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.WrapMode">
      <summary>
            'ddo-wrap-mode' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.Kinsoku">
      <summary>
            'ddo-enable-kinsoku' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.CSSText">
      <summary>
            CSSText文字列を設定または取得します。現在の宣言（スタイルプロパティ）がクリア/リセットされ、文字列が解析されて新しい宣言（スタイルプロパティ）のセットが作成されます。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.ParentStyleSheetRule">
      <summary>
            親スタイルシートルールを取得または設定します。

            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.ParentStyleSheet">
      <summary>
            親スタイルシートを返します。インスタンスが作成されたときにスタイルシートを指定する必要があります。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.ClassName">
      <summary>
            このStyleSheetRuleが識別されるクラス名を返します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.Declaration">
      <summary>
            このスタイルで使用されるCSSDeclarationオブジェクトを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.DdCharset">
      <summary>
            "ddo-char-set"値を取得または設定します。この値がいつも整数のようですが、古いコードはこの値を格納するのに文字列を使用しました。
            </summary>
    </member>
    <member name="P:DDCssLib.IStyleSheetRule.DdVerticalFont">
      <summary>
            'dd-vertical-font'CSSプロパティを取得または設定します。
            </summary>
      <value>dd-vertical-font</value>
    </member>
    <member name="M:DDCssLib.StyleSheetRule.#ctor">
      <summary>
            StyleSheetRuleのデフォルトのコンストラクタです。   
            新規空のCSSDeclarationが使用されます。親StyleSheetRuleとParentStyleSheetはnullになります。 ClassNameはString.Emptyになります。
            </summary>
    </member>
    <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String,DDCssLib.StyleSheet)">
      <summary>
            ClassName、CSSText、およびParentStyleSheetを使用するStyleSheetRuleのインスタンスを作成します。　　
            </summary>
      <param name="className"></param>
      <param name="parentStyleSheet"></param>
    </member>
    <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String,System.String)">
      <summary>
            ClassName、CSSText、およびParentStyleSheetを使用するStyleSheetRuleのインスタンスを作成します。
            </summary>
      <param name="className"></param>
      <param name="parentStyleSheet"></param>
    </member>
    <member name="M:DDCssLib.StyleSheetRule.#ctor(System.String,System.String)">
      <summary>
            ClassName、CSSText、およびParentStyleSheetを使用するStyleSheetRuleのインスタンスを作成します。
            </summary>
      <param name="className"></param>
      <param name="parentStyleSheet"></param>
    </member>
    <member name="M:DDCssLib.StyleSheetRule.Dispose">
      <summary>
            アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実装します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.ParentStyleSheetRule">
      <summary>
            このインスタンスの親StyleSheetRuleを設定または返します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.ClassName">
      <summary>
            このStyleSheetRuleのClassNameを取得または設定します。この値を使用して、親スタイルシートからスタイルシートルールを取得することができます。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.ParentStyleSheet">
      <summary>
            親StyleSheetを返します。このインスタンスを作成する時にStyleSheetを指定する必要があります。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.Declaration">
      <summary>
            このスタイルに使用されたCSSDeclarationオブジェクトを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsFontFamily">
      <summary>
            現在のスタイルシートルールがフォントファミリの値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.FontFamily">
      <summary>
            フォントファミリーの値を取得または設定します。
            このStyleSheetRuleの宣言に値が含まれてない場合、または値がnullとして指定されている場合この宣言が親から返されます。
            プロパティを設定すると値がこのStyleSheetRuleの宣言のインスタンスに設定されます（親のインスタンスに設定されません）。
            </summary>
      <remarks>
            カンマ区切りの複数のファミリが返される可能性があります。
            </remarks>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.DdCharset">
      <summary>
            IStyleSheetRule.DdCharsetの実装。 DdCharsetはフォントの文字セット/スクリプトです。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsFontSize">
      <summary>
            現在のスタイルシートルールがフォントサイズの値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.FontSize">
      <summary>
            フォントサイズをポイント単位で返します。
            </summary>
      <exception cref="T:System.ApplicationException">
            時々フォントサイズは、ポイントに変換できない値（CSSスタイル文字列内）で指定されます。
            例えば、親に関するサイズおよび親がない
            または、フォントXHeight（文字xの高さ）で、これは変換を行うのに十分なデータではありません。
            </exception> // 他の小道具が例外をスローしないのは、取得時にエラーが発生した場合に継承を返すためです。 これは、列挙型ではないため、FontSizeで行うことはできません。
        </member>
    <member name="P:DDCssLib.StyleSheetRule.FontUnit">
      <summary>
            フォント単位を取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsFontStyle">
      <summary>
            現在のスタイルシートルールがフォントスタイルの値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsFontWeight">
      <summary>
            現在のスタイルシートルールがフォントの太さの値を継承するかどうかを示す値を取得します。フォントの太さ
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsTextDecoration">
      <summary>
            現在のスタイルシートルールがテキストのデコレーション値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.FontStyle">
      <summary>
            フォントスタイルのデコレーション値を返します。
            この宣言も親のスタイルからも値が見つからない場合は、ddFontStyleTypes.Inheritが返され、呼び出し元が条件の処理方法を決定できるようになります。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.FontWeight">
      <summary>
            スタイルの 'font-weight'プロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.TextDecoration">
      <summary>
            スタイルの 'text-decoration'プロパティを取得または設定します。  
            Blink、Linethrough、Overline、およびUnderlineの値をマスクすることができます（継承、またはNone値はマスクしない必要があります）。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.Font">
      <summary>
            現在のフォントに関するCSSスタイルの情報からSystem.Drawing.Fontオブジェクトを返します。
            フォントが指定されている場合、そのプロパティはCSS相当のものになります。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.ShrinkToFit">
      <summary>
            取得すると、現在のCSSプロパティに基づくSystem.Booleanオブジェクトを返します。
            設定すると、CSSプロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsBackColor">
      <summary>
            現在のスタイルシートルールが背景色の値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.BackColor">
      <summary>
            取得すると、現在の'background-color'プロパティに基づくSystem.Drawing.Colorオブジェクトを返します。
            CSS文字列にbackground-colorプロパティが指定されてない場合はColor.Emptyを返す可能性があります。
            設定すると、提供された色オブジェクトに基づくCSS'background-color'プロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsForeColor">
      <summary>
            現在のスタイルシートルールが前景色の値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.ForeColor">
      <summary>
            取得すると、現在のCSS'color'プロパティに基づくSystem.Drawing.Colorオブジェクトを返します。
            CSS文字列にCSS colorプロパティが指定されてない場合はColor.Emptyを返す可能性があります。
            設定すると、提供された色オブジェクトに基づくCSS'color'プロパティを設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsTextAlign">
      <summary>
            現在のスタイルシートルールがテキストの配置の値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.TextAlign">
      <summary>
            'text-align' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsVerticalAlign">
      <summary>
            現在のスタイルシートルールが垂直方向の配置値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.VerticalAlign">
      <summary>
            'vertical-align' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.TextJustify">
      <summary>
            'text-justify' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.WhiteSpace">
      <summary>
            'white-space' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.WrapMode">
      <summary>
           'ddo-wrap-mode' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.Kinsoku">
      <summary>
            'ddo-enable-kinsoku' CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.CSSText">
      <summary>
            CSSText文字列を取得または設定します。設定すると、現在の宣言（スタイルプロパティ）がクリア/リセットされ、または新しい宣言のセット（スタイルプロパティ）を作成するには、文字列が解析されます。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.InheritsFontVertical">
      <summary>
            現在のスタイルシートルールがフォントの垂直方向の値を継承するかどうかを示す値を取得します。
            </summary>
    </member>
    <member name="P:DDCssLib.StyleSheetRule.DdVerticalFont">
      <summary>
            'dd-vertical-font'CSSプロパティを取得または設定します。
            </summary>
    </member>
    <member name="T:DDCssLib.ddWhiteSpaceTypes">
      <summary>
            ddWhiteSpaceTypes列挙型
            </summary>
    </member>
    <member name="F:DDCssLib.ddWhiteSpaceTypes.Normal">
      <summary>
            Normal
            </summary>
    </member>
    <member name="F:DDCssLib.ddWhiteSpaceTypes.Pre">
      <summary>
            Pre
            </summary>
    </member>
    <member name="F:DDCssLib.ddWhiteSpaceTypes.NoWrap">
      <summary>
            Nowrap
            </summary>
    </member>
    <member name="F:DDCssLib.ddWhiteSpaceTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddWrapModeTypes">
      <summary>
            ddWrapModeTypes列挙型
            </summary>
    </member>
    <member name="F:DDCssLib.ddWrapModeTypes.WordWrap">
      <summary>
            Wordwrap
            </summary>
    </member>
    <member name="F:DDCssLib.ddWrapModeTypes.CharWrap">
      <summary>
            Characterwrap
            </summary>
    </member>
    <member name="F:DDCssLib.ddWrapModeTypes.NoWrap">
      <summary>
            Nowrap
            </summary>
    </member>
    <member name="F:DDCssLib.ddWrapModeTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddKinsokuTypes">
      <summary>
            ddKinsokuTypes列挙型
            </summary>
    </member>
    <member name="F:DDCssLib.ddKinsokuTypes.Auto">
      <summary>
            Automatic
            </summary>
    </member>
    <member name="F:DDCssLib.ddKinsokuTypes.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:DDCssLib.ddKinsokuTypes.True">
      <summary>
            True
            </summary>
    </member>
    <member name="T:DDCssLib.ddShrinkToFitTypes">
      <summary>
            ddShrinkToFitTypes列挙型
            </summary>
    </member>
    <member name="F:DDCssLib.ddShrinkToFitTypes.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:DDCssLib.ddShrinkToFitTypes.True">
      <summary>
            True
            </summary>
    </member>
    <member name="T:DDCssLib.ddVerticalFontStyles">
      <summary>
            ddVerticalFontStyles列挙型
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalFontStyles.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalFontStyles.True">
      <summary>
            True
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalFontStyles.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddVerticalAlignTypes">
      <summary>
            StyleSheetRule.VerticalAlignプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.BaseLine">
      <summary>
            ベースライン
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Sub">
      <summary>
            Sub
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Super">
      <summary>
            Super
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Top">
      <summary>
            Top
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.TextTop">
      <summary>
            テキスト - 上
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Middle">
      <summary>
            Middle
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.TextBottom">
      <summary>
            テキスト - 下
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Bottom">
      <summary>
            Bottom
            </summary>
    </member>
    <member name="F:DDCssLib.ddVerticalAlignTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddTextAlignTypes">
      <summary>
            StyleSheetRule.TextAlignプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextAlignTypes.Left">
      <summary>
            Left
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextAlignTypes.Right">
      <summary>
            Right
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextAlignTypes.Center">
      <summary>
            Center
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextAlignTypes.Justify">
      <summary>
            Justify
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextAlignTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddTextJustifyTypes">
      <summary>
            StyleSheetRule.TextJustifyプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Auto">
      <summary>
            Automatic
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Inter_word">
      <summary>
            Inter_word
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Inter_ideograph">
      <summary>
            Inter_ideograph
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Distribute">
      <summary>
            Distribute
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Distribute_all_lines">
      <summary>
            Distribute_all_lines
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextJustifyTypes.Newspaper">
      <summary>
            Newspaper
            </summary>
    </member>
    <member name="T:DDCssLib.ddFontStyleTypes">
      <summary>
            StyleSheetRule.FontStyleプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontStyleTypes.Normal">
      <summary>
            Normal
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontStyleTypes.Italic">
      <summary>
            Italic
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontStyleTypes.Oblique">
      <summary>
            Oblique
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontStyleTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="T:DDCssLib.ddFontWeightTypes">
      <summary>
            StyleSheetRule.FontWeightプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.Lighter">
      <summary>
            Lighter
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.Bolder">
      <summary>
            Bolder
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.Bold">
      <summary>
            Bold
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.Normal">
      <summary>
            Normal
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd100">
      <summary>
            DD100
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd200">
      <summary>
            DD200
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd300">
      <summary>
            DD300
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd400">
      <summary>
            DD400
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd500">
      <summary>
            DD500
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd600">
      <summary>
            DD600
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd700">
      <summary>
            DD700
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd800">
      <summary>
            DD800
            </summary>
    </member>
    <member name="F:DDCssLib.ddFontWeightTypes.dd900">
      <summary>
            DD900
            </summary>
    </member>
    <member name="T:DDCssLib.ddTextDecorationTypes">
      <summary>
            StyleSheetRule.TextDecorationプロパティの列挙型値。
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Underline">
      <summary>
            Underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Overline">
      <summary>
            Overline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough">
      <summary>
            Linethrough
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink">
      <summary>
            Blink
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Inherit">
      <summary>
            Inherit
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline">
      <summary>
            Blink overline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough">
      <summary>
            Blink_linethrough
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Underline">
      <summary>
            Blink_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Linethrough">
      <summary>
            Blink_overline_linethrough
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Underline">
      <summary>
            Blink_overline_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Overline_Linethrough_Underline">
      <summary>
            Blink_overline_linethrough_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough_Underline">
      <summary>
            Blink_linethrough_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Blink_Linethrough_Overline">
      <summary>
            Blink_linethrough_overline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Overline">
      <summary>
            Linethrough_overline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Underline">
      <summary>
            Linethrough_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Linethrough_Overline_Underline">
      <summary>
            Linethrough_overline_underline
            </summary>
    </member>
    <member name="F:DDCssLib.ddTextDecorationTypes.Overline_Underline">
      <summary>
            Overline_underline
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper">
      <summary>
            内部使用。 Helper methods for app.config access.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper.UsePdfExportFilterKey">
      <summary>
            UsePdfExportFilterKey const.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Configuration.ConfigurationHelper.GetConfigFlag(System.String)">
      <summary>
            Gets value by key from default config file.
            </summary>
      <param name="key">The key.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetStyleDefaultsForDesigner(System.Type)">
      <summary>
            デザイナのデフォルトのスタイルを取得します。
            </summary>
      <param name="designerType">デザイナの型。</param>
      <returns>System.Collections.Generic.IDictionary&lt;System.String,GrapeCity.Enterprise.Data.DataEngine.Expressions.ExpressionInfo&gt;.</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection">
      <summary>
カスタムデータプロバイダのコレクションを表します。
</summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChanged">
      <summary>
            コンテンツが変更されたときに発生します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.PropertyElement">
      <summary>
           関連づけられたエクスポート拡張機能のプロパティ設定のオプションを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.PropertyElement.#ctor(System.String,System.String,System.String)">
      <summary>
            指定されたプロパティ、値、および値の型を使用して、<see cref="T:System.Object"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="property">値を代入するプロパティ。</param>
      <param name="value">プロパティの値。</param>
      <param name="type">文字列値を変換する値の型。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Property">
      <summary>
            値を代入するプロパティ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Value">
      <summary>
            文字列値を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.PropertyElement.Type">
      <summary>
            値を変換する値の型を取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Configuration.PropertyElement})">
      <summary>
        <see cref="T:DataDynamics.Reports.Windows.Forms.RenderingExtensionInfo"></see>の初期化をすることができます。</summary>
      <param name="assemblyName">アセンブリ名。</param>
      <param name="extensionTypeName">拡張の型。</param>
      <param name="menuName">メニュー項目の名前。</param>
      <param name="settings">プロパティのコレクション。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo.Settings">
      <summary>
            構成を取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.Insert(System.Int32,GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo)">
      <summary>
            指定されたインデックスでRenderingExtensionsCollection内にRenderingExtensionInfoを挿入します。
            </summary>
      <param name="index">項目を配置するインデックス。</param>
      <param name="value">挿入される<see cref="T:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo"></see>。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.RenderingExtensionInfoCollection.CopyTo(GrapeCity.ActiveReports.Configuration.RenderingExtensionInfo[],System.Int32)">
      <summary>
            対象配列の指定されたインデックスから開始して、RenderingExtensionsCollection全体を互換性のある1次元配列にコピーします。
            </summary>
      <param name="array">対象の配列。</param>
      <param name="index">開始インデックス。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.ReportingConfiguration">
      <summary>
Specifies configuration information for the core. 内部使用のみ。
</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.#ctor(GrapeCity.ActiveReports.Configuration.IConfigurationProvider)">
      <Devdocs>Allow a null provider so we can create an "empty" configuration and still get access to default data providers</Devdocs>
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Configuration.ReportingConfiguration"></see>の新しいインスタンスを作成します。
</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.ReportItems">
      <summary>
Provides the mapping between CustomReportItem type names and their corresponding <see cref="T:System.Type"></see>.
</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.Settings">
      <summary>
Gets the default working directory specified in the config file.
</summary>
      <returns>The default working directory, or an empty string if it's not specified in the config file.</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.RenderingExtensions">
      <summary>
Returns the rendering extension configuration entries.
</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.DataProviders">
      <summary>
Returns the data providers configuration entries.
</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.ToolboxItems">
      <summary>
Returns the toolbox item configuration entries.
</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.MapTileServerConfiguration">
      <summary>
Returns a configuration for communication with map tile server.</summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.TileProviders">
      <summary>
            Gets the tile providers.
            </summary>
      <value>The tile providers.</value>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.CustomItemDesigners">
      <summary>
Returns a map for the custom report items with the custom designers
</summary>
    </member>
    <member name="T:GrapeCity.BI.Data.DataProviders.DataParameter">
      <!-- Failed to insert some or all of included XML -->
      <include file="..\..\..\..\..\Source XML Docs\Core\DataSources\DataParameter.slashdoc" path="/Libraries/Types/Type[@name=[[SDLENTITYREF[quot]]]DataParameter[[SDLENTITYREF[quot]]]]/Docs/*"></include>
      <devdoc>
            A generic implementation of <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"></see>の一般的な実装
            </devdoc>
    </member>
    <member name="T:GrapeCity.BI.Data.DataProviders.DataProviderFactories">
      <summary>
            データプロバイダーの動的な構成をサポートします。
            </summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.CommandTextEditorType">
      <summary>
        このプロバイダのクエリコマンドのテキストの<see cref="!:UiTypeEditor"></see>から派生する<see cref="T:System.Type"></see>。
            </summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.ConnectStringEditorType">
      <summary>
        このプロバイダのデータソース接続文字列のために<see cref="!:UiTypeEditor"></see>から派生する<see cref="T：System.Type"></see>。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.ICustomReportItemFactory">
      <summary>
            Represents service to create custom report items. 内部使用。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.ICustomReportItemFactory.CreateCustomReportItem(System.IServiceProvider,System.String,GrapeCity.ActiveReports.Extensibility.Rendering.Components.IDataScope,GrapeCity.ActiveReports.Extensibility.Rendering.IPropertyBag)">
      <summary>
            Tries to creates new custom report item based on the specified settings.
            </summary>
      <param name="serviceProvider">The service provider to resolve reports core configuration.</param>
      <param name="type">The type of CRI to create.</param>
      <param name="dataContext">The data context to initialize CRI with.</param>
      <param name="properties">The properties to initialize CRI with.</param>
      <returns>New CRI or null if fails.</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider">
      <summary>
            Provides access to reports core rendering services. 内部使用。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider.#ctor(System.IServiceProvider)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider"></see>クラスの新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.RenderingServiceProvider.GetService(System.Type)">
      <summary>
            指定された型のサービスオブジェクトを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.LoadSnapshot(System.IO.FileInfo)">
      <summary>
            内部使用のみ。 Load page document from snapshot file.
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.Document.PageDocument.RecordProcessed">
      <summary>
            レコードが処理されたときに発生し、レコードの処理をキャンセルすることができます。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.SetLicense(System.ComponentModel.License)">
      <summary>
            ライセンスを設定します。
            </summary>
      <param name="license">設定するライセンス。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.MergeWithMaster">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.LicenseLevel">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.HasDelayedContent">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.IsEmpty">
      <summary>
            レポートにデータが含まれていない場合はTrueを返します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.MinCondenseRate">
      <summary>
            テキストの幅をコントロールの幅内に水平方向に収まるように縮小される最小値を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.MinCondenseRate">
      <summary>
            テキストの幅をコントロールの幅内に水平方向に収まるように縮小される最小値を取得または設定します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.CommandTextNotBeenSet">
      <summary>
            コマンドが空です。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MaxiCode">
      <summary>
            MaxiCodeのオプション。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.MaxiCode">
      <summary>
            MaxiCodeは特別な極座標バーコードです。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBox.CloseBorder">
      <summary>
            状態の境界線を設定または取得します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.LineStyle.Double">
      <summary>
            二重線。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Calendar">
      <summary>
            日付の書式設定用のカレンダーを取得または指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.Dispose(System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Data.CsvDataSource"></see>によって使用されたリソースを開放します。</summary>
      <param name="disposing">このメッソドがDispose()から呼び出された場合true。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Calendar">
      <summary>
            日付の書式設定用のカレンダーを取得または指定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Culture">
      <summary>
            テキストコントロールのカルチャを取得または設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackColor2">
      <summary>
            コントロール領域の背景色を取得または設定します。  
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackgroundStyle">
      <summary>
            背景スタイルを取得または設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.GradientStyle">
      <summary>
            グラデーションスタイルを取得または設定します。 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Shape.BackgroundPattern">
      <summary>
            ハッチスタイルの背景パターンを取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.ShapeConverter">
      <summary>
            内部使用のみ。
            Filter properties depending on the BackgroundStyle
            </summary>
    </member>
    <member name="M:GrapeCity.BI.Data.DataProviders.DataParameter.#ctor(System.String,System.Object)">
      <summary>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataParameter"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="parameterName">パラメータの名前。</param>
      <param name="value">パラメータの値。</param>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataParameter.ParameterName">
      <summary>
            パラメータの名前を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataParameter.Value">
      <summary>
            パラメータの値を取得または設定します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Add(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトをのコレクションの終了に追加します。
            </summary>
      <param name="value">追加する<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクト。</param>
      <returns>新しい<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトが挿入された位置、または項目がコレクションに挿入されてないことを示す-1。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Contains(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトがコレクション内に依存しているかどうかを判定します。
            </summary>
      <param name="value">コレクション内で検索する<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクト。</param>
      <returns>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトがコレクション内に見つかった場合はtrue。 それ意外の場合は、false。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Insert(System.Int32,GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
            指定されたインデックスでコレクションに<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトを挿入します。
            </summary>
      <param name="index">新しい<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトが追加される位置です。</param>
      <param name="value">追加する<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Remove(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトをコレクションから削除します。
            </summary>
      <param name="value">削除する<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.IndexOf(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
        <see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクトのインデックスがコレクション内にあるかどうかを判定します。
            </summary>
      <param name="value"> コレクション内で検索する<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>オブジェクト。</param>
      <returns>コレクション内に見つかった場合、<paramref name="value"></paramref>のインデックス、それ以外の場合、-1。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.CopyTo(GrapeCity.BI.Data.DataProviders.DataProviderInfo[],System.Int32)">
      <summary>
            特定のSystem.Arrayインデックスから開始するSystem.ArrayにSystem.Collections.ICollectionの要素をコピーします。
            </summary>
      <param name="array">
            System.Collections.ICollectionからコピーされた要素の宛先である1次元のSystem.Array。 System.Arrayは、ゼロベースインデックスを持つ必要があります。
            </param>
      <param name="index">コピーが開始する配列内のゼロベースインデックス。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.Item(System.Int32)">
      <summary>
            指定されたインデックスで<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>を取得または設定します。
            </summary>
      <param name="index">取得するまたは設定する項目のインデックス。</param>
      <returns>インデックスにある<see cref="T:GrapeCity.BI.Data.DataProviders.DataProviderInfo"></see>。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChangedEventHandler">
      <summary>
        <see cref="E:GrapeCity.ActiveReports.Configuration.DataProviderInfoCollection.ContentChanged"></see>イベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
      <summary>
            指定された値および更新されたデータでこのレポートの出力を指定された描画拡張に提供します。
            </summary>
      <param name="renderer">レポート出力を描画する<see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"></see>。</param>
      <param name="streams">描画されたレポートの出力を格納する<see cref="T:DataDynamics.Reports.Extensibility.Rendering.IO.StreamProvider"></see>。</param>
      <param name="settings">
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"></see>の設定を含む<see cref="T:System.Collections.Specialized.NameValueCollection"></see>。</param>
      <param name="forceDataRefresh">DataMapがすでに必要なデータを取得していても、データの更新または再クエリーを強制するには、Trueに設定します。</param>
      <param name="forceParameterDataRefresh">データの更新または再クエリーを強制するには、Trueに設定します。</param>
      <param name="token">描画を停止することを許可します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="renderingExtension"></paramref>
        <paramref name="renderingExtension"></paramref>または<paramref name="streams"></paramref>がnullです。</exception>
      <exception cref="!:ReportsException">レポート特定のエラーが発生しました。</exception>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ITF14">
      <summary>
            Interleaved Two of Five。このコードは、商品を含むカートンとパレットをEAN-13コードでマークするために使用されます。
            EAN-13コードの前に1桁の数字が追加され、梱包用の品種をマークします。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Code_11">
      <summary>
            0〜9の数字、ハイフン（ - ）、開始/停止文字をエンコードします。主に通信機器のラベル付けに使用されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.SSCC_18">
      <summary>
            SSCC_18、は18桁の出荷梱包シリアル番号です。これは、追跡目的で個々の出荷梱包を識別するために使用されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Telepen">
      <summary>
            Telepenバーコードには、英数字のみと数値のみの2つのモードがあります。両方のモードには、スタートキャラクタ、チェック ディジットおよびストップキャラクタが必要です。
            このバーコードは主に製造業で使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Pharmacode">
      <summary>
            Pharmacodeバーコードは、数値データ（3～131070）のみを表します。製薬業界で梱包に標準的に使用されています。印刷エラーがあっても読み可能に設計されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.PZN">
      <summary>
            PZN（Pharmaceutical Central/General Number）バーコードは、Code39と同じコード化アルゴリズムを使用していますが、数字のみを使用できます - 0123456789。エンコードにサポートされる桁数は6または7です。
            文字「PZN」とチェックサム桁が自動的に追加されます。このバーコードは、ドイツの医薬品およびヘルスケア製品の識別に使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.HIBCCode128">
      <summary>
            HIBCCode128バーコードは、Code128の記号を使用しています。スラッシュ（/）を区切り記号として使用して「プライマリ データ」と「セカンダリ データ」をエンコードします。
           このバーコードは識別目的のために医療製品業界で使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.HIBCCode39">
      <summary>
            HIBCCode39バーコードは、Code39OptionalCheckDigitプロパティをTrueに設定して、Code39OptionalCheckDigit Code39の記号を使用しています。スラッシュ（/）を区切り記号として使用して「プライマリ データ」と「セカンダリ データ」をエンコードします。
            このバーコードは識別目的のために医療製品業界で使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISBN">
      <summary>
            ISBN（International Standard Book Number）バーコードは、EAN-13タイプのバーコードで、図書（書籍）を識別する「国際標準図書番号」を表示するために使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISSN">
      <summary>
            ISSN（International Standard Serial Number）バーコードは、EAN-13タイプのバーコードです。
            雑誌等の逐次刊行物を識別する「国際標準逐次刊行物番号」を表示するために使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.ISMN">
      <summary>
            ISMN（International Standard Music Number）バーコードは、EAN-13タイプのバーコードです。楽譜を識別する「国際標準楽譜番号」を表示するために使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IATA_2_of_5">
      <summary>
            IATA_2_of_5バーコードは、Code_2_of_5バーコードの一種で、数字のみを使用し、チェックディジットが付きます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.BC412">
      <summary>
            データBC412バーコードは、35文字（0～9およびA～Z（Oを除く））を使用します。半導体ウェハー識別に使用されています。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Plessey">
      <summary>
            Plesseyバーコードは、エンコードするために16 進数の数字を使用します。このバーコードは、主に図書館で使用される1次元のバーコードです。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.IntelligentMailPackage">
      <summary>
            Intelligent Mail Packageバーコードは、米国内の小包配送に使用されるバーコードです。（ntelligentMailPackageがIntelligent Mailバーコードより効率的です）
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBoxConverter">
      <summary>
             内部使用のみ。
             Filter properties
             </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CrossSectionBoxConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            値パラメータによって指定されたオブジェクト型のプロパティのコレクションを取得します。
            </summary>
      <param name="context">フォーマットコンテキストを提供するSystem.ComponentModel.ITypeDescriptorContext。</param>
      <param name="value">プロパティを取得するオブジェクトの型を指定するSystem.Object。</param>
      <param name="attributes">フィルターとして使用されるSystem.Attribute型の配列。</param>
      <returns>コンポーネントに対して公開されているプロパティを持つSystem.ComponentModel.PropertyDescriptorCollection。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.GraphicsExtensions">
      <summary>
            GDI+描画サーフェイスの実行の拡張を提供します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawDoubleLine(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            座標の組に指定された’2つの点を接続する二重線を描画します。
            </summary>
      <param name="g">描画するグラフィックス。</param>
      <param name="pen">
        線の色、幅およびスタイルを判定する<see cref="T:System.Drawing.Pen"></see>。</param>
      <param name="x1">第１のポイントのx座標。</param>
      <param name="y1">第１のポイントのy座標。</param>
      <param name="x2">第２のポイントのx座標。</param>
      <param name="y2">第２のポイントのy座標。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawRoundWithDoubleLine(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            二重線で丸い四角形を描画します。
            </summary>
      <param name="graphics">描画するグラフィックス。</param>
      <param name="rect">
        丸い四角形の境界線を定義する<see cref="T:System.Drawing.Rectangle"></see>構造体。</param>
      <param name="pen">
        線の色、幅およびスタイルを判定する<see cref="T:System.Drawing.Pen"></see>。</param>
      <param name="style">二重線のスタイルです。</param>
      <param name="tl">左上の丸め半径。</param>
      <param name="tr">右上の丸め半径。</param>
      <param name="br">右下の丸め半径。</param>
      <param name="bl">左下の丸め半径。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.FillRound(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            丸い四角形を塗りつぶします。
            </summary>
      <param name="graphics">描画するグラフィックス。</param>
      <param name="rect">
        丸い四角形の境界線を定義する<see cref="T:System.Drawing.Rectangle"></see>構造体。</param>
      <param name="brush">
        塗りつぶしの特性を判定する<see cref="T:System.Drawing.Brush"></see>。</param>
      <param name="tl">左上の丸め半径。</param>
      <param name="tr">右上の丸め半径。</param>
      <param name="br">右下の丸め半径。</param>
      <param name="bl">左下の丸め半径。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.DrawEllipseDoubleLine(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
      <summary>
            境界のSystem.Drawing.Rectangle構造体で指定された楕円を描画します。
            </summary>
      <param name="graphics">描画するグラフィックス。</param>
      <param name="rect">
        楕円の境界線を定義する<see cref="T:System.Drawing.Rectangle"></see>構造体。</param>
      <param name="pen">
        楕円の色、幅およびスタイルを判定する<see cref="T:System.Drawing.Pen"></see>。</param>
      <param name="style">二重線のスタイルです。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.CreateGradientBrush(System.Drawing.Graphics,System.Drawing.RectangleF,GrapeCity.ActiveReports.SectionReportModel.GradientStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
             四角形、開始色＆終了色および向きのモードに基づいて新しいグラデーションブラシを作成します。
            </summary>
      <param name="graphics">描画するグラフィックス。</param>
      <param name="rect">線状グラデーションの境界線を指定する<see cref="T:System.Drawing.RectangleF"></see>構造体。</param>
      <param name="gradientStyle">グラデーションのスタイル。</param>
      <param name="firstColor">グラデーションの開始色を表す<see cref="T:System.Drawing.Color"></see>構造体。</param>
      <param name="secondColor">グラデーションの終了色を表す<see cref="T:System.Drawing.Color"></see>構造体。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.GraphicsExtensions.CreateBrush(System.Drawing.Graphics,GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle,System.Drawing.Drawing2D.HatchStyle,GrapeCity.ActiveReports.SectionReportModel.GradientStyle,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            指定された背景スタイルに応じて新しいブラシを作成します。
            </summary>
      <param name="graphics">描画するグラフィックス。</param>
      <param name="backgroundStyle">背景のスタイル。</param>
      <param name="hatchStyle">このブラシによって描画されるパターンを表す<see cref="T:System.Drawing.Drawing2D.HatchStyle"></see>値の1つ。</param>
      <param name="gradientStyle">グラデーションスタイルを定義する<see cref="T:GrapeCity.ActiveReports.SectionReportModel.GradientStyle"></see>値の1つ。</param>
      <param name="rect">線状グラデーションの境界線を指定する<see cref="T:System.Drawing.RectangleF"></see>構造体。</param>
      <param name="firstColor">1番目の色を表す<see cref="T:System.Drawing.Color"></see>構造体。</param>
      <param name="secondColor">2番目の色を表す<see cref="T:System.Drawing.Color"></see>構造体。</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle">
      <summary>
            オブジェクトの背景を描画するために使用されたスタイルを指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Solid">
      <summary>
            背景に単色塗りつぶしが使用されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Gradient">
      <summary>
            背景にグラデーション塗りつぶしが使用されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BackgroundStyle.Pattern">
      <summary>
            背景にパターンの塗りつぶしが使用されます。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.GradientStyle">
      <summary>
            描画するグラデーションの種類を指定します。 
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.Vertical">
      <summary>
            垂直グラデーションが描画されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.Horizontal">
      <summary>
            水平グラデーションが描画されます。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.DiagonalUp">
      <summary>
            左上から右下方向にグラデーションを描画します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.DiagonalDown">
      <summary>
            左下から右上方向にグラデーションを描画します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.FromCenter">
      <summary>
            中心から放射状のグラデーションを描画します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.GradientStyle.FromCorner">
      <summary>
            中心に向かって放射状のグラデーションを描画します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ShapeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            内部使用のみ。 Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
      <param name="context">フォーマットコンテキストを提供するSystem.ComponentModel.ITypeDescriptorContext。</param>
      <param name="value">プロパティを取得するオブジェクトの型を指定するSystem.Object。</param>
      <param name="attributes">フィルターとして使用されるSystem.Attribute型の配列。</param>
      <returns>コンポーネントに対して公開されているプロパティを持つSystem.ComponentModel.PropertyDescriptorCollection。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.FieldCollection.DuplicateNames">
      <summary>
            複製されたフィールドの名前でHashSetを返します。 
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.SetReportFolder(System.String)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SerializationManager.WriteObject(System.Xml.XmlDocument,System.Collections.IDictionary,System.Object)">
      <summary>
            このメソッドは、指定されたオブジェクトをXMLドキュメントに書き出します。  
            </summary>
      <param name="document">XMLドキュメントです。</param>
      <param name="nametable">コンポーネントの名前の辞書。</param>
      <param name="value">ドキュメントに書き込まれるオブジェクト。</param>
      <remarks>オブジェクトには次のXMLがあります。
            
            <c><Object type="object type" name="object name" children="child property name"></Object></c>
            
            ここで、Objectはカスタムオブジェクトを定義する要素です。  Typeは必須で
            オブジェクトのデータ型を指定します。  名前はオプションです。  存在する場合は、 このオブジェクトの
            名前を付け、オブジェクトがIComponentの場合はコンテナに追加します。
            最後に、children属性はオプションです。  存在する場合、このオブジェクトは
            ネストされたオブジェクトを持つことができ、 それらのオブジェクトは指定されたプロパティ名に追加されます。  この
            プロパティは、IListを実装するオブジェクトを返すコレクションプロパティである必要があります。
            
            オブジェクトタグの中には、次のサブタグのうちの0個以上を指定できます
            
            InstanceDescriptor - オブジェクトのインスタンスを作成する方法について説明しています。
            Property - オブジェクトに設定されたプロパティ
            Event - イベントバインディング
            Binary -- バイナリデータ
            </remarks>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner">
      <summary>
       サブレポートとして追加することにより、既存のレポートを組み合わせたレポートを作成します。
        </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.DefaultStep">
      <summary>
        2つの隣接するサブレポート間の規定のギャップを定義します。デフォルトでは1インチです。
        </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.#ctor">
      <summary>
        ReportCombinerのインスタンスを作成します。
        </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length)">
      <summary>
       レポートのマージンを設定します。
        </summary>
      <param name="top">トップのマージン</param>
      <param name="right">右のマージン</param>
      <param name="bottom">下のマージン</param>
      <param name="left">左のマージン</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length,GrapeCity.ActiveReports.PageReportModel.Length)">
      <summary>
        レポートのマージンを設定します。
        </summary>
      <param name="topAndBottom">トップと下のマージンを設定します。</param>
      <param name="rightAndLeft">右と左のマージンを設定します。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.SetMargin(GrapeCity.ActiveReports.PageReportModel.Length)">
      <summary>
        レポートのマージンを指定した値に設定します。
        </summary>
      <param name="all">Margin length</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.Clear">
      <summary>
       レポートコンバイナの現在のインスタンスからすべてのアイテムをクリアします。
        </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.Insert(System.Int32,GrapeCity.ActiveReports.PageReport,GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
      <summary>
        レポートリストの指定された位置にレポートを挿入します。
        </summary>
      <param name="index">追加するレポートの位置。</param>
      <param name="report">追加するレポート。</param>
      <param name="options">レポートに追加するオプション。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.AddReport(GrapeCity.ActiveReports.PageReport,GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
      <summary>
       指定したオプションでレポートをレポートリストに追加します。
        </summary>
      <param name="report">追加するレポート。</param>
      <param name="options">レポートに追加するオプション。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.AddRange(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.PageReport},GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions)">
      <summary>
        レポートリストに、指定したオプションでレポートのコレクションを追加します。
        </summary>
      <param name="reports">追加するレポート。</param>
      <param name="options">各レポートに適用されるオプション。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.RemoveAt(System.Int32)">
      <summary>
        レポートリストの指定された位置からレポートを削除します。
        </summary>
      <param name="index">削除するレポートのインデックス。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.RemoveAll(GrapeCity.ActiveReports.PageReport)">
      <summary>
        指定したレポートをすべて削除します。
        </summary>
      <param name="report">削除するレポート。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.BuildReport">
      <summary>
        新しいPageReportインスタンスを返します。
        </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions">
      <summary>
        ReportCombinerを使用するときにレポートの場所を制御する追加のオプション。
        </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions.PageBreakBefore">
      <summary>
        レポートを追加する前に改ページを追加します。
        </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.LocationOptions.Gap">
      <summary>
        前のレポートと追加されたレポートの間にスペースを追加します。
        </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Data.CustomDataProvidersFactory">
      <summary>
            内部使用のみ。 Extends default data providers factory with OLEDB, and custom data providers, configured in .config file.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Rendering.Components.Map.TileProviders.ConfigurableTileProvidersManager">
      <summary>
            &gt;構成ファイルから設定を適用するタイルプロバイダを作成する機能を提供します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.DataVisualizerInfoExtensions">
      <summary>
            便利な拡張機能。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ImageConverterService">
      <summary>
            Image converter service.内部使用のみ。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.ImageConverterService.Instance">
      <summary>
            One instance.内部使用のみ。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions">
      <summary>
            内部使用のみ。Provides some helper methods for any object.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions.ApplyDefaults``1(``0)">
      <summary>
            Sets the properties values of object to their default values (defined by DefaultValue attribute).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ObjectExtensions.SetValue``1(``0,System.ComponentModel.PropertyDescriptor,System.String)">
      <summary>
            Sets the property value using approprieate type converter.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataTable">
      <summary>
            クエリ実行の結果セットを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataTable.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.DataColumn},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.DataRow})">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataTable"></see>の新しいインスタンスを初期化します。
            </summary>
      <param name="columns">テーブルの列。</param>
      <param name="rows">テーブルの行。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.DataTable.Columns">
      <summary>
            テーブルの列を取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.DataTable.Rows">
      <summary>
            テーブルの行を取得します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataColumn">
      <summary>
            データ列を表します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.Name">
      <summary>
            列名を指定します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.DataType">
      <summary>
            列のデータ型を指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataColumn.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataColumn"></see>の新しいインスタンスを初期化します。
            </summary>
      <param name="name">列名。</param>
      <param name="dataType">列の種類。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.DataRow">
      <summary>
            データ行を表します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.DataRow.Values">
      <summary>
            行のデータ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.DataRow.#ctor(System.Object[])">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.DataRow"></see>の新しいインスタンスを初期化します。
            </summary>
      <param name="values">行のデータ。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter">
      <summary>
        <see cref="!:IDbCommand"></see>で使用されるパラメータを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter.ParameterName">
      <summary>
            パラメータ名を取得または設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter.Value">
      <summary>
            パラメータの値を取得または設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameterCollection">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"></see>オブジェクトのコレクションを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.IDataParameterCollection.Add(GrapeCity.ActiveReports.Extensibility.Data.IDataParameter)">
      <summary>
            指定した<see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDataParameter"></see>オブジェクトをコレクションに追加します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider">
      <summary>
            スキーマプロバイダを指定します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider.GetSchema(System.Data.Common.DbConnection)">
      <summary>
            指定したデータベース接続のスキーマが同じデータプロバイダの場合、そのスキーマを取得します。
            </summary>
      <param name="connection">スキーマを取得する接続。</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column">
      <summary>
            列を定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.#ctor(System.String,System.Type,System.Boolean)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="name">列名。</param>
      <param name="dataType">列の種類。</param>
      <param name="isPrimaryKey">列が主キーに含まれるかどうか。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.Name">
      <summary>
            列名を表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.DataType">
      <summary>
            列の種類を表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column.IsPrimaryKey">
      <summary>
            列が主キーに含まれるかどうか。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema">
      <summary>
            データベースのデータスキーマを定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.Empty">
      <summary>
          空のデータスキーマを表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey})">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="tables">テーブルコレクション。</param>
      <param name="foreighKeys">&gt;外部キーのコレクション。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.Tables">
      <summary>
            テーブルコレクションを表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DataSchema.ForeignKeys">
      <summary>
            このテーブルをソースとして持つ外部キーコレクション。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName">
      <summary>
            テーブルの名前を定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="name">テーブルの名前。</param>
      <param name="schema">スキーマの名前。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Name">
      <summary>
            テーブルの名前を表します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Schema">
      <summary>
            スキーマの名前を表します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.Equals(System.Object)">
      <summary>
            指定された<see cref="T:System.Object"></see>がこのインスタンスと等しいかどうかを判断します。
            </summary>
      <param name="obj">現在の<see cref="T:System.Object"></see>と比較する<see cref="T:System.Object"></see>。</param>
      <returns>
        指定された<see cref="T:System.Object"></see>がこのインスタンスと等しい場合は<c>true</c>。それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName.GetHashCode">
      <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
      <returns>このインスタンスのハッシュコード。ハッシュアルゴリズムおよびハッシュテーブルのようなデータ構造で使用するのが適切です。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey">
      <summary>
            外部キーを定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.#ctor(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column},System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column})">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="source">ソーステーブル。</param>
      <param name="destination">出力先テーブル。</param>
      <param name="sourceColumns">ソースを定義する列。</param>
      <param name="destinationColumns">The columnts that defines a destination.</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.Source">
      <summary>
            ソーステーブル。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.Destination">
      <summary>
            出力先テーブル。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.SourceColumns">
      <summary>
            ソースを定義する列。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.ForeignKey.DestinationColumns">
      <summary>
            出力先を定義する列。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table">
      <summary>
            テーブルを定義します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.#ctor(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.DbName,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType,System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Column})">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="name">テーブルの名前。</param>
      <param name="tableType">テーブルの種類。</param>
      <param name="columns">テーブルの列コレクション。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Name">
      <summary>
            テーブルの名前。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.TableType">
      <summary>
            テーブルの種類。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Columns">
      <summary>
            テーブルの列コレクション。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.ToString">
      <summary>
            このインスタンスを表す<see cref="T:System.String"></see>を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Equals(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
      <summary>
        <see cref="T:System.Boolean"></see>を返します。指定されたTableが現在のTableと等しい場合はtrue。それ以外の場合はfalse。            
            <param name="anotherTable">比較用のテーブル。</param></summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.Equals(System.Object)">
      <summary>
        <see cref="T:System.Boolean"></see>を返します。指定されたObjectが現在のTableと等しい場合はtrue。それ以外の場合はfalse。  
            <param name="obj">比較用のオブジェクト。</param></summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.GetHashCode">
      <summary>
            現在のオブジェクトのハッシュコードを表す<see cref="T:System.Int32"></see>を返します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.op_Equality(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
      <summary>
        <see cref="T:System.Boolean"></see>を返します。最初のテーブルが2番目のテーブルと等しい場合はtrue。それ以外の場合はfalse。
            <param name="firstTable">比較用の最初のテーブル。</param><param name="secondTable">比較用の2番目のテーブル。</param></summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table.op_Inequality(GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table,GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.Table)">
      <summary>
        <see cref="T:System.Boolean"></see>を返します。最初のテーブルが2番目のテーブルと等しくない場合はtrue。それ以外の場合はfalse。
            <param name="firstTable">比較用の最初のテーブル。</param><param name="secondTable">比較用の2番目のテーブル。</param></summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType">
      <summary>
            テーブルの種類の列挙型を定義します。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType.Table">
      <summary>
            テーブル。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Extensibility.Data.SchemaModel.TableType.View">
      <summary>
            ビュー。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable">
      <summary>
            構成可能なコンポーネントのインターフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings">
      <summary>
            表示拡張機能でサポートされている設定を返します。
            </summary>
      <returns>表示拡張機能の設定へのアクセスを提供する<see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.ISettings"></see>。</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IConfigurable.GetSupportedSettings(System.Boolean)">
      <summary>
             表示拡張機能でサポートされている設定を返します。
            </summary>
      <param name="fpl">これは固定ページレイアウトであることを示します。</param>
      <returns>表示拡張機能の設定へのアクセスを提供する<see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.ISettings"></see>。</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension">
      <summary>
            表示拡張機能オブジェクトのインターフェース。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider)">
      <summary>
            レポートを描画します。
            </summary>
      <param name="report">描画するレポート。</param>
      <param name="streams">出力用のストリーム。</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection)">
      <summary>
             レポートを描画します。
            </summary>
      <param name="report">描画するレポート。</param>
      <param name="streams">出力用のストリーム。</param>
      <param name="settings">レポートに使用された設定。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateCredentialsEventArgs.DataSource">
      <summary>
            資格情報を検索するデータソースを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.LocateCredentialsEventArgs.#ctor(GrapeCity.ActiveReports.PageReportModel.DataSource,System.String,System.String)">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.LocateCredentialsEventArgs"></see>クラスの新しいインスタンスを初期化します。
            </summary>
      <param name="dataSource">資格情報を検索するデータソース。</param>
      <param name="reportPath">	資格情報を検索するレポートの名前。</param>
      <param name="promptText">資格情報を検索するリクエストのプロンプト文字列。</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.DataSet">
      <summary>
            データを検索するレポートの<see cref="T:GrapeCity.ActiveReports.PageReportModel.IDataSet"></see>オブジェクトを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.LocateDataSourceEventArgs.Parameters">
      <summary>
            特定のレポートインスタンスに指定されたパラメータコレクションを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.LoadSnapshot(System.IO.Stream,GrapeCity.ActiveReports.ResourceLocator)">
      <summary>
            内部使用のみ。 Load page document from stream.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.LocateDataSourceFn">
      <summary>
            データソースのロケータを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.InitializeReportHandlers(GrapeCity.ActiveReports.Document.PageDocument)">
      <summary>
            ハンドラをドキュメントに設定します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Document.PageDocument.ResolveCredentialsFn">
      <summary>
            資格情報のロケータを取得します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageReport.CreateFromMaster(System.String,GrapeCity.ActiveReports.ResourceLocator)">
      <summary>
            オーバーロードされます。指定したマスターレポートのすべてのコンテンツプレースホルダーを含む空のレポートを作成します。
            </summary>
      <param name="masterName">マスターレポートの名前。</param>
      <param name="resourceLocator">リソースロケータ。</param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.GdiRenderersFactory">
      <summary>
            GDI+ベースの画像レンダラーを備えたファクトリ。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.AssertionHelper">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.AssertionHelper.ExecuteWithMemberAccessAssert(System.Action{System.Boolean})">
      <summary>
            Executes code while asserting reflection permission
            </summary>
      <param name="permission"></param>
      <param name="action"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.AssertionHelper.ExecuteWithAssert(System.Security.CodeAccessPermission,System.Action{System.Boolean})">
      <summary>
            Executes code while asserting specific permission
            </summary>
      <param name="permission"></param>
      <param name="action"></param>
    </member>
    <member name="T:GrapeCity.ActiveReports.BarCodes.Drawing.PageDrawingDevice">
      <summary>
            ページ描画のデバイス。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code49Options">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.QRCodeOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroQRCodeOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.PDF417Options">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MicroPDF417Options">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.GS1CompositeOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Code128Options">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.RssExpandedStackedOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.DataMatrixOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.MaxiCodeOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.GS1QRCode">
      <summary>
            GS1 QRCode
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.SaveDataSourceCredentials(System.String,System.String)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.BackdropOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.ChartBorderOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.GridLayoutOptions">
      <summary>
            Design-time support, 内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.RefreshStyles">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.RefreshStyles">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.CompensateForBorder(System.Single@,System.Single@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Label.RefreshStyles">
      <summary>
           内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.RefreshStyles">
      <summary>
           内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DetectType(System.String)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.RefreshStyles">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.Html">
      <summary>
            コントロールのHTMLコンテンツを取得または設定します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.Design.IRichEditDesignTarget.LoadFile(System.IO.Stream,GrapeCity.ActiveReports.SectionReportModel.RichTextType)">
      <summary>
            指定されたストリームからファイルをロードします。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.TextFormat">
      <summary>
            Utilities class to parse named formats. 内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.TextFormat.FormatNamed(System.Object,System.String,System.Globalization.CultureInfo,System.String@,System.Object@,System.String@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Controls.TextFormat.Format(System.Object,System.String,System.Globalization.CultureInfo,System.Collections.Generic.IDictionary{System.Int32,System.String}@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.CsvDataSource.MoveFirst(GrapeCity.ActiveReports.ResourceLocator)">
      <summary>
            現在の位置を最初のデータレコードに移動します。
            </summary>
      <param name="reportResourceLocator"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Read">
      <summary>
            TODO:
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.General.ScriptUpdater">
      <summary>
            Internal class, which helps to migrate scripts to AR. 内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.MinTextualUpdate(System.String)">
      <summary>
            いくつかのAR6の名前を修正します。 https://code.datadynamics.com/default.asp?W2301を参照してください。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.MinTextualUpdate(System.String,System.String,System.String)">
      <summary>
            いくつかのAR6型の名前を修正します。 https://code.datadynamics.com/default.asp?W2301を参照してください。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <param name="oldAssemblyAlias">古い型のエイリアス。</param>
      <param name="newAssemblyAlias">新しい型のエイリアス。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.ReplaceDataDynamicsNames(System.String)">
      <summary>
            AR6の名前を修正します。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.ReplaceDataDynamicsNames(System.String,System.String,System.String)">
      <summary>
             AR6の名前を修正します。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <param name="oldAssemblyAlias">古い型のエイリアス。</param>
      <param name="newAssemblyAlias">新しい型のエイリアス。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.UpdateScript(System.String)">
      <summary>
            AR6のスクリプトを修正します。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.UpdateScript(System.String,System.String,System.String)">
      <summary>
           AR6のスクリプトを修正します。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.General.ScriptUpdater.RegexMatchAndReplace(System.String,System.Collections.Generic.IDictionary{System.Text.RegularExpressions.Regex,System.String},System.Func{System.Text.RegularExpressions.Match,System.Boolean})">
      <summary>
            正規表現が一致し、古い名前を置き換えます。
            </summary>
      <param name="code">古い名前を持つコード。</param>
      <param name="regexes">正規表現の辞書。</param>
      <returns>新しい名前を持つコード。</returns>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.LocateCredentials">
      <summary>
            レポートが呼び出し元のアプリケーションからデータソースの資格情報を取得するときに発生します。  
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.ResourceLocator">
      <summary>
            レポートのリソースを解決するオブジェクトを取得します。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.BinPath">
      <summary>
            内部使用のみ。 Support for code-based reports.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.IsDisposed">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.OpenDataLayer">
      <summary>
        内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.CloseDataLayer">
      <summary>
           内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.RunAndSaveDocument(System.IO.Stream)">
      <summary>
            Save document for code-based support. 内部使用のみ。
            </summary>
      <param name="stream"></param>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.PrinterSettings">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.DuplicateFieldNames">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReport.GetFields(System.String,System.String)">
      <summary>
            Gets the fields collection. 内部使用のみ。
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportProcessingError.ParameterNotValidated">
      <summary>
            パラメータの検証エラー：<see cref="P:GrapeCity.ActiveReports.ReportException.ErrorData"></see>はパラメータの名前を提供します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.TypeResolutionService">
      <summary>
            The ITypeResolutionService is used to load types at design time. It keeps an internal
            set of assemblies that have been referenced thus far and can search them for types given
            unqualified names.
            
            内部使用のみ。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.JpCalendar.CultureInfoExtension.InitJpCalendar">
      <summary>
            静的JPカレンダーを初期化します。
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.JpCalendar.CultureInfoExtension.FormatJpDate(System.Globalization.CultureInfo,System.DateTime,System.String)">
      <summary>
            日付を一般的に書式設定します。JPの場合は、元号設定とカスタム形式「ggYY」を使用して日付を書式設定します。
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager">
      <summary>Allows to load resource strings from main assembly instead of satellite assembly.</summary>
      <remarks>内部使用のみ。</remarks>
    </member>
    <member name="M:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager.InjectTo(System.Type)">
      <summary>
            Replaces default ResourceManager with the <see cref="T:GrapeCity.ActiveReports.Tools.EmbeddedResourceManager"></see> in the specified class.
            </summary>
      <param name="resourceDesignerType">The resource's designer auto-generated class.</param>
      <remarks>内部使用のみ。</remarks>
    </member>
    <member name="M:GrapeCity.BI.Data.DataProviders.DataProviderFactories.GetFactory(System.String,GrapeCity.BI.Data.DataProviders.DataProviderInfo[],GrapeCity.ActiveReports.ResourceLocator)">
      <summary>
            指定されたデータプロバイダのインスタンスを返します。
            </summary>
      <param name="providerName">目的のデータプロバイダに設定されている名前。</param>
      <returns>指定されたデータプロバイダの名前に関連付けられた<see cref="!:DataProviderFactory"></see>、または構成されていないか初期化できない場合はNULL。</returns>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.AdapterAssemblyQualifiedName">
      <summary>
            多値パラメータの設定などの追加機能を実装するクラスのアセンブリの完全修飾名。
            </summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.SchemaProviderAssemblyQualifiedName">
      <summary>
        <see cref="T:GrapeCity.ActiveReports.Extensibility.Data.IDbSchemaProvider"></see>を実装するクラスのアセンブリの完全修飾名。
            </summary>
    </member>
    <member name="M:GrapeCity.BI.Data.DataProviders.MssqlSchemaProvider.GetTableType(System.String)">
      <summary>
            SQLテーブルの種類を取得します。
            </summary>
      <param name="value">プロバイダによって返される値。</param>
      <returns>テーブルの種類。</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Picture.ImageBytes">
      <summary>
            Gets or sets the image data.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.#ctor(System.Collections.Generic.IEnumerable{GrapeCity.ActiveReports.Configuration.CustomDesignerConfig})">
      <summary>事前定義されたカスタムデザイナの構成で新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.CustomDesignerConfigurationDictionary.GetToolboxItems">
      <summary> Returns toolbox items configuration </summary>
      <remarks>内部使用のみ。</remarks>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.CustomDesignerConfig">
      <summary>Configuration entry for a custom report item designer.</summary>
      <remarks>内部使用のみ。</remarks>
    </member>
    <member name="T:GrapeCity.ActiveReports.Document.Section.Adapter.RdfCanvasAdapter">
      <summary>
            Adapter to <see cref="T:GrapeCity.ActiveReports.Drawing.IDrawingCanvas"></see>. It supports simple use-cases only.
            For internal use.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.Section.Adapter.RdfCanvasAdapter.#ctor(GrapeCity.ActiveReports.Document.Section.DrawCanvas,GrapeCity.ActiveReports.IDrawingFactory)">
      <summary>
            Creates new adapter. For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.Render(GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean,System.Threading.CancellationToken,System.IProgress{GrapeCity.ActiveReports.Rendering.Export.ProgressInfo})">
      <summary>
            Provides the output of this report to the specified rendering extension with the specified values and refreshed data.
            </summary>
      <param name="renderer">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"></see> that is to render the report output.</param>
      <param name="streams">The <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"></see> that is to store the rendered report output.</param>
      <param name="settings">The <see cref="T:System.Collections.Specialized.NameValueCollection"></see> that contains the settings for the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension"></see>.</param>
      <param name="forceDataRefresh">Set to True to force a refresh or requery of the data even if the DataMap has already retrieved the necessary data.</param>
      <param name="forceParameterDataRefresh">Set to True to force a refresh or requery of the parameter data.</param>
      <param name="token">Allows to stop rendering</param>
      <param name="progress">The <see cref="!:IProgress"></see> is a provider for progress updates.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="renderingExtension"></paramref> or <paramref name="streams"></paramref> is null.</exception>
      <exception cref="T:GrapeCity.ActiveReports.ReportException">A report specific error occured.</exception>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.ApplyInteractivity(GrapeCity.ActiveReports.Core.Rendering.Interactivity.InteractiveActions)">
      <summary>
            Interactivity actions to be applied to report instance next during rendering.
            </summary>
      <param name="actions">The interactive actions to be applied.</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.SaveSnapshot(System.IO.FileInfo,System.Boolean)">
      <summary>
            For internal use only. Save document snapshot to the specified file.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Document.PageDocument.SaveSnapshot(System.IO.Stream,System.Boolean)">
      <summary>
            For internal use only. Save document snapshot to the specified stream
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.BarCodes.Drawing.PageImageDrawingDevice">
      <summary>
            Page drawing device
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.ForceEan13BarcodeChecksumCaption">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.TextToRender">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.Aztec">
      <summary>
            Aztec options.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Barcode.AztecOptions">
      <summary>
            Design-time support, for internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.RenderImpl(System.Drawing.RectangleF,System.Func{System.Drawing.RectangleF,GrapeCity.ActiveReports.Extensibility.Rendering.Components.Barcode.IDrawingDevice},System.Action)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetBarcodeBounds">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Barcode.GetBgBounds">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.GS1DataMatrix">
      <summary>
            GS1 Data Matrix
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.BarCodeStyle.Aztec">
      <summary>
            Aztec Code
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
            Chart rendering at design time and run time.
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,GrapeCity.ActiveReports.Document.CompatibilityModes)">
      <summary>
            Chart rendering at design time and run time.
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ChartControl.CreateSharpGraphCanvas(System.Drawing.Graphics)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ChartControl.CoreChart">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CheckBox.CalcContentAlignment(System.Drawing.RectangleF,System.Drawing.ContentAlignment,System.Drawing.SizeF,System.Single,System.Drawing.RectangleF@,System.Drawing.RectangleF@)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.CheckBox.Kinsoku">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.NormalizeLineFeeds(System.String)">
      <summary>
            Normalizes line-feed characters to unified presentation with \n as line delimiter
            </summary>
      <param name="inputString"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.ARControl.CalcLineHeight(System.Drawing.Font,System.Single)">
      <summary>
            CalcLineHeight
            </summary>
      <param name="f"></param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.CustomControl.DrawControlOnImage(System.Object,System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.InputField">
      <summary>
            Base input field component
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.FieldName">
      <summary>
            Specifies the unique name of the field.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.ReadOnly">
      <summary>
            Prevents the user from changing the form field content.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.Required">
      <summary>
            Forces the user to fill in the selected field.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.BackColor">
      <summary>
            Background color
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.ForeColor">
      <summary>
            Font color
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.BorderWidth">
      <summary>
            Border width
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.BorderColor">
      <summary>
            Border color
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputField.BorderStyle">
      <summary>
            Border style
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.InputField.QuickSave(System.IO.BinaryWriter)">
      <summary>
            Saves the control to the specified binary writer.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.InputField.QuickLoad(System.IO.BinaryReader)">
      <summary>
            Loads the control from specified binary reader.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox">
      <summary>
            CheckBox input field component
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox.CheckSize">
      <summary>
            Sets the size of check symbol inside the CheckBox
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox.Checked">
      <summary>
            Shows the check box selected unless the user deselects it.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox.CheckStyle">
      <summary>
            Sets the size of check symbol inside the CheckBox
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox.QuickSave(System.IO.BinaryWriter)">
      <summary>
            Saves the control to the specified binary writer.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.InputFieldCheckBox.QuickLoad(System.IO.BinaryReader)">
      <summary>
            Loads the control from specified binary reader.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.InputFieldText">
      <summary>
            Text input field component
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.IsPropertyValueAvailable(System.String,System.Object)">
      <summary>
            Checks if the property value is available for this control
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.Alignment">
      <summary>
            Text alignment
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.Font">
      <summary>
            Sets/gets control's font.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.MaxLength">
      <summary>
            Specifies the maximum length of the text entered. When null, the text is not restricted to any specified length.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.MultiLine">
      <summary>
            Allows more than a single-line entry in the text field.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.Password">
      <summary>
            Displays the user-entered text as a series of asterisks (*)
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.SpellCheck">
      <summary>
            Indicates whether the text should be spell checked during its input or not.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.Text">
      <summary>
            A field, constant or expression whose value is displayed
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.OutputFormat">
      <summary>
            Used for format the Text property value
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.InputFieldText.CurrencyCulture">
      <summary>
            This property is for internal use only.
            Used to store the currency's culture name if user select a currency type OutputFormat.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.Label.Kinsoku">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.Edit(System.Object)">
      <summary>
            Invokes the Ole server to edit the current embedded instance.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.OleObject.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleHandler">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleThread">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.OleObject.OleContext">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.DrawContent(System.Drawing.Graphics,System.Drawing.RectangleF)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Picture.LoadFrom(System.String,GrapeCity.ActiveReports.Core.Document.IImagePersistenceService)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.DataField">
      <summary>
            Gets or sets the field name from the data source to bind to the control.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.ReportInfo.Kinsoku">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RtfRenderingType">
      <summary>
            Gets or sets target rendering type of RTF (not HTML). As legacy RTF or as WordPad-like image (metafile or raster image).
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RenderRtfAsContinuousImage">
      <summary>
            If set to true, then the content will be rendered as one continuous image and then split across the pages.
            This property is actual only if <see cref="P:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.RtfRenderingType"></see> is set to either Metafile or PNG.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.RichTextBox.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.PointF)">
      <summary>
            For internal use only.
            </summary>
      <param name="g"></param>
      <param name="devRect"></param>
      <param name="location"></param>
    </member>
    <member name="T:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType">
      <summary>
            Enum for RichTextRenderingType.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.RTF">
      <summary>
            RTF
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.Metafile">
      <summary>
            HTML
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.PNG">
      <summary>
            Text
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.SectionReportModel.RichTextRenderingType.TransparentPNG">
      <summary>
            PNG With Transparent Background
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.Shape.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionReportModel.TextBox.GetTextRectWithSkipCode(System.String[],System.String[],System.Single,System.Drawing.RectangleF)">
      <summary>
             Adjust text rectangle according to the skipped characters.
             Currently, just support when the skipped characters are at 
             the two sides of the text.
            
             For internal use only.
             </summary>
      <param name="lines">The text lines.</param>
      <param name="rectF">Text rectangle.</param>
      <returns>Processed text rectangle.</returns>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReportModel.TextBox.Kinsoku">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Controls.Design.IAvailabilityInfo">
      <summary>
            Used to check the availability of a property value for the control 
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.DbDataSource">
      <summary>
            DB data source - allows to connect through custom database providers.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Data.DbDataSource.DefaultTimeout">
      <summary>
            The number of seconds to wait for a connection to open, before cancelling an attempt and generate an error. 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.ConnectionString">
      <summary>
            Specifies the string used to open a connection to the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.CommandText">
      <summary>
            Specifies a valid SQL statement used to retrieve records from the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.Connection">
      <summary>
            Gets current data source's connection.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.Factory">
      <summary>
            Gets data source's DbProviderFactory.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.SQL">
      <summary>
            Specifies a valid SQL statement used to retrieve records from the data source.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.CommandTimeout">
      <summary>
            Sets or returns the amount of time to wait while executing a command before terminating the attempt and generating an error.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.DbDataSource.ProviderName">
      <summary>
            Returns provider's invariant name
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.DbDataSource.#ctor(GrapeCity.BI.Data.DataProviders.DataProviderInfo)">
      <summary>
            Creates new DbDataSource out of DataProviderInfo
            </summary>
      <param name="dataProvider">Data provider information</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.DbDataSource.#ctor(System.Data.Common.DbProviderFactory)">
      <summary>
            Creates new DbDataSource out of DbProviderFactory
            </summary>
      <param name="factory">DbProviderFactory to be used</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.DbDataSource.OnConnectionStringChanging(System.String)">
      <summary>
            Allows to edit the connection string when its current value is about to change.
            </summary>
      <param name="value">The current value of the connection string.</param>
      <returns>The connection string</returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.Data.JsonDataSource">
      <summary>
            Represents a section report data source based on a JSON document.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.MoveFirst(GrapeCity.ActiveReports.ResourceLocator)">
      <summary>
            Moves the current position to the first data record. 
            </summary>
      <param name="resourceLocator"></param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.MoveNext">
      <summary>
            Moves the current position to the next data record. 
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.JsonDataSource.EOF">
      <summary>
            Determines whether the CurrentPosition is at the end of data.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.Field(System.String)">
      <summary>
            Returns the value of the field with the specified name.
            </summary>
      <param name="name">The name of the field.</param>
      <returns>The value of the field.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.GetColumns">
      <summary>
            Returns the list of the json columns names.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.JsonDataSource.JsonData">
      <summary>
            Specifies the json data string.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.JsonDataSource.ConnectionString">
      <summary>
            Specifies the string used to load the data from the json.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.JsonDataSource.JsonPath">
      <summary>
            Specifies the string used to select the data from json.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.Dispose">
      <summary>
            Releases the resources used by the <see cref="T:GrapeCity.ActiveReports.Data.JsonDataSource"></see>.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.JsonDataSource.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the <see cref="T:GrapeCity.ActiveReports.Data.JsonDataSource"></see></summary>
      <param name="disposing">true if this method is called from Dispose()</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.InteropAssembly">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.PageSettings.CalcKnownPaperSize(System.Drawing.Printing.PaperKind)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ScriptReferences.CustomNamespaces">
      <summary>
            Gets list of internal namepaces
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ScriptReferences.Parse(System.String,System.Collections.Specialized.StringCollection@)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="E:GrapeCity.ActiveReports.SectionReport.SectionRemoving">
      <summary>
            Raised before a section is removed from the report.  
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.CompatibilityMode">
      <summary>
            Specifies if the engine should use legacy GDI/GDI+ rendering or new cross-platform based rendering implementation.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.SectionReport.FontResolver">
      <summary>
            Gets or sets font resolver for <b>CrossPlatform</b><see cref="P:GrapeCity.ActiveReports.SectionReport.CompatibilityMode"></see>. <b>null</b> means the default resolver.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.SectionCollection.OnRemove(System.Int32,System.Object)">
      <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
      <param name="index">The zero-based index at which <paramref name="value"></paramref> can be found.</param>
      <param name="value">The value of the element to remove from <paramref name="index"></paramref>.</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException">
      <summary>
            Era configuration errors. For internal use.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException.ErrorCodes">
      <summary>
            Error codes.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Rendering.EraConfigurationException.ErrorCode">
      <summary>
            Error code of current exception.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.EraConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Enables environments where serialization is required to initialize instances of the <see cref="T:GrapeCity.ActiveReports.Rendering.EraConfigurationException"></see> class.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider">
      <summary>
            Stream provider for rendering report extension outputs to a file.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.#ctor(System.IO.DirectoryInfo,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider"></see> class.
            </summary>
      <param name="baseOutputDirectory">a <see cref="T:System.IO.DirectoryInfo"></see> to save the file streams to.</param>
      <param name="outputFileNamePrefix">a string value indicating the name to place at the beginning of the files created.</param>
      <exception cref="T:System.ArgumentNullException">Thrown if the base output directory argument is null.</exception>
    </member>
    <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.OverwriteOutputFile">
      <summary>
            Specifies that the FileStreamProvider should overwrite a file if exists; otherwise, a new file with unique name should be created.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CreatePrimaryStream(System.String,System.String)">
      <summary>
            Creates the primary working stream.
            </summary>
      <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
      <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
      <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> for the primary stream.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if the primary stream has already been created.</exception>
            /// <exception cref="T:System.InvalidOperationException">Thrown if the file extension is not specified.</exception></member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
      <summary>
            Creates a secondary stream in the stream provider.
            </summary>
      <param name="relativeName">a string value in the name for the secondary stream. The relative name is appended to the file name prefix</param>
      <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
      <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
      <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> for the secondary stream.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown if the file extension is not specified.</exception>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetPrimaryStream">
      <summary>
            Gets the primary stream.
            </summary>
      <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> for the primary stream.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetSecondaryStreams">
      <summary>
            Gets the array of secondary streams
            </summary>
      <returns>an array of <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> containing the secondary streams.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.GetUniqueFile(System.String,System.String,System.String)">
      <summary>
            Ensures a unquie fille name
            </summary>
      <param name="mimeType">a string value indicating the mime type for the primary stream.</param>
      <param name="fileExtension">a string value indicating the file extension to use for the primary stream.</param>
      <param name="prefix">a string value indicating the value to place before the file extension</param>
      <returns>a <see cref="T:System.IO.FileInfo"></see> for the stream to use.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.CleanUpOnError">
      <summary>
            Performs the required clean up in case of a rendering error.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.BaseOutputDirectory">
      <summary>
            Gets the base output directory for the stream provider.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Rendering.IO.FileStreamProvider.OutputFileNamePrefix">
      <summary>
            Gets the file name prefix for the stream provider.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider">
      <summary>
            Represents a stream provider that draws the output of an extension to a memory stream.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider"></see> class.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.StreamBaseName">
      <summary>
            Defines stream uri prefix.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.CreatePrimaryStream(System.String,System.String)">
      <summary>
            Creates the primary stream.
            </summary>
      <param name="mimeType">The MIME type.</param>
      <param name="suggestedFileExtension">The suggested file extension.</param>
      <returns>StreamInfo.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
      <summary>
            Creates the secondary stream.
            </summary>
      <param name="relativeName">The relative name.</param>
      <param name="mimeType">The MIME type.</param>
      <param name="suggestedFileExtension">The suggested file extension.</param>
      <returns>StreamInfo.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetPrimaryStream">
      <summary>
            Gets the primary stream.
            </summary>
      <returns>StreamInfo.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetSecondaryStreams">
      <summary>
            Gets the secondary streams.
            </summary>
      <returns>StreamInfo[].</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.MemoryStreamProvider.GetStreamUri(System.String)">
      <summary>
            Generates unique stream URI which is used to address linked resource
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider">
      <summary>
            This class severs as the stream provider when rendering to MHT. The class holds all the information for the different parts and writes it out to the stream provider
            used by the user.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.#ctor(System.String)">
      <summary>
            Creates a new instance of the <see cref="T:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider"></see></summary>
      <param name="outputFileNamePrefix">the prefix to use for the output file names.</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.CreatePrimaryStream(System.String,System.String)">
      <summary>
            Creates the primary stream for the stream provider. This is the main working stream.
            </summary>
      <param name="mimeType">A string value indicating the mime type ('image/png', 'text/html', etc).</param>
      <param name="suggestedFileExtension">A string value with the suggested file extension to appended to the end of the file name.</param>
      <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> for the created primary stream.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
      <summary>
            Creates a secondary stream to add to the stream provider's secondary stream array.
            </summary>
      <param name="relativeName">A string value indicating the name to give the secondary stream. The outputFileNamePrefix will be added to the beginning of this name.</param>
      <param name="mimeType">A string value indicating the mime type ('image/png', 'text/html', etc).</param>
      <param name="suggestedFileExtension">A string value with the suggested file extension to appended to the end of the file name.</param>
      <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> for the created primary stream.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.Finish(GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.String,System.String)">
      <summary>
            Combines all the mime parts of the primary and secondary streams into the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"></see> provided by the customer.
            </summary>
      <param name="streamProvider">The customers <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"></see> to create the mht output file in.</param>
      <param name="mimeType">Mime type to set for the stream.</param>
      <param name="fileExtension">Suggested file extension to set for the stream.</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.GetPrimaryStream">
      <summary>
            Gets the primary stream.
            </summary>
      <returns>A <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> representing the primary stream.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Rendering.IO.Mht.MhtStreamProvider.GetSecondaryStreams">
      <summary>
            Gets the array of secondary streams.
            </summary>
      <returns>a <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see> array containing all the secondary streams.</returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.DataVisualizerInfoExtensions.GetImage(GrapeCity.ActiveReports.Rendering.GraphicalRenderers.DataVisualizerInfo,System.Int32,System.Int32,System.Single,System.Single,System.Nullable{GrapeCity.ActiveReports.Rendering.GraphicalRenderers.BackgroundRepeatOption},GrapeCity.ActiveReports.Drawing.Core.IFontsFactory)">
      <summary>
            Gets as PNG image.
            </summary>
      <param name="buffer">Visualizer info.</param>
      <param name="width">Width in pixels.</param>
      <param name="height">Height in pixels.</param>
      <param name="dpiX">Horizontal resolution.</param>
      <param name="dpiY">Vertical resolution.</param>
      <param name="repeatOption">Background rendering mode.</param>
      <returns></returns>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.ImageConverterService.InstanceSkipMetafile">
      <summary>
            Instance for viewer. For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.ImageUtils">
      <summary>
            Gdi Image utility methods. For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.ReportsCore.Tools.ImageUtils.LoadUsingSystemDrawing(System.IO.Stream)">
      <summary>
            Loads an image and rotates it according to the EXIF through System.Drawing
            https://www.cyotek.com/blog/handling-the-orientation-exif-tag-in-images-using-csharp
            For internal use only
            </summary>
      <param name="stream"></param>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.IDrawingFactory">
      <summary>
            Helper interface to render as image (primary - for HTML in RTB).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IDrawingFactory.CreateMetricsProvider">
      <summary>
            Creates GDI metrics provider.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.IDrawingFactory.CreateDrawingCanvas(System.Drawing.Graphics,System.Nullable{System.Drawing.GraphicsUnit})">
      <summary>
            Creates GDI drawing canvas.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.IUiService">
      <summary>
            Optional UI interaction service to show UI dialogs.
            Brings a lot of problems in server-side cases, so should be used only for compatibility.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IUiService.PromptParameters(GrapeCity.ActiveReports.SectionReportModel.ParameterCollection)">
      <summary>
            Shows parameters prompt dialog.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.IWinFormsService">
      <summary>
            Optional service to execute WinForms-related function.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IWinFormsService.DoEvents">
      <summary>
            Performs UI events (SectionReport.Run method).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IWinFormsService.RenderOleObject(GrapeCity.ActiveReports.SectionReportModel.OleObject,System.Action)">
      <summary>
            Renders OLE object in special context (OLE object can be turned on in config file for code-based reports).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IWinFormsService.CreateControl(System.Type,System.Drawing.SizeF)">
      <summary>
            Creates WinForms control (code-based report with WinForms or ChartFX controls).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IWinFormsService.DestroyControl(System.Object)">
      <summary>
            Destroys WinForms control (code-based report with WinForms or ChartFX controls).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IWinFormsService.RenderControlOnImage(System.Object,System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
            Renders WinForms control (code-based report with WinForms or ChartFX controls).
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.IRichTextService">
      <summary>
            WinForms wrapper over RTF related function
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IRichTextService.HtmlToRtf(System.String,System.Single)">
      <summary>
            Converts HTML to RTF.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IRichTextService.MeasureRtf(System.String,System.Single)">
      <summary>
            Measure RTF height.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.IRichTextService.RenderBitmap(System.String,System.Single,System.Boolean)">
      <summary>
            Renders as bitmap.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.IRichTextService.RenderMetafile(System.String,System.Single)">
      <summary>
            Renders as metafile.
            </summary>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.IRichTextService.CutRtf(System.String,System.Single,System.Single)">
      <summary>
            Cuts a text fragment from an rtf
            </summary>
      <returns></returns>
    </member>
    <member name="T:GrapeCity.ActiveReports.RTextDrawingFactory">
      <summary>
            RDF format is based on RText, so it is logically to use RText for all measurement.
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.RTextDrawingFactory.Instance">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.GlobalFonts">
      <summary>
            Global fonts to use in AR - from system or from config file.
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.GlobalFonts.Fonts">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.GlobalFonts.CreateConfigFactory(GrapeCity.ActiveReports.Configuration.FontsConfiguration)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.FontsConfiguration">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.Folders">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.FontLinks">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.Substitutes">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.FallbackFonts">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.DefaultEudcFonts">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.Configuration.FontsConfiguration.EudcFonts">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.IConfigurationManager.FontFactory">
      <summary>
            Returns fonts factory.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.ReportingConfiguration.FontFactory">
      <summary>
            Returns fonts factory.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo">
      <summary>
            Wraps info about streams. Used with <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider"></see> to access streams.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.#ctor(System.Uri,System.String)">
      <summary>
            Initializes new instance of the <see cref="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo"></see></summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.OpenStream">
      <summary>
            Returns instance to the underlying <see cref="T:System.IO.Stream"></see></summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.Uri">
      <summary>
            Returns <see cref="T:System.Uri"></see> of the underlying stream
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamInfo.MimeType">
      <summary>
            Returns MimeType of the underlying stream
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider">
      <summary>
            Base class for stream provider for rendering report extension outputs to a file.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CreatePrimaryStream(System.String,System.String)">
      <summary>
            Returns <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo"></see> of the primary stream.
            </summary>
      <param name="mimeType">mime type of the primary stream</param>
      <param name="suggestedFileExtension">suggested file extension</param>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CreateSecondaryStream(System.String,System.String,System.String)">
      <summary>
            Returns <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo"></see> of the primary stream.
            </summary>
      <param name="relativeName">relative name</param>
      <param name="mimeType">mime type of the primary stream</param>
      <param name="suggestedFileExtension">suggested file extension</param>
      <returns></returns>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.GetPrimaryStream">
      <summary>
            Returns a <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo"></see> providing access to the primary stream.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.GetSecondaryStreams">
      <summary>
            Returns an array of <see cref="T:GrapeCity.ActiveReports.Extensibility.IO.StreamInfo"></see> objects providing access to the secondary stream(s).
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider.CleanUpOnError">
      <summary>
            Performs the required clean up in case of a rendering error.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.IRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Threading.CancellationToken)">
      <summary>
            Renders the report.
            </summary>
      <param name="report">The report to render.</param>
      <param name="streams">Stream for output.</param>
      <param name="settings">Settings used in the report.</param>
      <param name="cancel">The <see cref="T:System.Threading.CancellationToken"></see> object that allows to interrupt rendering.</param>
    </member>
    <member name="T:GrapeCity.ActiveReports.Extensibility.Rendering.ITrackableRenderingExtension">
      <summary>
            Interface for rendering extension objects with rendering progress.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Extensibility.Rendering.ITrackableRenderingExtension.Render(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport,GrapeCity.ActiveReports.Extensibility.Rendering.IO.StreamProvider,System.Collections.Specialized.NameValueCollection,System.Threading.CancellationToken,System.IProgress{GrapeCity.ActiveReports.Rendering.Export.ProgressInfo})">
      <summary>
            Renders the report and track render progress.
            </summary>
      <param name="report">The report to render.</param>
      <param name="streams">Stream for output.</param>
      <param name="settings">Settings used in the report.</param>
      <param name="cancel">The <see cref="T:System.Threading.CancellationToken"></see> object that allows to interrupt rendering.</param>
      <param name="progress">The <see cref="!:IProgress"></see> is a provider for progress updates.</param>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.FontResolver">
      <summary>
            Gets or sets font resolver. <b>null</b> means the default resolver.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.PageReport.ReportName">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.BI.Data.DataProviders.DataProviderInfo.IsCustom">
      <summary>
            True if data provider is specified through configuration
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.CombineMode.SubReports">
      <summary> Produces classic report with single body and multiple subreports. </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Tools.CombineMode.ReportSections">
      <summary> Each report will represented as a section (or multiple sections) in the final report. </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Tools.ReportCombiner.Mode">
      <summary>
             Defines the report combine mode.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Tools.CombineMode">
      <summary>
            Defines the report combine mode.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.Configuration.SettingsExtensions">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Configuration.SettingsExtensions.LineBreaking">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.SettingsExtensions.GetLineBreaking(GrapeCity.ActiveReports.Extensibility.Rendering.Components.IReport)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.SettingsExtensions.GetLineBreaking(GrapeCity.ActiveReports.Extensibility.Layout.ILayoutArea)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Configuration.SettingsExtensions.GetLineBreaking(GrapeCity.ActiveReports.Configuration.IConfigurationManager)">
      <summary>
            For internal use only.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypesConfiguration">
      <summary>
            Represents configuration settings for report types.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypesConfiguration.ReportTypes">
      <summary>
            Gets or sets the sequence  of report types.
            </summary>
    </member>
    <member name="T:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypes">
      <summary>
            Available report types.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypes.Section">
      <summary>
            Section report type.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypes.Page">
      <summary>
            Page report type.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypes.Rdl">
      <summary>
            Rdl report type.
            </summary>
    </member>
    <member name="F:GrapeCity.ActiveReports.ReportsCore.Configuration.ReportTypes.RdlMultiSection">
      <summary>
            Rdl Multi-Section type.
            </summary>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.List">
      <summary></summary>
    </member>
    <member name="M:GrapeCity.ActiveReports.Data.ListDataSource.Dispose(System.Boolean)">
      <summary></summary>
      <param name="bdisposing"></param>
    </member>
    <member name="P:GrapeCity.ActiveReports.Data.ListDataSource.FieldCount">
      <summary></summary>
    </member>
  </members>
</doc>