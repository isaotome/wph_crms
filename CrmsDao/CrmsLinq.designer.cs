#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrmsDao
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System.ComponentModel.DataAnnotations;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Work_Yano")]
	public partial class CrmsLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 拡張メソッドの定義
    partial void OnCreated();
    partial void InsertApplicationRole(ApplicationRole instance);
    partial void UpdateApplicationRole(ApplicationRole instance);
    partial void DeleteApplicationRole(ApplicationRole instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertCarClass(CarClass instance);
    partial void UpdateCarClass(CarClass instance);
    partial void DeleteCarClass(CarClass instance);
    partial void InsertCarColor(CarColor instance);
    partial void UpdateCarColor(CarColor instance);
    partial void DeleteCarColor(CarColor instance);
    partial void InsertCarGrade(CarGrade instance);
    partial void UpdateCarGrade(CarGrade instance);
    partial void DeleteCarGrade(CarGrade instance);
    partial void InsertCarOption(CarOption instance);
    partial void UpdateCarOption(CarOption instance);
    partial void DeleteCarOption(CarOption instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCoupon(Coupon instance);
    partial void UpdateCoupon(Coupon instance);
    partial void DeleteCoupon(Coupon instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerClaim(CustomerClaim instance);
    partial void UpdateCustomerClaim(CustomerClaim instance);
    partial void DeleteCustomerClaim(CustomerClaim instance);
    partial void InsertCustomerClaimable(CustomerClaimable instance);
    partial void UpdateCustomerClaimable(CustomerClaimable instance);
    partial void DeleteCustomerClaimable(CustomerClaimable instance);
    partial void InsertCustomerReceiption(CustomerReceiption instance);
    partial void UpdateCustomerReceiption(CustomerReceiption instance);
    partial void DeleteCustomerReceiption(CustomerReceiption instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertInstallableOption(InstallableOption instance);
    partial void UpdateInstallableOption(InstallableOption instance);
    partial void DeleteInstallableOption(InstallableOption instance);
    partial void InsertInstallableParts(InstallableParts instance);
    partial void UpdateInstallableParts(InstallableParts instance);
    partial void DeleteInstallableParts(InstallableParts instance);
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertMaker(Maker instance);
    partial void UpdateMaker(Maker instance);
    partial void DeleteMaker(Maker instance);
    partial void InsertMenuControl(MenuControl instance);
    partial void UpdateMenuControl(MenuControl instance);
    partial void DeleteMenuControl(MenuControl instance);
    partial void InsertMenuGroup(MenuGroup instance);
    partial void UpdateMenuGroup(MenuGroup instance);
    partial void DeleteMenuGroup(MenuGroup instance);
    partial void InsertOffice(Office instance);
    partial void UpdateOffice(Office instance);
    partial void DeleteOffice(Office instance);
    partial void InsertParts(Parts instance);
    partial void UpdateParts(Parts instance);
    partial void DeleteParts(Parts instance);
    partial void InsertPartsLocation(PartsLocation instance);
    partial void UpdatePartsLocation(PartsLocation instance);
    partial void DeletePartsLocation(PartsLocation instance);
    partial void InsertPaymentKind(PaymentKind instance);
    partial void UpdatePaymentKind(PaymentKind instance);
    partial void DeletePaymentKind(PaymentKind instance);
    partial void InsertPaymentPlan(PaymentPlan instance);
    partial void UpdatePaymentPlan(PaymentPlan instance);
    partial void DeletePaymentPlan(PaymentPlan instance);
    partial void InsertQuoteMessage(QuoteMessage instance);
    partial void UpdateQuoteMessage(QuoteMessage instance);
    partial void DeleteQuoteMessage(QuoteMessage instance);
    partial void InsertSalesCar(SalesCar instance);
    partial void UpdateSalesCar(SalesCar instance);
    partial void DeleteSalesCar(SalesCar instance);
    partial void InsertSecurityRole(SecurityRole instance);
    partial void UpdateSecurityRole(SecurityRole instance);
    partial void DeleteSecurityRole(SecurityRole instance);
    partial void InsertServiceCost(ServiceCost instance);
    partial void UpdateServiceCost(ServiceCost instance);
    partial void DeleteServiceCost(ServiceCost instance);
    partial void InsertServiceMenu(ServiceMenu instance);
    partial void UpdateServiceMenu(ServiceMenu instance);
    partial void DeleteServiceMenu(ServiceMenu instance);
    partial void InsertServiceWork(ServiceWork instance);
    partial void UpdateServiceWork(ServiceWork instance);
    partial void DeleteServiceWork(ServiceWork instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertTransportBranchOffice(TransportBranchOffice instance);
    partial void UpdateTransportBranchOffice(TransportBranchOffice instance);
    partial void DeleteTransportBranchOffice(TransportBranchOffice instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertCarSalesLine(CarSalesLine instance);
    partial void UpdateCarSalesLine(CarSalesLine instance);
    partial void DeleteCarSalesLine(CarSalesLine instance);
    partial void Insertc_Allowance(c_Allowance instance);
    partial void Updatec_Allowance(c_Allowance instance);
    partial void Deletec_Allowance(c_Allowance instance);
    partial void Insertc_CarOwner(c_CarOwner instance);
    partial void Updatec_CarOwner(c_CarOwner instance);
    partial void Deletec_CarOwner(c_CarOwner instance);
    partial void Insertc_ColorCategory(c_ColorCategory instance);
    partial void Updatec_ColorCategory(c_ColorCategory instance);
    partial void Deletec_ColorCategory(c_ColorCategory instance);
    partial void Insertc_CustomerClaimType(c_CustomerClaimType instance);
    partial void Updatec_CustomerClaimType(c_CustomerClaimType instance);
    partial void Deletec_CustomerClaimType(c_CustomerClaimType instance);
    partial void Insertc_CustomerKind(c_CustomerKind instance);
    partial void Updatec_CustomerKind(c_CustomerKind instance);
    partial void Deletec_CustomerKind(c_CustomerKind instance);
    partial void Insertc_CustomerRank(c_CustomerRank instance);
    partial void Updatec_CustomerRank(c_CustomerRank instance);
    partial void Deletec_CustomerRank(c_CustomerRank instance);
    partial void Insertc_CustomerType(c_CustomerType instance);
    partial void Updatec_CustomerType(c_CustomerType instance);
    partial void Deletec_CustomerType(c_CustomerType instance);
    partial void Insertc_DrivingName(c_DrivingName instance);
    partial void Updatec_DrivingName(c_DrivingName instance);
    partial void Deletec_DrivingName(c_DrivingName instance);
    partial void Insertc_EmployeeType(c_EmployeeType instance);
    partial void Updatec_EmployeeType(c_EmployeeType instance);
    partial void Deletec_EmployeeType(c_EmployeeType instance);
    partial void Insertc_Occupation(c_Occupation instance);
    partial void Updatec_Occupation(c_Occupation instance);
    partial void Deletec_Occupation(c_Occupation instance);
    partial void Insertc_OnOff(c_OnOff instance);
    partial void Updatec_OnOff(c_OnOff instance);
    partial void Deletec_OnOff(c_OnOff instance);
    partial void Insertc_PaymentKind(c_PaymentKind instance);
    partial void Updatec_PaymentKind(c_PaymentKind instance);
    partial void Deletec_PaymentKind(c_PaymentKind instance);
    partial void Insertc_RoundType(c_RoundType instance);
    partial void Updatec_RoundType(c_RoundType instance);
    partial void Deletec_RoundType(c_RoundType instance);
    partial void Insertc_ServiceWorkClass1(c_ServiceWorkClass1 instance);
    partial void Updatec_ServiceWorkClass1(c_ServiceWorkClass1 instance);
    partial void Deletec_ServiceWorkClass1(c_ServiceWorkClass1 instance);
    partial void Insertc_ServiceWorkClass2(c_ServiceWorkClass2 instance);
    partial void Updatec_ServiceWorkClass2(c_ServiceWorkClass2 instance);
    partial void Deletec_ServiceWorkClass2(c_ServiceWorkClass2 instance);
    partial void Insertc_Sex(c_Sex instance);
    partial void Updatec_Sex(c_Sex instance);
    partial void Deletec_Sex(c_Sex instance);
    partial void Insertc_TransMission(c_TransMission instance);
    partial void Updatec_TransMission(c_TransMission instance);
    partial void Deletec_TransMission(c_TransMission instance);
    partial void Insertc_GenuineType(c_GenuineType instance);
    partial void Updatec_GenuineType(c_GenuineType instance);
    partial void Deletec_GenuineType(c_GenuineType instance);
    partial void Insertc_PaymentType(c_PaymentType instance);
    partial void Updatec_PaymentType(c_PaymentType instance);
    partial void Deletec_PaymentType(c_PaymentType instance);
    partial void Insertc_QuoteType(c_QuoteType instance);
    partial void Updatec_QuoteType(c_QuoteType instance);
    partial void Deletec_QuoteType(c_QuoteType instance);
    partial void Insertc_NewUsedType(c_NewUsedType instance);
    partial void Updatec_NewUsedType(c_NewUsedType instance);
    partial void Deletec_NewUsedType(c_NewUsedType instance);
    partial void Insertc_MileageUnit(c_MileageUnit instance);
    partial void Updatec_MileageUnit(c_MileageUnit instance);
    partial void Deletec_MileageUnit(c_MileageUnit instance);
    partial void Insertc_CarStatus(c_CarStatus instance);
    partial void Updatec_CarStatus(c_CarStatus instance);
    partial void Deletec_CarStatus(c_CarStatus instance);
    partial void Insertc_UsageType(c_UsageType instance);
    partial void Updatec_UsageType(c_UsageType instance);
    partial void Deletec_UsageType(c_UsageType instance);
    partial void Insertc_Usage(c_Usage instance);
    partial void Updatec_Usage(c_Usage instance);
    partial void Deletec_Usage(c_Usage instance);
    partial void Insertc_CarClassification(c_CarClassification instance);
    partial void Updatec_CarClassification(c_CarClassification instance);
    partial void Deletec_CarClassification(c_CarClassification instance);
    partial void Insertc_Figure(c_Figure instance);
    partial void Updatec_Figure(c_Figure instance);
    partial void Deletec_Figure(c_Figure instance);
    partial void Insertc_Import(c_Import instance);
    partial void Updatec_Import(c_Import instance);
    partial void Deletec_Import(c_Import instance);
    partial void Insertc_Recycle(c_Recycle instance);
    partial void Updatec_Recycle(c_Recycle instance);
    partial void Deletec_Recycle(c_Recycle instance);
    partial void Insertc_Steering(c_Steering instance);
    partial void Updatec_Steering(c_Steering instance);
    partial void Deletec_Steering(c_Steering instance);
    partial void Insertc_Light(c_Light instance);
    partial void Updatec_Light(c_Light instance);
    partial void Deletec_Light(c_Light instance);
    partial void Insertc_Sr(c_Sr instance);
    partial void Updatec_Sr(c_Sr instance);
    partial void Deletec_Sr(c_Sr instance);
    partial void Insertc_NaviEquipment(c_NaviEquipment instance);
    partial void Updatec_NaviEquipment(c_NaviEquipment instance);
    partial void Deletec_NaviEquipment(c_NaviEquipment instance);
    partial void Insertc_NaviDashboard(c_NaviDashboard instance);
    partial void Updatec_NaviDashboard(c_NaviDashboard instance);
    partial void Deletec_NaviDashboard(c_NaviDashboard instance);
    partial void Insertc_SeatType(c_SeatType instance);
    partial void Updatec_SeatType(c_SeatType instance);
    partial void Deletec_SeatType(c_SeatType instance);
    partial void Insertc_DeclarationType(c_DeclarationType instance);
    partial void Updatec_DeclarationType(c_DeclarationType instance);
    partial void Deletec_DeclarationType(c_DeclarationType instance);
    partial void Insertc_AcquisitionReason(c_AcquisitionReason instance);
    partial void Updatec_AcquisitionReason(c_AcquisitionReason instance);
    partial void Deletec_AcquisitionReason(c_AcquisitionReason instance);
    partial void Insertc_TaxationType(c_TaxationType instance);
    partial void Updatec_TaxationType(c_TaxationType instance);
    partial void Deletec_TaxationType(c_TaxationType instance);
    partial void InsertCarSalesHeader(CarSalesHeader instance);
    partial void UpdateCarSalesHeader(CarSalesHeader instance);
    partial void DeleteCarSalesHeader(CarSalesHeader instance);
    partial void Insertc_SalesOrderStatus(c_SalesOrderStatus instance);
    partial void Updatec_SalesOrderStatus(c_SalesOrderStatus instance);
    partial void Deletec_SalesOrderStatus(c_SalesOrderStatus instance);
    partial void InsertSupplierPayment(SupplierPayment instance);
    partial void UpdateSupplierPayment(SupplierPayment instance);
    partial void DeleteSupplierPayment(SupplierPayment instance);
    partial void Insertc_SupplierPaymentType(c_SupplierPaymentType instance);
    partial void Updatec_SupplierPaymentType(c_SupplierPaymentType instance);
    partial void Deletec_SupplierPaymentType(c_SupplierPaymentType instance);
    partial void Insertc_PaymentType2(c_PaymentType2 instance);
    partial void Updatec_PaymentType2(c_PaymentType2 instance);
    partial void Deletec_PaymentType2(c_PaymentType2 instance);
    partial void InsertCar(Car instance);
    partial void UpdateCar(Car instance);
    partial void DeleteCar(Car instance);
    partial void Insertc_SalesType(c_SalesType instance);
    partial void Updatec_SalesType(c_SalesType instance);
    partial void Deletec_SalesType(c_SalesType instance);
    partial void Insertc_RegistrationType(c_RegistrationType instance);
    partial void Updatec_RegistrationType(c_RegistrationType instance);
    partial void Deletec_RegistrationType(c_RegistrationType instance);
    partial void InsertSerialNumber(SerialNumber instance);
    partial void UpdateSerialNumber(SerialNumber instance);
    partial void DeleteSerialNumber(SerialNumber instance);
    partial void Insertc_OptionType(c_OptionType instance);
    partial void Updatec_OptionType(c_OptionType instance);
    partial void Deletec_OptionType(c_OptionType instance);
    partial void InsertCarSalesPayment(CarSalesPayment instance);
    partial void UpdateCarSalesPayment(CarSalesPayment instance);
    partial void DeleteCarSalesPayment(CarSalesPayment instance);
    partial void Insertc_CarLiabilityInsuranceType(c_CarLiabilityInsuranceType instance);
    partial void Updatec_CarLiabilityInsuranceType(c_CarLiabilityInsuranceType instance);
    partial void Deletec_CarLiabilityInsuranceType(c_CarLiabilityInsuranceType instance);
    partial void Insertc_OwnershipReservation(c_OwnershipReservation instance);
    partial void Updatec_OwnershipReservation(c_OwnershipReservation instance);
    partial void Deletec_OwnershipReservation(c_OwnershipReservation instance);
    partial void Insertc_VoluntaryInsuranceType(c_VoluntaryInsuranceType instance);
    partial void Updatec_VoluntaryInsuranceType(c_VoluntaryInsuranceType instance);
    partial void Deletec_VoluntaryInsuranceType(c_VoluntaryInsuranceType instance);
    partial void Insertc_ReceiptionState(c_ReceiptionState instance);
    partial void Updatec_ReceiptionState(c_ReceiptionState instance);
    partial void Deletec_ReceiptionState(c_ReceiptionState instance);
    partial void Insertc_ReceiptionType(c_ReceiptionType instance);
    partial void Updatec_ReceiptionType(c_ReceiptionType instance);
    partial void Deletec_ReceiptionType(c_ReceiptionType instance);
    partial void Insertc_VisitOpportunity(c_VisitOpportunity instance);
    partial void Updatec_VisitOpportunity(c_VisitOpportunity instance);
    partial void Deletec_VisitOpportunity(c_VisitOpportunity instance);
    partial void Insertc_RequestContent(c_RequestContent instance);
    partial void Updatec_RequestContent(c_RequestContent instance);
    partial void Deletec_RequestContent(c_RequestContent instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertCampaignCar(CampaignCar instance);
    partial void UpdateCampaignCar(CampaignCar instance);
    partial void DeleteCampaignCar(CampaignCar instance);
    partial void Insertc_TargetService(c_TargetService instance);
    partial void Updatec_TargetService(c_TargetService instance);
    partial void Deletec_TargetService(c_TargetService instance);
    partial void Insertc_CampaignType(c_CampaignType instance);
    partial void Updatec_CampaignType(c_CampaignType instance);
    partial void Deletec_CampaignType(c_CampaignType instance);
    partial void InsertCarPurchaseOrder(CarPurchaseOrder instance);
    partial void UpdateCarPurchaseOrder(CarPurchaseOrder instance);
    partial void DeleteCarPurchaseOrder(CarPurchaseOrder instance);
    partial void InsertServiceRequest(ServiceRequest instance);
    partial void UpdateServiceRequest(ServiceRequest instance);
    partial void DeleteServiceRequest(ServiceRequest instance);
    partial void InsertTaskConfig(TaskConfig instance);
    partial void UpdateTaskConfig(TaskConfig instance);
    partial void DeleteTaskConfig(TaskConfig instance);
    partial void InsertTaskRole(TaskRole instance);
    partial void UpdateTaskRole(TaskRole instance);
    partial void DeleteTaskRole(TaskRole instance);
    partial void Insertc_SecurityLevel(c_SecurityLevel instance);
    partial void Updatec_SecurityLevel(c_SecurityLevel instance);
    partial void Deletec_SecurityLevel(c_SecurityLevel instance);
    partial void Insertc_Purpose(c_Purpose instance);
    partial void Updatec_Purpose(c_Purpose instance);
    partial void Deletec_Purpose(c_Purpose instance);
    partial void Insertc_KnowOpportunity(c_KnowOpportunity instance);
    partial void Updatec_KnowOpportunity(c_KnowOpportunity instance);
    partial void Deletec_KnowOpportunity(c_KnowOpportunity instance);
    partial void Insertc_Demand(c_Demand instance);
    partial void Updatec_Demand(c_Demand instance);
    partial void Deletec_Demand(c_Demand instance);
    partial void Insertc_AttractivePoint(c_AttractivePoint instance);
    partial void Updatec_AttractivePoint(c_AttractivePoint instance);
    partial void Deletec_AttractivePoint(c_AttractivePoint instance);
    partial void Insertc_TaskType(c_TaskType instance);
    partial void Updatec_TaskType(c_TaskType instance);
    partial void Deletec_TaskType(c_TaskType instance);
    partial void Insertc_PurchaseStatus(c_PurchaseStatus instance);
    partial void Updatec_PurchaseStatus(c_PurchaseStatus instance);
    partial void Deletec_PurchaseStatus(c_PurchaseStatus instance);
    partial void InsertCarAppraisal(CarAppraisal instance);
    partial void UpdateCarAppraisal(CarAppraisal instance);
    partial void DeleteCarAppraisal(CarAppraisal instance);
    partial void InsertCarPurchase(CarPurchase instance);
    partial void UpdateCarPurchase(CarPurchase instance);
    partial void DeleteCarPurchase(CarPurchase instance);
    partial void InsertServiceSalesHeader(ServiceSalesHeader instance);
    partial void UpdateServiceSalesHeader(ServiceSalesHeader instance);
    partial void DeleteServiceSalesHeader(ServiceSalesHeader instance);
    partial void InsertServiceSalesLine(ServiceSalesLine instance);
    partial void UpdateServiceSalesLine(ServiceSalesLine instance);
    partial void DeleteServiceSalesLine(ServiceSalesLine instance);
    partial void InsertServiceSalesPayment(ServiceSalesPayment instance);
    partial void UpdateServiceSalesPayment(ServiceSalesPayment instance);
    partial void DeleteServiceSalesPayment(ServiceSalesPayment instance);
    partial void Insertc_WorkType(c_WorkType instance);
    partial void Updatec_WorkType(c_WorkType instance);
    partial void Deletec_WorkType(c_WorkType instance);
    partial void Insertc_ServiceType(c_ServiceType instance);
    partial void Updatec_ServiceType(c_ServiceType instance);
    partial void Deletec_ServiceType(c_ServiceType instance);
    partial void Insertc_StockStatus(c_StockStatus instance);
    partial void Updatec_StockStatus(c_StockStatus instance);
    partial void Deletec_StockStatus(c_StockStatus instance);
    partial void Insertc_ServiceOrderStatus(c_ServiceOrderStatus instance);
    partial void Updatec_ServiceOrderStatus(c_ServiceOrderStatus instance);
    partial void Deletec_ServiceOrderStatus(c_ServiceOrderStatus instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertServiceRequestLine(ServiceRequestLine instance);
    partial void UpdateServiceRequestLine(ServiceRequestLine instance);
    partial void DeleteServiceRequestLine(ServiceRequestLine instance);
    partial void InsertJournal(Journal instance);
    partial void UpdateJournal(Journal instance);
    partial void DeleteJournal(Journal instance);
    partial void Insertc_AccountType(c_AccountType instance);
    partial void Updatec_AccountType(c_AccountType instance);
    partial void Deletec_AccountType(c_AccountType instance);
    partial void Insertc_JournalType(c_JournalType instance);
    partial void Updatec_JournalType(c_JournalType instance);
    partial void Deletec_JournalType(c_JournalType instance);
    partial void Insertc_OwnershipChange(c_OwnershipChange instance);
    partial void Updatec_OwnershipChange(c_OwnershipChange instance);
    partial void Deletec_OwnershipChange(c_OwnershipChange instance);
    partial void InsertPartsStock(PartsStock instance);
    partial void UpdatePartsStock(PartsStock instance);
    partial void DeletePartsStock(PartsStock instance);
    partial void Insertc_LocationType(c_LocationType instance);
    partial void Updatec_LocationType(c_LocationType instance);
    partial void Deletec_LocationType(c_LocationType instance);
    partial void InsertCashBalance(CashBalance instance);
    partial void UpdateCashBalance(CashBalance instance);
    partial void DeleteCashBalance(CashBalance instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void Insertc_TransferType(c_TransferType instance);
    partial void Updatec_TransferType(c_TransferType instance);
    partial void Deletec_TransferType(c_TransferType instance);
    partial void Insertc_OrderType(c_OrderType instance);
    partial void Updatec_OrderType(c_OrderType instance);
    partial void Deletec_OrderType(c_OrderType instance);
    partial void InsertPartsPurchaseOrder(PartsPurchaseOrder instance);
    partial void UpdatePartsPurchaseOrder(PartsPurchaseOrder instance);
    partial void DeletePartsPurchaseOrder(PartsPurchaseOrder instance);
    partial void Insertc_PurchaseOrderStatus(c_PurchaseOrderStatus instance);
    partial void Updatec_PurchaseOrderStatus(c_PurchaseOrderStatus instance);
    partial void Deletec_PurchaseOrderStatus(c_PurchaseOrderStatus instance);
    partial void InsertPartsPurchase(PartsPurchase instance);
    partial void UpdatePartsPurchase(PartsPurchase instance);
    partial void DeletePartsPurchase(PartsPurchase instance);
    partial void Insertc_PurchaseType(c_PurchaseType instance);
    partial void Updatec_PurchaseType(c_PurchaseType instance);
    partial void Deletec_PurchaseType(c_PurchaseType instance);
    partial void Insertc_DepositKind(c_DepositKind instance);
    partial void Updatec_DepositKind(c_DepositKind instance);
    partial void Deletec_DepositKind(c_DepositKind instance);
    partial void InsertReceiptPlan(ReceiptPlan instance);
    partial void UpdateReceiptPlan(ReceiptPlan instance);
    partial void DeleteReceiptPlan(ReceiptPlan instance);
    partial void Insertc_ExpireType(c_ExpireType instance);
    partial void Updatec_ExpireType(c_ExpireType instance);
    partial void Deletec_ExpireType(c_ExpireType instance);
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void Insertc_DocumentComplete(c_DocumentComplete instance);
    partial void Updatec_DocumentComplete(c_DocumentComplete instance);
    partial void Deletec_DocumentComplete(c_DocumentComplete instance);
    partial void InsertCarSalesReport(CarSalesReport instance);
    partial void UpdateCarSalesReport(CarSalesReport instance);
    partial void DeleteCarSalesReport(CarSalesReport instance);
    partial void Insertc_InventoryStatus(c_InventoryStatus instance);
    partial void Updatec_InventoryStatus(c_InventoryStatus instance);
    partial void Deletec_InventoryStatus(c_InventoryStatus instance);
    partial void Insertc_InventoryType(c_InventoryType instance);
    partial void Updatec_InventoryType(c_InventoryType instance);
    partial void Deletec_InventoryType(c_InventoryType instance);
    partial void InsertConfigurationSetting(ConfigurationSetting instance);
    partial void UpdateConfigurationSetting(ConfigurationSetting instance);
    partial void DeleteConfigurationSetting(ConfigurationSetting instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertInventoryStock(InventoryStock instance);
    partial void UpdateInventoryStock(InventoryStock instance);
    partial void DeleteInventoryStock(InventoryStock instance);
    partial void InsertInventorySchedule(InventorySchedule instance);
    partial void UpdateInventorySchedule(InventorySchedule instance);
    partial void DeleteInventorySchedule(InventorySchedule instance);
    partial void InsertSetMenu(SetMenu instance);
    partial void UpdateSetMenu(SetMenu instance);
    partial void DeleteSetMenu(SetMenu instance);
    partial void InsertSetMenuList(SetMenuList instance);
    partial void UpdateSetMenuList(SetMenuList instance);
    partial void DeleteSetMenuList(SetMenuList instance);
    partial void InsertCarAcquisitionTax(CarAcquisitionTax instance);
    partial void UpdateCarAcquisitionTax(CarAcquisitionTax instance);
    partial void DeleteCarAcquisitionTax(CarAcquisitionTax instance);
    partial void InsertCarWeightTax(CarWeightTax instance);
    partial void UpdateCarWeightTax(CarWeightTax instance);
    partial void DeleteCarWeightTax(CarWeightTax instance);
    partial void InsertCarLiabilityInsurance(CarLiabilityInsurance instance);
    partial void UpdateCarLiabilityInsurance(CarLiabilityInsurance instance);
    partial void DeleteCarLiabilityInsurance(CarLiabilityInsurance instance);
    partial void Insertc_VehicleType(c_VehicleType instance);
    partial void Updatec_VehicleType(c_VehicleType instance);
    partial void Deletec_VehicleType(c_VehicleType instance);
    partial void InsertCarTax(CarTax instance);
    partial void UpdateCarTax(CarTax instance);
    partial void DeleteCarTax(CarTax instance);
    partial void Insertc_CorporationType(c_CorporationType instance);
    partial void Updatec_CorporationType(c_CorporationType instance);
    partial void Deletec_CorporationType(c_CorporationType instance);
    partial void Insertc_RegistMonth(c_RegistMonth instance);
    partial void Updatec_RegistMonth(c_RegistMonth instance);
    partial void Deletec_RegistMonth(c_RegistMonth instance);
    partial void Insertc_Firm(c_Firm instance);
    partial void Updatec_Firm(c_Firm instance);
    partial void Deletec_Firm(c_Firm instance);
    partial void Insertc_EraseRegist(c_EraseRegist instance);
    partial void Updatec_EraseRegist(c_EraseRegist instance);
    partial void Deletec_EraseRegist(c_EraseRegist instance);
    partial void Insertc_AccountUsageType(c_AccountUsageType instance);
    partial void Updatec_AccountUsageType(c_AccountUsageType instance);
    partial void Deletec_AccountUsageType(c_AccountUsageType instance);
    partial void InsertPartsAverageCost(PartsAverageCost instance);
    partial void UpdatePartsAverageCost(PartsAverageCost instance);
    partial void DeletePartsAverageCost(PartsAverageCost instance);
    partial void InsertCashAccount(CashAccount instance);
    partial void UpdateCashAccount(CashAccount instance);
    partial void DeleteCashAccount(CashAccount instance);
    partial void InsertCustomerUpdateLog(CustomerUpdateLog instance);
    partial void UpdateCustomerUpdateLog(CustomerUpdateLog instance);
    partial void DeleteCustomerUpdateLog(CustomerUpdateLog instance);
    partial void Insertc_CarPurchaseType(c_CarPurchaseType instance);
    partial void Updatec_CarPurchaseType(c_CarPurchaseType instance);
    partial void Deletec_CarPurchaseType(c_CarPurchaseType instance);
    partial void Insertc_ReceiptType(c_ReceiptType instance);
    partial void Updatec_ReceiptType(c_ReceiptType instance);
    partial void Deletec_ReceiptType(c_ReceiptType instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void Insertc_Fuel(c_Fuel instance);
    partial void Updatec_Fuel(c_Fuel instance);
    partial void Deletec_Fuel(c_Fuel instance);
    partial void Insertc_BusinessType(c_BusinessType instance);
    partial void Updatec_BusinessType(c_BusinessType instance);
    partial void Deletec_BusinessType(c_BusinessType instance);
    partial void InsertCarAvailableColor(CarAvailableColor instance);
    partial void UpdateCarAvailableColor(CarAvailableColor instance);
    partial void DeleteCarAvailableColor(CarAvailableColor instance);
    partial void Insertc_OwnershipChangeType(c_OwnershipChangeType instance);
    partial void Updatec_OwnershipChangeType(c_OwnershipChangeType instance);
    partial void Deletec_OwnershipChangeType(c_OwnershipChangeType instance);
    partial void InsertAkakuroReason(AkakuroReason instance);
    partial void UpdateAkakuroReason(AkakuroReason instance);
    partial void DeleteAkakuroReason(AkakuroReason instance);
    partial void InsertCustomerDM(CustomerDM instance);
    partial void UpdateCustomerDM(CustomerDM instance);
    partial void DeleteCustomerDM(CustomerDM instance);
    partial void InsertPrintPdfHistory(PrintPdfHistory instance);
    partial void UpdatePrintPdfHistory(PrintPdfHistory instance);
    partial void DeletePrintPdfHistory(PrintPdfHistory instance);
    partial void InsertProcessSessionControl(ProcessSessionControl instance);
    partial void UpdateProcessSessionControl(ProcessSessionControl instance);
    partial void DeleteProcessSessionControl(ProcessSessionControl instance);
    partial void InsertConsumptionTax(ConsumptionTax instance);
    partial void UpdateConsumptionTax(ConsumptionTax instance);
    partial void DeleteConsumptionTax(ConsumptionTax instance);
    partial void Insertc_Needed(c_Needed instance);
    partial void Updatec_Needed(c_Needed instance);
    partial void Deletec_Needed(c_Needed instance);
    partial void Insertc_CarStockDataType(c_CarStockDataType instance);
    partial void Updatec_CarStockDataType(c_CarStockDataType instance);
    partial void Deletec_CarStockDataType(c_CarStockDataType instance);
    partial void InsertCloseMonthControl(CloseMonthControl instance);
    partial void UpdateCloseMonthControl(CloseMonthControl instance);
    partial void DeleteCloseMonthControl(CloseMonthControl instance);
    partial void Insertc_CloseType(c_CloseType instance);
    partial void Updatec_CloseType(c_CloseType instance);
    partial void Deletec_CloseType(c_CloseType instance);
    partial void Insertc_Month(c_Month instance);
    partial void Updatec_Month(c_Month instance);
    partial void Deletec_Month(c_Month instance);
    partial void Insertc_Year(c_Year instance);
    partial void Updatec_Year(c_Year instance);
    partial void Deletec_Year(c_Year instance);
    partial void InsertPartsPurchaseHistory(PartsPurchaseHistory instance);
    partial void UpdatePartsPurchaseHistory(PartsPurchaseHistory instance);
    partial void DeletePartsPurchaseHistory(PartsPurchaseHistory instance);
    partial void InsertPartsDiscountRate(PartsDiscountRate instance);
    partial void UpdatePartsDiscountRate(PartsDiscountRate instance);
    partial void DeletePartsDiscountRate(PartsDiscountRate instance);
    partial void Insertc_CodeName(c_CodeName instance);
    partial void Updatec_CodeName(c_CodeName instance);
    partial void Deletec_CodeName(c_CodeName instance);
    partial void InsertBackGroundDemoCar(BackGroundDemoCar instance);
    partial void UpdateBackGroundDemoCar(BackGroundDemoCar instance);
    partial void DeleteBackGroundDemoCar(BackGroundDemoCar instance);
    partial void InsertInventoryMonthControlParts(InventoryMonthControlParts instance);
    partial void UpdateInventoryMonthControlParts(InventoryMonthControlParts instance);
    partial void DeleteInventoryMonthControlParts(InventoryMonthControlParts instance);
    partial void InsertModificationControl(ModificationControl instance);
    partial void UpdateModificationControl(ModificationControl instance);
    partial void DeleteModificationControl(ModificationControl instance);
    partial void InsertModifiedReason(ModifiedReason instance);
    partial void UpdateModifiedReason(ModifiedReason instance);
    partial void DeleteModifiedReason(ModifiedReason instance);
    partial void InsertCloseMonthControlCarStock(CloseMonthControlCarStock instance);
    partial void UpdateCloseMonthControlCarStock(CloseMonthControlCarStock instance);
    partial void DeleteCloseMonthControlCarStock(CloseMonthControlCarStock instance);
    partial void Insertc_CloseStatus(c_CloseStatus instance);
    partial void Updatec_CloseStatus(c_CloseStatus instance);
    partial void Deletec_CloseStatus(c_CloseStatus instance);
    partial void InsertPartsInventoryWorkingDate(PartsInventoryWorkingDate instance);
    partial void UpdatePartsInventoryWorkingDate(PartsInventoryWorkingDate instance);
    partial void DeletePartsInventoryWorkingDate(PartsInventoryWorkingDate instance);
    partial void InsertInventoryMonthControlPartsBalance(InventoryMonthControlPartsBalance instance);
    partial void UpdateInventoryMonthControlPartsBalance(InventoryMonthControlPartsBalance instance);
    partial void DeleteInventoryMonthControlPartsBalance(InventoryMonthControlPartsBalance instance);
    partial void InsertAccountsReceivable(AccountsReceivable instance);
    partial void UpdateAccountsReceivable(AccountsReceivable instance);
    partial void DeleteAccountsReceivable(AccountsReceivable instance);
    partial void InsertReceivableDetail(ReceivableDetail instance);
    partial void UpdateReceivableDetail(ReceivableDetail instance);
    partial void DeleteReceivableDetail(ReceivableDetail instance);
    partial void InsertWarehouse(Warehouse instance);
    partial void UpdateWarehouse(Warehouse instance);
    partial void DeleteWarehouse(Warehouse instance);
    partial void InsertDepartmentWarehouse(DepartmentWarehouse instance);
    partial void UpdateDepartmentWarehouse(DepartmentWarehouse instance);
    partial void DeleteDepartmentWarehouse(DepartmentWarehouse instance);
    partial void InsertPartsBalance(PartsBalance instance);
    partial void UpdatePartsBalance(PartsBalance instance);
    partial void DeletePartsBalance(PartsBalance instance);
    partial void InsertInventoryScheduleParts(InventoryScheduleParts instance);
    partial void UpdateInventoryScheduleParts(InventoryScheduleParts instance);
    partial void DeleteInventoryScheduleParts(InventoryScheduleParts instance);
    partial void InsertAccountsReceivableCar(AccountsReceivableCar instance);
    partial void UpdateAccountsReceivableCar(AccountsReceivableCar instance);
    partial void DeleteAccountsReceivableCar(AccountsReceivableCar instance);
    partial void InsertInventoryMonthControlCar(InventoryMonthControlCar instance);
    partial void UpdateInventoryMonthControlCar(InventoryMonthControlCar instance);
    partial void DeleteInventoryMonthControlCar(InventoryMonthControlCar instance);
    partial void InsertInventoryScheduleCar(InventoryScheduleCar instance);
    partial void UpdateInventoryScheduleCar(InventoryScheduleCar instance);
    partial void DeleteInventoryScheduleCar(InventoryScheduleCar instance);
    partial void InsertInventoryStockCar(InventoryStockCar instance);
    partial void UpdateInventoryStockCar(InventoryStockCar instance);
    partial void DeleteInventoryStockCar(InventoryStockCar instance);
    partial void InsertW_JournalChange(W_JournalChange instance);
    partial void UpdateW_JournalChange(W_JournalChange instance);
    partial void DeleteW_JournalChange(W_JournalChange instance);
    partial void InsertPartsMovingAverageCost(PartsMovingAverageCost instance);
    partial void UpdatePartsMovingAverageCost(PartsMovingAverageCost instance);
    partial void DeletePartsMovingAverageCost(PartsMovingAverageCost instance);
    partial void InsertCarFixedAssets(CarFixedAssets instance);
    partial void UpdateCarFixedAssets(CarFixedAssets instance);
    partial void DeleteCarFixedAssets(CarFixedAssets instance);
    partial void InsertDepreciationRate(DepreciationRate instance);
    partial void UpdateDepreciationRate(DepreciationRate instance);
    partial void DeleteDepreciationRate(DepreciationRate instance);
    partial void InsertCarStock(CarStock instance);
    partial void UpdateCarStock(CarStock instance);
    partial void DeleteCarStock(CarStock instance);
    partial void InsertSalesCarHistory(SalesCarHistory instance);
    partial void UpdateSalesCarHistory(SalesCarHistory instance);
    partial void DeleteSalesCarHistory(SalesCarHistory instance);
    partial void InsertLogo(Logo instance);
    partial void UpdateLogo(Logo instance);
    partial void DeleteLogo(Logo instance);
    partial void InsertDocumentList(DocumentList instance);
    partial void UpdateDocumentList(DocumentList instance);
    partial void DeleteDocumentList(DocumentList instance);
    partial void InsertServiceWorkCustomerClaim(ServiceWorkCustomerClaim instance);
    partial void UpdateServiceWorkCustomerClaim(ServiceWorkCustomerClaim instance);
    partial void DeleteServiceWorkCustomerClaim(ServiceWorkCustomerClaim instance);
    partial void InsertPartsMovingAverageCostHistory(PartsMovingAverageCostHistory instance);
    partial void UpdatePartsMovingAverageCostHistory(PartsMovingAverageCostHistory instance);
    partial void DeletePartsMovingAverageCostHistory(PartsMovingAverageCostHistory instance);
    partial void InsertEmployeeHistory(EmployeeHistory instance);
    partial void UpdateEmployeeHistory(EmployeeHistory instance);
    partial void DeleteEmployeeHistory(EmployeeHistory instance);
    partial void InsertEPDiscountTax(EPDiscountTax instance);
    partial void UpdateEPDiscountTax(EPDiscountTax instance);
    partial void DeleteEPDiscountTax(EPDiscountTax instance);
    partial void InsertAccountByAmountType(AccountByAmountType instance);
    partial void UpdateAccountByAmountType(AccountByAmountType instance);
    partial void DeleteAccountByAmountType(AccountByAmountType instance);
    partial void InsertCostArea(CostArea instance);
    partial void UpdateCostArea(CostArea instance);
    partial void DeleteCostArea(CostArea instance);
    partial void InsertServiceReportByCutomerClaimType(ServiceReportByCutomerClaimType instance);
    partial void UpdateServiceReportByCutomerClaimType(ServiceReportByCutomerClaimType instance);
    partial void DeleteServiceReportByCutomerClaimType(ServiceReportByCutomerClaimType instance);
    partial void InsertInvoiceConsumptionTax(InvoiceConsumptionTax instance);
    partial void UpdateInvoiceConsumptionTax(InvoiceConsumptionTax instance);
    partial void DeleteInvoiceConsumptionTax(InvoiceConsumptionTax instance);
    #endregion
		
		public CrmsLinqDataContext() : 
				base(global::CrmsDao.Properties.Settings.Default.CRMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CrmsLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmsLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmsLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrmsLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ApplicationRole> ApplicationRole
		{
			get
			{
				return this.GetTable<ApplicationRole>();
			}
		}
		
		public System.Data.Linq.Table<Area> Area
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brand
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<CarClass> CarClass
		{
			get
			{
				return this.GetTable<CarClass>();
			}
		}
		
		public System.Data.Linq.Table<CarColor> CarColor
		{
			get
			{
				return this.GetTable<CarColor>();
			}
		}
		
		public System.Data.Linq.Table<CarGrade> CarGrade
		{
			get
			{
				return this.GetTable<CarGrade>();
			}
		}
		
		public System.Data.Linq.Table<CarOption> CarOption
		{
			get
			{
				return this.GetTable<CarOption>();
			}
		}
		
		public System.Data.Linq.Table<Company> Company
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Coupon> Coupon
		{
			get
			{
				return this.GetTable<Coupon>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerClaim> CustomerClaim
		{
			get
			{
				return this.GetTable<CustomerClaim>();
			}
		}
		
		public System.Data.Linq.Table<CustomerClaimable> CustomerClaimable
		{
			get
			{
				return this.GetTable<CustomerClaimable>();
			}
		}
		
		public System.Data.Linq.Table<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this.GetTable<CustomerReceiption>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<InstallableOption> InstallableOption
		{
			get
			{
				return this.GetTable<InstallableOption>();
			}
		}
		
		public System.Data.Linq.Table<InstallableParts> InstallableParts
		{
			get
			{
				return this.GetTable<InstallableParts>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loan
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Maker> Maker
		{
			get
			{
				return this.GetTable<Maker>();
			}
		}
		
		public System.Data.Linq.Table<MenuControl> MenuControl
		{
			get
			{
				return this.GetTable<MenuControl>();
			}
		}
		
		public System.Data.Linq.Table<MenuGroup> MenuGroup
		{
			get
			{
				return this.GetTable<MenuGroup>();
			}
		}
		
		public System.Data.Linq.Table<Office> Office
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<Parts> Parts
		{
			get
			{
				return this.GetTable<Parts>();
			}
		}
		
		public System.Data.Linq.Table<PartsLocation> PartsLocation
		{
			get
			{
				return this.GetTable<PartsLocation>();
			}
		}
		
		public System.Data.Linq.Table<PaymentKind> PaymentKind
		{
			get
			{
				return this.GetTable<PaymentKind>();
			}
		}
		
		public System.Data.Linq.Table<PaymentPlan> PaymentPlan
		{
			get
			{
				return this.GetTable<PaymentPlan>();
			}
		}
		
		public System.Data.Linq.Table<QuoteMessage> QuoteMessage
		{
			get
			{
				return this.GetTable<QuoteMessage>();
			}
		}
		
		public System.Data.Linq.Table<SalesCar> SalesCar
		{
			get
			{
				return this.GetTable<SalesCar>();
			}
		}
		
		public System.Data.Linq.Table<SecurityRole> SecurityRole
		{
			get
			{
				return this.GetTable<SecurityRole>();
			}
		}
		
		public System.Data.Linq.Table<ServiceCost> ServiceCost
		{
			get
			{
				return this.GetTable<ServiceCost>();
			}
		}
		
		public System.Data.Linq.Table<ServiceMenu> ServiceMenu
		{
			get
			{
				return this.GetTable<ServiceMenu>();
			}
		}
		
		public System.Data.Linq.Table<ServiceWork> ServiceWork
		{
			get
			{
				return this.GetTable<ServiceWork>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Supplier
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<TransportBranchOffice> TransportBranchOffice
		{
			get
			{
				return this.GetTable<TransportBranchOffice>();
			}
		}
		
		public System.Data.Linq.Table<Task> Task
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<CarSalesLine> CarSalesLine
		{
			get
			{
				return this.GetTable<CarSalesLine>();
			}
		}
		
		public System.Data.Linq.Table<c_Allowance> c_Allowance
		{
			get
			{
				return this.GetTable<c_Allowance>();
			}
		}
		
		public System.Data.Linq.Table<c_CarOwner> c_CarOwner
		{
			get
			{
				return this.GetTable<c_CarOwner>();
			}
		}
		
		public System.Data.Linq.Table<c_ColorCategory> c_ColorCategory
		{
			get
			{
				return this.GetTable<c_ColorCategory>();
			}
		}
		
		public System.Data.Linq.Table<c_CustomerClaimType> c_CustomerClaimType
		{
			get
			{
				return this.GetTable<c_CustomerClaimType>();
			}
		}
		
		public System.Data.Linq.Table<c_CustomerKind> c_CustomerKind
		{
			get
			{
				return this.GetTable<c_CustomerKind>();
			}
		}
		
		public System.Data.Linq.Table<c_CustomerRank> c_CustomerRank
		{
			get
			{
				return this.GetTable<c_CustomerRank>();
			}
		}
		
		public System.Data.Linq.Table<c_CustomerType> c_CustomerType
		{
			get
			{
				return this.GetTable<c_CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<c_DrivingName> c_DrivingName
		{
			get
			{
				return this.GetTable<c_DrivingName>();
			}
		}
		
		public System.Data.Linq.Table<c_EmployeeType> c_EmployeeType
		{
			get
			{
				return this.GetTable<c_EmployeeType>();
			}
		}
		
		public System.Data.Linq.Table<c_Occupation> c_Occupation
		{
			get
			{
				return this.GetTable<c_Occupation>();
			}
		}
		
		public System.Data.Linq.Table<c_OnOff> c_OnOff
		{
			get
			{
				return this.GetTable<c_OnOff>();
			}
		}
		
		public System.Data.Linq.Table<c_PaymentKind> c_PaymentKind
		{
			get
			{
				return this.GetTable<c_PaymentKind>();
			}
		}
		
		public System.Data.Linq.Table<c_RoundType> c_RoundType
		{
			get
			{
				return this.GetTable<c_RoundType>();
			}
		}
		
		public System.Data.Linq.Table<c_ServiceWorkClass1> c_ServiceWorkClass1
		{
			get
			{
				return this.GetTable<c_ServiceWorkClass1>();
			}
		}
		
		public System.Data.Linq.Table<c_ServiceWorkClass2> c_ServiceWorkClass2
		{
			get
			{
				return this.GetTable<c_ServiceWorkClass2>();
			}
		}
		
		public System.Data.Linq.Table<c_Sex> c_Sex
		{
			get
			{
				return this.GetTable<c_Sex>();
			}
		}
		
		public System.Data.Linq.Table<c_TransMission> c_TransMission
		{
			get
			{
				return this.GetTable<c_TransMission>();
			}
		}
		
		public System.Data.Linq.Table<c_GenuineType> c_GenuineType
		{
			get
			{
				return this.GetTable<c_GenuineType>();
			}
		}
		
		public System.Data.Linq.Table<c_PaymentType> c_PaymentType
		{
			get
			{
				return this.GetTable<c_PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<c_QuoteType> c_QuoteType
		{
			get
			{
				return this.GetTable<c_QuoteType>();
			}
		}
		
		public System.Data.Linq.Table<c_NewUsedType> c_NewUsedType
		{
			get
			{
				return this.GetTable<c_NewUsedType>();
			}
		}
		
		public System.Data.Linq.Table<c_MileageUnit> c_MileageUnit
		{
			get
			{
				return this.GetTable<c_MileageUnit>();
			}
		}
		
		public System.Data.Linq.Table<c_CarStatus> c_CarStatus
		{
			get
			{
				return this.GetTable<c_CarStatus>();
			}
		}
		
		public System.Data.Linq.Table<c_UsageType> c_UsageType
		{
			get
			{
				return this.GetTable<c_UsageType>();
			}
		}
		
		public System.Data.Linq.Table<c_Usage> c_Usage
		{
			get
			{
				return this.GetTable<c_Usage>();
			}
		}
		
		public System.Data.Linq.Table<c_CarClassification> c_CarClassification
		{
			get
			{
				return this.GetTable<c_CarClassification>();
			}
		}
		
		public System.Data.Linq.Table<c_Figure> c_Figure
		{
			get
			{
				return this.GetTable<c_Figure>();
			}
		}
		
		public System.Data.Linq.Table<c_Import> c_Import
		{
			get
			{
				return this.GetTable<c_Import>();
			}
		}
		
		public System.Data.Linq.Table<c_Recycle> c_Recycle
		{
			get
			{
				return this.GetTable<c_Recycle>();
			}
		}
		
		public System.Data.Linq.Table<c_Steering> c_Steering
		{
			get
			{
				return this.GetTable<c_Steering>();
			}
		}
		
		public System.Data.Linq.Table<c_Light> c_Light
		{
			get
			{
				return this.GetTable<c_Light>();
			}
		}
		
		public System.Data.Linq.Table<c_Sr> c_Sr
		{
			get
			{
				return this.GetTable<c_Sr>();
			}
		}
		
		public System.Data.Linq.Table<c_NaviEquipment> c_NaviEquipment
		{
			get
			{
				return this.GetTable<c_NaviEquipment>();
			}
		}
		
		public System.Data.Linq.Table<c_NaviDashboard> c_NaviDashboard
		{
			get
			{
				return this.GetTable<c_NaviDashboard>();
			}
		}
		
		public System.Data.Linq.Table<c_SeatType> c_SeatType
		{
			get
			{
				return this.GetTable<c_SeatType>();
			}
		}
		
		public System.Data.Linq.Table<c_DeclarationType> c_DeclarationType
		{
			get
			{
				return this.GetTable<c_DeclarationType>();
			}
		}
		
		public System.Data.Linq.Table<c_AcquisitionReason> c_AcquisitionReason
		{
			get
			{
				return this.GetTable<c_AcquisitionReason>();
			}
		}
		
		public System.Data.Linq.Table<c_TaxationType> c_TaxationType
		{
			get
			{
				return this.GetTable<c_TaxationType>();
			}
		}
		
		public System.Data.Linq.Table<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this.GetTable<CarSalesHeader>();
			}
		}
		
		public System.Data.Linq.Table<c_SalesOrderStatus> c_SalesOrderStatus
		{
			get
			{
				return this.GetTable<c_SalesOrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<SupplierPayment> SupplierPayment
		{
			get
			{
				return this.GetTable<SupplierPayment>();
			}
		}
		
		public System.Data.Linq.Table<c_SupplierPaymentType> c_SupplierPaymentType
		{
			get
			{
				return this.GetTable<c_SupplierPaymentType>();
			}
		}
		
		public System.Data.Linq.Table<c_PaymentType2> c_PaymentType2
		{
			get
			{
				return this.GetTable<c_PaymentType2>();
			}
		}
		
		public System.Data.Linq.Table<Car> Car
		{
			get
			{
				return this.GetTable<Car>();
			}
		}
		
		public System.Data.Linq.Table<c_SalesType> c_SalesType
		{
			get
			{
				return this.GetTable<c_SalesType>();
			}
		}
		
		public System.Data.Linq.Table<c_RegistrationType> c_RegistrationType
		{
			get
			{
				return this.GetTable<c_RegistrationType>();
			}
		}
		
		public System.Data.Linq.Table<SerialNumber> SerialNumber
		{
			get
			{
				return this.GetTable<SerialNumber>();
			}
		}
		
		public System.Data.Linq.Table<c_OptionType> c_OptionType
		{
			get
			{
				return this.GetTable<c_OptionType>();
			}
		}
		
		public System.Data.Linq.Table<CarSalesPayment> CarSalesPayment
		{
			get
			{
				return this.GetTable<CarSalesPayment>();
			}
		}
		
		public System.Data.Linq.Table<c_CarLiabilityInsuranceType> c_CarLiabilityInsuranceType
		{
			get
			{
				return this.GetTable<c_CarLiabilityInsuranceType>();
			}
		}
		
		public System.Data.Linq.Table<c_OwnershipReservation> c_OwnershipReservation
		{
			get
			{
				return this.GetTable<c_OwnershipReservation>();
			}
		}
		
		public System.Data.Linq.Table<c_VoluntaryInsuranceType> c_VoluntaryInsuranceType
		{
			get
			{
				return this.GetTable<c_VoluntaryInsuranceType>();
			}
		}
		
		public System.Data.Linq.Table<c_ReceiptionState> c_ReceiptionState
		{
			get
			{
				return this.GetTable<c_ReceiptionState>();
			}
		}
		
		public System.Data.Linq.Table<c_ReceiptionType> c_ReceiptionType
		{
			get
			{
				return this.GetTable<c_ReceiptionType>();
			}
		}
		
		public System.Data.Linq.Table<c_VisitOpportunity> c_VisitOpportunity
		{
			get
			{
				return this.GetTable<c_VisitOpportunity>();
			}
		}
		
		public System.Data.Linq.Table<c_RequestContent> c_RequestContent
		{
			get
			{
				return this.GetTable<c_RequestContent>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaign
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<CampaignCar> CampaignCar
		{
			get
			{
				return this.GetTable<CampaignCar>();
			}
		}
		
		public System.Data.Linq.Table<c_TargetService> c_TargetService
		{
			get
			{
				return this.GetTable<c_TargetService>();
			}
		}
		
		public System.Data.Linq.Table<c_CampaignType> c_CampaignType
		{
			get
			{
				return this.GetTable<c_CampaignType>();
			}
		}
		
		public System.Data.Linq.Table<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this.GetTable<CarPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<ServiceRequest> ServiceRequest
		{
			get
			{
				return this.GetTable<ServiceRequest>();
			}
		}
		
		public System.Data.Linq.Table<TaskConfig> TaskConfig
		{
			get
			{
				return this.GetTable<TaskConfig>();
			}
		}
		
		public System.Data.Linq.Table<TaskRole> TaskRole
		{
			get
			{
				return this.GetTable<TaskRole>();
			}
		}
		
		public System.Data.Linq.Table<c_SecurityLevel> c_SecurityLevel
		{
			get
			{
				return this.GetTable<c_SecurityLevel>();
			}
		}
		
		public System.Data.Linq.Table<V_ServiceReceiptTarget> V_ServiceReceiptTarget
		{
			get
			{
				return this.GetTable<V_ServiceReceiptTarget>();
			}
		}
		
		public System.Data.Linq.Table<c_Purpose> c_Purpose
		{
			get
			{
				return this.GetTable<c_Purpose>();
			}
		}
		
		public System.Data.Linq.Table<c_KnowOpportunity> c_KnowOpportunity
		{
			get
			{
				return this.GetTable<c_KnowOpportunity>();
			}
		}
		
		public System.Data.Linq.Table<c_Demand> c_Demand
		{
			get
			{
				return this.GetTable<c_Demand>();
			}
		}
		
		public System.Data.Linq.Table<c_AttractivePoint> c_AttractivePoint
		{
			get
			{
				return this.GetTable<c_AttractivePoint>();
			}
		}
		
		public System.Data.Linq.Table<c_TaskType> c_TaskType
		{
			get
			{
				return this.GetTable<c_TaskType>();
			}
		}
		
		public System.Data.Linq.Table<c_PurchaseStatus> c_PurchaseStatus
		{
			get
			{
				return this.GetTable<c_PurchaseStatus>();
			}
		}
		
		public System.Data.Linq.Table<CarAppraisal> CarAppraisal
		{
			get
			{
				return this.GetTable<CarAppraisal>();
			}
		}
		
		public System.Data.Linq.Table<CarPurchase> CarPurchase
		{
			get
			{
				return this.GetTable<CarPurchase>();
			}
		}
		
		public System.Data.Linq.Table<V_CarAppraisal> V_CarAppraisal
		{
			get
			{
				return this.GetTable<V_CarAppraisal>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this.GetTable<ServiceSalesHeader>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this.GetTable<ServiceSalesLine>();
			}
		}
		
		public System.Data.Linq.Table<ServiceSalesPayment> ServiceSalesPayment
		{
			get
			{
				return this.GetTable<ServiceSalesPayment>();
			}
		}
		
		public System.Data.Linq.Table<c_WorkType> c_WorkType
		{
			get
			{
				return this.GetTable<c_WorkType>();
			}
		}
		
		public System.Data.Linq.Table<c_ServiceType> c_ServiceType
		{
			get
			{
				return this.GetTable<c_ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<c_StockStatus> c_StockStatus
		{
			get
			{
				return this.GetTable<c_StockStatus>();
			}
		}
		
		public System.Data.Linq.Table<c_ServiceOrderStatus> c_ServiceOrderStatus
		{
			get
			{
				return this.GetTable<c_ServiceOrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<Account> Account
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<ServiceRequestLine> ServiceRequestLine
		{
			get
			{
				return this.GetTable<ServiceRequestLine>();
			}
		}
		
		public System.Data.Linq.Table<Journal> Journal
		{
			get
			{
				return this.GetTable<Journal>();
			}
		}
		
		public System.Data.Linq.Table<c_AccountType> c_AccountType
		{
			get
			{
				return this.GetTable<c_AccountType>();
			}
		}
		
		public System.Data.Linq.Table<c_JournalType> c_JournalType
		{
			get
			{
				return this.GetTable<c_JournalType>();
			}
		}
		
		public System.Data.Linq.Table<c_OwnershipChange> c_OwnershipChange
		{
			get
			{
				return this.GetTable<c_OwnershipChange>();
			}
		}
		
		public System.Data.Linq.Table<PartsStock> PartsStock
		{
			get
			{
				return this.GetTable<PartsStock>();
			}
		}
		
		public System.Data.Linq.Table<c_LocationType> c_LocationType
		{
			get
			{
				return this.GetTable<c_LocationType>();
			}
		}
		
		public System.Data.Linq.Table<CashBalance> CashBalance
		{
			get
			{
				return this.GetTable<CashBalance>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfer
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<c_TransferType> c_TransferType
		{
			get
			{
				return this.GetTable<c_TransferType>();
			}
		}
		
		public System.Data.Linq.Table<c_OrderType> c_OrderType
		{
			get
			{
				return this.GetTable<c_OrderType>();
			}
		}
		
		public System.Data.Linq.Table<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this.GetTable<PartsPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<c_PurchaseOrderStatus> c_PurchaseOrderStatus
		{
			get
			{
				return this.GetTable<c_PurchaseOrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<PartsPurchase> PartsPurchase
		{
			get
			{
				return this.GetTable<PartsPurchase>();
			}
		}
		
		public System.Data.Linq.Table<c_PurchaseType> c_PurchaseType
		{
			get
			{
				return this.GetTable<c_PurchaseType>();
			}
		}
		
		public System.Data.Linq.Table<c_DepositKind> c_DepositKind
		{
			get
			{
				return this.GetTable<c_DepositKind>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptPlan> ReceiptPlan
		{
			get
			{
				return this.GetTable<ReceiptPlan>();
			}
		}
		
		public System.Data.Linq.Table<c_ExpireType> c_ExpireType
		{
			get
			{
				return this.GetTable<c_ExpireType>();
			}
		}
		
		public System.Data.Linq.Table<Application> Application
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<c_DocumentComplete> c_DocumentComplete
		{
			get
			{
				return this.GetTable<c_DocumentComplete>();
			}
		}
		
		public System.Data.Linq.Table<CarSalesReport> CarSalesReport
		{
			get
			{
				return this.GetTable<CarSalesReport>();
			}
		}
		
		public System.Data.Linq.Table<c_InventoryStatus> c_InventoryStatus
		{
			get
			{
				return this.GetTable<c_InventoryStatus>();
			}
		}
		
		public System.Data.Linq.Table<c_InventoryType> c_InventoryType
		{
			get
			{
				return this.GetTable<c_InventoryType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigurationSetting> ConfigurationSetting
		{
			get
			{
				return this.GetTable<ConfigurationSetting>();
			}
		}
		
		public System.Data.Linq.Table<V_CarInventorySummary> V_CarInventorySummary
		{
			get
			{
				return this.GetTable<V_CarInventorySummary>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventory
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<InventoryStock> InventoryStock
		{
			get
			{
				return this.GetTable<InventoryStock>();
			}
		}
		
		public System.Data.Linq.Table<InventorySchedule> InventorySchedule
		{
			get
			{
				return this.GetTable<InventorySchedule>();
			}
		}
		
		public System.Data.Linq.Table<SetMenu> SetMenu
		{
			get
			{
				return this.GetTable<SetMenu>();
			}
		}
		
		public System.Data.Linq.Table<V_CarInventoryInProcess> V_CarInventoryInProcess
		{
			get
			{
				return this.GetTable<V_CarInventoryInProcess>();
			}
		}
		
		public System.Data.Linq.Table<SetMenuList> SetMenuList
		{
			get
			{
				return this.GetTable<SetMenuList>();
			}
		}
		
		public System.Data.Linq.Table<CarAcquisitionTax> CarAcquisitionTax
		{
			get
			{
				return this.GetTable<CarAcquisitionTax>();
			}
		}
		
		public System.Data.Linq.Table<CarWeightTax> CarWeightTax
		{
			get
			{
				return this.GetTable<CarWeightTax>();
			}
		}
		
		public System.Data.Linq.Table<CarLiabilityInsurance> CarLiabilityInsurance
		{
			get
			{
				return this.GetTable<CarLiabilityInsurance>();
			}
		}
		
		public System.Data.Linq.Table<c_VehicleType> c_VehicleType
		{
			get
			{
				return this.GetTable<c_VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<CarTax> CarTax
		{
			get
			{
				return this.GetTable<CarTax>();
			}
		}
		
		public System.Data.Linq.Table<V_CarSummary> V_CarSummary
		{
			get
			{
				return this.GetTable<V_CarSummary>();
			}
		}
		
		public System.Data.Linq.Table<V_ServiceSummary> V_ServiceSummary
		{
			get
			{
				return this.GetTable<V_ServiceSummary>();
			}
		}
		
		public System.Data.Linq.Table<V_SchemaInfo> V_SchemaInfo
		{
			get
			{
				return this.GetTable<V_SchemaInfo>();
			}
		}
		
		public System.Data.Linq.Table<c_CorporationType> c_CorporationType
		{
			get
			{
				return this.GetTable<c_CorporationType>();
			}
		}
		
		public System.Data.Linq.Table<c_RegistMonth> c_RegistMonth
		{
			get
			{
				return this.GetTable<c_RegistMonth>();
			}
		}
		
		public System.Data.Linq.Table<c_Firm> c_Firm
		{
			get
			{
				return this.GetTable<c_Firm>();
			}
		}
		
		public System.Data.Linq.Table<c_EraseRegist> c_EraseRegist
		{
			get
			{
				return this.GetTable<c_EraseRegist>();
			}
		}
		
		public System.Data.Linq.Table<c_AccountUsageType> c_AccountUsageType
		{
			get
			{
				return this.GetTable<c_AccountUsageType>();
			}
		}
		
		public System.Data.Linq.Table<PartsAverageCost> PartsAverageCost
		{
			get
			{
				return this.GetTable<PartsAverageCost>();
			}
		}
		
		public System.Data.Linq.Table<CashAccount> CashAccount
		{
			get
			{
				return this.GetTable<CashAccount>();
			}
		}
		
		public System.Data.Linq.Table<CustomerUpdateLog> CustomerUpdateLog
		{
			get
			{
				return this.GetTable<CustomerUpdateLog>();
			}
		}
		
		public System.Data.Linq.Table<V_ServiceReceiptionHistory> V_ServiceReceiptionHistory
		{
			get
			{
				return this.GetTable<V_ServiceReceiptionHistory>();
			}
		}
		
		public System.Data.Linq.Table<c_CarPurchaseType> c_CarPurchaseType
		{
			get
			{
				return this.GetTable<c_CarPurchaseType>();
			}
		}
		
		public System.Data.Linq.Table<c_ReceiptType> c_ReceiptType
		{
			get
			{
				return this.GetTable<c_ReceiptType>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLog
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Bank
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branch
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<c_Fuel> c_Fuel
		{
			get
			{
				return this.GetTable<c_Fuel>();
			}
		}
		
		public System.Data.Linq.Table<V_CarPurchaseList> V_CarPurchaseList
		{
			get
			{
				return this.GetTable<V_CarPurchaseList>();
			}
		}
		
		public System.Data.Linq.Table<c_BusinessType> c_BusinessType
		{
			get
			{
				return this.GetTable<c_BusinessType>();
			}
		}
		
		public System.Data.Linq.Table<CarAvailableColor> CarAvailableColor
		{
			get
			{
				return this.GetTable<CarAvailableColor>();
			}
		}
		
		public System.Data.Linq.Table<c_OwnershipChangeType> c_OwnershipChangeType
		{
			get
			{
				return this.GetTable<c_OwnershipChangeType>();
			}
		}
		
		public System.Data.Linq.Table<AkakuroReason> AkakuroReason
		{
			get
			{
				return this.GetTable<AkakuroReason>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDM> CustomerDM
		{
			get
			{
				return this.GetTable<CustomerDM>();
			}
		}
		
		public System.Data.Linq.Table<PrintPdfHistory> PrintPdfHistory
		{
			get
			{
				return this.GetTable<PrintPdfHistory>();
			}
		}
		
		public System.Data.Linq.Table<ProcessSessionControl> ProcessSessionControl
		{
			get
			{
				return this.GetTable<ProcessSessionControl>();
			}
		}
		
		public System.Data.Linq.Table<ConsumptionTax> ConsumptionTax
		{
			get
			{
				return this.GetTable<ConsumptionTax>();
			}
		}
		
		public System.Data.Linq.Table<WV_CarMaster> WV_CarMaster
		{
			get
			{
				return this.GetTable<WV_CarMaster>();
			}
		}
		
		public System.Data.Linq.Table<c_Needed> c_Needed
		{
			get
			{
				return this.GetTable<c_Needed>();
			}
		}
		
		public System.Data.Linq.Table<c_CarStockDataType> c_CarStockDataType
		{
			get
			{
				return this.GetTable<c_CarStockDataType>();
			}
		}
		
		public System.Data.Linq.Table<CloseMonthControl> CloseMonthControl
		{
			get
			{
				return this.GetTable<CloseMonthControl>();
			}
		}
		
		public System.Data.Linq.Table<c_CloseType> c_CloseType
		{
			get
			{
				return this.GetTable<c_CloseType>();
			}
		}
		
		public System.Data.Linq.Table<c_Month> c_Month
		{
			get
			{
				return this.GetTable<c_Month>();
			}
		}
		
		public System.Data.Linq.Table<c_Year> c_Year
		{
			get
			{
				return this.GetTable<c_Year>();
			}
		}
		
		public System.Data.Linq.Table<PartsPurchaseHistory> PartsPurchaseHistory
		{
			get
			{
				return this.GetTable<PartsPurchaseHistory>();
			}
		}
		
		public System.Data.Linq.Table<PartsDiscountRate> PartsDiscountRate
		{
			get
			{
				return this.GetTable<PartsDiscountRate>();
			}
		}
		
		public System.Data.Linq.Table<c_CodeName> c_CodeName
		{
			get
			{
				return this.GetTable<c_CodeName>();
			}
		}
		
		public System.Data.Linq.Table<V_CarPurchaseDownload> V_CarPurchaseDownload
		{
			get
			{
				return this.GetTable<V_CarPurchaseDownload>();
			}
		}
		
		public System.Data.Linq.Table<V_CarSalesDownload> V_CarSalesDownload
		{
			get
			{
				return this.GetTable<V_CarSalesDownload>();
			}
		}
		
		public System.Data.Linq.Table<V_OfficeSalesDownload> V_OfficeSalesDownload
		{
			get
			{
				return this.GetTable<V_OfficeSalesDownload>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptTransDownload> V_ReceiptTransDownload
		{
			get
			{
				return this.GetTable<V_ReceiptTransDownload>();
			}
		}
		
		public System.Data.Linq.Table<V_ServiceSalesDownload> V_ServiceSalesDownload
		{
			get
			{
				return this.GetTable<V_ServiceSalesDownload>();
			}
		}
		
		public System.Data.Linq.Table<V_CarSalesJournalReport> V_CarSalesJournalReport
		{
			get
			{
				return this.GetTable<V_CarSalesJournalReport>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptLoanJournalReport> V_ReceiptLoanJournalReport
		{
			get
			{
				return this.GetTable<V_ReceiptLoanJournalReport>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptTransferJournalReport> V_ReceiptTransferJournalReport
		{
			get
			{
				return this.GetTable<V_ReceiptTransferJournalReport>();
			}
		}
		
		public System.Data.Linq.Table<V_UsedCarAutoAuctionJournalReport> V_UsedCarAutoAuctionJournalReport
		{
			get
			{
				return this.GetTable<V_UsedCarAutoAuctionJournalReport>();
			}
		}
		
		public System.Data.Linq.Table<V_PettyCashJournalReport> V_PettyCashJournalReport
		{
			get
			{
				return this.GetTable<V_PettyCashJournalReport>();
			}
		}
		
		public System.Data.Linq.Table<V_SalesResult> V_SalesResult
		{
			get
			{
				return this.GetTable<V_SalesResult>();
			}
		}
		
		public System.Data.Linq.Table<BackGroundDemoCar> BackGroundDemoCar
		{
			get
			{
				return this.GetTable<BackGroundDemoCar>();
			}
		}
		
		public System.Data.Linq.Table<V_LocationListForCarUsage> V_LocationListForCarUsage
		{
			get
			{
				return this.GetTable<V_LocationListForCarUsage>();
			}
		}
		
		public System.Data.Linq.Table<V_PartsWipStock> V_PartsWipStock
		{
			get
			{
				return this.GetTable<V_PartsWipStock>();
			}
		}
		
		public System.Data.Linq.Table<InventoryParts_Shikakari> InventoryParts_Shikakari
		{
			get
			{
				return this.GetTable<InventoryParts_Shikakari>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMonthControlParts> InventoryMonthControlParts
		{
			get
			{
				return this.GetTable<InventoryMonthControlParts>();
			}
		}
		
		public System.Data.Linq.Table<V_CarMaster> V_CarMaster
		{
			get
			{
				return this.GetTable<V_CarMaster>();
			}
		}
		
		public System.Data.Linq.Table<V_RevenueResult> V_RevenueResult
		{
			get
			{
				return this.GetTable<V_RevenueResult>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptPlanList> V_ReceiptPlanList
		{
			get
			{
				return this.GetTable<V_ReceiptPlanList>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptList> V_ReceiptList
		{
			get
			{
				return this.GetTable<V_ReceiptList>();
			}
		}
		
		public System.Data.Linq.Table<V_ALL_SalesOrderList> V_ALL_SalesOrderList
		{
			get
			{
				return this.GetTable<V_ALL_SalesOrderList>();
			}
		}
		
		public System.Data.Linq.Table<V_ServiceSalesClaimCode> V_ServiceSalesClaimCode
		{
			get
			{
				return this.GetTable<V_ServiceSalesClaimCode>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceiptResultList> V_ReceiptResultList
		{
			get
			{
				return this.GetTable<V_ReceiptResultList>();
			}
		}
		
		public System.Data.Linq.Table<T_CashJournalOutput> T_CashJournalOutput
		{
			get
			{
				return this.GetTable<T_CashJournalOutput>();
			}
		}
		
		public System.Data.Linq.Table<ModificationControl> ModificationControl
		{
			get
			{
				return this.GetTable<ModificationControl>();
			}
		}
		
		public System.Data.Linq.Table<ModifiedReason> ModifiedReason
		{
			get
			{
				return this.GetTable<ModifiedReason>();
			}
		}
		
		public System.Data.Linq.Table<T_CashBalanceSheet> T_CashBalanceSheet
		{
			get
			{
				return this.GetTable<T_CashBalanceSheet>();
			}
		}
		
		public System.Data.Linq.Table<CloseMonthControlCarStock> CloseMonthControlCarStock
		{
			get
			{
				return this.GetTable<CloseMonthControlCarStock>();
			}
		}
		
		public System.Data.Linq.Table<c_CloseStatus> c_CloseStatus
		{
			get
			{
				return this.GetTable<c_CloseStatus>();
			}
		}
		
		public System.Data.Linq.Table<PartsInventoryWorkingDate> PartsInventoryWorkingDate
		{
			get
			{
				return this.GetTable<PartsInventoryWorkingDate>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMonthControlPartsBalance> InventoryMonthControlPartsBalance
		{
			get
			{
				return this.GetTable<InventoryMonthControlPartsBalance>();
			}
		}
		
		public System.Data.Linq.Table<V_ReceivableManagement> V_ReceivableManagement
		{
			get
			{
				return this.GetTable<V_ReceivableManagement>();
			}
		}
		
		public System.Data.Linq.Table<V_CustomerDataList> V_CustomerDataList
		{
			get
			{
				return this.GetTable<V_CustomerDataList>();
			}
		}
		
		public System.Data.Linq.Table<AccountsReceivable> AccountsReceivable
		{
			get
			{
				return this.GetTable<AccountsReceivable>();
			}
		}
		
		public System.Data.Linq.Table<GetCarOptionMaster_Result> GetCarOptionMaster_Result
		{
			get
			{
				return this.GetTable<GetCarOptionMaster_Result>();
			}
		}
		
		public System.Data.Linq.Table<GetPartsPurchase_Result> GetPartsPurchase_Result
		{
			get
			{
				return this.GetTable<GetPartsPurchase_Result>();
			}
		}
		
		public System.Data.Linq.Table<GetPartsPurchaseList_Result> GetPartsPurchaseList_Result
		{
			get
			{
				return this.GetTable<GetPartsPurchaseList_Result>();
			}
		}
		
		public System.Data.Linq.Table<ReceivableDetail> ReceivableDetail
		{
			get
			{
				return this.GetTable<ReceivableDetail>();
			}
		}
		
		public System.Data.Linq.Table<GetSummaryReceiptPlan_Result> GetSummaryReceiptPlan_Result
		{
			get
			{
				return this.GetTable<GetSummaryReceiptPlan_Result>();
			}
		}
		
		public System.Data.Linq.Table<Warehouse> Warehouse
		{
			get
			{
				return this.GetTable<Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentWarehouse> DepartmentWarehouse
		{
			get
			{
				return this.GetTable<DepartmentWarehouse>();
			}
		}
		
		public System.Data.Linq.Table<PartsBalance> PartsBalance
		{
			get
			{
				return this.GetTable<PartsBalance>();
			}
		}
		
		public System.Data.Linq.Table<InventoryScheduleParts> InventoryScheduleParts
		{
			get
			{
				return this.GetTable<InventoryScheduleParts>();
			}
		}
		
		public System.Data.Linq.Table<GetCreditJournal_Result> GetCreditJournal_Result
		{
			get
			{
				return this.GetTable<GetCreditJournal_Result>();
			}
		}
		
		public System.Data.Linq.Table<AccountsReceivableCar> AccountsReceivableCar
		{
			get
			{
				return this.GetTable<AccountsReceivableCar>();
			}
		}
		
		public System.Data.Linq.Table<T_CarPurChaseSalesDetail> T_CarPurChaseSalesDetail
		{
			get
			{
				return this.GetTable<T_CarPurChaseSalesDetail>();
			}
		}
		
		public System.Data.Linq.Table<GetServiceRequestList_Result> GetServiceRequestList_Result
		{
			get
			{
				return this.GetTable<GetServiceRequestList_Result>();
			}
		}
		
		public System.Data.Linq.Table<GetCarSalesList_Result> GetCarSalesList_Result
		{
			get
			{
				return this.GetTable<GetCarSalesList_Result>();
			}
		}
		
		public System.Data.Linq.Table<GetCarSalesEmployeeList_Result> GetCarSalesEmployeeList_Result
		{
			get
			{
				return this.GetTable<GetCarSalesEmployeeList_Result>();
			}
		}
		
		public System.Data.Linq.Table<InventoryMonthControlCar> InventoryMonthControlCar
		{
			get
			{
				return this.GetTable<InventoryMonthControlCar>();
			}
		}
		
		public System.Data.Linq.Table<InventoryScheduleCar> InventoryScheduleCar
		{
			get
			{
				return this.GetTable<InventoryScheduleCar>();
			}
		}
		
		public System.Data.Linq.Table<InventoryStockCar> InventoryStockCar
		{
			get
			{
				return this.GetTable<InventoryStockCar>();
			}
		}
		
		public System.Data.Linq.Table<W_JournalChange> W_JournalChange
		{
			get
			{
				return this.GetTable<W_JournalChange>();
			}
		}
		
		public System.Data.Linq.Table<PartsMovingAverageCost> PartsMovingAverageCost
		{
			get
			{
				return this.GetTable<PartsMovingAverageCost>();
			}
		}
		
		public System.Data.Linq.Table<CarFixedAssets> CarFixedAssets
		{
			get
			{
				return this.GetTable<CarFixedAssets>();
			}
		}
		
		public System.Data.Linq.Table<DepreciationRate> DepreciationRate
		{
			get
			{
				return this.GetTable<DepreciationRate>();
			}
		}
		
		public System.Data.Linq.Table<CarStock> CarStock
		{
			get
			{
				return this.GetTable<CarStock>();
			}
		}
		
		public System.Data.Linq.Table<SalesCarHistory> SalesCarHistory
		{
			get
			{
				return this.GetTable<SalesCarHistory>();
			}
		}
		
		public System.Data.Linq.Table<Logo> Logo
		{
			get
			{
				return this.GetTable<Logo>();
			}
		}
		
		public System.Data.Linq.Table<DocumentList> DocumentList
		{
			get
			{
				return this.GetTable<DocumentList>();
			}
		}
		
		public System.Data.Linq.Table<ServiceWorkCustomerClaim> ServiceWorkCustomerClaim
		{
			get
			{
				return this.GetTable<ServiceWorkCustomerClaim>();
			}
		}
		
		public System.Data.Linq.Table<PartsMovingAverageCostHistory> PartsMovingAverageCostHistory
		{
			get
			{
				return this.GetTable<PartsMovingAverageCostHistory>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeHistory> EmployeeHistory
		{
			get
			{
				return this.GetTable<EmployeeHistory>();
			}
		}
		
		public System.Data.Linq.Table<EPDiscountTax> EPDiscountTax
		{
			get
			{
				return this.GetTable<EPDiscountTax>();
			}
		}
		
		public System.Data.Linq.Table<AccountByAmountType> AccountByAmountType
		{
			get
			{
				return this.GetTable<AccountByAmountType>();
			}
		}
		
		public System.Data.Linq.Table<CostArea> CostArea
		{
			get
			{
				return this.GetTable<CostArea>();
			}
		}
		
		public System.Data.Linq.Table<ServiceReportByCutomerClaimType> ServiceReportByCutomerClaimType
		{
			get
			{
				return this.GetTable<ServiceReportByCutomerClaimType>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceConsumptionTax> InvoiceConsumptionTax
		{
			get
			{
				return this.GetTable<InvoiceConsumptionTax>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddSerialNumber")]
		public int AddSerialNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialCode", DbType="NVarChar(50)")] string serialCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SerialName", DbType="NVarChar(50)")] string serialName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrefixCode", DbType="NVarChar(50)")] string prefixCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuffixCode", DbType="NVarChar(50)")] string suffixCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SequenceNumber", DbType="Decimal")] System.Nullable<decimal> sequenceNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewSequenceNumber", DbType="Decimal")] ref System.Nullable<decimal> newSequenceNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serialCode, serialName, prefixCode, suffixCode, sequenceNumber, employeeCode, newSequenceNumber);
			newSequenceNumber = ((System.Nullable<decimal>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangeServiceCostMulti")]
		public int ChangeServiceCostMulti([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceMenuCode", DbType="NVarChar(5)")] string serviceMenuCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarClassCode", DbType="NVarChar(30)")] string carClassCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelFlag", DbType="NVarChar(2)")] string delFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceMenuCode, carClassCode, delFlag, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddServiceCost")]
		public int AddServiceCost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceMenuCode", DbType="NVarChar(5)")] string serviceMenuCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarClassCode", DbType="NVarChar(30)")] string carClassCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Cost", DbType="Decimal")] System.Nullable<decimal> cost, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceMenuCode, carClassCode, cost, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddServiceCostMulti")]
		public int AddServiceCostMulti([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceMenuCode", DbType="NVarChar(5)")] string serviceMenuCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarClassCode", DbType="NVarChar(30)")] string carClassCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceMenuCode, carClassCode, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FixInventory")]
		public int FixInventory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryType", DbType="NVarChar(3)")] string inventoryType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentCode, inventoryMonth, inventoryType, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveSetMenuList")]
		public int RemoveSetMenuList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SetMenuCode", DbType="NVarChar(11)")] string setMenuCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), setMenuCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CalcuratePartsAverageCost")]
		public int CalcuratePartsAverageCost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="DateTime")] System.Nullable<System.DateTime> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetMonth, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_InventoryParts_Shikakari")]
		public int Insert_InventoryParts_Shikakari([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth, departmentCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetReceiptResult")]
		public ISingleResult<V_ReceiptResultList> GetReceiptResult([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode, slipNumber);
			return ((ISingleResult<V_ReceiptResultList>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCashJournalOutput")]
		public ISingleResult<T_CashJournalOutput> GetCashJournalOutput([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDate", DbType="DateTime")] System.Nullable<System.DateTime> targetDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetDate);
			return ((ISingleResult<T_CashJournalOutput>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPreAccount")]
		public ISingleResult<GetPreAccountResult> GetPreAccount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetYear", DbType="Int")] System.Nullable<int> targetYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="Int")] System.Nullable<int> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficeCode", DbType="NVarChar(3)")] string officeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashAccountCode", DbType="NVarChar(3)")] string cashAccountCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetYear, targetMonth, officeCode, cashAccountCode);
			return ((ISingleResult<GetPreAccountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCashBalance")]
		public ISingleResult<T_CashBalanceSheet> GetCashBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetYear", DbType="Int")] System.Nullable<int> targetYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="Int")] System.Nullable<int> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficeCode", DbType="NVarChar(3)")] string officeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashAccountCode", DbType="NVarChar(3)")] string cashAccountCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetYear, targetMonth, officeCode, cashAccountCode);
			return ((ISingleResult<T_CashBalanceSheet>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetJournalCash")]
		public ISingleResult<GetJournalCashResult> GetJournalCash([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetYear", DbType="Int")] System.Nullable<int> targetYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="Int")] System.Nullable<int> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OfficeCode", DbType="NVarChar(3)")] string officeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CashAccountCode", DbType="NVarChar(3)")] string cashAccountCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetYear, targetMonth, officeCode, cashAccountCode);
			return ((ISingleResult<GetJournalCashResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetJournalData")]
		public ISingleResult<GetJournalDataResult> GetJournalData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalDateFrom", DbType="NVarChar(10)")] string journalDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalDateTo", DbType="NVarChar(10)")] string journalDateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), journalDateFrom, journalDateTo);
			return ((ISingleResult<GetJournalDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetShikakariSummary")]
		public ISingleResult<GetShikakariSummaryResult> GetShikakariSummary([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDate", DbType="DateTime")] System.Nullable<System.DateTime> targetDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NowFlag", DbType="NVarChar(1)")] string nowFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetDate, nowFlag);
			return ((ISingleResult<GetShikakariSummaryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetServiceSalesReport")]
		public ISingleResult<GetServiceSalesReportResult> GetServiceSalesReport([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WoerkType", DbType="NVarChar(2)")] string woerkType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), salesDateFrom, salesDateTo, woerkType, departmentCode);
			return ((ISingleResult<GetServiceSalesReportResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsStockForDialog")]
		public ISingleResult<GetPartsStockForDialogResult> GetPartsStockForDialog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerCode", DbType="NVarChar(5)")] string makerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerName", DbType="NVarChar(50)")] string makerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarBrandCode", DbType="NVarChar(30)")] string carBrandCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarBrandName", DbType="NVarChar(50)")] string carBrandName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNameJp", DbType="NVarChar(50)")] string partsNameJp, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierCode", DbType="NVarChar(10)")] string supplierCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), makerCode, makerName, carBrandCode, carBrandName, partsNumber, partsNameJp, departmentCode, supplierCode);
			return ((ISingleResult<GetPartsStockForDialogResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCustomerDataList")]
		public ISingleResult<V_CustomerDataList> GetCustomerDataList(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DmFlag", DbType="NVarChar(3)")] string dmFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode2", DbType="NVarChar(3)")] string departmentCode2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarEmployeeCode", DbType="NVarChar(50)")] string carEmployeeCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceDepartmentCode2", DbType="NVarChar(3)")] string serviceDepartmentCode2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateFrom", DbType="NVarChar(10)")] string arrivalPlanDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateTo", DbType="NVarChar(10)")] string arrivalPlanDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerName", DbType="NVarChar(50)")] string makerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarName", DbType="NVarChar(20)")] string carName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstRegistrationDateFrom", DbType="NVarChar(10)")] string firstRegistrationDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstRegistrationDateTo", DbType="NVarChar(10)")] string firstRegistrationDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrationDateFrom", DbType="NVarChar(10)")] string registrationDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrationDateTo", DbType="NVarChar(10)")] string registrationDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerAddressReconfirm", DbType="Bit")] System.Nullable<bool> customerAddressReconfirm, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerKind", DbType="NVarChar(3)")] string customerKind)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dmFlag, departmentCode2, carEmployeeCode, serviceDepartmentCode2, salesDateFrom, salesDateTo, arrivalPlanDateFrom, arrivalPlanDateTo, makerName, carName, firstRegistrationDateFrom, firstRegistrationDateTo, registrationDateFrom, registrationDateTo, customerAddressReconfirm, customerKind);
			return ((ISingleResult<V_CustomerDataList>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInspectGuidList")]
		public ISingleResult<V_CustomerDataList> GetInspectGuidList(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InspectGuidFlag", DbType="NVarChar(3)")] string inspectGuidFlag, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode2", DbType="NVarChar(3)")] string departmentCode2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarEmployeeCode", DbType="NVarChar(50)")] string carEmployeeCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceDepartmentCode2", DbType="NVarChar(3)")] string serviceDepartmentCode2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerName", DbType="NVarChar(50)")] string makerName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarName", DbType="NVarChar(20)")] string carName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstRegistrationDateFrom", DbType="NVarChar(10)")] string firstRegistrationDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstRegistrationDateTo", DbType="NVarChar(10)")] string firstRegistrationDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrationDateFrom", DbType="NVarChar(10)")] string registrationDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrationDateTo", DbType="NVarChar(10)")] string registrationDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NextInspectionDateFrom", DbType="NVarChar(10)")] string nextInspectionDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="NextInspectionDateTo", DbType="NVarChar(10)")] string nextInspectionDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpireDateFrom", DbType="NVarChar(10)")] string expireDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpireDateTo", DbType="NVarChar(10)")] string expireDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerAddressReconfirm", DbType="Bit")] System.Nullable<bool> customerAddressReconfirm, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerKind", DbType="NVarChar(3)")] string customerKind)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inspectGuidFlag, departmentCode2, carEmployeeCode, serviceDepartmentCode2, makerName, carName, firstRegistrationDateFrom, firstRegistrationDateTo, registrationDateFrom, registrationDateTo, nextInspectionDateFrom, nextInspectionDateTo, expireDateFrom, expireDateTo, customerAddressReconfirm, customerKind);
			return ((ISingleResult<V_CustomerDataList>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarOptionMaster")]
		public ISingleResult<GetCarOptionMaster_Result> GetCarOptionMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerCode", DbType="NVarChar(5)")] string makerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerName", DbType="NVarChar(50)")] string makerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarOptionCode", DbType="NVarChar(25)")] string carOptionCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarOptionName", DbType="NVarChar(100)")] string carOptionName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarGradeCode", DbType="NVarChar(30)")] string carGradeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequiredFlag", DbType="NVarChar(2)")] string requiredFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelFlag", DbType="NVarChar(2)")] string delFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionFlag", DbType="NVarChar(2)")] string actionFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), makerCode, makerName, carOptionCode, carOptionName, carGradeCode, requiredFlag, delFlag, actionFlag);
			return ((ISingleResult<GetCarOptionMaster_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarOptionSetList")]
		public ISingleResult<GetCarOptionSetListResult> GetCarOptionSetList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarGradeCode", DbType="NVarChar(30)")] string carGradeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerCode", DbType="NVarChar(5)")] string makerCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), carGradeCode, makerCode);
			return ((ISingleResult<GetCarOptionSetListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAccountTypeList")]
		public ISingleResult<c_AccountType> GetAccountTypeList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ListType", DbType="VarChar(3)")] string listType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), listType);
			return ((ISingleResult<c_AccountType>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateBackAmountAkaden")]
		public int CreateBackAmountAkaden([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slipNumber, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetReceiptPlan")]
		public ISingleResult<V_ReceiptPlanList> GetReceiptPlan([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SummaryFlag", DbType="Bit")] System.Nullable<bool> summaryFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode, slipNumber, summaryFlag);
			return ((ISingleResult<V_ReceiptPlanList>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSummaryReceiptPlan")]
		public ISingleResult<GetSummaryReceiptPlan_Result> GetSummaryReceiptPlan([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(3)")] string officeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string journalDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string journalDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string receiptPlanDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string receiptPlanDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string customerClaimCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string customerClaimType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(3)")] string accountUsageType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(3)")] string receiptType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string paymentKindCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(3)")] string customerClaimFilter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isShopDeposit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), officeCode, salesDateFrom, salesDateTo, journalDateFrom, journalDateTo, receiptPlanDateFrom, receiptPlanDateTo, slipNumber, customerClaimCode, customerClaimType, accountUsageType, receiptType, paymentKindCode, customerClaimFilter, isShopDeposit);
			return ((ISingleResult<GetSummaryReceiptPlan_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsLocationList")]
		public ISingleResult<GetPartsLocationListResult> GetPartsLocationList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="NVarChar(12)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelFlag", DbType="NVarChar(2)")] string delFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), partsNumber, departmentCode, warehouseCode, locationCode, delFlag);
			return ((ISingleResult<GetPartsLocationListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetInventoryStock")]
		public ISingleResult<GetInventoryStockResult> GetInventoryStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="NVarChar(12)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationName", DbType="NVarChar(50)")] string locationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNameJp", DbType="NVarChar(50)")] string partsNameJp, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockZeroVisibility", DbType="NVarChar(1)")] string stockZeroVisibility)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentCode, warehouseCode, inventoryMonth, locationCode, locationName, partsNumber, partsNameJp, stockZeroVisibility);
			return ((ISingleResult<GetInventoryStockResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertInventoryStock")]
		public int InsertInventoryStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth, warehouseCode, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsWipStock")]
		public ISingleResult<InventoryParts_Shikakari> GetPartsWipStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionFlag", DbType="Int")] System.Nullable<int> actionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="DateTime")] System.Nullable<System.DateTime> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceType", DbType="NVarChar(3)")] string serviceType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateFrom", DbType="NVarChar(10)")] string arrivalPlanDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateTo", DbType="NVarChar(10)")] string arrivalPlanDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNameJp", DbType="NVarChar(50)")] string partsNameJp, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="NVarChar(80)")] string customerName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionFlag, targetMonth, departmentCode, warehouseCode, serviceType, arrivalPlanDateFrom, arrivalPlanDateTo, slipNumber, partsNumber, partsNameJp, vin, customerName);
			return ((ISingleResult<InventoryParts_Shikakari>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InventoryDecided")]
		public int InventoryDecided([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth, warehouseCode, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertPartsLocation")]
		public int InsertPartsLocation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), warehouseCode, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsBalance")]
		public ISingleResult<PartsBalance> GetPartsBalance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetYear", DbType="Int")] System.Nullable<int> targetYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="Int")] System.Nullable<int> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SummaryMode", DbType="Int")] System.Nullable<int> summaryMode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNameJp", DbType="NVarChar(50)")] string partsNameJp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetYear, targetMonth, summaryMode, warehouseCode, partsNumber, partsNameJp);
			return ((ISingleResult<PartsBalance>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLocationList")]
		public ISingleResult<GetLocationListResult> GetLocationList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentName", DbType="NVarChar(20)")] string departmentName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseName", DbType="NVarChar(20)")] string warehouseName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="NVarChar(12)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationName", DbType="NVarChar(50)")] string locationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationType", DbType="NVarChar(3)")] string locationType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DelFlag", DbType="NVarChar(2)")] string delFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentCode, departmentName, warehouseCode, warehouseName, locationCode, locationName, locationType, delFlag);
			return ((ISingleResult<GetLocationListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_AccountsReceivableCar")]
		public ISingleResult<AccountsReceivableCar> Insert_AccountsReceivableCar([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="DateTime")] System.Nullable<System.DateTime> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionFlag", DbType="Int")] System.Nullable<int> actionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zerovisible", DbType="NVarChar(1)")] string zerovisible)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetMonth, actionFlag, salesDateFrom, salesDateTo, slipNumber, departmentCode, customerCode, zerovisible);
			return ((ISingleResult<AccountsReceivableCar>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_AccountsReceivableCar")]
		public ISingleResult<AccountsReceivableCar> Get_AccountsReceivableCar([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="DateTime")] System.Nullable<System.DateTime> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zerovisible", DbType="NVarChar(1)")] string zerovisible)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetMonth, salesDateFrom, salesDateTo, slipNumber, departmentCode, customerCode, zerovisible);
			return ((ISingleResult<AccountsReceivableCar>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_AccountsReceivable")]
		public ISingleResult<AccountsReceivable> Insert_AccountsReceivable([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetMonth", DbType="DateTime")] System.Nullable<System.DateTime> targetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionFlag", DbType="Int")] System.Nullable<int> actionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zerovisible", DbType="NVarChar(1)")] string zerovisible, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Classification", DbType="NVarChar(3)")] string classification)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetMonth, actionFlag, salesDateFrom, salesDateTo, slipNumber, departmentCode, customerCode, zerovisible, classification);
			return ((ISingleResult<AccountsReceivable>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetServiceRequestList")]
		public ISingleResult<GetServiceRequestList_Result> GetServiceRequestList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="NVarChar(80)")] string customerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateFrom", DbType="NVarChar(10)")] string arrivalPlanDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateTo", DbType="NVarChar(10)")] string arrivalPlanDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeliveryRequirementFrom", DbType="NVarChar(10)")] string deliveryRequirementFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeliveryRequirementTo", DbType="NVarChar(10)")] string deliveryRequirementTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentCode, employeeCode, customerName, vin, arrivalPlanDateFrom, arrivalPlanDateTo, deliveryRequirementFrom, deliveryRequirementTo);
			return ((ISingleResult<GetServiceRequestList_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarSalesList")]
		public ISingleResult<GetCarSalesList_Result> GetCarSalesList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectYear", DbType="NVarChar(4)")] string selectYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesType", DbType="NVarChar(1)")] string salesType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectYear, salesType);
			return ((ISingleResult<GetCarSalesList_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarSalesEmployeeList")]
		public ISingleResult<GetCarSalesEmployeeList_Result> GetCarSalesEmployeeList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectYear", DbType="NVarChar(4)")] string selectYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesType", DbType="NVarChar(1)")] string salesType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectYear, departmentCode, salesType);
			return ((ISingleResult<GetCarSalesEmployeeList_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCustomerIntegrateData")]
		public ISingleResult<GetCustomerIntegrateDataResult> GetCustomerIntegrateData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode);
			return ((ISingleResult<GetCustomerIntegrateDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CustomerIntegrate")]
		public int CustomerIntegrate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode1", DbType="NVarChar(10)")] string customerCode1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode2", DbType="NVarChar(10)")] string customerCode2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customerCode1, customerCode2, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetServiceSalesHistoryHeader")]
		public ISingleResult<GetServiceSalesHistoryHeaderResult> GetServiceSalesHistoryHeader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DivType", DbType="NVarChar(3)")] string divType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentName", DbType="VarChar(50)")] string departmentName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="VarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistNumber", DbType="VarChar(50)")] string registNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="VarChar(50)")] string customerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerNameKana", DbType="VarChar(50)")] string customerNameKana)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), divType, departmentName, slipNumber, vin, registNumber, customerName, customerNameKana);
			return ((ISingleResult<GetServiceSalesHistoryHeaderResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetServiceSalesHistoryLine")]
		public ISingleResult<GetServiceSalesHistoryLineResult> GetServiceSalesHistoryLine([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DivType", DbType="NVarChar(3)")] string divType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="VarChar(50)")] string slipNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), divType, slipNumber);
			return ((ISingleResult<GetServiceSalesHistoryLineResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMechanicRanking")]
		public ISingleResult<GetMechanicRankingResult> GetMechanicRanking([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDateFrom", DbType="DateTime")] System.Nullable<System.DateTime> targetDateFrom)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetDateFrom);
			return ((ISingleResult<GetMechanicRankingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarBasicInfo")]
		public ISingleResult<GetCarBasicInfoResult> GetCarBasicInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesCarNumber", DbType="NVarChar(50)")] string salesCarNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), salesCarNumber, vin);
			return ((ISingleResult<GetCarBasicInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarStatusTransition")]
		public ISingleResult<GetCarStatusTransitionResult> GetCarStatusTransition([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesCarNumber", DbType="NVarChar(50)")] string salesCarNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), salesCarNumber, vin);
			return ((ISingleResult<GetCarStatusTransitionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarSalesSlip")]
		public ISingleResult<GetCarSalesSlipResult> GetCarSalesSlip([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesCarNumber", DbType="NVarChar(50)")] string salesCarNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), salesCarNumber, vin);
			return ((ISingleResult<GetCarSalesSlipResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSupplierPaymentList")]
		public ISingleResult<GetSupplierPaymentListResult> GetSupplierPaymentList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Target", DbType="NVarChar(1)")] string target, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDateFrom", DbType="DateTime")] System.Nullable<System.DateTime> targetDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDateTo", DbType="DateTime")] System.Nullable<System.DateTime> targetDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceWorkCode", DbType="NVarChar(5)")] string serviceWorkCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="NVarChar(80)")] string customerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierCode", DbType="NVarChar(10)")] string supplierCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierName", DbType="NVarChar(80)")] string supplierName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), target, targetDateFrom, targetDateTo, departmentCode, serviceWorkCode, slipNumber, vin, customerCode, customerName, supplierCode, supplierName);
			return ((ISingleResult<GetSupplierPaymentListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCreditJournal")]
		public ISingleResult<GetCreditJournal_Result> GetCreditJournal([global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalDateFrom", DbType="NVarChar(10)")] string journalDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JournalDateTo", DbType="NVarChar(10)")] string journalDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateFrom", DbType="NVarChar(10)")] string salesDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesDateTo", DbType="NVarChar(10)")] string salesDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipType", DbType="NVarChar(3)")] string slipType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerClaimCode", DbType="NVarChar(10)")] string customerClaimCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompleteFlag", DbType="NVarChar(2)")] string completeFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), journalDateFrom, journalDateTo, salesDateFrom, salesDateTo, slipType, slipNumber, departmentCode, customerCode, customerClaimCode, completeFlag);
			return ((ISingleResult<GetCreditJournal_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertInventoryStockCar")]
		public int InsertInventoryStockCar([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth, warehouseCode, employeeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDuplicationCarInventory")]
		public ISingleResult<GetDuplicationCarInventoryResult> GetDuplicationCarInventory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="DateTime")] System.Nullable<System.DateTime> inventoryMonth)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth);
			return ((ISingleResult<GetDuplicationCarInventoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockCarList")]
		public ISingleResult<GetStockCarListResult> GetStockCarList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InventoryMonth", DbType="NVarChar(10)")] string inventoryMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(6)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="NVarChar(12)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesCarNumber", DbType="NVarChar(50)")] string salesCarNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUsedType", DbType="NVarChar(3)")] string newUsedType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarStatus", DbType="NVarChar(3)")] string carStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarBrandName", DbType="NVarChar(50)")] string carBrandName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CarName", DbType="NVarChar(20)")] string carName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GradeName", DbType="NVarChar(50)")] string gradeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RegistrationNumber", DbType="NVarChar(20)")] string registrationNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SockFlag", DbType="NVarChar(1)")] string sockFlag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inventoryMonth, departmentCode, locationCode, salesCarNumber, vin, newUsedType, carStatus, carBrandName, carName, gradeName, registrationNumber, sockFlag);
			return ((ISingleResult<GetStockCarListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Get_CarSlipStatusChange")]
		public ISingleResult<Get_CarSlipStatusChangeResult> Get_CarSlipStatusChange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeStatus", DbType="NVarChar(2)")] string changeStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), changeStatus);
			return ((ISingleResult<Get_CarSlipStatusChangeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarSlipStatusChange")]
		public int CarSlipStatusChange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesOrderStatus", DbType="NVarChar(3)")] string salesOrderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestUserName", DbType="NVarChar(100)")] string requestUserName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slipNumber, employeeCode, salesOrderStatus, requestUserName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarSlipStatus_Return")]
		public int CarSlipStatus_Return([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesOrderStatus", DbType="NVarChar(3)")] string salesOrderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusChangeCode", DbType="NVarChar(36)")] string statusChangeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slipNumber, employeeCode, salesOrderStatus, statusChangeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CarSlipStatus_DispFlag")]
		public int CarSlipStatus_DispFlag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeStatus", DbType="NChar(3)")] string changeStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusChangeCode", DbType="NVarChar(36)")] string statusChangeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slipNumber, employeeCode, changeStatus, statusChangeCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsStatus")]
		public ISingleResult<GetPartsStatusResult> GetPartsStatus([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Target", DbType="NVarChar(1)")] string target, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDateFrom", DbType="DateTime")] System.Nullable<System.DateTime> targetDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceOrderStatus", DbType="NVarChar(3)")] string serviceOrderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), target, targetDateFrom, departmentCode, serviceOrderStatus, partsNumber);
			return ((ISingleResult<GetPartsStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsPurchaseList")]
		public ISingleResult<GetPartsPurchaseListResult> GetPartsPurchaseList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseNumber", DbType="NVarChar(50)")] string purchaseNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumber", DbType="NVarChar(50)")] string purchaseOrderNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseStatus", DbType="NVarChar(3)")] string purchaseStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), purchaseNumber, purchaseOrderNumber, partsNumber, departmentCode, purchaseStatus);
			return ((ISingleResult<GetPartsPurchaseListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsPurchaseListByPurchaseOrderNumber")]
		public ISingleResult<GetPartsPurchaseListByPurchaseOrderNumberResult> GetPartsPurchaseListByPurchaseOrderNumber([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumber", DbType="NVarChar(50)")] string purchaseOrderNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), purchaseOrderNumber, departmentCode);
			return ((ISingleResult<GetPartsPurchaseListByPurchaseOrderNumberResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetServiceSalesSlip")]
		public ISingleResult<GetServiceSalesSlipResult> GetServiceSalesSlip([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumber", DbType="NVarChar(50)")] string slipNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateFrom", DbType="NVarChar(10)")] string arrivalPlanDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ArrivalPlanDateTo", DbType="NVarChar(10)")] string arrivalPlanDateTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(6)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceOrderStatus", DbType="NVarChar(3)")] string serviceOrderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceWorkCode", DbType="NVarChar(5)")] string serviceWorkCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerName", DbType="NVarChar(80)")] string customerName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), slipNumber, arrivalPlanDateFrom, arrivalPlanDateTo, departmentCode, serviceOrderStatus, serviceWorkCode, customerCode, customerName);
			return ((ISingleResult<GetServiceSalesSlipResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsPurchase_InStock")]
		public ISingleResult<GetPartsPurchase_Result> GetPartsPurchase_InStock(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseNumberFrom", DbType="NVarChar(50)")] string purchaseNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseNumberTo", DbType="NVarChar(50)")] string purchaseNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumberFrom", DbType="NVarChar(50)")] string purchaseOrderNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumberTo", DbType="NVarChar(50)")] string purchaseOrderNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderDateFrom", DbType="NVarChar(10)")] string purchaseOrderDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderDateTo", DbType="NVarChar(10)")] string purchaseOrderDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumberFrom", DbType="NVarChar(50)")] string slipNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumberTo", DbType="NVarChar(50)")] string slipNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseType", DbType="NVarChar(3)")] string purchaseType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderType", DbType="NVarChar(3)")] string orderType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchasePlanDateFrom", DbType="NVarChar(10)")] string purchasePlanDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchasePlanDateTo", DbType="NVarChar(10)")] string purchasePlanDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseDateFrom", DbType="NVarChar(10)")] string purchaseDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseDateTo", DbType="NVarChar(10)")] string purchaseDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierCode", DbType="NVarChar(10)")] string supplierCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WebOrderNumber", DbType="NVarChar(50)")] string webOrderNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerOrderNumber", DbType="NVarChar(50)")] string makerOrderNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNo", DbType="NVarChar(50)")] string invoiceNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkEntryCaptureDateFrom", DbType="NVarChar(10)")] string linkEntryCaptureDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkEntryCaptureDateTo", DbType="NVarChar(10)")] string linkEntryCaptureDateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), purchaseNumberFrom, purchaseNumberTo, purchaseOrderNumberFrom, purchaseOrderNumberTo, purchaseOrderDateFrom, purchaseOrderDateTo, slipNumberFrom, slipNumberTo, purchaseType, orderType, customerCode, partsNumber, purchasePlanDateFrom, purchasePlanDateTo, purchaseDateFrom, purchaseDateTo, departmentCode, employeeCode, supplierCode, webOrderNumber, makerOrderNumber, invoiceNo, linkEntryCaptureDateFrom, linkEntryCaptureDateTo);
			return ((ISingleResult<GetPartsPurchase_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsPurchase_NotInStock")]
		public ISingleResult<GetPartsPurchase_Result> GetPartsPurchase_NotInStock(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseNumberFrom", DbType="NVarChar(50)")] string purchaseNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseNumberTo", DbType="NVarChar(50)")] string purchaseNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumberFrom", DbType="NVarChar(50)")] string purchaseOrderNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderNumberTo", DbType="NVarChar(50)")] string purchaseOrderNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderDateFrom", DbType="NVarChar(10)")] string purchaseOrderDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchaseOrderDateTo", DbType="NVarChar(10)")] string purchaseOrderDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumberFrom", DbType="NVarChar(50)")] string slipNumberFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SlipNumberTo", DbType="NVarChar(50)")] string slipNumberTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderType", DbType="NVarChar(3)")] string orderType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomerCode", DbType="NVarChar(10)")] string customerCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchasePlanDateFrom", DbType="NVarChar(10)")] string purchasePlanDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PurchasePlanDateTo", DbType="NVarChar(10)")] string purchasePlanDateTo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierCode", DbType="NVarChar(10)")] string supplierCode, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WebOrderNumber", DbType="NVarChar(50)")] string webOrderNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MakerOrderNumber", DbType="NVarChar(50)")] string makerOrderNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceNo", DbType="NVarChar(50)")] string invoiceNo, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkEntryCaptureDateFrom", DbType="NVarChar(10)")] string linkEntryCaptureDateFrom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LinkEntryCaptureDateTo", DbType="NVarChar(10)")] string linkEntryCaptureDateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), purchaseNumberFrom, purchaseNumberTo, purchaseOrderNumberFrom, purchaseOrderNumberTo, purchaseOrderDateFrom, purchaseOrderDateTo, slipNumberFrom, slipNumberTo, orderType, customerCode, partsNumber, purchasePlanDateFrom, purchasePlanDateTo, departmentCode, employeeCode, supplierCode, webOrderNumber, makerOrderNumber, invoiceNo, linkEntryCaptureDateFrom, linkEntryCaptureDateTo);
			return ((ISingleResult<GetPartsPurchase_Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPartsStock")]
		public ISingleResult<GetPartsStockResult> GetPartsStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="WarehouseCode", DbType="NVarChar(6)")] string warehouseCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationCode", DbType="NVarChar(12)")] string locationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LocationName", DbType="NVarChar(50)")] string locationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNumber", DbType="NVarChar(25)")] string partsNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PartsNameJp", DbType="NVarChar(50)")] string partsNameJp, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockZeroVisibility", DbType="NVarChar(1)")] string stockZeroVisibility)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), departmentCode, warehouseCode, locationCode, locationName, partsNumber, partsNameJp, stockZeroVisibility);
			return ((ISingleResult<GetPartsStockResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarStock")]
		public ISingleResult<CarStock> GetCarStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StrTargetMonth", DbType="NVarChar(7)")] string strTargetMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionFlag", DbType="Int")] System.Nullable<int> actionFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DataType", DbType="NVarChar(3)")] string dataType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUsedType", DbType="NVarChar(3)")] string newUsedType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SupplierCode", DbType="NVarChar(10)")] string supplierCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SalesCarNumber", DbType="NVarChar(50)")] string salesCarNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vin", DbType="NVarChar(20)")] string vin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmployeeCode", DbType="NVarChar(50)")] string employeeCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), strTargetMonth, actionFlag, dataType, newUsedType, supplierCode, salesCarNumber, vin, employeeCode);
			return ((ISingleResult<CarStock>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAntiqueLedgerList")]
		public ISingleResult<GetAntiqueLedgerListResult> GetAntiqueLedgerList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TargetDateFrom", DbType="DateTime")] System.Nullable<System.DateTime> targetDateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Searched", DbType="NVarChar(1)")] string searched)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), targetDateFrom, searched);
			return ((ISingleResult<GetAntiqueLedgerListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCarSalesHeaderList")]
		public ISingleResult<GetCarSalesHeaderListResult> GetCarSalesHeaderList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectYear", DbType="NVarChar(4)")] string selectYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectMonth", DbType="NVarChar(2)")] string selectMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DepartmentCode", DbType="NVarChar(3)")] string departmentCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUsedType", DbType="NVarChar(3)")] string newUsedType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AAType", DbType="NVarChar(3)")] string aAType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), selectYear, selectMonth, departmentCode, newUsedType, aAType);
			return ((ISingleResult<GetCarSalesHeaderListResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationRole")]
	public partial class ApplicationRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SecurityRoleCode;
		
		private string _MenuControlCode;
		
		private bool _EnableFlag;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<SecurityRole> _SecurityRole;
		
		private EntityRef<Application> _Application;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityRoleCodeChanging(string value);
    partial void OnSecurityRoleCodeChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnEnableFlagChanging(bool value);
    partial void OnEnableFlagChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ApplicationRole()
		{
			this._SecurityRole = default(EntityRef<SecurityRole>);
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleCode
		{
			get
			{
				return this._SecurityRoleCode;
			}
			set
			{
				if ((this._SecurityRoleCode != value))
				{
					if (this._SecurityRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleCode = value;
					this.SendPropertyChanged("SecurityRoleCode");
					this.OnSecurityRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuControlCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApplicationCode
		{
			get
			{
				return this._MenuControlCode;
			}
			set
			{
				if ((this._MenuControlCode != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._MenuControlCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableFlag", DbType="Bit NOT NULL")]
		public bool EnableFlag
		{
			get
			{
				return this._EnableFlag;
			}
			set
			{
				if ((this._EnableFlag != value))
				{
					this.OnEnableFlagChanging(value);
					this.SendPropertyChanging();
					this._EnableFlag = value;
					this.SendPropertyChanged("EnableFlag");
					this.OnEnableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_ApplicationRole", Storage="_SecurityRole", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode", IsForeignKey=true)]
		public SecurityRole SecurityRole
		{
			get
			{
				return this._SecurityRole.Entity;
			}
			set
			{
				SecurityRole previousValue = this._SecurityRole.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRole.Entity = null;
						previousValue.ApplicationRole.Remove(this);
					}
					this._SecurityRole.Entity = value;
					if ((value != null))
					{
						value.ApplicationRole.Add(this);
						this._SecurityRoleCode = value.SecurityRoleCode;
					}
					else
					{
						this._SecurityRoleCode = default(string);
					}
					this.SendPropertyChanged("SecurityRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationRole", Storage="_Application", ThisKey="ApplicationCode", OtherKey="ApplicationCode", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationRole.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationRole.Add(this);
						this._MenuControlCode = value.ApplicationCode;
					}
					else
					{
						this._MenuControlCode = default(string);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AreaCode;
		
		private string _AreaName;
		
		private string _EmployeeCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnAreaNameChanging(string value);
    partial void OnAreaNameChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Area()
		{
			this._Department = new EntitySet<Department>(new Action<Department>(this.attach_Department), new Action<Department>(this.detach_Department));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AreaName
		{
			get
			{
				return this._AreaName;
			}
			set
			{
				if ((this._AreaName != value))
				{
					this.OnAreaNameChanging(value);
					this.SendPropertyChanging();
					this._AreaName = value;
					this.SendPropertyChanged("AreaName");
					this.OnAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Department", Storage="_Department", ThisKey="AreaCode", OtherKey="AreaCode")]
		public EntitySet<Department> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				this._Department.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Area", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Area.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Area.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Area = this;
		}
		
		private void detach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarBrandCode;
		
		private string _CarBrandName;
		
		private string _MakerCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CompanyCode;
		
		private System.Nullable<decimal> _LaborRate;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntitySet<Coupon> _Coupon;
		
		private EntitySet<InstallableParts> _InstallableParts;
		
		private EntitySet<Car> _Car;
		
		private EntityRef<Maker> _Maker;
		
		private EntityRef<Company> _Company;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarBrandCodeChanging(string value);
    partial void OnCarBrandCodeChanged();
    partial void OnCarBrandNameChanging(string value);
    partial void OnCarBrandNameChanged();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnLaborRateChanging(System.Nullable<decimal> value);
    partial void OnLaborRateChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Brand()
		{
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			this._InstallableParts = new EntitySet<InstallableParts>(new Action<InstallableParts>(this.attach_InstallableParts), new Action<InstallableParts>(this.detach_InstallableParts));
			this._Car = new EntitySet<Car>(new Action<Car>(this.attach_Car), new Action<Car>(this.detach_Car));
			this._Maker = default(EntityRef<Maker>);
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					this.OnCarBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._CarBrandCode = value;
					this.SendPropertyChanged("CarBrandCode");
					this.OnCarBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this.OnCarBrandNameChanging(value);
					this.SendPropertyChanging();
					this._CarBrandName = value;
					this.SendPropertyChanged("CarBrandName");
					this.OnCarBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					if (this._Maker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborRate", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LaborRate
		{
			get
			{
				return this._LaborRate;
			}
			set
			{
				if ((this._LaborRate != value))
				{
					this.OnLaborRateChanging(value);
					this.SendPropertyChanging();
					this._LaborRate = value;
					this.SendPropertyChanged("LaborRate");
					this.OnLaborRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Coupon", Storage="_Coupon", ThisKey="CarBrandCode", OtherKey="CarBrandCode")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_InstallableParts", Storage="_InstallableParts", ThisKey="CarBrandCode", OtherKey="CarBrandCode")]
		public EntitySet<InstallableParts> InstallableParts
		{
			get
			{
				return this._InstallableParts;
			}
			set
			{
				this._InstallableParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Car", Storage="_Car", ThisKey="CarBrandCode", OtherKey="CarBrandCode")]
		public EntitySet<Car> Car
		{
			get
			{
				return this._Car;
			}
			set
			{
				this._Car.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Brand", Storage="_Maker", ThisKey="MakerCode", OtherKey="MakerCode", IsForeignKey=true)]
		public Maker Maker
		{
			get
			{
				return this._Maker.Entity;
			}
			set
			{
				Maker previousValue = this._Maker.Entity;
				if (((previousValue != value) 
							|| (this._Maker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maker.Entity = null;
						previousValue.Brand.Remove(this);
					}
					this._Maker.Entity = value;
					if ((value != null))
					{
						value.Brand.Add(this);
						this._MakerCode = value.MakerCode;
					}
					else
					{
						this._MakerCode = default(string);
					}
					this.SendPropertyChanged("Maker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Brand", Storage="_Company", ThisKey="CompanyCode", OtherKey="CompanyCode", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Brand.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Brand.Add(this);
						this._CompanyCode = value.CompanyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
		
		private void attach_InstallableParts(InstallableParts entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_InstallableParts(InstallableParts entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
		
		private void attach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Car(Car entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarClass")]
	public partial class CarClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarClassCode;
		
		private string _CarClassName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<CarGrade> _CarGrade;
		
		private EntitySet<ServiceCost> _ServiceCost;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarClassCodeChanging(string value);
    partial void OnCarClassCodeChanged();
    partial void OnCarClassNameChanging(string value);
    partial void OnCarClassNameChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CarClass()
		{
			this._CarGrade = new EntitySet<CarGrade>(new Action<CarGrade>(this.attach_CarGrade), new Action<CarGrade>(this.detach_CarGrade));
			this._ServiceCost = new EntitySet<ServiceCost>(new Action<ServiceCost>(this.attach_ServiceCost), new Action<ServiceCost>(this.detach_ServiceCost));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassCode
		{
			get
			{
				return this._CarClassCode;
			}
			set
			{
				if ((this._CarClassCode != value))
				{
					this.OnCarClassCodeChanging(value);
					this.SendPropertyChanging();
					this._CarClassCode = value;
					this.SendPropertyChanged("CarClassCode");
					this.OnCarClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassName
		{
			get
			{
				return this._CarClassName;
			}
			set
			{
				if ((this._CarClassName != value))
				{
					this.OnCarClassNameChanging(value);
					this.SendPropertyChanging();
					this._CarClassName = value;
					this.SendPropertyChanged("CarClassName");
					this.OnCarClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarClass_CarGrade", Storage="_CarGrade", ThisKey="CarClassCode", OtherKey="CarClassCode")]
		public EntitySet<CarGrade> CarGrade
		{
			get
			{
				return this._CarGrade;
			}
			set
			{
				this._CarGrade.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarClass_ServiceCost", Storage="_ServiceCost", ThisKey="CarClassCode", OtherKey="CarClassCode")]
		public EntitySet<ServiceCost> ServiceCost
		{
			get
			{
				return this._ServiceCost;
			}
			set
			{
				this._ServiceCost.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.CarClass = this;
		}
		
		private void detach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.CarClass = null;
		}
		
		private void attach_ServiceCost(ServiceCost entity)
		{
			this.SendPropertyChanging();
			entity.CarClass = this;
		}
		
		private void detach_ServiceCost(ServiceCost entity)
		{
			this.SendPropertyChanging();
			entity.CarClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarColor")]
	public partial class CarColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarColorCode;
		
		private string _CarColorName;
		
		private string _MakerCode;
		
		private string _ColorCategory;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _MakerColorCode;
		
		private string _InteriorColorFlag;
		
		private string _ExteriorColorFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCar1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader1;
		
		private EntitySet<CarAvailableColor> _CarAvailableColor;
		
		private EntityRef<Maker> _Maker;
		
		private EntityRef<c_ColorCategory> _c_ColorCategory;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarColorCodeChanging(string value);
    partial void OnCarColorCodeChanged();
    partial void OnCarColorNameChanging(string value);
    partial void OnCarColorNameChanged();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnColorCategoryChanging(string value);
    partial void OnColorCategoryChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnMakerColorCodeChanging(string value);
    partial void OnMakerColorCodeChanged();
    partial void OnInteriorColorFlagChanging(string value);
    partial void OnInteriorColorFlagChanged();
    partial void OnExteriorColorFlagChanging(string value);
    partial void OnExteriorColorFlagChanged();
    #endregion
		
		public CarColor()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCar1 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar1), new Action<SalesCar>(this.detach_SalesCar1));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarSalesHeader1 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader1), new Action<CarSalesHeader>(this.detach_CarSalesHeader1));
			this._CarAvailableColor = new EntitySet<CarAvailableColor>(new Action<CarAvailableColor>(this.attach_CarAvailableColor), new Action<CarAvailableColor>(this.detach_CarAvailableColor));
			this._Maker = default(EntityRef<Maker>);
			this._c_ColorCategory = default(EntityRef<c_ColorCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarColorCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarColorCode
		{
			get
			{
				return this._CarColorCode;
			}
			set
			{
				if ((this._CarColorCode != value))
				{
					this.OnCarColorCodeChanging(value);
					this.SendPropertyChanging();
					this._CarColorCode = value;
					this.SendPropertyChanged("CarColorCode");
					this.OnCarColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarColorName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarColorName
		{
			get
			{
				return this._CarColorName;
			}
			set
			{
				if ((this._CarColorName != value))
				{
					this.OnCarColorNameChanging(value);
					this.SendPropertyChanging();
					this._CarColorName = value;
					this.SendPropertyChanged("CarColorName");
					this.OnCarColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					if (this._Maker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorCategory", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColorCategory
		{
			get
			{
				return this._ColorCategory;
			}
			set
			{
				if ((this._ColorCategory != value))
				{
					if (this._c_ColorCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorCategoryChanging(value);
					this.SendPropertyChanging();
					this._ColorCategory = value;
					this.SendPropertyChanged("ColorCategory");
					this.OnColorCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerColorCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerColorCode
		{
			get
			{
				return this._MakerColorCode;
			}
			set
			{
				if ((this._MakerColorCode != value))
				{
					this.OnMakerColorCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerColorCode = value;
					this.SendPropertyChanged("MakerColorCode");
					this.OnMakerColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorFlag", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorFlag
		{
			get
			{
				return this._InteriorColorFlag;
			}
			set
			{
				if ((this._InteriorColorFlag != value))
				{
					this.OnInteriorColorFlagChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorFlag = value;
					this.SendPropertyChanged("InteriorColorFlag");
					this.OnInteriorColorFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorFlag", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorFlag
		{
			get
			{
				return this._ExteriorColorFlag;
			}
			set
			{
				if ((this._ExteriorColorFlag != value))
				{
					this.OnExteriorColorFlagChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorFlag = value;
					this.SendPropertyChanged("ExteriorColorFlag");
					this.OnExteriorColorFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_SalesCar", Storage="_SalesCar", ThisKey="CarColorCode", OtherKey="ExteriorColorCode")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_SalesCar1", Storage="_SalesCar1", ThisKey="CarColorCode", OtherKey="InteriorColorCode")]
		public EntitySet<SalesCar> SalesCar1
		{
			get
			{
				return this._SalesCar1;
			}
			set
			{
				this._SalesCar1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="CarColorCode", OtherKey="ExteriorColorCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarSalesHeader1", Storage="_CarSalesHeader1", ThisKey="CarColorCode", OtherKey="InteriorColorCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader1
		{
			get
			{
				return this._CarSalesHeader1;
			}
			set
			{
				this._CarSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarAvailableColor", Storage="_CarAvailableColor", ThisKey="CarColorCode", OtherKey="CarColorCode")]
		public EntitySet<CarAvailableColor> CarAvailableColor
		{
			get
			{
				return this._CarAvailableColor;
			}
			set
			{
				this._CarAvailableColor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_CarColor", Storage="_Maker", ThisKey="MakerCode", OtherKey="MakerCode", IsForeignKey=true)]
		public Maker Maker
		{
			get
			{
				return this._Maker.Entity;
			}
			set
			{
				Maker previousValue = this._Maker.Entity;
				if (((previousValue != value) 
							|| (this._Maker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maker.Entity = null;
						previousValue.CarColor.Remove(this);
					}
					this._Maker.Entity = value;
					if ((value != null))
					{
						value.CarColor.Add(this);
						this._MakerCode = value.MakerCode;
					}
					else
					{
						this._MakerCode = default(string);
					}
					this.SendPropertyChanged("Maker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ColorCategory_CarColor", Storage="_c_ColorCategory", ThisKey="ColorCategory", OtherKey="Code", IsForeignKey=true)]
		public c_ColorCategory c_ColorCategory
		{
			get
			{
				return this._c_ColorCategory.Entity;
			}
			set
			{
				c_ColorCategory previousValue = this._c_ColorCategory.Entity;
				if (((previousValue != value) 
							|| (this._c_ColorCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ColorCategory.Entity = null;
						previousValue.CarColor.Remove(this);
					}
					this._c_ColorCategory.Entity = value;
					if ((value != null))
					{
						value.CarColor.Add(this);
						this._ColorCategory = value.Code;
					}
					else
					{
						this._ColorCategory = default(string);
					}
					this.SendPropertyChanged("c_ColorCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarColor = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarColor = null;
		}
		
		private void attach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarColor1 = this;
		}
		
		private void detach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarColor1 = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ExteriorColor = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ExteriorColor = null;
		}
		
		private void attach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.InteriorColor = this;
		}
		
		private void detach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.InteriorColor = null;
		}
		
		private void attach_CarAvailableColor(CarAvailableColor entity)
		{
			this.SendPropertyChanging();
			entity.CarColor = this;
		}
		
		private void detach_CarAvailableColor(CarAvailableColor entity)
		{
			this.SendPropertyChanging();
			entity.CarColor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarGrade")]
	public partial class CarGrade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarGradeCode;
		
		private string _CarGradeName;
		
		private string _ModelCode;
		
		private string _CarCode;
		
		private string _CarClassCode;
		
		private string _ModelYear;
		
		private string _Door;
		
		private string _TransMission;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<System.DateTime> _SalesStartDate;
		
		private System.Nullable<System.DateTime> _SalesEndDate;
		
		private System.Nullable<int> _MaximumLoadingWeight;
		
		private System.Nullable<int> _CarWeight;
		
		private System.Nullable<int> _TotalCarWeight;
		
		private string _DrivingName;
		
		private string _ClassificationTypeNumber;
		
		private string _ModelSpecificateNumber;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private string _ModelName;
		
		private string _EngineType;
		
		private System.Nullable<decimal> _Displacement;
		
		private string _Fuel;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<int> _FFAxileWeight;
		
		private System.Nullable<int> _FRAxileWeight;
		
		private System.Nullable<int> _RFAxileWeight;
		
		private System.Nullable<int> _RRAxileWeight;
		
		private string _VehicleType;
		
		private System.Nullable<decimal> _InspectionRegistFee;
		
		private System.Nullable<decimal> _RecycleDeposit;
		
		private System.Nullable<decimal> _Under24;
		
		private System.Nullable<decimal> _Under26;
		
		private System.Nullable<decimal> _Under28;
		
		private System.Nullable<decimal> _Under30;
		
		private System.Nullable<decimal> _Under36;
		
		private System.Nullable<decimal> _Under72;
		
		private System.Nullable<decimal> _Under84;
		
		private System.Nullable<decimal> _Over84;
		
		private string _CarClassification;
		
		private string _Usage;
		
		private string _UsageType;
		
		private string _Figure;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<InstallableOption> _InstallableOption;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CampaignCar> _CampaignCar;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntitySet<CarAvailableColor> _CarAvailableColor;
		
		private EntityRef<CarClass> _CarClass;
		
		private EntityRef<c_DrivingName> _c_DrivingName;
		
		private EntityRef<c_TransMission> _c_TransMission;
		
		private EntityRef<Car> _Car;
		
		private EntityRef<c_VehicleType> _c_VehicleType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnCarGradeNameChanging(string value);
    partial void OnCarGradeNameChanged();
    partial void OnModelCodeChanging(string value);
    partial void OnModelCodeChanged();
    partial void OnCarCodeChanging(string value);
    partial void OnCarCodeChanged();
    partial void OnCarClassCodeChanging(string value);
    partial void OnCarClassCodeChanged();
    partial void OnModelYearChanging(string value);
    partial void OnModelYearChanged();
    partial void OnDoorChanging(string value);
    partial void OnDoorChanged();
    partial void OnTransMissionChanging(string value);
    partial void OnTransMissionChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnSalesStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesStartDateChanged();
    partial void OnSalesEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesEndDateChanged();
    partial void OnMaximumLoadingWeightChanging(System.Nullable<int> value);
    partial void OnMaximumLoadingWeightChanged();
    partial void OnCarWeightChanging(System.Nullable<int> value);
    partial void OnCarWeightChanged();
    partial void OnTotalCarWeightChanging(System.Nullable<int> value);
    partial void OnTotalCarWeightChanged();
    partial void OnDrivingNameChanging(string value);
    partial void OnDrivingNameChanged();
    partial void OnClassificationTypeNumberChanging(string value);
    partial void OnClassificationTypeNumberChanged();
    partial void OnModelSpecificateNumberChanging(string value);
    partial void OnModelSpecificateNumberChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnDisplacementChanging(System.Nullable<decimal> value);
    partial void OnDisplacementChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnFFAxileWeightChanging(System.Nullable<int> value);
    partial void OnFFAxileWeightChanged();
    partial void OnFRAxileWeightChanging(System.Nullable<int> value);
    partial void OnFRAxileWeightChanged();
    partial void OnRFAxileWeightChanging(System.Nullable<int> value);
    partial void OnRFAxileWeightChanged();
    partial void OnRRAxileWeightChanging(System.Nullable<int> value);
    partial void OnRRAxileWeightChanged();
    partial void OnVehicleTypeChanging(string value);
    partial void OnVehicleTypeChanged();
    partial void OnInspectionRegistCostChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistCostChanged();
    partial void OnRecycleDepositChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositChanged();
    partial void OnUnder24Changing(System.Nullable<decimal> value);
    partial void OnUnder24Changed();
    partial void OnUnder26Changing(System.Nullable<decimal> value);
    partial void OnUnder26Changed();
    partial void OnUnder28Changing(System.Nullable<decimal> value);
    partial void OnUnder28Changed();
    partial void OnUnder30Changing(System.Nullable<decimal> value);
    partial void OnUnder30Changed();
    partial void OnUnder36Changing(System.Nullable<decimal> value);
    partial void OnUnder36Changed();
    partial void OnUnder72Changing(System.Nullable<decimal> value);
    partial void OnUnder72Changed();
    partial void OnUnder84Changing(System.Nullable<decimal> value);
    partial void OnUnder84Changed();
    partial void OnOver84Changing(System.Nullable<decimal> value);
    partial void OnOver84Changed();
    partial void OnCarClassificationChanging(string value);
    partial void OnCarClassificationChanged();
    partial void OnUsageChanging(string value);
    partial void OnUsageChanged();
    partial void OnUsageTypeChanging(string value);
    partial void OnUsageTypeChanged();
    partial void OnFigureChanging(string value);
    partial void OnFigureChanged();
    #endregion
		
		public CarGrade()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._InstallableOption = new EntitySet<InstallableOption>(new Action<InstallableOption>(this.attach_InstallableOption), new Action<InstallableOption>(this.detach_InstallableOption));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CampaignCar = new EntitySet<CampaignCar>(new Action<CampaignCar>(this.attach_CampaignCar), new Action<CampaignCar>(this.detach_CampaignCar));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._CarAvailableColor = new EntitySet<CarAvailableColor>(new Action<CarAvailableColor>(this.attach_CarAvailableColor), new Action<CarAvailableColor>(this.detach_CarAvailableColor));
			this._CarClass = default(EntityRef<CarClass>);
			this._c_DrivingName = default(EntityRef<c_DrivingName>);
			this._c_TransMission = default(EntityRef<c_TransMission>);
			this._Car = default(EntityRef<Car>);
			this._c_VehicleType = default(EntityRef<c_VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this.OnCarGradeNameChanging(value);
					this.SendPropertyChanging();
					this._CarGradeName = value;
					this.SendPropertyChanged("CarGradeName");
					this.OnCarGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelCode
		{
			get
			{
				return this._ModelCode;
			}
			set
			{
				if ((this._ModelCode != value))
				{
					this.OnModelCodeChanging(value);
					this.SendPropertyChanging();
					this._ModelCode = value;
					this.SendPropertyChanged("ModelCode");
					this.OnModelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					if (this._Car.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarCodeChanging(value);
					this.SendPropertyChanging();
					this._CarCode = value;
					this.SendPropertyChanged("CarCode");
					this.OnCarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassCode
		{
			get
			{
				return this._CarClassCode;
			}
			set
			{
				if ((this._CarClassCode != value))
				{
					if (this._CarClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarClassCodeChanging(value);
					this.SendPropertyChanging();
					this._CarClassCode = value;
					this.SendPropertyChanged("CarClassCode");
					this.OnCarClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelYear", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelYear
		{
			get
			{
				return this._ModelYear;
			}
			set
			{
				if ((this._ModelYear != value))
				{
					this.OnModelYearChanging(value);
					this.SendPropertyChanging();
					this._ModelYear = value;
					this.SendPropertyChanged("ModelYear");
					this.OnModelYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Door", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this.OnDoorChanging(value);
					this.SendPropertyChanging();
					this._Door = value;
					this.SendPropertyChanged("Door");
					this.OnDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMission", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransMission
		{
			get
			{
				return this._TransMission;
			}
			set
			{
				if ((this._TransMission != value))
				{
					if (this._c_TransMission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransMissionChanging(value);
					this.SendPropertyChanging();
					this._TransMission = value;
					this.SendPropertyChanged("TransMission");
					this.OnTransMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesStartDate
		{
			get
			{
				return this._SalesStartDate;
			}
			set
			{
				if ((this._SalesStartDate != value))
				{
					this.OnSalesStartDateChanging(value);
					this.SendPropertyChanging();
					this._SalesStartDate = value;
					this.SendPropertyChanged("SalesStartDate");
					this.OnSalesStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesEndDate
		{
			get
			{
				return this._SalesEndDate;
			}
			set
			{
				if ((this._SalesEndDate != value))
				{
					this.OnSalesEndDateChanging(value);
					this.SendPropertyChanging();
					this._SalesEndDate = value;
					this.SendPropertyChanged("SalesEndDate");
					this.OnSalesEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumLoadingWeight", DbType="Int")]
		public System.Nullable<int> MaximumLoadingWeight
		{
			get
			{
				return this._MaximumLoadingWeight;
			}
			set
			{
				if ((this._MaximumLoadingWeight != value))
				{
					this.OnMaximumLoadingWeightChanging(value);
					this.SendPropertyChanging();
					this._MaximumLoadingWeight = value;
					this.SendPropertyChanged("MaximumLoadingWeight");
					this.OnMaximumLoadingWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeight", DbType="Int")]
		public System.Nullable<int> CarWeight
		{
			get
			{
				return this._CarWeight;
			}
			set
			{
				if ((this._CarWeight != value))
				{
					this.OnCarWeightChanging(value);
					this.SendPropertyChanging();
					this._CarWeight = value;
					this.SendPropertyChanged("CarWeight");
					this.OnCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCarWeight", DbType="Int")]
		public System.Nullable<int> TotalCarWeight
		{
			get
			{
				return this._TotalCarWeight;
			}
			set
			{
				if ((this._TotalCarWeight != value))
				{
					this.OnTotalCarWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalCarWeight = value;
					this.SendPropertyChanged("TotalCarWeight");
					this.OnTotalCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrivingName", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrivingName
		{
			get
			{
				return this._DrivingName;
			}
			set
			{
				if ((this._DrivingName != value))
				{
					if (this._c_DrivingName.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrivingNameChanging(value);
					this.SendPropertyChanging();
					this._DrivingName = value;
					this.SendPropertyChanged("DrivingName");
					this.OnDrivingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTypeNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ClassificationTypeNumber
		{
			get
			{
				return this._ClassificationTypeNumber;
			}
			set
			{
				if ((this._ClassificationTypeNumber != value))
				{
					this.OnClassificationTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTypeNumber = value;
					this.SendPropertyChanged("ClassificationTypeNumber");
					this.OnClassificationTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelSpecificateNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelSpecificateNumber
		{
			get
			{
				return this._ModelSpecificateNumber;
			}
			set
			{
				if ((this._ModelSpecificateNumber != value))
				{
					this.OnModelSpecificateNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelSpecificateNumber = value;
					this.SendPropertyChanged("ModelSpecificateNumber");
					this.OnModelSpecificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displacement", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Displacement
		{
			get
			{
				return this._Displacement;
			}
			set
			{
				if ((this._Displacement != value))
				{
					this.OnDisplacementChanging(value);
					this.SendPropertyChanging();
					this._Displacement = value;
					this.SendPropertyChanged("Displacement");
					this.OnDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFAxileWeight", DbType="Int")]
		public System.Nullable<int> FFAxileWeight
		{
			get
			{
				return this._FFAxileWeight;
			}
			set
			{
				if ((this._FFAxileWeight != value))
				{
					this.OnFFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FFAxileWeight = value;
					this.SendPropertyChanged("FFAxileWeight");
					this.OnFFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRAxileWeight", DbType="Int")]
		public System.Nullable<int> FRAxileWeight
		{
			get
			{
				return this._FRAxileWeight;
			}
			set
			{
				if ((this._FRAxileWeight != value))
				{
					this.OnFRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FRAxileWeight = value;
					this.SendPropertyChanged("FRAxileWeight");
					this.OnFRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFAxileWeight", DbType="Int")]
		public System.Nullable<int> RFAxileWeight
		{
			get
			{
				return this._RFAxileWeight;
			}
			set
			{
				if ((this._RFAxileWeight != value))
				{
					this.OnRFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RFAxileWeight = value;
					this.SendPropertyChanged("RFAxileWeight");
					this.OnRFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRAxileWeight", DbType="Int")]
		public System.Nullable<int> RRAxileWeight
		{
			get
			{
				return this._RRAxileWeight;
			}
			set
			{
				if ((this._RRAxileWeight != value))
				{
					this.OnRRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RRAxileWeight = value;
					this.SendPropertyChanged("RRAxileWeight");
					this.OnRRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string VehicleType
		{
			get
			{
				return this._VehicleType;
			}
			set
			{
				if ((this._VehicleType != value))
				{
					if (this._c_VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeChanging(value);
					this.SendPropertyChanging();
					this._VehicleType = value;
					this.SendPropertyChanged("VehicleType");
					this.OnVehicleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistCost
		{
			get
			{
				return this._InspectionRegistFee;
			}
			set
			{
				if ((this._InspectionRegistFee != value))
				{
					this.OnInspectionRegistCostChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistFee = value;
					this.SendPropertyChanged("InspectionRegistCost");
					this.OnInspectionRegistCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this.OnRecycleDepositChanging(value);
					this.SendPropertyChanging();
					this._RecycleDeposit = value;
					this.SendPropertyChanged("RecycleDeposit");
					this.OnRecycleDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under24", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under24
		{
			get
			{
				return this._Under24;
			}
			set
			{
				if ((this._Under24 != value))
				{
					this.OnUnder24Changing(value);
					this.SendPropertyChanging();
					this._Under24 = value;
					this.SendPropertyChanged("Under24");
					this.OnUnder24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under26", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under26
		{
			get
			{
				return this._Under26;
			}
			set
			{
				if ((this._Under26 != value))
				{
					this.OnUnder26Changing(value);
					this.SendPropertyChanging();
					this._Under26 = value;
					this.SendPropertyChanged("Under26");
					this.OnUnder26Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under28", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under28
		{
			get
			{
				return this._Under28;
			}
			set
			{
				if ((this._Under28 != value))
				{
					this.OnUnder28Changing(value);
					this.SendPropertyChanging();
					this._Under28 = value;
					this.SendPropertyChanged("Under28");
					this.OnUnder28Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under30", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under30
		{
			get
			{
				return this._Under30;
			}
			set
			{
				if ((this._Under30 != value))
				{
					this.OnUnder30Changing(value);
					this.SendPropertyChanging();
					this._Under30 = value;
					this.SendPropertyChanged("Under30");
					this.OnUnder30Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under36", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under36
		{
			get
			{
				return this._Under36;
			}
			set
			{
				if ((this._Under36 != value))
				{
					this.OnUnder36Changing(value);
					this.SendPropertyChanging();
					this._Under36 = value;
					this.SendPropertyChanged("Under36");
					this.OnUnder36Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under72", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under72
		{
			get
			{
				return this._Under72;
			}
			set
			{
				if ((this._Under72 != value))
				{
					this.OnUnder72Changing(value);
					this.SendPropertyChanging();
					this._Under72 = value;
					this.SendPropertyChanged("Under72");
					this.OnUnder72Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under84", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Under84
		{
			get
			{
				return this._Under84;
			}
			set
			{
				if ((this._Under84 != value))
				{
					this.OnUnder84Changing(value);
					this.SendPropertyChanging();
					this._Under84 = value;
					this.SendPropertyChanged("Under84");
					this.OnUnder84Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Over84", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Over84
		{
			get
			{
				return this._Over84;
			}
			set
			{
				if ((this._Over84 != value))
				{
					this.OnOver84Changing(value);
					this.SendPropertyChanging();
					this._Over84 = value;
					this.SendPropertyChanged("Over84");
					this.OnOver84Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassification", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassification
		{
			get
			{
				return this._CarClassification;
			}
			set
			{
				if ((this._CarClassification != value))
				{
					this.OnCarClassificationChanging(value);
					this.SendPropertyChanging();
					this._CarClassification = value;
					this.SendPropertyChanged("CarClassification");
					this.OnCarClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_InstallableOption", Storage="_InstallableOption", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<InstallableOption> InstallableOption
		{
			get
			{
				return this._InstallableOption;
			}
			set
			{
				this._InstallableOption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_SalesCar", Storage="_SalesCar", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CampaignCar", Storage="_CampaignCar", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<CampaignCar> CampaignCar
		{
			get
			{
				return this._CampaignCar;
			}
			set
			{
				this._CampaignCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CarAvailableColor", Storage="_CarAvailableColor", ThisKey="CarGradeCode", OtherKey="CarGradeCode")]
		public EntitySet<CarAvailableColor> CarAvailableColor
		{
			get
			{
				return this._CarAvailableColor;
			}
			set
			{
				this._CarAvailableColor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarClass_CarGrade", Storage="_CarClass", ThisKey="CarClassCode", OtherKey="CarClassCode", IsForeignKey=true)]
		public CarClass CarClass
		{
			get
			{
				return this._CarClass.Entity;
			}
			set
			{
				CarClass previousValue = this._CarClass.Entity;
				if (((previousValue != value) 
							|| (this._CarClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarClass.Entity = null;
						previousValue.CarGrade.Remove(this);
					}
					this._CarClass.Entity = value;
					if ((value != null))
					{
						value.CarGrade.Add(this);
						this._CarClassCode = value.CarClassCode;
					}
					else
					{
						this._CarClassCode = default(string);
					}
					this.SendPropertyChanged("CarClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DrivingName_CarGrade", Storage="_c_DrivingName", ThisKey="DrivingName", OtherKey="Code", IsForeignKey=true)]
		public c_DrivingName c_DrivingName
		{
			get
			{
				return this._c_DrivingName.Entity;
			}
			set
			{
				c_DrivingName previousValue = this._c_DrivingName.Entity;
				if (((previousValue != value) 
							|| (this._c_DrivingName.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_DrivingName.Entity = null;
						previousValue.CarGrade.Remove(this);
					}
					this._c_DrivingName.Entity = value;
					if ((value != null))
					{
						value.CarGrade.Add(this);
						this._DrivingName = value.Code;
					}
					else
					{
						this._DrivingName = default(string);
					}
					this.SendPropertyChanged("c_DrivingName");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TransMission_CarGrade", Storage="_c_TransMission", ThisKey="TransMission", OtherKey="Code", IsForeignKey=true)]
		public c_TransMission c_TransMission
		{
			get
			{
				return this._c_TransMission.Entity;
			}
			set
			{
				c_TransMission previousValue = this._c_TransMission.Entity;
				if (((previousValue != value) 
							|| (this._c_TransMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TransMission.Entity = null;
						previousValue.CarGrade.Remove(this);
					}
					this._c_TransMission.Entity = value;
					if ((value != null))
					{
						value.CarGrade.Add(this);
						this._TransMission = value.Code;
					}
					else
					{
						this._TransMission = default(string);
					}
					this.SendPropertyChanged("c_TransMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CarGrade", Storage="_Car", ThisKey="CarCode", OtherKey="CarCode", IsForeignKey=true)]
		public Car Car
		{
			get
			{
				return this._Car.Entity;
			}
			set
			{
				Car previousValue = this._Car.Entity;
				if (((previousValue != value) 
							|| (this._Car.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car.Entity = null;
						previousValue.CarGrade.Remove(this);
					}
					this._Car.Entity = value;
					if ((value != null))
					{
						value.CarGrade.Add(this);
						this._CarCode = value.CarCode;
					}
					else
					{
						this._CarCode = default(string);
					}
					this.SendPropertyChanged("Car");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VehicleType_CarGrade", Storage="_c_VehicleType", ThisKey="VehicleType", OtherKey="Code", IsForeignKey=true)]
		public c_VehicleType c_VehicleType
		{
			get
			{
				return this._c_VehicleType.Entity;
			}
			set
			{
				c_VehicleType previousValue = this._c_VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._c_VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_VehicleType.Entity = null;
						previousValue.CarGrade.Remove(this);
					}
					this._c_VehicleType.Entity = value;
					if ((value != null))
					{
						value.CarGrade.Add(this);
						this._VehicleType = value.Code;
					}
					else
					{
						this._VehicleType = default(string);
					}
					this.SendPropertyChanged("c_VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_InstallableOption(InstallableOption entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_InstallableOption(InstallableOption entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_CampaignCar(CampaignCar entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_CampaignCar(CampaignCar entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
		
		private void attach_CarAvailableColor(CarAvailableColor entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = this;
		}
		
		private void detach_CarAvailableColor(CarAvailableColor entity)
		{
			this.SendPropertyChanging();
			entity.CarGrade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarOption")]
	public partial class CarOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarOptionCode;
		
		private string _MakerCode;
		
		private string _CarOptionName;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _OptionType;
		
		private string _CarCode;
		
		private string _RequiredFlag;
		
		private EntitySet<InstallableOption> _InstallableOption;
		
		private EntitySet<CarSalesLine> _CarSalesLine;
		
		private EntitySet<ServiceRequestLine> _ServiceRequestLine;
		
		private EntityRef<Maker> _Maker;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarOptionCodeChanging(string value);
    partial void OnCarOptionCodeChanged();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnCarOptionNameChanging(string value);
    partial void OnCarOptionNameChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnOptionTypeChanging(string value);
    partial void OnOptionTypeChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnRequiredFlagChanging(string value);
    partial void OnRequiredFlagChanged();
    #endregion
		
		public CarOption()
		{
			this._InstallableOption = new EntitySet<InstallableOption>(new Action<InstallableOption>(this.attach_InstallableOption), new Action<InstallableOption>(this.detach_InstallableOption));
			this._CarSalesLine = new EntitySet<CarSalesLine>(new Action<CarSalesLine>(this.attach_CarSalesLine), new Action<CarSalesLine>(this.detach_CarSalesLine));
			this._ServiceRequestLine = new EntitySet<ServiceRequestLine>(new Action<ServiceRequestLine>(this.attach_ServiceRequestLine), new Action<ServiceRequestLine>(this.detach_ServiceRequestLine));
			this._Maker = default(EntityRef<Maker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					this.OnCarOptionCodeChanging(value);
					this.SendPropertyChanging();
					this._CarOptionCode = value;
					this.SendPropertyChanged("CarOptionCode");
					this.OnCarOptionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					if (this._Maker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionName
		{
			get
			{
				return this._CarOptionName;
			}
			set
			{
				if ((this._CarOptionName != value))
				{
					this.OnCarOptionNameChanging(value);
					this.SendPropertyChanging();
					this._CarOptionName = value;
					this.SendPropertyChanged("CarOptionName");
					this.OnCarOptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionType
		{
			get
			{
				return this._OptionType;
			}
			set
			{
				if ((this._OptionType != value))
				{
					this.OnOptionTypeChanging(value);
					this.SendPropertyChanging();
					this._OptionType = value;
					this.SendPropertyChanged("OptionType");
					this.OnOptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredFlag", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequiredFlag
		{
			get
			{
				return this._RequiredFlag;
			}
			set
			{
				if ((this._RequiredFlag != value))
				{
					this.OnRequiredFlagChanging(value);
					this.SendPropertyChanging();
					this._RequiredFlag = value;
					this.SendPropertyChanged("RequiredFlag");
					this.OnRequiredFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_InstallableOption", Storage="_InstallableOption", ThisKey="CarOptionCode", OtherKey="CarOptionCode")]
		public EntitySet<InstallableOption> InstallableOption
		{
			get
			{
				return this._InstallableOption;
			}
			set
			{
				this._InstallableOption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_CarSalesLine", Storage="_CarSalesLine", ThisKey="CarOptionCode", OtherKey="CarOptionCode")]
		public EntitySet<CarSalesLine> CarSalesLine
		{
			get
			{
				return this._CarSalesLine;
			}
			set
			{
				this._CarSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_ServiceRequestLine", Storage="_ServiceRequestLine", ThisKey="CarOptionCode", OtherKey="CarOptionCode")]
		public EntitySet<ServiceRequestLine> ServiceRequestLine
		{
			get
			{
				return this._ServiceRequestLine;
			}
			set
			{
				this._ServiceRequestLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_CarOption", Storage="_Maker", ThisKey="MakerCode", OtherKey="MakerCode", IsForeignKey=true)]
		public Maker Maker
		{
			get
			{
				return this._Maker.Entity;
			}
			set
			{
				Maker previousValue = this._Maker.Entity;
				if (((previousValue != value) 
							|| (this._Maker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maker.Entity = null;
						previousValue.CarOption.Remove(this);
					}
					this._Maker.Entity = value;
					if ((value != null))
					{
						value.CarOption.Add(this);
						this._MakerCode = value.MakerCode;
					}
					else
					{
						this._MakerCode = default(string);
					}
					this.SendPropertyChanged("Maker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstallableOption(InstallableOption entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = this;
		}
		
		private void detach_InstallableOption(InstallableOption entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = null;
		}
		
		private void attach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = this;
		}
		
		private void detach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = null;
		}
		
		private void attach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = this;
		}
		
		private void detach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.CarOption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyCode;
		
		private string _CompanyName;
		
		private string _EmployeeCode;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber1;
		
		private string _TelNumber2;
		
		private string _FaxNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<Brand> _Brand;
		
		private EntitySet<Office> _Office;
		
		private EntitySet<QuoteMessage> _QuoteMessage;
		
		private EntitySet<SetMenu> _SetMenu;
		
		private EntityRef<PartsAverageCost> _PartsAverageCost;
		
		private EntityRef<Employee> _Employee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumber1Changing(string value);
    partial void OnTelNumber1Changed();
    partial void OnTelNumber2Changing(string value);
    partial void OnTelNumber2Changed();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Company()
		{
			this._Brand = new EntitySet<Brand>(new Action<Brand>(this.attach_Brand), new Action<Brand>(this.detach_Brand));
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			this._QuoteMessage = new EntitySet<QuoteMessage>(new Action<QuoteMessage>(this.attach_QuoteMessage), new Action<QuoteMessage>(this.detach_QuoteMessage));
			this._SetMenu = new EntitySet<SetMenu>(new Action<SetMenu>(this.attach_SetMenu), new Action<SetMenu>(this.detach_SetMenu));
			this._PartsAverageCost = default(EntityRef<PartsAverageCost>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber1", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber1
		{
			get
			{
				return this._TelNumber1;
			}
			set
			{
				if ((this._TelNumber1 != value))
				{
					this.OnTelNumber1Changing(value);
					this.SendPropertyChanging();
					this._TelNumber1 = value;
					this.SendPropertyChanged("TelNumber1");
					this.OnTelNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber2", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber2
		{
			get
			{
				return this._TelNumber2;
			}
			set
			{
				if ((this._TelNumber2 != value))
				{
					this.OnTelNumber2Changing(value);
					this.SendPropertyChanging();
					this._TelNumber2 = value;
					this.SendPropertyChanged("TelNumber2");
					this.OnTelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Brand", Storage="_Brand", ThisKey="CompanyCode", OtherKey="CompanyCode")]
		public EntitySet<Brand> Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				this._Brand.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Office", Storage="_Office", ThisKey="CompanyCode", OtherKey="CompanyCode")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_QuoteMessage", Storage="_QuoteMessage", ThisKey="CompanyCode", OtherKey="CompanyCode")]
		public EntitySet<QuoteMessage> QuoteMessage
		{
			get
			{
				return this._QuoteMessage;
			}
			set
			{
				this._QuoteMessage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SetMenu", Storage="_SetMenu", ThisKey="CompanyCode", OtherKey="CompanyCode")]
		public EntitySet<SetMenu> SetMenu
		{
			get
			{
				return this._SetMenu;
			}
			set
			{
				this._SetMenu.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_PartsAverageCost", Storage="_PartsAverageCost", ThisKey="CompanyCode", OtherKey="CompanyCode", IsUnique=true, IsForeignKey=false)]
		public PartsAverageCost PartsAverageCost
		{
			get
			{
				return this._PartsAverageCost.Entity;
			}
			set
			{
				PartsAverageCost previousValue = this._PartsAverageCost.Entity;
				if (((previousValue != value) 
							|| (this._PartsAverageCost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartsAverageCost.Entity = null;
						previousValue.Company = null;
					}
					this._PartsAverageCost.Entity = value;
					if ((value != null))
					{
						value.Company = this;
					}
					this.SendPropertyChanged("PartsAverageCost");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Company", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Company.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Company.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Brand(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Brand(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_QuoteMessage(QuoteMessage entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_QuoteMessage(QuoteMessage entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_SetMenu(SetMenu entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_SetMenu(SetMenu entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon")]
	public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CouponCode;
		
		private string _CouponName;
		
		private string _CarBrandCode;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _Cost;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Brand> _Brand;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponCodeChanging(string value);
    partial void OnCouponCodeChanged();
    partial void OnCouponNameChanging(string value);
    partial void OnCouponNameChanged();
    partial void OnCarBrandCodeChanging(string value);
    partial void OnCarBrandCodeChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Coupon()
		{
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CouponCode
		{
			get
			{
				return this._CouponCode;
			}
			set
			{
				if ((this._CouponCode != value))
				{
					this.OnCouponCodeChanging(value);
					this.SendPropertyChanging();
					this._CouponCode = value;
					this.SendPropertyChanged("CouponCode");
					this.OnCouponCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CouponName
		{
			get
			{
				return this._CouponName;
			}
			set
			{
				if ((this._CouponName != value))
				{
					this.OnCouponNameChanging(value);
					this.SendPropertyChanging();
					this._CouponName = value;
					this.SendPropertyChanged("CouponName");
					this.OnCouponNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._CarBrandCode = value;
					this.SendPropertyChanged("CarBrandCode");
					this.OnCarBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Coupon", Storage="_Brand", ThisKey="CarBrandCode", OtherKey="CarBrandCode", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._CarBrandCode = value.CarBrandCode;
					}
					else
					{
						this._CarBrandCode = default(string);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCode;
		
		private string _CustomerRank;
		
		private string _CustomerKind;
		
		private string _CustomerName;
		
		private string _CustomerType;
		
		private string _PaymentKind;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Occupation;
		
		private string _CarOwner;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber;
		
		private string _FaxNumber;
		
		private string _MailAddress;
		
		private string _MobileNumber;
		
		private string _MobileMailAddress;
		
		private string _CustomerClaimCode;
		
		private string _DmFlag;
		
		private string _DmMemo;
		
		private string _CarEmployeeCode;
		
		private string _ServiceEmployeeCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _FirstReceiptionDate;
		
		private System.Nullable<System.DateTime> _LastReceiptionDate;
		
		private string _CustomerNameKana;
		
		private string _WorkingCompanyName;
		
		private string _WorkingCompanyAddress;
		
		private string _WorkingCompanyTelNumber;
		
		private string _PositionName;
		
		private string _CustomerEmployeeName;
		
		private string _AccountEmployeeName;
		
		private string _Memo;
		
		private string _DepartmentCode;
		
		private string _CorporationType;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FirstNameKana;
		
		private string _LastNameKana;
		
		private string _ServiceDepartmentCode;
		
		private bool _AddressReconfirm;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCarByUser;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader2;
		
		private EntityRef<SupplierPayment> _SupplierPayment;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntitySet<CustomerUpdateLog> _CustomerUpdateLog;
		
		private EntityRef<CustomerDM> _CustomerDM;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<c_Allowance> _c_Allowance;
		
		private EntityRef<c_CarOwner> _c_CarOwner;
		
		private EntityRef<c_CustomerKind> _c_CustomerKind;
		
		private EntityRef<c_CustomerRank> _c_CustomerRank;
		
		private EntityRef<c_CustomerType> _c_CustomerType;
		
		private EntityRef<c_Occupation> _c_Occupation;
		
		private EntityRef<c_PaymentKind> _c_PaymentKind;
		
		private EntityRef<c_Sex> _c_Sex;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<c_CorporationType> _c_CorporationType;
		
		private EntityRef<Department> _ServiceDepartment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerRankChanging(string value);
    partial void OnCustomerRankChanged();
    partial void OnCustomerKindChanging(string value);
    partial void OnCustomerKindChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerTypeChanging(string value);
    partial void OnCustomerTypeChanged();
    partial void OnPaymentKindChanging(string value);
    partial void OnPaymentKindChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnCarOwnerChanging(string value);
    partial void OnCarOwnerChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumberChanging(string value);
    partial void OnTelNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnMobileMailAddressChanging(string value);
    partial void OnMobileMailAddressChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnDmFlagChanging(string value);
    partial void OnDmFlagChanged();
    partial void OnDmMemoChanging(string value);
    partial void OnDmMemoChanged();
    partial void OnCarEmployeeCodeChanging(string value);
    partial void OnCarEmployeeCodeChanged();
    partial void OnServiceEmployeeCodeChanging(string value);
    partial void OnServiceEmployeeCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnFirstReceiptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstReceiptionDateChanged();
    partial void OnLastReceiptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReceiptionDateChanged();
    partial void OnCustomerNameKanaChanging(string value);
    partial void OnCustomerNameKanaChanged();
    partial void OnWorkingCompanyNameChanging(string value);
    partial void OnWorkingCompanyNameChanged();
    partial void OnWorkingCompanyAddressChanging(string value);
    partial void OnWorkingCompanyAddressChanged();
    partial void OnWorkingCompanyTelNumberChanging(string value);
    partial void OnWorkingCompanyTelNumberChanged();
    partial void OnPositionNameChanging(string value);
    partial void OnPositionNameChanged();
    partial void OnCustomerEmployeeNameChanging(string value);
    partial void OnCustomerEmployeeNameChanged();
    partial void OnAccountEmployeeNameChanging(string value);
    partial void OnAccountEmployeeNameChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCorporationTypeChanging(string value);
    partial void OnCorporationTypeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameKanaChanging(string value);
    partial void OnFirstNameKanaChanged();
    partial void OnLastNameKanaChanging(string value);
    partial void OnLastNameKanaChanged();
    partial void OnServiceDepartmentCodeChanging(string value);
    partial void OnServiceDepartmentCodeChanged();
    partial void OnAddressReconfirmChanging(bool value);
    partial void OnAddressReconfirmChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Customer()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCarByUser = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCarByUser), new Action<SalesCar>(this.detach_SalesCarByUser));
			this._Supplier = default(EntityRef<Supplier>);
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarSalesHeader1 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader1), new Action<CarSalesHeader>(this.detach_CarSalesHeader1));
			this._CarSalesHeader2 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader2), new Action<CarSalesHeader>(this.detach_CarSalesHeader2));
			this._SupplierPayment = default(EntityRef<SupplierPayment>);
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._CustomerUpdateLog = new EntitySet<CustomerUpdateLog>(new Action<CustomerUpdateLog>(this.attach_CustomerUpdateLog), new Action<CustomerUpdateLog>(this.detach_CustomerUpdateLog));
			this._CustomerDM = default(EntityRef<CustomerDM>);
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			this._c_Allowance = default(EntityRef<c_Allowance>);
			this._c_CarOwner = default(EntityRef<c_CarOwner>);
			this._c_CustomerKind = default(EntityRef<c_CustomerKind>);
			this._c_CustomerRank = default(EntityRef<c_CustomerRank>);
			this._c_CustomerType = default(EntityRef<c_CustomerType>);
			this._c_Occupation = default(EntityRef<c_Occupation>);
			this._c_PaymentKind = default(EntityRef<c_PaymentKind>);
			this._c_Sex = default(EntityRef<c_Sex>);
			this._Department = default(EntityRef<Department>);
			this._c_CorporationType = default(EntityRef<c_CorporationType>);
			this._ServiceDepartment = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerRank", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerRank
		{
			get
			{
				return this._CustomerRank;
			}
			set
			{
				if ((this._CustomerRank != value))
				{
					if (this._c_CustomerRank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerRankChanging(value);
					this.SendPropertyChanging();
					this._CustomerRank = value;
					this.SendPropertyChanged("CustomerRank");
					this.OnCustomerRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerKind", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerKind
		{
			get
			{
				return this._CustomerKind;
			}
			set
			{
				if ((this._CustomerKind != value))
				{
					if (this._c_CustomerKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerKindChanging(value);
					this.SendPropertyChanging();
					this._CustomerKind = value;
					this.SendPropertyChanged("CustomerKind");
					this.OnCustomerKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					if (this._c_CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKind", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKind
		{
			get
			{
				return this._PaymentKind;
			}
			set
			{
				if ((this._PaymentKind != value))
				{
					if (this._c_PaymentKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentKindChanging(value);
					this.SendPropertyChanging();
					this._PaymentKind = value;
					this.SendPropertyChanged("PaymentKind");
					this.OnPaymentKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					if (this._c_Sex.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					if (this._c_Occupation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOwner", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOwner
		{
			get
			{
				return this._CarOwner;
			}
			set
			{
				if ((this._CarOwner != value))
				{
					if (this._c_CarOwner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOwnerChanging(value);
					this.SendPropertyChanging();
					this._CarOwner = value;
					this.SendPropertyChanged("CarOwner");
					this.OnCarOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this.OnTelNumberChanging(value);
					this.SendPropertyChanging();
					this._TelNumber = value;
					this.SendPropertyChanged("TelNumber");
					this.OnTelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileMailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileMailAddress
		{
			get
			{
				return this._MobileMailAddress;
			}
			set
			{
				if ((this._MobileMailAddress != value))
				{
					this.OnMobileMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MobileMailAddress = value;
					this.SendPropertyChanged("MobileMailAddress");
					this.OnMobileMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmFlag
		{
			get
			{
				return this._DmFlag;
			}
			set
			{
				if ((this._DmFlag != value))
				{
					if (this._c_Allowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDmFlagChanging(value);
					this.SendPropertyChanging();
					this._DmFlag = value;
					this.SendPropertyChanged("DmFlag");
					this.OnDmFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmMemo
		{
			get
			{
				return this._DmMemo;
			}
			set
			{
				if ((this._DmMemo != value))
				{
					this.OnDmMemoChanging(value);
					this.SendPropertyChanging();
					this._DmMemo = value;
					this.SendPropertyChanged("DmMemo");
					this.OnDmMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarEmployeeCode
		{
			get
			{
				return this._CarEmployeeCode;
			}
			set
			{
				if ((this._CarEmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarEmployeeCode = value;
					this.SendPropertyChanged("CarEmployeeCode");
					this.OnCarEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceEmployeeCode
		{
			get
			{
				return this._ServiceEmployeeCode;
			}
			set
			{
				if ((this._ServiceEmployeeCode != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceEmployeeCode = value;
					this.SendPropertyChanged("ServiceEmployeeCode");
					this.OnServiceEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstReceiptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstReceiptionDate
		{
			get
			{
				return this._FirstReceiptionDate;
			}
			set
			{
				if ((this._FirstReceiptionDate != value))
				{
					this.OnFirstReceiptionDateChanging(value);
					this.SendPropertyChanging();
					this._FirstReceiptionDate = value;
					this.SendPropertyChanged("FirstReceiptionDate");
					this.OnFirstReceiptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReceiptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReceiptionDate
		{
			get
			{
				return this._LastReceiptionDate;
			}
			set
			{
				if ((this._LastReceiptionDate != value))
				{
					this.OnLastReceiptionDateChanging(value);
					this.SendPropertyChanging();
					this._LastReceiptionDate = value;
					this.SendPropertyChanged("LastReceiptionDate");
					this.OnLastReceiptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNameKana", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerNameKana
		{
			get
			{
				return this._CustomerNameKana;
			}
			set
			{
				if ((this._CustomerNameKana != value))
				{
					this.OnCustomerNameKanaChanging(value);
					this.SendPropertyChanging();
					this._CustomerNameKana = value;
					this.SendPropertyChanged("CustomerNameKana");
					this.OnCustomerNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingCompanyName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkingCompanyName
		{
			get
			{
				return this._WorkingCompanyName;
			}
			set
			{
				if ((this._WorkingCompanyName != value))
				{
					this.OnWorkingCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._WorkingCompanyName = value;
					this.SendPropertyChanged("WorkingCompanyName");
					this.OnWorkingCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingCompanyAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkingCompanyAddress
		{
			get
			{
				return this._WorkingCompanyAddress;
			}
			set
			{
				if ((this._WorkingCompanyAddress != value))
				{
					this.OnWorkingCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._WorkingCompanyAddress = value;
					this.SendPropertyChanged("WorkingCompanyAddress");
					this.OnWorkingCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingCompanyTelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkingCompanyTelNumber
		{
			get
			{
				return this._WorkingCompanyTelNumber;
			}
			set
			{
				if ((this._WorkingCompanyTelNumber != value))
				{
					this.OnWorkingCompanyTelNumberChanging(value);
					this.SendPropertyChanging();
					this._WorkingCompanyTelNumber = value;
					this.SendPropertyChanged("WorkingCompanyTelNumber");
					this.OnWorkingCompanyTelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this.OnPositionNameChanging(value);
					this.SendPropertyChanging();
					this._PositionName = value;
					this.SendPropertyChanged("PositionName");
					this.OnPositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerEmployeeName
		{
			get
			{
				return this._CustomerEmployeeName;
			}
			set
			{
				if ((this._CustomerEmployeeName != value))
				{
					this.OnCustomerEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmployeeName = value;
					this.SendPropertyChanged("CustomerEmployeeName");
					this.OnCustomerEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountEmployeeName
		{
			get
			{
				return this._AccountEmployeeName;
			}
			set
			{
				if ((this._AccountEmployeeName != value))
				{
					this.OnAccountEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._AccountEmployeeName = value;
					this.SendPropertyChanged("AccountEmployeeName");
					this.OnAccountEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorporationType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CorporationType
		{
			get
			{
				return this._CorporationType;
			}
			set
			{
				if ((this._CorporationType != value))
				{
					if (this._c_CorporationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorporationTypeChanging(value);
					this.SendPropertyChanging();
					this._CorporationType = value;
					this.SendPropertyChanged("CorporationType");
					this.OnCorporationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstNameKana
		{
			get
			{
				return this._FirstNameKana;
			}
			set
			{
				if ((this._FirstNameKana != value))
				{
					this.OnFirstNameKanaChanging(value);
					this.SendPropertyChanging();
					this._FirstNameKana = value;
					this.SendPropertyChanged("FirstNameKana");
					this.OnFirstNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastNameKana
		{
			get
			{
				return this._LastNameKana;
			}
			set
			{
				if ((this._LastNameKana != value))
				{
					this.OnLastNameKanaChanging(value);
					this.SendPropertyChanging();
					this._LastNameKana = value;
					this.SendPropertyChanged("LastNameKana");
					this.OnLastNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentCode
		{
			get
			{
				return this._ServiceDepartmentCode;
			}
			set
			{
				if ((this._ServiceDepartmentCode != value))
				{
					if (this._ServiceDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceDepartmentCode = value;
					this.SendPropertyChanged("ServiceDepartmentCode");
					this.OnServiceDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressReconfirm", DbType="Bit NOT NULL")]
		public bool AddressReconfirm
		{
			get
			{
				return this._AddressReconfirm;
			}
			set
			{
				if ((this._AddressReconfirm != value))
				{
					this.OnAddressReconfirmChanging(value);
					this.SendPropertyChanging();
					this._AddressReconfirm = value;
					this.SendPropertyChanged("AddressReconfirm");
					this.OnAddressReconfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerClaim", Storage="_CustomerClaim", ThisKey="CustomerCode", OtherKey="CustomerClaimCode", IsUnique=true, IsForeignKey=false)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.Customer = null;
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="CustomerCode", OtherKey="CustomerCode")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesCar", Storage="_SalesCar", ThisKey="CustomerCode", OtherKey="OwnerCode")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesCar1", Storage="_SalesCarByUser", ThisKey="CustomerCode", OtherKey="UserCode")]
		public EntitySet<SalesCar> SalesCarByUser
		{
			get
			{
				return this._SalesCarByUser;
			}
			set
			{
				this._SalesCarByUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Supplier", Storage="_Supplier", ThisKey="CustomerCode", OtherKey="SupplierCode", IsUnique=true, IsForeignKey=false)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Customer = null;
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="CustomerCode", OtherKey="CustomerCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader1", Storage="_CarSalesHeader1", ThisKey="CustomerCode", OtherKey="PossesorCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader1
		{
			get
			{
				return this._CarSalesHeader1;
			}
			set
			{
				this._CarSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader2", Storage="_CarSalesHeader2", ThisKey="CustomerCode", OtherKey="UserCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader2
		{
			get
			{
				return this._CarSalesHeader2;
			}
			set
			{
				this._CarSalesHeader2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SupplierPayment", Storage="_SupplierPayment", ThisKey="CustomerCode", OtherKey="SupplierPaymentCode", IsUnique=true, IsForeignKey=false)]
		public SupplierPayment SupplierPayment
		{
			get
			{
				return this._SupplierPayment.Entity;
			}
			set
			{
				SupplierPayment previousValue = this._SupplierPayment.Entity;
				if (((previousValue != value) 
							|| (this._SupplierPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierPayment.Entity = null;
						previousValue.Customer = null;
					}
					this._SupplierPayment.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("SupplierPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="CustomerCode", OtherKey="CustomerCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerUpdateLog", Storage="_CustomerUpdateLog", ThisKey="CustomerCode", OtherKey="CustomerCode")]
		public EntitySet<CustomerUpdateLog> CustomerUpdateLog
		{
			get
			{
				return this._CustomerUpdateLog;
			}
			set
			{
				this._CustomerUpdateLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerDM", Storage="_CustomerDM", ThisKey="CustomerCode", OtherKey="CustomerCode", IsUnique=true, IsForeignKey=false)]
		public CustomerDM CustomerDM
		{
			get
			{
				return this._CustomerDM.Entity;
			}
			set
			{
				CustomerDM previousValue = this._CustomerDM.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDM.Entity = null;
						previousValue.Customer = null;
					}
					this._CustomerDM.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
					}
					this.SendPropertyChanged("CustomerDM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Customer", Storage="_Employee", ThisKey="CarEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CarEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._CarEmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Customer1", Storage="_Employee1", ThisKey="ServiceEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Customer1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Customer1.Add(this);
						this._ServiceEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._ServiceEmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Allowance_Customer", Storage="_c_Allowance", ThisKey="DmFlag", OtherKey="Code", IsForeignKey=true)]
		public c_Allowance c_Allowance
		{
			get
			{
				return this._c_Allowance.Entity;
			}
			set
			{
				c_Allowance previousValue = this._c_Allowance.Entity;
				if (((previousValue != value) 
							|| (this._c_Allowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Allowance.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_Allowance.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._DmFlag = value.Code;
					}
					else
					{
						this._DmFlag = default(string);
					}
					this.SendPropertyChanged("c_Allowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarOwner_Customer", Storage="_c_CarOwner", ThisKey="CarOwner", OtherKey="Code", IsForeignKey=true)]
		public c_CarOwner c_CarOwner
		{
			get
			{
				return this._c_CarOwner.Entity;
			}
			set
			{
				c_CarOwner previousValue = this._c_CarOwner.Entity;
				if (((previousValue != value) 
							|| (this._c_CarOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CarOwner.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_CarOwner.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CarOwner = value.Code;
					}
					else
					{
						this._CarOwner = default(string);
					}
					this.SendPropertyChanged("c_CarOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerKind_Customer", Storage="_c_CustomerKind", ThisKey="CustomerKind", OtherKey="Code", IsForeignKey=true)]
		public c_CustomerKind c_CustomerKind
		{
			get
			{
				return this._c_CustomerKind.Entity;
			}
			set
			{
				c_CustomerKind previousValue = this._c_CustomerKind.Entity;
				if (((previousValue != value) 
							|| (this._c_CustomerKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CustomerKind.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_CustomerKind.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CustomerKind = value.Code;
					}
					else
					{
						this._CustomerKind = default(string);
					}
					this.SendPropertyChanged("c_CustomerKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerRank_Customer", Storage="_c_CustomerRank", ThisKey="CustomerRank", OtherKey="Code", IsForeignKey=true)]
		public c_CustomerRank c_CustomerRank
		{
			get
			{
				return this._c_CustomerRank.Entity;
			}
			set
			{
				c_CustomerRank previousValue = this._c_CustomerRank.Entity;
				if (((previousValue != value) 
							|| (this._c_CustomerRank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CustomerRank.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_CustomerRank.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CustomerRank = value.Code;
					}
					else
					{
						this._CustomerRank = default(string);
					}
					this.SendPropertyChanged("c_CustomerRank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerType_Customer", Storage="_c_CustomerType", ThisKey="CustomerType", OtherKey="Code", IsForeignKey=true)]
		public c_CustomerType c_CustomerType
		{
			get
			{
				return this._c_CustomerType.Entity;
			}
			set
			{
				c_CustomerType previousValue = this._c_CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._c_CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CustomerType.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_CustomerType.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CustomerType = value.Code;
					}
					else
					{
						this._CustomerType = default(string);
					}
					this.SendPropertyChanged("c_CustomerType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Occupation_Customer", Storage="_c_Occupation", ThisKey="Occupation", OtherKey="Code", IsForeignKey=true)]
		public c_Occupation c_Occupation
		{
			get
			{
				return this._c_Occupation.Entity;
			}
			set
			{
				c_Occupation previousValue = this._c_Occupation.Entity;
				if (((previousValue != value) 
							|| (this._c_Occupation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Occupation.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_Occupation.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._Occupation = value.Code;
					}
					else
					{
						this._Occupation = default(string);
					}
					this.SendPropertyChanged("c_Occupation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentKind_Customer", Storage="_c_PaymentKind", ThisKey="PaymentKind", OtherKey="Code", IsForeignKey=true)]
		public c_PaymentKind c_PaymentKind
		{
			get
			{
				return this._c_PaymentKind.Entity;
			}
			set
			{
				c_PaymentKind previousValue = this._c_PaymentKind.Entity;
				if (((previousValue != value) 
							|| (this._c_PaymentKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PaymentKind.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_PaymentKind.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._PaymentKind = value.Code;
					}
					else
					{
						this._PaymentKind = default(string);
					}
					this.SendPropertyChanged("c_PaymentKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Sex_Customer", Storage="_c_Sex", ThisKey="Sex", OtherKey="Code", IsForeignKey=true)]
		public c_Sex c_Sex
		{
			get
			{
				return this._c_Sex.Entity;
			}
			set
			{
				c_Sex previousValue = this._c_Sex.Entity;
				if (((previousValue != value) 
							|| (this._c_Sex.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Sex.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_Sex.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._Sex = value.Code;
					}
					else
					{
						this._Sex = default(string);
					}
					this.SendPropertyChanged("c_Sex");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Customer", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CorporationType_Customer", Storage="_c_CorporationType", ThisKey="CorporationType", OtherKey="Code", IsForeignKey=true)]
		public c_CorporationType c_CorporationType
		{
			get
			{
				return this._c_CorporationType.Entity;
			}
			set
			{
				c_CorporationType previousValue = this._c_CorporationType.Entity;
				if (((previousValue != value) 
							|| (this._c_CorporationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CorporationType.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._c_CorporationType.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._CorporationType = value.Code;
					}
					else
					{
						this._CorporationType = default(string);
					}
					this.SendPropertyChanged("c_CorporationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Customer1", Storage="_ServiceDepartment", ThisKey="ServiceDepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department ServiceDepartment
		{
			get
			{
				return this._ServiceDepartment.Entity;
			}
			set
			{
				Department previousValue = this._ServiceDepartment.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDepartment.Entity = null;
						previousValue.Customer1.Remove(this);
					}
					this._ServiceDepartment.Entity = value;
					if ((value != null))
					{
						value.Customer1.Add(this);
						this._ServiceDepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._ServiceDepartmentCode = default(string);
					}
					this.SendPropertyChanged("ServiceDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_SalesCarByUser(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SalesCarByUser(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Possesor = this;
		}
		
		private void detach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Possesor = null;
		}
		
		private void attach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CustomerUpdateLog(CustomerUpdateLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CustomerUpdateLog(CustomerUpdateLog entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerClaim")]
	public partial class CustomerClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _CustomerClaimType;
		
		private string _PaymentKindType;
		
		private string _RoundType;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber1;
		
		private string _TelNumber2;
		
		private string _FaxNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntitySet<CustomerClaimable> _CustomerClaimable;
		
		private EntitySet<Loan> _Loan;
		
		private EntitySet<CarSalesPayment> _CarSalesPayment;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<ServiceSalesPayment> _ServiceSalesPayment;
		
		private EntitySet<Journal> _Journal;
		
		private EntitySet<ReceiptPlan> _ReceiptPlan;
		
		private EntitySet<ServiceWorkCustomerClaim> _ServiceWorkCustomerClaim;
		
		private EntityRef<c_CustomerClaimType> _c_CustomerClaimType;
		
		private EntityRef<c_OnOff> _c_OnOff;
		
		private EntityRef<c_RoundType> _c_RoundType;
		
		private EntityRef<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnCustomerClaimNameChanging(string value);
    partial void OnCustomerClaimNameChanged();
    partial void OnCustomerClaimTypeChanging(string value);
    partial void OnCustomerClaimTypeChanged();
    partial void OnPaymentKindTypeChanging(string value);
    partial void OnPaymentKindTypeChanged();
    partial void OnRoundTypeChanging(string value);
    partial void OnRoundTypeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumber1Changing(string value);
    partial void OnTelNumber1Changed();
    partial void OnTelNumber2Changing(string value);
    partial void OnTelNumber2Changed();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public CustomerClaim()
		{
			this._CustomerClaimable = new EntitySet<CustomerClaimable>(new Action<CustomerClaimable>(this.attach_CustomerClaimable), new Action<CustomerClaimable>(this.detach_CustomerClaimable));
			this._Loan = new EntitySet<Loan>(new Action<Loan>(this.attach_Loan), new Action<Loan>(this.detach_Loan));
			this._CarSalesPayment = new EntitySet<CarSalesPayment>(new Action<CarSalesPayment>(this.attach_CarSalesPayment), new Action<CarSalesPayment>(this.detach_CarSalesPayment));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._ServiceSalesPayment = new EntitySet<ServiceSalesPayment>(new Action<ServiceSalesPayment>(this.attach_ServiceSalesPayment), new Action<ServiceSalesPayment>(this.detach_ServiceSalesPayment));
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			this._ReceiptPlan = new EntitySet<ReceiptPlan>(new Action<ReceiptPlan>(this.attach_ReceiptPlan), new Action<ReceiptPlan>(this.detach_ReceiptPlan));
			this._ServiceWorkCustomerClaim = new EntitySet<ServiceWorkCustomerClaim>(new Action<ServiceWorkCustomerClaim>(this.attach_ServiceWorkCustomerClaim), new Action<ServiceWorkCustomerClaim>(this.detach_ServiceWorkCustomerClaim));
			this._c_CustomerClaimType = default(EntityRef<c_CustomerClaimType>);
			this._c_OnOff = default(EntityRef<c_OnOff>);
			this._c_RoundType = default(EntityRef<c_RoundType>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this.OnCustomerClaimNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimName = value;
					this.SendPropertyChanged("CustomerClaimName");
					this.OnCustomerClaimNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimType", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimType
		{
			get
			{
				return this._CustomerClaimType;
			}
			set
			{
				if ((this._CustomerClaimType != value))
				{
					if (this._c_CustomerClaimType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimType = value;
					this.SendPropertyChanged("CustomerClaimType");
					this.OnCustomerClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindType", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindType
		{
			get
			{
				return this._PaymentKindType;
			}
			set
			{
				if ((this._PaymentKindType != value))
				{
					if (this._c_OnOff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentKindTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindType = value;
					this.SendPropertyChanged("PaymentKindType");
					this.OnPaymentKindTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoundType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RoundType
		{
			get
			{
				return this._RoundType;
			}
			set
			{
				if ((this._RoundType != value))
				{
					if (this._c_RoundType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoundTypeChanging(value);
					this.SendPropertyChanging();
					this._RoundType = value;
					this.SendPropertyChanged("RoundType");
					this.OnRoundTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber1", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber1
		{
			get
			{
				return this._TelNumber1;
			}
			set
			{
				if ((this._TelNumber1 != value))
				{
					this.OnTelNumber1Changing(value);
					this.SendPropertyChanging();
					this._TelNumber1 = value;
					this.SendPropertyChanged("TelNumber1");
					this.OnTelNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber2", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber2
		{
			get
			{
				return this._TelNumber2;
			}
			set
			{
				if ((this._TelNumber2 != value))
				{
					this.OnTelNumber2Changing(value);
					this.SendPropertyChanging();
					this._TelNumber2 = value;
					this.SendPropertyChanged("TelNumber2");
					this.OnTelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_CustomerClaimable", Storage="_CustomerClaimable", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<CustomerClaimable> CustomerClaimable
		{
			get
			{
				return this._CustomerClaimable;
			}
			set
			{
				this._CustomerClaimable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_Loan", Storage="_Loan", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<Loan> Loan
		{
			get
			{
				return this._Loan;
			}
			set
			{
				this._Loan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_CarSalesPayment", Storage="_CarSalesPayment", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<CarSalesPayment> CarSalesPayment
		{
			get
			{
				return this._CarSalesPayment;
			}
			set
			{
				this._CarSalesPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceSalesPayment", Storage="_ServiceSalesPayment", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<ServiceSalesPayment> ServiceSalesPayment
		{
			get
			{
				return this._ServiceSalesPayment;
			}
			set
			{
				this._ServiceSalesPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_Journal", Storage="_Journal", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ReceiptPlan", Storage="_ReceiptPlan", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<ReceiptPlan> ReceiptPlan
		{
			get
			{
				return this._ReceiptPlan;
			}
			set
			{
				this._ReceiptPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceWorkCustomerClaim", Storage="_ServiceWorkCustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode")]
		public EntitySet<ServiceWorkCustomerClaim> ServiceWorkCustomerClaim
		{
			get
			{
				return this._ServiceWorkCustomerClaim;
			}
			set
			{
				this._ServiceWorkCustomerClaim.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerClaimType_CustomerClaim", Storage="_c_CustomerClaimType", ThisKey="CustomerClaimType", OtherKey="Code", IsForeignKey=true)]
		public c_CustomerClaimType c_CustomerClaimType
		{
			get
			{
				return this._c_CustomerClaimType.Entity;
			}
			set
			{
				c_CustomerClaimType previousValue = this._c_CustomerClaimType.Entity;
				if (((previousValue != value) 
							|| (this._c_CustomerClaimType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CustomerClaimType.Entity = null;
						previousValue.CustomerClaim.Remove(this);
					}
					this._c_CustomerClaimType.Entity = value;
					if ((value != null))
					{
						value.CustomerClaim.Add(this);
						this._CustomerClaimType = value.Code;
					}
					else
					{
						this._CustomerClaimType = default(string);
					}
					this.SendPropertyChanged("c_CustomerClaimType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_CustomerClaim", Storage="_c_OnOff", ThisKey="PaymentKindType", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff
		{
			get
			{
				return this._c_OnOff.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff.Entity = null;
						previousValue.CustomerClaim.Remove(this);
					}
					this._c_OnOff.Entity = value;
					if ((value != null))
					{
						value.CustomerClaim.Add(this);
						this._PaymentKindType = value.Code;
					}
					else
					{
						this._PaymentKindType = default(string);
					}
					this.SendPropertyChanged("c_OnOff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RoundType_CustomerClaim", Storage="_c_RoundType", ThisKey="RoundType", OtherKey="Code", IsForeignKey=true)]
		public c_RoundType c_RoundType
		{
			get
			{
				return this._c_RoundType.Entity;
			}
			set
			{
				c_RoundType previousValue = this._c_RoundType.Entity;
				if (((previousValue != value) 
							|| (this._c_RoundType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_RoundType.Entity = null;
						previousValue.CustomerClaim.Remove(this);
					}
					this._c_RoundType.Entity = value;
					if ((value != null))
					{
						value.CustomerClaim.Add(this);
						this._RoundType = value.Code;
					}
					else
					{
						this._RoundType = default(string);
					}
					this.SendPropertyChanged("c_RoundType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerClaim", Storage="_Customer", ThisKey="CustomerClaimCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerClaim = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerClaim = this;
						this._CustomerClaimCode = value.CustomerCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerClaimable(CustomerClaimable entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_CustomerClaimable(CustomerClaimable entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_Loan(Loan entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_Loan(Loan entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_CarSalesPayment(CarSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_CarSalesPayment(CarSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_ServiceSalesPayment(ServiceSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_ServiceSalesPayment(ServiceSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
		
		private void attach_ServiceWorkCustomerClaim(ServiceWorkCustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = this;
		}
		
		private void detach_ServiceWorkCustomerClaim(ServiceWorkCustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.CustomerClaim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerClaimable")]
	public partial class CustomerClaimable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerClaimCode;
		
		private string _PaymentKindCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntityRef<PaymentKind> _PaymentKind;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnPaymentKindCodeChanging(string value);
    partial void OnPaymentKindCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CustomerClaimable()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._PaymentKind = default(EntityRef<PaymentKind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindCode
		{
			get
			{
				return this._PaymentKindCode;
			}
			set
			{
				if ((this._PaymentKindCode != value))
				{
					if (this._PaymentKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentKindCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindCode = value;
					this.SendPropertyChanged("PaymentKindCode");
					this.OnPaymentKindCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_CustomerClaimable", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.CustomerClaimable.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.CustomerClaimable.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentKind_CustomerClaimable", Storage="_PaymentKind", ThisKey="PaymentKindCode", OtherKey="PaymentKindCode", IsForeignKey=true)]
		public PaymentKind PaymentKind
		{
			get
			{
				return this._PaymentKind.Entity;
			}
			set
			{
				PaymentKind previousValue = this._PaymentKind.Entity;
				if (((previousValue != value) 
							|| (this._PaymentKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentKind.Entity = null;
						previousValue.CustomerClaimable.Remove(this);
					}
					this._PaymentKind.Entity = value;
					if ((value != null))
					{
						value.CustomerClaimable.Add(this);
						this._PaymentKindCode = value.PaymentKindCode;
					}
					else
					{
						this._PaymentKindCode = default(string);
					}
					this.SendPropertyChanged("PaymentKind");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerReceiption")]
	public partial class CustomerReceiption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarReceiptionId;
		
		private System.DateTime _ReceiptionDate;
		
		private string _DepartmentCode;
		
		private string _CustomerCode;
		
		private string _EmployeeCode;
		
		private string _VisitOpportunity;
		
		private string _ReceiptionType;
		
		private string _EventCode;
		
		private string _KnowOpportunity;
		
		private string _Purpose;
		
		private string _Demand;
		
		private string _AttractivePoint;
		
		private string _Questionarie;
		
		private string _MediaOpportunity;
		
		private string _InterestedCar1;
		
		private string _InterestedCar2;
		
		private string _InterestedCar3;
		
		private string _InterestedCar4;
		
		private string _Memo1;
		
		private string _Memo2;
		
		private string _Memo3;
		
		private string _Question1;
		
		private string _Answer1;
		
		private string _Question2;
		
		private string _Answer2;
		
		private string _Question3;
		
		private string _Answer3;
		
		private string _Question4;
		
		private string _Answer4;
		
		private string _Question5;
		
		private string _Answer5;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _RequestContent;
		
		private string _ReceiptionState;
		
		private string _CarGradeCode;
		
		private string _Vin;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CampaignCode2;
		
		private System.Nullable<System.DateTime> _QuestionnarieEntryDate;
		
		private string _MileageUnit;
		
		private string _RequestDetail;
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _FirstRegistrationYear;
		
		private EntityRef<CarGrade> _CarGrade;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<c_ReceiptionState> _c_ReceiptionState;
		
		private EntityRef<c_ReceiptionType> _c_ReceiptionType;
		
		private EntityRef<c_VisitOpportunity> _c_VisitOpportunity;
		
		private EntityRef<c_RequestContent> _c_RequestContent;
		
		private EntityRef<c_Purpose> _c_Purpose;
		
		private EntityRef<c_KnowOpportunity> _c_KnowOpportunity;
		
		private EntityRef<c_Demand> _c_Demand;
		
		private EntityRef<c_AttractivePoint> _c_AttractivePoint;
		
		private EntityRef<c_Allowance> _c_Allowance;
		
		private EntityRef<SalesCar> _SalesCar;
		
		private EntityRef<Car> _Car1;
		
		private EntityRef<Car> _Car2;
		
		private EntityRef<Car> _Car3;
		
		private EntityRef<Car> _Car4;
		
		private EntityRef<Campaign> _Campaign1;
		
		private EntityRef<Campaign> _Campaign2;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarReceiptionIdChanging(System.Guid value);
    partial void OnCarReceiptionIdChanged();
    partial void OnReceiptionDateChanging(System.DateTime value);
    partial void OnReceiptionDateChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnVisitOpportunityChanging(string value);
    partial void OnVisitOpportunityChanged();
    partial void OnReceiptionTypeChanging(string value);
    partial void OnReceiptionTypeChanged();
    partial void OnCampaignCode1Changing(string value);
    partial void OnCampaignCode1Changed();
    partial void OnKnowOpportunityChanging(string value);
    partial void OnKnowOpportunityChanged();
    partial void OnPurposeChanging(string value);
    partial void OnPurposeChanged();
    partial void OnDemandChanging(string value);
    partial void OnDemandChanged();
    partial void OnAttractivePointChanging(string value);
    partial void OnAttractivePointChanged();
    partial void OnQuestionnarieChanging(string value);
    partial void OnQuestionnarieChanged();
    partial void OnMediaOpportunityChanging(string value);
    partial void OnMediaOpportunityChanged();
    partial void OnInterestedCar1Changing(string value);
    partial void OnInterestedCar1Changed();
    partial void OnInterestedCar2Changing(string value);
    partial void OnInterestedCar2Changed();
    partial void OnInterestedCar3Changing(string value);
    partial void OnInterestedCar3Changed();
    partial void OnInterestedCar4Changing(string value);
    partial void OnInterestedCar4Changed();
    partial void OnMemo1Changing(string value);
    partial void OnMemo1Changed();
    partial void OnMemo2Changing(string value);
    partial void OnMemo2Changed();
    partial void OnMemo3Changing(string value);
    partial void OnMemo3Changed();
    partial void OnQuestion1Changing(string value);
    partial void OnQuestion1Changed();
    partial void OnAnswer1Changing(string value);
    partial void OnAnswer1Changed();
    partial void OnQuestion2Changing(string value);
    partial void OnQuestion2Changed();
    partial void OnAnswer2Changing(string value);
    partial void OnAnswer2Changed();
    partial void OnQuestion3Changing(string value);
    partial void OnQuestion3Changed();
    partial void OnAnswer3Changing(string value);
    partial void OnAnswer3Changed();
    partial void OnQuestion4Changing(string value);
    partial void OnQuestion4Changed();
    partial void OnAnswer4Changing(string value);
    partial void OnAnswer4Changed();
    partial void OnQuestion5Changing(string value);
    partial void OnQuestion5Changed();
    partial void OnAnswer5Changing(string value);
    partial void OnAnswer5Changed();
    partial void OnArrivalPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalPlanDateChanged();
    partial void OnRequestContentChanging(string value);
    partial void OnRequestContentChanged();
    partial void OnReceiptionStateChanging(string value);
    partial void OnReceiptionStateChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnRegistrationNumberTypeChanging(string value);
    partial void OnRegistrationNumberTypeChanged();
    partial void OnRegistrationNumberKanaChanging(string value);
    partial void OnRegistrationNumberKanaChanged();
    partial void OnRegistrationNumberPlateChanging(string value);
    partial void OnRegistrationNumberPlateChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCampaignCode2Changing(string value);
    partial void OnCampaignCode2Changed();
    partial void OnQuestionnarieEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuestionnarieEntryDateChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnRequestDetailChanging(string value);
    partial void OnRequestDetailChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnFirstRegistrationYearChanging(string value);
    partial void OnFirstRegistrationYearChanged();
    #endregion
		
		public CustomerReceiption()
		{
			this._CarGrade = default(EntityRef<CarGrade>);
			this._Customer = default(EntityRef<Customer>);
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._c_ReceiptionState = default(EntityRef<c_ReceiptionState>);
			this._c_ReceiptionType = default(EntityRef<c_ReceiptionType>);
			this._c_VisitOpportunity = default(EntityRef<c_VisitOpportunity>);
			this._c_RequestContent = default(EntityRef<c_RequestContent>);
			this._c_Purpose = default(EntityRef<c_Purpose>);
			this._c_KnowOpportunity = default(EntityRef<c_KnowOpportunity>);
			this._c_Demand = default(EntityRef<c_Demand>);
			this._c_AttractivePoint = default(EntityRef<c_AttractivePoint>);
			this._c_Allowance = default(EntityRef<c_Allowance>);
			this._SalesCar = default(EntityRef<SalesCar>);
			this._Car1 = default(EntityRef<Car>);
			this._Car2 = default(EntityRef<Car>);
			this._Car3 = default(EntityRef<Car>);
			this._Car4 = default(EntityRef<Car>);
			this._Campaign1 = default(EntityRef<Campaign>);
			this._Campaign2 = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarReceiptionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarReceiptionId
		{
			get
			{
				return this._CarReceiptionId;
			}
			set
			{
				if ((this._CarReceiptionId != value))
				{
					this.OnCarReceiptionIdChanging(value);
					this.SendPropertyChanging();
					this._CarReceiptionId = value;
					this.SendPropertyChanged("CarReceiptionId");
					this.OnCarReceiptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceiptionDate
		{
			get
			{
				return this._ReceiptionDate;
			}
			set
			{
				if ((this._ReceiptionDate != value))
				{
					this.OnReceiptionDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptionDate = value;
					this.SendPropertyChanged("ReceiptionDate");
					this.OnReceiptionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitOpportunity", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string VisitOpportunity
		{
			get
			{
				return this._VisitOpportunity;
			}
			set
			{
				if ((this._VisitOpportunity != value))
				{
					if (this._c_VisitOpportunity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVisitOpportunityChanging(value);
					this.SendPropertyChanging();
					this._VisitOpportunity = value;
					this.SendPropertyChanged("VisitOpportunity");
					this.OnVisitOpportunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionType
		{
			get
			{
				return this._ReceiptionType;
			}
			set
			{
				if ((this._ReceiptionType != value))
				{
					if (this._c_ReceiptionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptionType = value;
					this.SendPropertyChanged("ReceiptionType");
					this.OnReceiptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode1
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					if (this._Campaign1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCode1Changing(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("CampaignCode1");
					this.OnCampaignCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KnowOpportunity", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string KnowOpportunity
		{
			get
			{
				return this._KnowOpportunity;
			}
			set
			{
				if ((this._KnowOpportunity != value))
				{
					if (this._c_KnowOpportunity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKnowOpportunityChanging(value);
					this.SendPropertyChanging();
					this._KnowOpportunity = value;
					this.SendPropertyChanged("KnowOpportunity");
					this.OnKnowOpportunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purpose", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Purpose
		{
			get
			{
				return this._Purpose;
			}
			set
			{
				if ((this._Purpose != value))
				{
					if (this._c_Purpose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurposeChanging(value);
					this.SendPropertyChanging();
					this._Purpose = value;
					this.SendPropertyChanged("Purpose");
					this.OnPurposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Demand", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Demand
		{
			get
			{
				return this._Demand;
			}
			set
			{
				if ((this._Demand != value))
				{
					if (this._c_Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandChanging(value);
					this.SendPropertyChanging();
					this._Demand = value;
					this.SendPropertyChanged("Demand");
					this.OnDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttractivePoint", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AttractivePoint
		{
			get
			{
				return this._AttractivePoint;
			}
			set
			{
				if ((this._AttractivePoint != value))
				{
					if (this._c_AttractivePoint.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttractivePointChanging(value);
					this.SendPropertyChanging();
					this._AttractivePoint = value;
					this.SendPropertyChanged("AttractivePoint");
					this.OnAttractivePointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Questionarie", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Questionnarie
		{
			get
			{
				return this._Questionarie;
			}
			set
			{
				if ((this._Questionarie != value))
				{
					if (this._c_Allowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuestionnarieChanging(value);
					this.SendPropertyChanging();
					this._Questionarie = value;
					this.SendPropertyChanged("Questionnarie");
					this.OnQuestionnarieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaOpportunity", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MediaOpportunity
		{
			get
			{
				return this._MediaOpportunity;
			}
			set
			{
				if ((this._MediaOpportunity != value))
				{
					this.OnMediaOpportunityChanging(value);
					this.SendPropertyChanging();
					this._MediaOpportunity = value;
					this.SendPropertyChanged("MediaOpportunity");
					this.OnMediaOpportunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestedCar1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InterestedCar1
		{
			get
			{
				return this._InterestedCar1;
			}
			set
			{
				if ((this._InterestedCar1 != value))
				{
					if (this._Car1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestedCar1Changing(value);
					this.SendPropertyChanging();
					this._InterestedCar1 = value;
					this.SendPropertyChanged("InterestedCar1");
					this.OnInterestedCar1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestedCar2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InterestedCar2
		{
			get
			{
				return this._InterestedCar2;
			}
			set
			{
				if ((this._InterestedCar2 != value))
				{
					if (this._Car2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestedCar2Changing(value);
					this.SendPropertyChanging();
					this._InterestedCar2 = value;
					this.SendPropertyChanged("InterestedCar2");
					this.OnInterestedCar2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestedCar3", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InterestedCar3
		{
			get
			{
				return this._InterestedCar3;
			}
			set
			{
				if ((this._InterestedCar3 != value))
				{
					if (this._Car3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestedCar3Changing(value);
					this.SendPropertyChanging();
					this._InterestedCar3 = value;
					this.SendPropertyChanged("InterestedCar3");
					this.OnInterestedCar3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestedCar4", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InterestedCar4
		{
			get
			{
				return this._InterestedCar4;
			}
			set
			{
				if ((this._InterestedCar4 != value))
				{
					if (this._Car4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestedCar4Changing(value);
					this.SendPropertyChanging();
					this._InterestedCar4 = value;
					this.SendPropertyChanged("InterestedCar4");
					this.OnInterestedCar4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo1
		{
			get
			{
				return this._Memo1;
			}
			set
			{
				if ((this._Memo1 != value))
				{
					this.OnMemo1Changing(value);
					this.SendPropertyChanging();
					this._Memo1 = value;
					this.SendPropertyChanged("Memo1");
					this.OnMemo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo2
		{
			get
			{
				return this._Memo2;
			}
			set
			{
				if ((this._Memo2 != value))
				{
					this.OnMemo2Changing(value);
					this.SendPropertyChanging();
					this._Memo2 = value;
					this.SendPropertyChanged("Memo2");
					this.OnMemo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo3", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo3
		{
			get
			{
				return this._Memo3;
			}
			set
			{
				if ((this._Memo3 != value))
				{
					this.OnMemo3Changing(value);
					this.SendPropertyChanging();
					this._Memo3 = value;
					this.SendPropertyChanged("Memo3");
					this.OnMemo3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question1", DbType="NVarChar(60)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Question1
		{
			get
			{
				return this._Question1;
			}
			set
			{
				if ((this._Question1 != value))
				{
					this.OnQuestion1Changing(value);
					this.SendPropertyChanging();
					this._Question1 = value;
					this.SendPropertyChanged("Question1");
					this.OnQuestion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Answer1
		{
			get
			{
				return this._Answer1;
			}
			set
			{
				if ((this._Answer1 != value))
				{
					this.OnAnswer1Changing(value);
					this.SendPropertyChanging();
					this._Answer1 = value;
					this.SendPropertyChanged("Answer1");
					this.OnAnswer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question2", DbType="NVarChar(60)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Question2
		{
			get
			{
				return this._Question2;
			}
			set
			{
				if ((this._Question2 != value))
				{
					this.OnQuestion2Changing(value);
					this.SendPropertyChanging();
					this._Question2 = value;
					this.SendPropertyChanged("Question2");
					this.OnQuestion2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Answer2
		{
			get
			{
				return this._Answer2;
			}
			set
			{
				if ((this._Answer2 != value))
				{
					this.OnAnswer2Changing(value);
					this.SendPropertyChanging();
					this._Answer2 = value;
					this.SendPropertyChanged("Answer2");
					this.OnAnswer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question3", DbType="NVarChar(60)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Question3
		{
			get
			{
				return this._Question3;
			}
			set
			{
				if ((this._Question3 != value))
				{
					this.OnQuestion3Changing(value);
					this.SendPropertyChanging();
					this._Question3 = value;
					this.SendPropertyChanged("Question3");
					this.OnQuestion3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer3", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Answer3
		{
			get
			{
				return this._Answer3;
			}
			set
			{
				if ((this._Answer3 != value))
				{
					this.OnAnswer3Changing(value);
					this.SendPropertyChanging();
					this._Answer3 = value;
					this.SendPropertyChanged("Answer3");
					this.OnAnswer3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question4", DbType="NVarChar(60)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Question4
		{
			get
			{
				return this._Question4;
			}
			set
			{
				if ((this._Question4 != value))
				{
					this.OnQuestion4Changing(value);
					this.SendPropertyChanging();
					this._Question4 = value;
					this.SendPropertyChanged("Question4");
					this.OnQuestion4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer4", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Answer4
		{
			get
			{
				return this._Answer4;
			}
			set
			{
				if ((this._Answer4 != value))
				{
					this.OnAnswer4Changing(value);
					this.SendPropertyChanging();
					this._Answer4 = value;
					this.SendPropertyChanged("Answer4");
					this.OnAnswer4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question5", DbType="NVarChar(60)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Question5
		{
			get
			{
				return this._Question5;
			}
			set
			{
				if ((this._Question5 != value))
				{
					this.OnQuestion5Changing(value);
					this.SendPropertyChanging();
					this._Question5 = value;
					this.SendPropertyChanged("Question5");
					this.OnQuestion5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer5", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Answer5
		{
			get
			{
				return this._Answer5;
			}
			set
			{
				if ((this._Answer5 != value))
				{
					this.OnAnswer5Changing(value);
					this.SendPropertyChanging();
					this._Answer5 = value;
					this.SendPropertyChanged("Answer5");
					this.OnAnswer5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this.OnArrivalPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalPlanDate = value;
					this.SendPropertyChanged("ArrivalPlanDate");
					this.OnArrivalPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestContent", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestContent
		{
			get
			{
				return this._RequestContent;
			}
			set
			{
				if ((this._RequestContent != value))
				{
					if (this._c_RequestContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestContentChanging(value);
					this.SendPropertyChanging();
					this._RequestContent = value;
					this.SendPropertyChanged("RequestContent");
					this.OnRequestContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionState", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionState
		{
			get
			{
				return this._ReceiptionState;
			}
			set
			{
				if ((this._ReceiptionState != value))
				{
					if (this._c_ReceiptionState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptionStateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptionState = value;
					this.SendPropertyChanged("ReceiptionState");
					this.OnReceiptionStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this.OnRegistrationNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberType = value;
					this.SendPropertyChanged("RegistrationNumberType");
					this.OnRegistrationNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this.OnRegistrationNumberKanaChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberKana = value;
					this.SendPropertyChanged("RegistrationNumberKana");
					this.OnRegistrationNumberKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this.OnRegistrationNumberPlateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberPlate = value;
					this.SendPropertyChanged("RegistrationNumberPlate");
					this.OnRegistrationNumberPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode2
		{
			get
			{
				return this._CampaignCode2;
			}
			set
			{
				if ((this._CampaignCode2 != value))
				{
					if (this._Campaign2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCode2Changing(value);
					this.SendPropertyChanging();
					this._CampaignCode2 = value;
					this.SendPropertyChanged("CampaignCode2");
					this.OnCampaignCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionnarieEntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuestionnarieEntryDate
		{
			get
			{
				return this._QuestionnarieEntryDate;
			}
			set
			{
				if ((this._QuestionnarieEntryDate != value))
				{
					this.OnQuestionnarieEntryDateChanging(value);
					this.SendPropertyChanging();
					this._QuestionnarieEntryDate = value;
					this.SendPropertyChanged("QuestionnarieEntryDate");
					this.OnQuestionnarieEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDetail", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestDetail
		{
			get
			{
				return this._RequestDetail;
			}
			set
			{
				if ((this._RequestDetail != value))
				{
					this.OnRequestDetailChanging(value);
					this.SendPropertyChanging();
					this._RequestDetail = value;
					this.SendPropertyChanged("RequestDetail");
					this.OnRequestDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					if (this._SalesCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationYear", DbType="NVarChar(9)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistrationYear
		{
			get
			{
				return this._FirstRegistrationYear;
			}
			set
			{
				if ((this._FirstRegistrationYear != value))
				{
					this.OnFirstRegistrationYearChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationYear = value;
					this.SendPropertyChanged("FirstRegistrationYear");
					this.OnFirstRegistrationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CustomerReceiption", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerReceiption", Storage="_Customer", ThisKey="CustomerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._CustomerCode = value.CustomerCode;
					}
					else
					{
						this._CustomerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CustomerReceiption", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CustomerReceiption", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ReceiptionState_CustomerReceiption", Storage="_c_ReceiptionState", ThisKey="ReceiptionState", OtherKey="Code", IsForeignKey=true)]
		public c_ReceiptionState c_ReceiptionState
		{
			get
			{
				return this._c_ReceiptionState.Entity;
			}
			set
			{
				c_ReceiptionState previousValue = this._c_ReceiptionState.Entity;
				if (((previousValue != value) 
							|| (this._c_ReceiptionState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ReceiptionState.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_ReceiptionState.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._ReceiptionState = value.Code;
					}
					else
					{
						this._ReceiptionState = default(string);
					}
					this.SendPropertyChanged("c_ReceiptionState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ReceiptionType_CustomerReceiption", Storage="_c_ReceiptionType", ThisKey="ReceiptionType", OtherKey="Code", IsForeignKey=true)]
		public c_ReceiptionType c_ReceiptionType
		{
			get
			{
				return this._c_ReceiptionType.Entity;
			}
			set
			{
				c_ReceiptionType previousValue = this._c_ReceiptionType.Entity;
				if (((previousValue != value) 
							|| (this._c_ReceiptionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ReceiptionType.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_ReceiptionType.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._ReceiptionType = value.Code;
					}
					else
					{
						this._ReceiptionType = default(string);
					}
					this.SendPropertyChanged("c_ReceiptionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VisitOpportunity_CustomerReceiption", Storage="_c_VisitOpportunity", ThisKey="VisitOpportunity", OtherKey="Code", IsForeignKey=true)]
		public c_VisitOpportunity c_VisitOpportunity
		{
			get
			{
				return this._c_VisitOpportunity.Entity;
			}
			set
			{
				c_VisitOpportunity previousValue = this._c_VisitOpportunity.Entity;
				if (((previousValue != value) 
							|| (this._c_VisitOpportunity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_VisitOpportunity.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_VisitOpportunity.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._VisitOpportunity = value.Code;
					}
					else
					{
						this._VisitOpportunity = default(string);
					}
					this.SendPropertyChanged("c_VisitOpportunity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RequestContent_CustomerReceiption", Storage="_c_RequestContent", ThisKey="RequestContent", OtherKey="Code", IsForeignKey=true)]
		public c_RequestContent c_RequestContent
		{
			get
			{
				return this._c_RequestContent.Entity;
			}
			set
			{
				c_RequestContent previousValue = this._c_RequestContent.Entity;
				if (((previousValue != value) 
							|| (this._c_RequestContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_RequestContent.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_RequestContent.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._RequestContent = value.Code;
					}
					else
					{
						this._RequestContent = default(string);
					}
					this.SendPropertyChanged("c_RequestContent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Purpose_CustomerReceiption", Storage="_c_Purpose", ThisKey="Purpose", OtherKey="Code", IsForeignKey=true)]
		public c_Purpose c_Purpose
		{
			get
			{
				return this._c_Purpose.Entity;
			}
			set
			{
				c_Purpose previousValue = this._c_Purpose.Entity;
				if (((previousValue != value) 
							|| (this._c_Purpose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Purpose.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_Purpose.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._Purpose = value.Code;
					}
					else
					{
						this._Purpose = default(string);
					}
					this.SendPropertyChanged("c_Purpose");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_KnowOpportunity_CustomerReceiption", Storage="_c_KnowOpportunity", ThisKey="KnowOpportunity", OtherKey="Code", IsForeignKey=true)]
		public c_KnowOpportunity c_KnowOpportunity
		{
			get
			{
				return this._c_KnowOpportunity.Entity;
			}
			set
			{
				c_KnowOpportunity previousValue = this._c_KnowOpportunity.Entity;
				if (((previousValue != value) 
							|| (this._c_KnowOpportunity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_KnowOpportunity.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_KnowOpportunity.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._KnowOpportunity = value.Code;
					}
					else
					{
						this._KnowOpportunity = default(string);
					}
					this.SendPropertyChanged("c_KnowOpportunity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Demand_CustomerReceiption", Storage="_c_Demand", ThisKey="Demand", OtherKey="Code", IsForeignKey=true)]
		public c_Demand c_Demand
		{
			get
			{
				return this._c_Demand.Entity;
			}
			set
			{
				c_Demand previousValue = this._c_Demand.Entity;
				if (((previousValue != value) 
							|| (this._c_Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Demand.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_Demand.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._Demand = value.Code;
					}
					else
					{
						this._Demand = default(string);
					}
					this.SendPropertyChanged("c_Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AttractivePoint_CustomerReceiption", Storage="_c_AttractivePoint", ThisKey="AttractivePoint", OtherKey="Code", IsForeignKey=true)]
		public c_AttractivePoint c_AttractivePoint
		{
			get
			{
				return this._c_AttractivePoint.Entity;
			}
			set
			{
				c_AttractivePoint previousValue = this._c_AttractivePoint.Entity;
				if (((previousValue != value) 
							|| (this._c_AttractivePoint.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_AttractivePoint.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_AttractivePoint.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._AttractivePoint = value.Code;
					}
					else
					{
						this._AttractivePoint = default(string);
					}
					this.SendPropertyChanged("c_AttractivePoint");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Allowance_CustomerReceiption", Storage="_c_Allowance", ThisKey="Questionnarie", OtherKey="Code", IsForeignKey=true)]
		public c_Allowance c_Allowance
		{
			get
			{
				return this._c_Allowance.Entity;
			}
			set
			{
				c_Allowance previousValue = this._c_Allowance.Entity;
				if (((previousValue != value) 
							|| (this._c_Allowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Allowance.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._c_Allowance.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._Questionarie = value.Code;
					}
					else
					{
						this._Questionarie = default(string);
					}
					this.SendPropertyChanged("c_Allowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CustomerReceiption", Storage="_SalesCar", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber", IsForeignKey=true)]
		public SalesCar SalesCar
		{
			get
			{
				return this._SalesCar.Entity;
			}
			set
			{
				SalesCar previousValue = this._SalesCar.Entity;
				if (((previousValue != value) 
							|| (this._SalesCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesCar.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._SalesCar.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._SalesCarNumber = value.SalesCarNumber;
					}
					else
					{
						this._SalesCarNumber = default(string);
					}
					this.SendPropertyChanged("SalesCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption", Storage="_Car1", ThisKey="InterestedCar1", OtherKey="CarCode", IsForeignKey=true)]
		public Car Car1
		{
			get
			{
				return this._Car1.Entity;
			}
			set
			{
				Car previousValue = this._Car1.Entity;
				if (((previousValue != value) 
							|| (this._Car1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car1.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._Car1.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._InterestedCar1 = value.CarCode;
					}
					else
					{
						this._InterestedCar1 = default(string);
					}
					this.SendPropertyChanged("Car1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption1", Storage="_Car2", ThisKey="InterestedCar2", OtherKey="CarCode", IsForeignKey=true)]
		public Car Car2
		{
			get
			{
				return this._Car2.Entity;
			}
			set
			{
				Car previousValue = this._Car2.Entity;
				if (((previousValue != value) 
							|| (this._Car2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car2.Entity = null;
						previousValue.CustomerReceiption1.Remove(this);
					}
					this._Car2.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption1.Add(this);
						this._InterestedCar2 = value.CarCode;
					}
					else
					{
						this._InterestedCar2 = default(string);
					}
					this.SendPropertyChanged("Car2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption2", Storage="_Car3", ThisKey="InterestedCar3", OtherKey="CarCode", IsForeignKey=true)]
		public Car Car3
		{
			get
			{
				return this._Car3.Entity;
			}
			set
			{
				Car previousValue = this._Car3.Entity;
				if (((previousValue != value) 
							|| (this._Car3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car3.Entity = null;
						previousValue.CustomerReceiption2.Remove(this);
					}
					this._Car3.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption2.Add(this);
						this._InterestedCar3 = value.CarCode;
					}
					else
					{
						this._InterestedCar3 = default(string);
					}
					this.SendPropertyChanged("Car3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption3", Storage="_Car4", ThisKey="InterestedCar4", OtherKey="CarCode", IsForeignKey=true)]
		public Car Car4
		{
			get
			{
				return this._Car4.Entity;
			}
			set
			{
				Car previousValue = this._Car4.Entity;
				if (((previousValue != value) 
							|| (this._Car4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Car4.Entity = null;
						previousValue.CustomerReceiption3.Remove(this);
					}
					this._Car4.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption3.Add(this);
						this._InterestedCar4 = value.CarCode;
					}
					else
					{
						this._InterestedCar4 = default(string);
					}
					this.SendPropertyChanged("Car4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CustomerReceiption", Storage="_Campaign1", ThisKey="CampaignCode1", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign1
		{
			get
			{
				return this._Campaign1.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign1.Entity;
				if (((previousValue != value) 
							|| (this._Campaign1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign1.Entity = null;
						previousValue.CustomerReceiption.Remove(this);
					}
					this._Campaign1.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption.Add(this);
						this._EventCode = value.CampaignCode;
					}
					else
					{
						this._EventCode = default(string);
					}
					this.SendPropertyChanged("Campaign1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CustomerReceiption1", Storage="_Campaign2", ThisKey="CampaignCode2", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign2
		{
			get
			{
				return this._Campaign2.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign2.Entity;
				if (((previousValue != value) 
							|| (this._Campaign2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign2.Entity = null;
						previousValue.CustomerReceiption1.Remove(this);
					}
					this._Campaign2.Entity = value;
					if ((value != null))
					{
						value.CustomerReceiption1.Add(this);
						this._CampaignCode2 = value.CampaignCode;
					}
					else
					{
						this._CampaignCode2 = default(string);
					}
					this.SendPropertyChanged("Campaign2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _AreaCode;
		
		private string _OfficeCode;
		
		private string _EmployeeCode;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber1;
		
		private string _TelNumber2;
		
		private string _FaxNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _FullName;
		
		private string _BankName;
		
		private string _BranchName;
		
		private string _DepositKind;
		
		private string _AccountNumber;
		
		private string _AccountHolder;
		
		private string _PrintFlag;
		
		private string _BusinessType;
		
		private string _DepartmentShortName;
		
		private string _BrandStoreCode;
		
		private string _CloseMonthFlag;
		
		private string _LEUserCode;
		
		private string _MainMakerCode;
		
		private string _CarInventoryFlag;
		
		private string _PartsInventoryFlag;
		
		private string _StoreName;
		
		private string _DefaultSupplierCode;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Customer> _Customer1;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<Employee> _Employee1;
		
		private EntitySet<Employee> _AdditionalEmployee1;
		
		private EntitySet<Employee> _AdditionalEmployee2;
		
		private EntitySet<Employee> _AdditionalEmployee3;
		
		private EntitySet<Location> _Location;
		
		private EntitySet<PartsLocation> _PartsLocation;
		
		private EntitySet<PaymentPlan> _PaymentPlan;
		
		private EntitySet<PaymentPlan> _PaymentPlan1;
		
		private EntitySet<Task> _Task;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<ServiceRequest> _ServiceRequest;
		
		private EntitySet<CarAppraisal> _CarAppraisal;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntitySet<Journal> _Journal;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntitySet<ReceiptPlan> _ReceiptPlan;
		
		private EntitySet<ReceiptPlan> _ReceiptPlan1;
		
		private EntitySet<InventorySchedule> _InventorySchedule;
		
		private EntitySet<Warehouse> _Warehouse;
		
		private EntitySet<DepartmentWarehouse> _DepartmentWarehouse;
		
		private EntityRef<Area> _Area;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<c_BusinessType> _c_BusinessType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnAreaCodeChanging(string value);
    partial void OnAreaCodeChanged();
    partial void OnOfficeCodeChanging(string value);
    partial void OnOfficeCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumber1Changing(string value);
    partial void OnTelNumber1Changed();
    partial void OnTelNumber2Changing(string value);
    partial void OnTelNumber2Changed();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnDepositKindChanging(string value);
    partial void OnDepositKindChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountHolderChanging(string value);
    partial void OnAccountHolderChanged();
    partial void OnPrintFlagChanging(string value);
    partial void OnPrintFlagChanged();
    partial void OnBusinessTypeChanging(string value);
    partial void OnBusinessTypeChanged();
    partial void OnDepartmentShortNameChanging(string value);
    partial void OnDepartmentShortNameChanged();
    partial void OnBrandStoreCodeChanging(string value);
    partial void OnBrandStoreCodeChanged();
    partial void OnCloseMonthFlagChanging(string value);
    partial void OnCloseMonthFlagChanged();
    partial void OnLEUserCodeChanging(string value);
    partial void OnLEUserCodeChanged();
    partial void OnMainMakerCodeChanging(string value);
    partial void OnMainMakerCodeChanged();
    partial void OnCarInventoryFlagChanging(string value);
    partial void OnCarInventoryFlagChanged();
    partial void OnPartsInventoryFlagChanging(string value);
    partial void OnPartsInventoryFlagChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnDefaultSupplierCodeChanging(string value);
    partial void OnDefaultSupplierCodeChanged();
    #endregion
		
		public Department()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Customer1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer1), new Action<Customer>(this.detach_Customer1));
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._Employee1 = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee1), new Action<Employee>(this.detach_Employee1));
			this._AdditionalEmployee1 = new EntitySet<Employee>(new Action<Employee>(this.attach_AdditionalEmployee1), new Action<Employee>(this.detach_AdditionalEmployee1));
			this._AdditionalEmployee2 = new EntitySet<Employee>(new Action<Employee>(this.attach_AdditionalEmployee2), new Action<Employee>(this.detach_AdditionalEmployee2));
			this._AdditionalEmployee3 = new EntitySet<Employee>(new Action<Employee>(this.attach_AdditionalEmployee3), new Action<Employee>(this.detach_AdditionalEmployee3));
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			this._PartsLocation = new EntitySet<PartsLocation>(new Action<PartsLocation>(this.attach_PartsLocation), new Action<PartsLocation>(this.detach_PartsLocation));
			this._PaymentPlan = new EntitySet<PaymentPlan>(new Action<PaymentPlan>(this.attach_PaymentPlan), new Action<PaymentPlan>(this.detach_PaymentPlan));
			this._PaymentPlan1 = new EntitySet<PaymentPlan>(new Action<PaymentPlan>(this.attach_PaymentPlan1), new Action<PaymentPlan>(this.detach_PaymentPlan1));
			this._Task = new EntitySet<Task>(new Action<Task>(this.attach_Task), new Action<Task>(this.detach_Task));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._ServiceRequest = new EntitySet<ServiceRequest>(new Action<ServiceRequest>(this.attach_ServiceRequest), new Action<ServiceRequest>(this.detach_ServiceRequest));
			this._CarAppraisal = new EntitySet<CarAppraisal>(new Action<CarAppraisal>(this.attach_CarAppraisal), new Action<CarAppraisal>(this.detach_CarAppraisal));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._ReceiptPlan = new EntitySet<ReceiptPlan>(new Action<ReceiptPlan>(this.attach_ReceiptPlan), new Action<ReceiptPlan>(this.detach_ReceiptPlan));
			this._ReceiptPlan1 = new EntitySet<ReceiptPlan>(new Action<ReceiptPlan>(this.attach_ReceiptPlan1), new Action<ReceiptPlan>(this.detach_ReceiptPlan1));
			this._InventorySchedule = new EntitySet<InventorySchedule>(new Action<InventorySchedule>(this.attach_InventorySchedule), new Action<InventorySchedule>(this.detach_InventorySchedule));
			this._Warehouse = new EntitySet<Warehouse>(new Action<Warehouse>(this.attach_Warehouse), new Action<Warehouse>(this.detach_Warehouse));
			this._DepartmentWarehouse = new EntitySet<DepartmentWarehouse>(new Action<DepartmentWarehouse>(this.attach_DepartmentWarehouse), new Action<DepartmentWarehouse>(this.detach_DepartmentWarehouse));
			this._Area = default(EntityRef<Area>);
			this._Employee = default(EntityRef<Employee>);
			this._Office = default(EntityRef<Office>);
			this._c_BusinessType = default(EntityRef<c_BusinessType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					if (this._Area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._AreaCode = value;
					this.SendPropertyChanged("AreaCode");
					this.OnAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._OfficeCode = value;
					this.SendPropertyChanged("OfficeCode");
					this.OnOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber1", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber1
		{
			get
			{
				return this._TelNumber1;
			}
			set
			{
				if ((this._TelNumber1 != value))
				{
					this.OnTelNumber1Changing(value);
					this.SendPropertyChanging();
					this._TelNumber1 = value;
					this.SendPropertyChanged("TelNumber1");
					this.OnTelNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber2", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber2
		{
			get
			{
				return this._TelNumber2;
			}
			set
			{
				if ((this._TelNumber2 != value))
				{
					this.OnTelNumber2Changing(value);
					this.SendPropertyChanging();
					this._TelNumber2 = value;
					this.SendPropertyChanged("TelNumber2");
					this.OnTelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositKind", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositKind
		{
			get
			{
				return this._DepositKind;
			}
			set
			{
				if ((this._DepositKind != value))
				{
					this.OnDepositKindChanging(value);
					this.SendPropertyChanging();
					this._DepositKind = value;
					this.SendPropertyChanged("DepositKind");
					this.OnDepositKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(7)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountHolder", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountHolder
		{
			get
			{
				return this._AccountHolder;
			}
			set
			{
				if ((this._AccountHolder != value))
				{
					this.OnAccountHolderChanging(value);
					this.SendPropertyChanging();
					this._AccountHolder = value;
					this.SendPropertyChanged("AccountHolder");
					this.OnAccountHolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrintFlag
		{
			get
			{
				return this._PrintFlag;
			}
			set
			{
				if ((this._PrintFlag != value))
				{
					this.OnPrintFlagChanging(value);
					this.SendPropertyChanging();
					this._PrintFlag = value;
					this.SendPropertyChanged("PrintFlag");
					this.OnPrintFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BusinessType
		{
			get
			{
				return this._BusinessType;
			}
			set
			{
				if ((this._BusinessType != value))
				{
					if (this._c_BusinessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessTypeChanging(value);
					this.SendPropertyChanging();
					this._BusinessType = value;
					this.SendPropertyChanged("BusinessType");
					this.OnBusinessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentShortName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentShortName
		{
			get
			{
				return this._DepartmentShortName;
			}
			set
			{
				if ((this._DepartmentShortName != value))
				{
					this.OnDepartmentShortNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentShortName = value;
					this.SendPropertyChanged("DepartmentShortName");
					this.OnDepartmentShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this.OnBrandStoreCodeChanging(value);
					this.SendPropertyChanging();
					this._BrandStoreCode = value;
					this.SendPropertyChanged("BrandStoreCode");
					this.OnBrandStoreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonthFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseMonthFlag
		{
			get
			{
				return this._CloseMonthFlag;
			}
			set
			{
				if ((this._CloseMonthFlag != value))
				{
					this.OnCloseMonthFlagChanging(value);
					this.SendPropertyChanging();
					this._CloseMonthFlag = value;
					this.SendPropertyChanged("CloseMonthFlag");
					this.OnCloseMonthFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LEUserCode", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LEUserCode
		{
			get
			{
				return this._LEUserCode;
			}
			set
			{
				if ((this._LEUserCode != value))
				{
					this.OnLEUserCodeChanging(value);
					this.SendPropertyChanging();
					this._LEUserCode = value;
					this.SendPropertyChanged("LEUserCode");
					this.OnLEUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMakerCode", DbType="nvarchar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MainMakerCode
		{
			get
			{
				return this._MainMakerCode;
			}
			set
			{
				if ((this._MainMakerCode != value))
				{
					this.OnMainMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MainMakerCode = value;
					this.SendPropertyChanged("MainMakerCode");
					this.OnMainMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarInventoryFlag", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarInventoryFlag
		{
			get
			{
				return this._CarInventoryFlag;
			}
			set
			{
				if ((this._CarInventoryFlag != value))
				{
					this.OnCarInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._CarInventoryFlag = value;
					this.SendPropertyChanged("CarInventoryFlag");
					this.OnCarInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsInventoryFlag", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsInventoryFlag
		{
			get
			{
				return this._PartsInventoryFlag;
			}
			set
			{
				if ((this._PartsInventoryFlag != value))
				{
					this.OnPartsInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._PartsInventoryFlag = value;
					this.SendPropertyChanged("PartsInventoryFlag");
					this.OnPartsInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSupplierCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DefaultSupplierCode
		{
			get
			{
				return this._DefaultSupplierCode;
			}
			set
			{
				if ((this._DefaultSupplierCode != value))
				{
					this.OnDefaultSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._DefaultSupplierCode = value;
					this.SendPropertyChanged("DefaultSupplierCode");
					this.OnDefaultSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Customer", Storage="_Customer", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Customer1", Storage="_Customer1", ThisKey="DepartmentCode", OtherKey="ServiceDepartmentCode")]
		public EntitySet<Customer> Customer1
		{
			get
			{
				return this._Customer1;
			}
			set
			{
				this._Customer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employee1", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Employee> Employee1
		{
			get
			{
				return this._Employee1;
			}
			set
			{
				this._Employee1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee1", Storage="_AdditionalEmployee1", ThisKey="DepartmentCode", OtherKey="DepartmentCode1")]
		public EntitySet<Employee> AdditionalEmployee1
		{
			get
			{
				return this._AdditionalEmployee1;
			}
			set
			{
				this._AdditionalEmployee1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee2", Storage="_AdditionalEmployee2", ThisKey="DepartmentCode", OtherKey="DepartmentCode2")]
		public EntitySet<Employee> AdditionalEmployee2
		{
			get
			{
				return this._AdditionalEmployee2;
			}
			set
			{
				this._AdditionalEmployee2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee3", Storage="_AdditionalEmployee3", ThisKey="DepartmentCode", OtherKey="DepartmentCode3")]
		public EntitySet<Employee> AdditionalEmployee3
		{
			get
			{
				return this._AdditionalEmployee3;
			}
			set
			{
				this._AdditionalEmployee3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Location", Storage="_Location", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsLocation", Storage="_PartsLocation", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<PartsLocation> PartsLocation
		{
			get
			{
				return this._PartsLocation;
			}
			set
			{
				this._PartsLocation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PaymentPlan", Storage="_PaymentPlan", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<PaymentPlan> PaymentPlan
		{
			get
			{
				return this._PaymentPlan;
			}
			set
			{
				this._PaymentPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PaymentPlan1", Storage="_PaymentPlan1", ThisKey="DepartmentCode", OtherKey="OccurredDepartmentCode")]
		public EntitySet<PaymentPlan> PaymentPlan1
		{
			get
			{
				return this._PaymentPlan1;
			}
			set
			{
				this._PaymentPlan1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Task", Storage="_Task", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Task> Task
		{
			get
			{
				return this._Task;
			}
			set
			{
				this._Task.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ServiceRequest", Storage="_ServiceRequest", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<ServiceRequest> ServiceRequest
		{
			get
			{
				return this._ServiceRequest;
			}
			set
			{
				this._ServiceRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarAppraisal", Storage="_CarAppraisal", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<CarAppraisal> CarAppraisal
		{
			get
			{
				return this._CarAppraisal;
			}
			set
			{
				this._CarAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarPurchase", Storage="_CarPurchase", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Journal", Storage="_Journal", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsPurchase", Storage="_PartsPurchase", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ReceiptPlan", Storage="_ReceiptPlan", ThisKey="DepartmentCode", OtherKey="OccurredDepartmentCode")]
		public EntitySet<ReceiptPlan> ReceiptPlan
		{
			get
			{
				return this._ReceiptPlan;
			}
			set
			{
				this._ReceiptPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ReceiptPlan1", Storage="_ReceiptPlan1", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<ReceiptPlan> ReceiptPlan1
		{
			get
			{
				return this._ReceiptPlan1;
			}
			set
			{
				this._ReceiptPlan1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_InventorySchedule", Storage="_InventorySchedule", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<InventorySchedule> InventorySchedule
		{
			get
			{
				return this._InventorySchedule;
			}
			set
			{
				this._InventorySchedule.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Warehouse", Storage="_Warehouse", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<Warehouse> Warehouse
		{
			get
			{
				return this._Warehouse;
			}
			set
			{
				this._Warehouse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DepartmentWarehouse", Storage="_DepartmentWarehouse", ThisKey="DepartmentCode", OtherKey="DepartmentCode")]
		public EntitySet<DepartmentWarehouse> DepartmentWarehouse
		{
			get
			{
				return this._DepartmentWarehouse;
			}
			set
			{
				this._DepartmentWarehouse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Area_Department", Storage="_Area", ThisKey="AreaCode", OtherKey="AreaCode", IsForeignKey=true)]
		public Area Area
		{
			get
			{
				return this._Area.Entity;
			}
			set
			{
				Area previousValue = this._Area.Entity;
				if (((previousValue != value) 
							|| (this._Area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Area.Entity = null;
						previousValue.Department.Remove(this);
					}
					this._Area.Entity = value;
					if ((value != null))
					{
						value.Department.Add(this);
						this._AreaCode = value.AreaCode;
					}
					else
					{
						this._AreaCode = default(string);
					}
					this.SendPropertyChanged("Area");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Department.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Department.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Department", Storage="_Office", ThisKey="OfficeCode", OtherKey="OfficeCode", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.Department.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.Department.Add(this);
						this._OfficeCode = value.OfficeCode;
					}
					else
					{
						this._OfficeCode = default(string);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_BusinessType_Department", Storage="_c_BusinessType", ThisKey="BusinessType", OtherKey="Code", IsForeignKey=true)]
		public c_BusinessType c_BusinessType
		{
			get
			{
				return this._c_BusinessType.Entity;
			}
			set
			{
				c_BusinessType previousValue = this._c_BusinessType.Entity;
				if (((previousValue != value) 
							|| (this._c_BusinessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_BusinessType.Entity = null;
						previousValue.Department.Remove(this);
					}
					this._c_BusinessType.Entity = value;
					if ((value != null))
					{
						value.Department.Add(this);
						this._BusinessType = value.Code;
					}
					else
					{
						this._BusinessType = default(string);
					}
					this.SendPropertyChanged("c_BusinessType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDepartment = this;
		}
		
		private void detach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDepartment = null;
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Employee1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = this;
		}
		
		private void detach_Employee1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department1 = null;
		}
		
		private void attach_AdditionalEmployee1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment1 = this;
		}
		
		private void detach_AdditionalEmployee1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment1 = null;
		}
		
		private void attach_AdditionalEmployee2(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment2 = this;
		}
		
		private void detach_AdditionalEmployee2(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment2 = null;
		}
		
		private void attach_AdditionalEmployee3(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment3 = this;
		}
		
		private void detach_AdditionalEmployee3(Employee entity)
		{
			this.SendPropertyChanging();
			entity.AdditionalDepartment3 = null;
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PaymentPlan1(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.OccurredDepartment = this;
		}
		
		private void detach_PaymentPlan1(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.OccurredDepartment = null;
		}
		
		private void attach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.OccurredDepartment = this;
		}
		
		private void detach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.OccurredDepartment = null;
		}
		
		private void attach_ReceiptPlan1(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptDepartment = this;
		}
		
		private void detach_ReceiptPlan1(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptDepartment = null;
		}
		
		private void attach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Warehouse(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Warehouse(Warehouse entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_DepartmentWarehouse(DepartmentWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_DepartmentWarehouse(DepartmentWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private string _EmployeeNumber;
		
		private string _EmployeeName;
		
		private string _DepartmentCode;
		
		private string _SecurityRoleCode;
		
		private string _MobileNumber;
		
		private string _MobileMailAddress;
		
		private string _MailAddress;
		
		private string _EmployeeType;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<System.DateTime> _LastLoginDateTime;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _EmployeeNameKana;
		
		private string _DepartmentCode1;
		
		private string _DepartmentCode2;
		
		private string _DepartmentCode3;
		
		private EntitySet<Area> _Area;
		
		private EntitySet<Company> _Company;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Customer> _Customer1;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<Department> _Department;
		
		private EntitySet<Office> _Office;
		
		private EntitySet<Task> _Task;
		
		private EntitySet<Task> _Task1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<Campaign> _Campaign;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<CarAppraisal> _CarAppraisal;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<CarPurchase> _CarPurchase1;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader1;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader2;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntitySet<Transfer> _Transfer1;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntitySet<CustomerUpdateLog> _CustomerUpdateLog;
		
		private EntitySet<ProcessSessionControl> _ProcessSessionControl;
		
		private EntityRef<Department> _Department1;
		
		private EntityRef<SecurityRole> _SecurityRole;
		
		private EntityRef<c_EmployeeType> _c_EmployeeType;
		
		private EntityRef<Department> _AdditionalDepartment1;
		
		private EntityRef<Department> _AdditionalDepartment2;
		
		private EntityRef<Department> _AdditionalDepartment3;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnEmployeeNumberChanging(string value);
    partial void OnEmployeeNumberChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnSecurityRoleCodeChanging(string value);
    partial void OnSecurityRoleCodeChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnMobileMailAddressChanging(string value);
    partial void OnMobileMailAddressChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnEmployeeTypeChanging(string value);
    partial void OnEmployeeTypeChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnLastLoginDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateTimeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnEmployeeNameKanaChanging(string value);
    partial void OnEmployeeNameKanaChanged();
    partial void OnDepartmentCode1Changing(string value);
    partial void OnDepartmentCode1Changed();
    partial void OnDepartmentCode2Changing(string value);
    partial void OnDepartmentCode2Changed();
    partial void OnDepartmentCode3Changing(string value);
    partial void OnDepartmentCode3Changed();
    #endregion
		
		public Employee()
		{
			this._Area = new EntitySet<Area>(new Action<Area>(this.attach_Area), new Action<Area>(this.detach_Area));
			this._Company = new EntitySet<Company>(new Action<Company>(this.attach_Company), new Action<Company>(this.detach_Company));
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Customer1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer1), new Action<Customer>(this.detach_Customer1));
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._Department = new EntitySet<Department>(new Action<Department>(this.attach_Department), new Action<Department>(this.detach_Department));
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			this._Task = new EntitySet<Task>(new Action<Task>(this.attach_Task), new Action<Task>(this.detach_Task));
			this._Task1 = new EntitySet<Task>(new Action<Task>(this.attach_Task1), new Action<Task>(this.detach_Task1));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._Campaign = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaign), new Action<Campaign>(this.detach_Campaign));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._CarAppraisal = new EntitySet<CarAppraisal>(new Action<CarAppraisal>(this.attach_CarAppraisal), new Action<CarAppraisal>(this.detach_CarAppraisal));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._CarPurchase1 = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase1), new Action<CarPurchase>(this.detach_CarPurchase1));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._ServiceSalesHeader1 = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader1), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader1));
			this._ServiceSalesHeader2 = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader2), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader2));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._Transfer1 = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer1), new Action<Transfer>(this.detach_Transfer1));
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._CustomerUpdateLog = new EntitySet<CustomerUpdateLog>(new Action<CustomerUpdateLog>(this.attach_CustomerUpdateLog), new Action<CustomerUpdateLog>(this.detach_CustomerUpdateLog));
			this._ProcessSessionControl = new EntitySet<ProcessSessionControl>(new Action<ProcessSessionControl>(this.attach_ProcessSessionControl), new Action<ProcessSessionControl>(this.detach_ProcessSessionControl));
			this._Department1 = default(EntityRef<Department>);
			this._SecurityRole = default(EntityRef<SecurityRole>);
			this._c_EmployeeType = default(EntityRef<c_EmployeeType>);
			this._AdditionalDepartment1 = default(EntityRef<Department>);
			this._AdditionalDepartment2 = default(EntityRef<Department>);
			this._AdditionalDepartment3 = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this.OnEmployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumber = value;
					this.SendPropertyChanged("EmployeeNumber");
					this.OnEmployeeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleCode
		{
			get
			{
				return this._SecurityRoleCode;
			}
			set
			{
				if ((this._SecurityRoleCode != value))
				{
					if (this._SecurityRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleCode = value;
					this.SendPropertyChanged("SecurityRoleCode");
					this.OnSecurityRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileMailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileMailAddress
		{
			get
			{
				return this._MobileMailAddress;
			}
			set
			{
				if ((this._MobileMailAddress != value))
				{
					this.OnMobileMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MobileMailAddress = value;
					this.SendPropertyChanged("MobileMailAddress");
					this.OnMobileMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeType
		{
			get
			{
				return this._EmployeeType;
			}
			set
			{
				if ((this._EmployeeType != value))
				{
					if (this._c_EmployeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeTypeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeType = value;
					this.SendPropertyChanged("EmployeeType");
					this.OnEmployeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDateTime
		{
			get
			{
				return this._LastLoginDateTime;
			}
			set
			{
				if ((this._LastLoginDateTime != value))
				{
					this.OnLastLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDateTime = value;
					this.SendPropertyChanged("LastLoginDateTime");
					this.OnLastLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeNameKana
		{
			get
			{
				return this._EmployeeNameKana;
			}
			set
			{
				if ((this._EmployeeNameKana != value))
				{
					this.OnEmployeeNameKanaChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNameKana = value;
					this.SendPropertyChanged("EmployeeNameKana");
					this.OnEmployeeNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode1
		{
			get
			{
				return this._DepartmentCode1;
			}
			set
			{
				if ((this._DepartmentCode1 != value))
				{
					if (this._AdditionalDepartment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCode1Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode1 = value;
					this.SendPropertyChanged("DepartmentCode1");
					this.OnDepartmentCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode2
		{
			get
			{
				return this._DepartmentCode2;
			}
			set
			{
				if ((this._DepartmentCode2 != value))
				{
					if (this._AdditionalDepartment2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCode2Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode2 = value;
					this.SendPropertyChanged("DepartmentCode2");
					this.OnDepartmentCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode3", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode3
		{
			get
			{
				return this._DepartmentCode3;
			}
			set
			{
				if ((this._DepartmentCode3 != value))
				{
					if (this._AdditionalDepartment3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCode3Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode3 = value;
					this.SendPropertyChanged("DepartmentCode3");
					this.OnDepartmentCode3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Area", Storage="_Area", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Area> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				this._Area.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Company", Storage="_Company", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Company> Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				this._Company.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Customer", Storage="_Customer", ThisKey="EmployeeCode", OtherKey="CarEmployeeCode")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Customer1", Storage="_Customer1", ThisKey="EmployeeCode", OtherKey="ServiceEmployeeCode")]
		public EntitySet<Customer> Customer1
		{
			get
			{
				return this._Customer1;
			}
			set
			{
				this._Customer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Department", Storage="_Department", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Department> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				this._Department.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Office", Storage="_Office", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Task", Storage="_Task", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Task> Task
		{
			get
			{
				return this._Task;
			}
			set
			{
				this._Task.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Task1", Storage="_Task1", ThisKey="EmployeeCode", OtherKey="CreateEmployeeCode")]
		public EntitySet<Task> Task1
		{
			get
			{
				return this._Task1;
			}
			set
			{
				this._Task1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Campaign", Storage="_Campaign", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<Campaign> Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				this._Campaign.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarAppraisal", Storage="_CarAppraisal", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<CarAppraisal> CarAppraisal
		{
			get
			{
				return this._CarAppraisal;
			}
			set
			{
				this._CarAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchase", Storage="_CarPurchase", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchase1", Storage="_CarPurchase1", ThisKey="EmployeeCode", OtherKey="LastUpdateEmployeeCode")]
		public EntitySet<CarPurchase> CarPurchase1
		{
			get
			{
				return this._CarPurchase1;
			}
			set
			{
				this._CarPurchase1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="EmployeeCode", OtherKey="CarEmployeeCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader1", Storage="_ServiceSalesHeader1", ThisKey="EmployeeCode", OtherKey="FrontEmployeeCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader1
		{
			get
			{
				return this._ServiceSalesHeader1;
			}
			set
			{
				this._ServiceSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader2", Storage="_ServiceSalesHeader2", ThisKey="EmployeeCode", OtherKey="ReceiptionEmployeeCode")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader2
		{
			get
			{
				return this._ServiceSalesHeader2;
			}
			set
			{
				this._ServiceSalesHeader2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transfer", Storage="_Transfer", ThisKey="EmployeeCode", OtherKey="DepartureEmployeeCode")]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transfer1", Storage="_Transfer1", ThisKey="EmployeeCode", OtherKey="ArrivalEmployeeCode")]
		public EntitySet<Transfer> Transfer1
		{
			get
			{
				return this._Transfer1;
			}
			set
			{
				this._Transfer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PartsPurchase", Storage="_PartsPurchase", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CustomerUpdateLog", Storage="_CustomerUpdateLog", ThisKey="EmployeeCode", OtherKey="UpdateEmployeeCode")]
		public EntitySet<CustomerUpdateLog> CustomerUpdateLog
		{
			get
			{
				return this._CustomerUpdateLog;
			}
			set
			{
				this._CustomerUpdateLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProcessSessionControl", Storage="_ProcessSessionControl", ThisKey="EmployeeCode", OtherKey="EmployeeCode")]
		public EntitySet<ProcessSessionControl> ProcessSessionControl
		{
			get
			{
				return this._ProcessSessionControl;
			}
			set
			{
				this._ProcessSessionControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department1", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department1
		{
			get
			{
				return this._Department1.Entity;
			}
			set
			{
				Department previousValue = this._Department1.Entity;
				if (((previousValue != value) 
							|| (this._Department1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department1.Entity = null;
						previousValue.Employee1.Remove(this);
					}
					this._Department1.Entity = value;
					if ((value != null))
					{
						value.Employee1.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_Employee", Storage="_SecurityRole", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode", IsForeignKey=true)]
		public SecurityRole SecurityRole
		{
			get
			{
				return this._SecurityRole.Entity;
			}
			set
			{
				SecurityRole previousValue = this._SecurityRole.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRole.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._SecurityRole.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._SecurityRoleCode = value.SecurityRoleCode;
					}
					else
					{
						this._SecurityRoleCode = default(string);
					}
					this.SendPropertyChanged("SecurityRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EmployeeType_Employee", Storage="_c_EmployeeType", ThisKey="EmployeeType", OtherKey="Code", IsForeignKey=true)]
		public c_EmployeeType c_EmployeeType
		{
			get
			{
				return this._c_EmployeeType.Entity;
			}
			set
			{
				c_EmployeeType previousValue = this._c_EmployeeType.Entity;
				if (((previousValue != value) 
							|| (this._c_EmployeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EmployeeType.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._c_EmployeeType.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._EmployeeType = value.Code;
					}
					else
					{
						this._EmployeeType = default(string);
					}
					this.SendPropertyChanged("c_EmployeeType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee1", Storage="_AdditionalDepartment1", ThisKey="DepartmentCode1", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department AdditionalDepartment1
		{
			get
			{
				return this._AdditionalDepartment1.Entity;
			}
			set
			{
				Department previousValue = this._AdditionalDepartment1.Entity;
				if (((previousValue != value) 
							|| (this._AdditionalDepartment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionalDepartment1.Entity = null;
						previousValue.AdditionalEmployee1.Remove(this);
					}
					this._AdditionalDepartment1.Entity = value;
					if ((value != null))
					{
						value.AdditionalEmployee1.Add(this);
						this._DepartmentCode1 = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode1 = default(string);
					}
					this.SendPropertyChanged("AdditionalDepartment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee2", Storage="_AdditionalDepartment2", ThisKey="DepartmentCode2", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department AdditionalDepartment2
		{
			get
			{
				return this._AdditionalDepartment2.Entity;
			}
			set
			{
				Department previousValue = this._AdditionalDepartment2.Entity;
				if (((previousValue != value) 
							|| (this._AdditionalDepartment2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionalDepartment2.Entity = null;
						previousValue.AdditionalEmployee2.Remove(this);
					}
					this._AdditionalDepartment2.Entity = value;
					if ((value != null))
					{
						value.AdditionalEmployee2.Add(this);
						this._DepartmentCode2 = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode2 = default(string);
					}
					this.SendPropertyChanged("AdditionalDepartment2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee3", Storage="_AdditionalDepartment3", ThisKey="DepartmentCode3", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department AdditionalDepartment3
		{
			get
			{
				return this._AdditionalDepartment3.Entity;
			}
			set
			{
				Department previousValue = this._AdditionalDepartment3.Entity;
				if (((previousValue != value) 
							|| (this._AdditionalDepartment3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdditionalDepartment3.Entity = null;
						previousValue.AdditionalEmployee3.Remove(this);
					}
					this._AdditionalDepartment3.Entity = value;
					if ((value != null))
					{
						value.AdditionalEmployee3.Add(this);
						this._DepartmentCode3 = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode3 = default(string);
					}
					this.SendPropertyChanged("AdditionalDepartment3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Area(Area entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Area(Area entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Company(Company entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Company(Company entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Customer1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Task1(Task entity)
		{
			this.SendPropertyChanging();
			entity.CreateEmployee = this;
		}
		
		private void detach_Task1(Task entity)
		{
			this.SendPropertyChanging();
			entity.CreateEmployee = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CarPurchase1(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_CarPurchase1(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarEmployee = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CarEmployee = null;
		}
		
		private void attach_ServiceSalesHeader1(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.FrontEmployee = this;
		}
		
		private void detach_ServiceSalesHeader1(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.FrontEmployee = null;
		}
		
		private void attach_ServiceSalesHeader2(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptionEmployee = this;
		}
		
		private void detach_ServiceSalesHeader2(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptionEmployee = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.DepartureEmployee = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.DepartureEmployee = null;
		}
		
		private void attach_Transfer1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.ArrivalEmployee = this;
		}
		
		private void detach_Transfer1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.ArrivalEmployee = null;
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CustomerUpdateLog(CustomerUpdateLog entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CustomerUpdateLog(CustomerUpdateLog entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_ProcessSessionControl(ProcessSessionControl entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ProcessSessionControl(ProcessSessionControl entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallableOption")]
	public partial class InstallableOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarGradeCode;
		
		private string _CarOptionCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<CarGrade> _CarGrade;
		
		private EntityRef<CarOption> _CarOption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnCarOptionCodeChanging(string value);
    partial void OnCarOptionCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InstallableOption()
		{
			this._CarGrade = default(EntityRef<CarGrade>);
			this._CarOption = default(EntityRef<CarOption>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					if (this._CarOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOptionCodeChanging(value);
					this.SendPropertyChanging();
					this._CarOptionCode = value;
					this.SendPropertyChanged("CarOptionCode");
					this.OnCarOptionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_InstallableOption", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.InstallableOption.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.InstallableOption.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_InstallableOption", Storage="_CarOption", ThisKey="CarOptionCode", OtherKey="CarOptionCode", IsForeignKey=true)]
		public CarOption CarOption
		{
			get
			{
				return this._CarOption.Entity;
			}
			set
			{
				CarOption previousValue = this._CarOption.Entity;
				if (((previousValue != value) 
							|| (this._CarOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOption.Entity = null;
						previousValue.InstallableOption.Remove(this);
					}
					this._CarOption.Entity = value;
					if ((value != null))
					{
						value.InstallableOption.Add(this);
						this._CarOptionCode = value.CarOptionCode;
					}
					else
					{
						this._CarOptionCode = default(string);
					}
					this.SendPropertyChanged("CarOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstallableParts")]
	public partial class InstallableParts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarBrandCode;
		
		private string _PartsNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Parts> _Parts;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarBrandCodeChanging(string value);
    partial void OnCarBrandCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InstallableParts()
		{
			this._Brand = default(EntityRef<Brand>);
			this._Parts = default(EntityRef<Parts>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._CarBrandCode = value;
					this.SendPropertyChanged("CarBrandCode");
					this.OnCarBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_InstallableParts", Storage="_Brand", ThisKey="CarBrandCode", OtherKey="CarBrandCode", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.InstallableParts.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.InstallableParts.Add(this);
						this._CarBrandCode = value.CarBrandCode;
					}
					else
					{
						this._CarBrandCode = default(string);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_InstallableParts", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.InstallableParts.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.InstallableParts.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loan")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoanCode;
		
		private string _LoanName;
		
		private string _CustomerClaimCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader2;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanCodeChanging(string value);
    partial void OnLoanCodeChanged();
    partial void OnLoanNameChanging(string value);
    partial void OnLoanNameChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Loan()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarSalesHeader1 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader1), new Action<CarSalesHeader>(this.detach_CarSalesHeader1));
			this._CarSalesHeader2 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader2), new Action<CarSalesHeader>(this.detach_CarSalesHeader2));
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanCode
		{
			get
			{
				return this._LoanCode;
			}
			set
			{
				if ((this._LoanCode != value))
				{
					this.OnLoanCodeChanging(value);
					this.SendPropertyChanging();
					this._LoanCode = value;
					this.SendPropertyChanged("LoanCode");
					this.OnLoanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanName
		{
			get
			{
				return this._LoanName;
			}
			set
			{
				if ((this._LoanName != value))
				{
					this.OnLoanNameChanging(value);
					this.SendPropertyChanging();
					this._LoanName = value;
					this.SendPropertyChanged("LoanName");
					this.OnLoanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="LoanCode", OtherKey="LoanCodeA")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader1", Storage="_CarSalesHeader1", ThisKey="LoanCode", OtherKey="LoanCodeB")]
		public EntitySet<CarSalesHeader> CarSalesHeader1
		{
			get
			{
				return this._CarSalesHeader1;
			}
			set
			{
				this._CarSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader2", Storage="_CarSalesHeader2", ThisKey="LoanCode", OtherKey="LoanCodeC")]
		public EntitySet<CarSalesHeader> CarSalesHeader2
		{
			get
			{
				return this._CarSalesHeader2;
			}
			set
			{
				this._CarSalesHeader2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_Loan", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.Loan.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.Loan.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanA = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanA = null;
		}
		
		private void attach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanB = this;
		}
		
		private void detach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanB = null;
		}
		
		private void attach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanC = this;
		}
		
		private void detach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.LoanC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _DepartmentCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _LocationType;
		
		private string _WarehouseCode;
		
		private EntitySet<PartsLocation> _PartsLocation;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<PartsStock> _PartsStock;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntitySet<Transfer> _Transfer1;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<c_LocationType> _c_LocationType;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnLocationNameChanging(string value);
    partial void OnLocationNameChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnLocationTypeChanging(string value);
    partial void OnLocationTypeChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    #endregion
		
		public Location()
		{
			this._PartsLocation = new EntitySet<PartsLocation>(new Action<PartsLocation>(this.attach_PartsLocation), new Action<PartsLocation>(this.detach_PartsLocation));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._PartsStock = new EntitySet<PartsStock>(new Action<PartsStock>(this.attach_PartsStock), new Action<PartsStock>(this.detach_PartsStock));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._Transfer1 = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer1), new Action<Transfer>(this.detach_Transfer1));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._Department = default(EntityRef<Department>);
			this._c_LocationType = default(EntityRef<c_LocationType>);
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this.OnLocationNameChanging(value);
					this.SendPropertyChanging();
					this._LocationName = value;
					this.SendPropertyChanged("LocationName");
					this.OnLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationType
		{
			get
			{
				return this._LocationType;
			}
			set
			{
				if ((this._LocationType != value))
				{
					if (this._c_LocationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationTypeChanging(value);
					this.SendPropertyChanging();
					this._LocationType = value;
					this.SendPropertyChanged("LocationType");
					this.OnLocationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="nvarchar(6)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsLocation", Storage="_PartsLocation", ThisKey="LocationCode", OtherKey="LocationCode")]
		public EntitySet<PartsLocation> PartsLocation
		{
			get
			{
				return this._PartsLocation;
			}
			set
			{
				this._PartsLocation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_SalesCar", Storage="_SalesCar", ThisKey="LocationCode", OtherKey="LocationCode")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="LocationCode", OtherKey="ArrivalLocationCode")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_CarPurchase", Storage="_CarPurchase", ThisKey="LocationCode", OtherKey="PurchaseLocationCode")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsStock", Storage="_PartsStock", ThisKey="LocationCode", OtherKey="LocationCode")]
		public EntitySet<PartsStock> PartsStock
		{
			get
			{
				return this._PartsStock;
			}
			set
			{
				this._PartsStock.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Transfer", Storage="_Transfer", ThisKey="LocationCode", OtherKey="DepartureLocationCode")]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Transfer1", Storage="_Transfer1", ThisKey="LocationCode", OtherKey="ArrivalLocationCode")]
		public EntitySet<Transfer> Transfer1
		{
			get
			{
				return this._Transfer1;
			}
			set
			{
				this._Transfer1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsPurchase", Storage="_PartsPurchase", ThisKey="LocationCode", OtherKey="LocationCode")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Location", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_LocationType_Location", Storage="_c_LocationType", ThisKey="LocationType", OtherKey="Code", IsForeignKey=true)]
		public c_LocationType c_LocationType
		{
			get
			{
				return this._c_LocationType.Entity;
			}
			set
			{
				c_LocationType previousValue = this._c_LocationType.Entity;
				if (((previousValue != value) 
							|| (this._c_LocationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_LocationType.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._c_LocationType.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._LocationType = value.Code;
					}
					else
					{
						this._LocationType = default(string);
					}
					this.SendPropertyChanged("c_LocationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Location", Storage="_Warehouse", ThisKey="WarehouseCode", OtherKey="WarehouseCode", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.Location.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.Location.Add(this);
						this._WarehouseCode = value.WarehouseCode;
					}
					else
					{
						this._WarehouseCode = default(string);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_PartsStock(PartsStock entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_PartsStock(PartsStock entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.DepartureLocation = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.DepartureLocation = null;
		}
		
		private void attach_Transfer1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.ArrivalLocation = this;
		}
		
		private void detach_Transfer1(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.ArrivalLocation = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maker")]
	public partial class Maker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MakerCode;
		
		private string _MakerName;
		
		private string _ShortName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _PrivateFlag;
		
		private EntitySet<Brand> _Brand;
		
		private EntitySet<CarColor> _CarColor;
		
		private EntitySet<CarOption> _CarOption;
		
		private EntitySet<Parts> _Parts;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnPrivateFlagChanging(string value);
    partial void OnPrivateFlagChanged();
    #endregion
		
		public Maker()
		{
			this._Brand = new EntitySet<Brand>(new Action<Brand>(this.attach_Brand), new Action<Brand>(this.detach_Brand));
			this._CarColor = new EntitySet<CarColor>(new Action<CarColor>(this.attach_CarColor), new Action<CarColor>(this.detach_CarColor));
			this._CarOption = new EntitySet<CarOption>(new Action<CarOption>(this.attach_CarOption), new Action<CarOption>(this.detach_CarOption));
			this._Parts = new EntitySet<Parts>(new Action<Parts>(this.attach_Parts), new Action<Parts>(this.detach_Parts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrivateFlag
		{
			get
			{
				return this._PrivateFlag;
			}
			set
			{
				if ((this._PrivateFlag != value))
				{
					this.OnPrivateFlagChanging(value);
					this.SendPropertyChanging();
					this._PrivateFlag = value;
					this.SendPropertyChanged("PrivateFlag");
					this.OnPrivateFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Brand", Storage="_Brand", ThisKey="MakerCode", OtherKey="MakerCode")]
		public EntitySet<Brand> Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				this._Brand.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_CarColor", Storage="_CarColor", ThisKey="MakerCode", OtherKey="MakerCode")]
		public EntitySet<CarColor> CarColor
		{
			get
			{
				return this._CarColor;
			}
			set
			{
				this._CarColor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_CarOption", Storage="_CarOption", ThisKey="MakerCode", OtherKey="MakerCode")]
		public EntitySet<CarOption> CarOption
		{
			get
			{
				return this._CarOption;
			}
			set
			{
				this._CarOption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Parts", Storage="_Parts", ThisKey="MakerCode", OtherKey="MakerCode")]
		public EntitySet<Parts> Parts
		{
			get
			{
				return this._Parts;
			}
			set
			{
				this._Parts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Brand(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Maker = this;
		}
		
		private void detach_Brand(Brand entity)
		{
			this.SendPropertyChanging();
			entity.Maker = null;
		}
		
		private void attach_CarColor(CarColor entity)
		{
			this.SendPropertyChanging();
			entity.Maker = this;
		}
		
		private void detach_CarColor(CarColor entity)
		{
			this.SendPropertyChanging();
			entity.Maker = null;
		}
		
		private void attach_CarOption(CarOption entity)
		{
			this.SendPropertyChanging();
			entity.Maker = this;
		}
		
		private void detach_CarOption(CarOption entity)
		{
			this.SendPropertyChanging();
			entity.Maker = null;
		}
		
		private void attach_Parts(Parts entity)
		{
			this.SendPropertyChanging();
			entity.Maker = this;
		}
		
		private void detach_Parts(Parts entity)
		{
			this.SendPropertyChanging();
			entity.Maker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuControl")]
	public partial class MenuControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuControlCode;
		
		private string _MenuName;
		
		private string _MenuGroupCode;
		
		private string _ControllerName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _ImageUrl;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _ShowModal;
		
		private string _ApplicationCode;
		
		private EntityRef<MenuGroup> _MenuGroup;
		
		private EntityRef<Application> _Application;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuControlCodeChanging(string value);
    partial void OnMenuControlCodeChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuGroupCodeChanging(string value);
    partial void OnMenuGroupCodeChanged();
    partial void OnNavigateUrlChanging(string value);
    partial void OnNavigateUrlChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnShowModalChanging(string value);
    partial void OnShowModalChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    #endregion
		
		public MenuControl()
		{
			this._MenuGroup = default(EntityRef<MenuGroup>);
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuControlCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MenuControlCode
		{
			get
			{
				return this._MenuControlCode;
			}
			set
			{
				if ((this._MenuControlCode != value))
				{
					this.OnMenuControlCodeChanging(value);
					this.SendPropertyChanging();
					this._MenuControlCode = value;
					this.SendPropertyChanged("MenuControlCode");
					this.OnMenuControlCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MenuGroupCode
		{
			get
			{
				return this._MenuGroupCode;
			}
			set
			{
				if ((this._MenuGroupCode != value))
				{
					if (this._MenuGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupCode = value;
					this.SendPropertyChanged("MenuGroupCode");
					this.OnMenuGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControllerName", DbType="NVarChar(100)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NavigateUrl
		{
			get
			{
				return this._ControllerName;
			}
			set
			{
				if ((this._ControllerName != value))
				{
					this.OnNavigateUrlChanging(value);
					this.SendPropertyChanging();
					this._ControllerName = value;
					this.SendPropertyChanged("NavigateUrl");
					this.OnNavigateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowModal", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShowModal
		{
			get
			{
				return this._ShowModal;
			}
			set
			{
				if ((this._ShowModal != value))
				{
					this.OnShowModalChanging(value);
					this.SendPropertyChanging();
					this._ShowModal = value;
					this.SendPropertyChanged("ShowModal");
					this.OnShowModalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuGroup_MenuControl", Storage="_MenuGroup", ThisKey="MenuGroupCode", OtherKey="MenuGroupCode", IsForeignKey=true)]
		public MenuGroup MenuGroup
		{
			get
			{
				return this._MenuGroup.Entity;
			}
			set
			{
				MenuGroup previousValue = this._MenuGroup.Entity;
				if (((previousValue != value) 
							|| (this._MenuGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenuGroup.Entity = null;
						previousValue.MenuControl.Remove(this);
					}
					this._MenuGroup.Entity = value;
					if ((value != null))
					{
						value.MenuControl.Add(this);
						this._MenuGroupCode = value.MenuGroupCode;
					}
					else
					{
						this._MenuGroupCode = default(string);
					}
					this.SendPropertyChanged("MenuGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_MenuControl", Storage="_Application", ThisKey="ApplicationCode", OtherKey="ApplicationCode", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.MenuControl.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.MenuControl.Add(this);
						this._ApplicationCode = value.ApplicationCode;
					}
					else
					{
						this._ApplicationCode = default(string);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuGroup")]
	public partial class MenuGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuGroupCode;
		
		private string _MenuGroupName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<MenuControl> _MenuControl;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuGroupCodeChanging(string value);
    partial void OnMenuGroupCodeChanged();
    partial void OnMenuGroupNameChanging(string value);
    partial void OnMenuGroupNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public MenuGroup()
		{
			this._MenuControl = new EntitySet<MenuControl>(new Action<MenuControl>(this.attach_MenuControl), new Action<MenuControl>(this.detach_MenuControl));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MenuGroupCode
		{
			get
			{
				return this._MenuGroupCode;
			}
			set
			{
				if ((this._MenuGroupCode != value))
				{
					this.OnMenuGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupCode = value;
					this.SendPropertyChanged("MenuGroupCode");
					this.OnMenuGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MenuGroupName
		{
			get
			{
				return this._MenuGroupName;
			}
			set
			{
				if ((this._MenuGroupName != value))
				{
					this.OnMenuGroupNameChanging(value);
					this.SendPropertyChanging();
					this._MenuGroupName = value;
					this.SendPropertyChanged("MenuGroupName");
					this.OnMenuGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuGroup_MenuControl", Storage="_MenuControl", ThisKey="MenuGroupCode", OtherKey="MenuGroupCode")]
		public EntitySet<MenuControl> MenuControl
		{
			get
			{
				return this._MenuControl;
			}
			set
			{
				this._MenuControl.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MenuControl(MenuControl entity)
		{
			this.SendPropertyChanging();
			entity.MenuGroup = this;
		}
		
		private void detach_MenuControl(MenuControl entity)
		{
			this.SendPropertyChanging();
			entity.MenuGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Office")]
	public partial class Office : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OfficeCode;
		
		private string _OfficeName;
		
		private string _CompanyCode;
		
		private string _EmployeeCode;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber1;
		
		private string _TelNumber2;
		
		private string _FaxNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _BankName;
		
		private string _BranchName;
		
		private string _BankAccountType;
		
		private string _AccountNumber;
		
		private string _AccountHolder;
		
		private string _CostAreaCode;
		
		private string _PrintFlagCar;
		
		private string _PrintFlagService;
		
		private string _FullName;
		
		private string _SupplierCode;
		
		private EntitySet<Department> _Department;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<Journal> _Journal;
		
		private EntityRef<CashBalance> _CashBalance;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<c_DepositKind> _c_DepositKind;
		
		private EntityRef<Supplier> _Supplier;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeCodeChanging(string value);
    partial void OnOfficeCodeChanged();
    partial void OnOfficeNameChanging(string value);
    partial void OnOfficeNameChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumber1Changing(string value);
    partial void OnTelNumber1Changed();
    partial void OnTelNumber2Changing(string value);
    partial void OnTelNumber2Changed();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnDepositKindChanging(string value);
    partial void OnDepositKindChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountHolderChanging(string value);
    partial void OnAccountHolderChanged();
    partial void OnCostAreaCodeChanging(string value);
    partial void OnCostAreaCodeChanged();
    partial void OnPrintFlagCarChanging(string value);
    partial void OnPrintFlagCarChanged();
    partial void OnPrintFlagServiceChanging(string value);
    partial void OnPrintFlagServiceChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    #endregion
		
		public Office()
		{
			this._Department = new EntitySet<Department>(new Action<Department>(this.attach_Department), new Action<Department>(this.detach_Department));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			this._CashBalance = default(EntityRef<CashBalance>);
			this._Company = default(EntityRef<Company>);
			this._Employee = default(EntityRef<Employee>);
			this._c_DepositKind = default(EntityRef<c_DepositKind>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this.OnOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._OfficeCode = value;
					this.SendPropertyChanged("OfficeCode");
					this.OnOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this.OnOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._OfficeName = value;
					this.SendPropertyChanged("OfficeName");
					this.OnOfficeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber1", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber1
		{
			get
			{
				return this._TelNumber1;
			}
			set
			{
				if ((this._TelNumber1 != value))
				{
					this.OnTelNumber1Changing(value);
					this.SendPropertyChanging();
					this._TelNumber1 = value;
					this.SendPropertyChanged("TelNumber1");
					this.OnTelNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber2", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber2
		{
			get
			{
				return this._TelNumber2;
			}
			set
			{
				if ((this._TelNumber2 != value))
				{
					this.OnTelNumber2Changing(value);
					this.SendPropertyChanging();
					this._TelNumber2 = value;
					this.SendPropertyChanged("TelNumber2");
					this.OnTelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositKind
		{
			get
			{
				return this._BankAccountType;
			}
			set
			{
				if ((this._BankAccountType != value))
				{
					if (this._c_DepositKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepositKindChanging(value);
					this.SendPropertyChanging();
					this._BankAccountType = value;
					this.SendPropertyChanged("DepositKind");
					this.OnDepositKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(7)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountHolder", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountHolder
		{
			get
			{
				return this._AccountHolder;
			}
			set
			{
				if ((this._AccountHolder != value))
				{
					this.OnAccountHolderChanging(value);
					this.SendPropertyChanging();
					this._AccountHolder = value;
					this.SendPropertyChanged("AccountHolder");
					this.OnAccountHolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAreaCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CostAreaCode
		{
			get
			{
				return this._CostAreaCode;
			}
			set
			{
				if ((this._CostAreaCode != value))
				{
					this.OnCostAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._CostAreaCode = value;
					this.SendPropertyChanged("CostAreaCode");
					this.OnCostAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFlagCar", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrintFlagCar
		{
			get
			{
				return this._PrintFlagCar;
			}
			set
			{
				if ((this._PrintFlagCar != value))
				{
					this.OnPrintFlagCarChanging(value);
					this.SendPropertyChanging();
					this._PrintFlagCar = value;
					this.SendPropertyChanged("PrintFlagCar");
					this.OnPrintFlagCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintFlagService", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrintFlagService
		{
			get
			{
				return this._PrintFlagService;
			}
			set
			{
				if ((this._PrintFlagService != value))
				{
					this.OnPrintFlagServiceChanging(value);
					this.SendPropertyChanging();
					this._PrintFlagService = value;
					this.SendPropertyChanged("PrintFlagService");
					this.OnPrintFlagServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Department", Storage="_Department", ThisKey="OfficeCode", OtherKey="OfficeCode")]
		public EntitySet<Department> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				this._Department.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="OfficeCode", OtherKey="IncentiveOfficeCode")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Journal", Storage="_Journal", ThisKey="OfficeCode", OtherKey="OfficeCode")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_CashBalance", Storage="_CashBalance", ThisKey="OfficeCode", OtherKey="OfficeCode", IsUnique=true, IsForeignKey=false)]
		public CashBalance CashBalance
		{
			get
			{
				return this._CashBalance.Entity;
			}
			set
			{
				CashBalance previousValue = this._CashBalance.Entity;
				if (((previousValue != value) 
							|| (this._CashBalance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CashBalance.Entity = null;
						previousValue.Office = null;
					}
					this._CashBalance.Entity = value;
					if ((value != null))
					{
						value.Office = this;
					}
					this.SendPropertyChanged("CashBalance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Office", Storage="_Company", ThisKey="CompanyCode", OtherKey="CompanyCode", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._CompanyCode = value.CompanyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Office", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DepositKind_Office", Storage="_c_DepositKind", ThisKey="DepositKind", OtherKey="Code", IsForeignKey=true)]
		public c_DepositKind c_DepositKind
		{
			get
			{
				return this._c_DepositKind.Entity;
			}
			set
			{
				c_DepositKind previousValue = this._c_DepositKind.Entity;
				if (((previousValue != value) 
							|| (this._c_DepositKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_DepositKind.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._c_DepositKind.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._BankAccountType = value.Code;
					}
					else
					{
						this._BankAccountType = default(string);
					}
					this.SendPropertyChanged("c_DepositKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Office", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Office = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Office = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parts")]
	public partial class Parts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _PartsNameEn;
		
		private string _MakerCode;
		
		private string _MakerPartsNumber;
		
		private string _MakerPartsNameJp;
		
		private string _MakerPartsNameEn;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _SoPrice;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _ClaimPrice;
		
		private System.Nullable<decimal> _MpPrice;
		
		private System.Nullable<decimal> _EoPrice;
		
		private string _GenuineType;
		
		private string _Memo;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _QuantityPerUnit1;
		
		private string _UnitCD1;
		
		private string _NonInventoryFlag;
		
		private EntitySet<InstallableParts> _InstallableParts;
		
		private EntitySet<PartsLocation> _PartsLocation;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCar1;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<PartsStock> _PartsStock;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
		private EntitySet<PartsAverageCost> _PartsAverageCost;
		
		private EntityRef<Maker> _Maker;
		
		private EntityRef<c_GenuineType> _c_GenuineType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPartsNameJpChanging(string value);
    partial void OnPartsNameJpChanged();
    partial void OnPartsNameEnChanging(string value);
    partial void OnPartsNameEnChanged();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnMakerPartsNumberChanging(string value);
    partial void OnMakerPartsNumberChanged();
    partial void OnMakerPartsNameJpChanging(string value);
    partial void OnMakerPartsNameJpChanged();
    partial void OnMakerPartsNameEnChanging(string value);
    partial void OnMakerPartsNameEnChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnSoPriceChanging(System.Nullable<decimal> value);
    partial void OnSoPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnClaimPriceChanging(System.Nullable<decimal> value);
    partial void OnClaimPriceChanged();
    partial void OnMpPriceChanging(System.Nullable<decimal> value);
    partial void OnMpPriceChanged();
    partial void OnEoPriceChanging(System.Nullable<decimal> value);
    partial void OnEoPriceChanged();
    partial void OnGenuineTypeChanging(string value);
    partial void OnGenuineTypeChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnQuantityPerUnit1Changing(System.Nullable<decimal> value);
    partial void OnQuantityPerUnit1Changed();
    partial void OnUnitCD1Changing(string value);
    partial void OnUnitCD1Changed();
    partial void OnNonInventoryFlagChanging(string value);
    partial void OnNonInventoryFlagChanged();
    #endregion
		
		public Parts()
		{
			this._InstallableParts = new EntitySet<InstallableParts>(new Action<InstallableParts>(this.attach_InstallableParts), new Action<InstallableParts>(this.detach_InstallableParts));
			this._PartsLocation = new EntitySet<PartsLocation>(new Action<PartsLocation>(this.attach_PartsLocation), new Action<PartsLocation>(this.detach_PartsLocation));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCar1 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar1), new Action<SalesCar>(this.detach_SalesCar1));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._PartsStock = new EntitySet<PartsStock>(new Action<PartsStock>(this.attach_PartsStock), new Action<PartsStock>(this.detach_PartsStock));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			this._PartsAverageCost = new EntitySet<PartsAverageCost>(new Action<PartsAverageCost>(this.attach_PartsAverageCost), new Action<PartsAverageCost>(this.detach_PartsAverageCost));
			this._Maker = default(EntityRef<Maker>);
			this._c_GenuineType = default(EntityRef<c_GenuineType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this.OnPartsNameJpChanging(value);
					this.SendPropertyChanging();
					this._PartsNameJp = value;
					this.SendPropertyChanged("PartsNameJp");
					this.OnPartsNameJpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameEn", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameEn
		{
			get
			{
				return this._PartsNameEn;
			}
			set
			{
				if ((this._PartsNameEn != value))
				{
					this.OnPartsNameEnChanging(value);
					this.SendPropertyChanging();
					this._PartsNameEn = value;
					this.SendPropertyChanged("PartsNameEn");
					this.OnPartsNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					if (this._Maker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerPartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerPartsNumber
		{
			get
			{
				return this._MakerPartsNumber;
			}
			set
			{
				if ((this._MakerPartsNumber != value))
				{
					this.OnMakerPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._MakerPartsNumber = value;
					this.SendPropertyChanged("MakerPartsNumber");
					this.OnMakerPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerPartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerPartsNameJp
		{
			get
			{
				return this._MakerPartsNameJp;
			}
			set
			{
				if ((this._MakerPartsNameJp != value))
				{
					this.OnMakerPartsNameJpChanging(value);
					this.SendPropertyChanging();
					this._MakerPartsNameJp = value;
					this.SendPropertyChanged("MakerPartsNameJp");
					this.OnMakerPartsNameJpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerPartsNameEn", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerPartsNameEn
		{
			get
			{
				return this._MakerPartsNameEn;
			}
			set
			{
				if ((this._MakerPartsNameEn != value))
				{
					this.OnMakerPartsNameEnChanging(value);
					this.SendPropertyChanging();
					this._MakerPartsNameEn = value;
					this.SendPropertyChanged("MakerPartsNameEn");
					this.OnMakerPartsNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SoPrice
		{
			get
			{
				return this._SoPrice;
			}
			set
			{
				if ((this._SoPrice != value))
				{
					this.OnSoPriceChanging(value);
					this.SendPropertyChanging();
					this._SoPrice = value;
					this.SendPropertyChanged("SoPrice");
					this.OnSoPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ClaimPrice
		{
			get
			{
				return this._ClaimPrice;
			}
			set
			{
				if ((this._ClaimPrice != value))
				{
					this.OnClaimPriceChanging(value);
					this.SendPropertyChanging();
					this._ClaimPrice = value;
					this.SendPropertyChanged("ClaimPrice");
					this.OnClaimPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MpPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MpPrice
		{
			get
			{
				return this._MpPrice;
			}
			set
			{
				if ((this._MpPrice != value))
				{
					this.OnMpPriceChanging(value);
					this.SendPropertyChanging();
					this._MpPrice = value;
					this.SendPropertyChanged("MpPrice");
					this.OnMpPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EoPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> EoPrice
		{
			get
			{
				return this._EoPrice;
			}
			set
			{
				if ((this._EoPrice != value))
				{
					this.OnEoPriceChanging(value);
					this.SendPropertyChanging();
					this._EoPrice = value;
					this.SendPropertyChanged("EoPrice");
					this.OnEoPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenuineType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string GenuineType
		{
			get
			{
				return this._GenuineType;
			}
			set
			{
				if ((this._GenuineType != value))
				{
					if (this._c_GenuineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenuineTypeChanging(value);
					this.SendPropertyChanging();
					this._GenuineType = value;
					this.SendPropertyChanged("GenuineType");
					this.OnGenuineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPerUnit1", DbType="decimal(10)")]
		public System.Nullable<decimal> QuantityPerUnit1
		{
			get
			{
				return this._QuantityPerUnit1;
			}
			set
			{
				if ((this._QuantityPerUnit1 != value))
				{
					this.OnQuantityPerUnit1Changing(value);
					this.SendPropertyChanging();
					this._QuantityPerUnit1 = value;
					this.SendPropertyChanged("QuantityPerUnit1");
					this.OnQuantityPerUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCD1", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UnitCD1
		{
			get
			{
				return this._UnitCD1;
			}
			set
			{
				if ((this._UnitCD1 != value))
				{
					this.OnUnitCD1Changing(value);
					this.SendPropertyChanging();
					this._UnitCD1 = value;
					this.SendPropertyChanged("UnitCD1");
					this.OnUnitCD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonInventoryFlag", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NonInventoryFlag
		{
			get
			{
				return this._NonInventoryFlag;
			}
			set
			{
				if ((this._NonInventoryFlag != value))
				{
					this.OnNonInventoryFlagChanging(value);
					this.SendPropertyChanging();
					this._NonInventoryFlag = value;
					this.SendPropertyChanged("NonInventoryFlag");
					this.OnNonInventoryFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_InstallableParts", Storage="_InstallableParts", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<InstallableParts> InstallableParts
		{
			get
			{
				return this._InstallableParts;
			}
			set
			{
				this._InstallableParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsLocation", Storage="_PartsLocation", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<PartsLocation> PartsLocation
		{
			get
			{
				return this._PartsLocation;
			}
			set
			{
				this._PartsLocation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SalesCar", Storage="_SalesCar", ThisKey="PartsNumber", OtherKey="Oil")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SalesCar1", Storage="_SalesCar1", ThisKey="PartsNumber", OtherKey="Tire")]
		public EntitySet<SalesCar> SalesCar1
		{
			get
			{
				return this._SalesCar1;
			}
			set
			{
				this._SalesCar1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsStock", Storage="_PartsStock", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<PartsStock> PartsStock
		{
			get
			{
				return this._PartsStock;
			}
			set
			{
				this._PartsStock.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_Transfer", Storage="_Transfer", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsPurchase", Storage="_PartsPurchase", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SetMenuList", Storage="_SetMenuList", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsAverageCost", Storage="_PartsAverageCost", ThisKey="PartsNumber", OtherKey="PartsNumber")]
		public EntitySet<PartsAverageCost> PartsAverageCost
		{
			get
			{
				return this._PartsAverageCost;
			}
			set
			{
				this._PartsAverageCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Maker_Parts", Storage="_Maker", ThisKey="MakerCode", OtherKey="MakerCode", IsForeignKey=true)]
		public Maker Maker
		{
			get
			{
				return this._Maker.Entity;
			}
			set
			{
				Maker previousValue = this._Maker.Entity;
				if (((previousValue != value) 
							|| (this._Maker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Maker.Entity = null;
						previousValue.Parts.Remove(this);
					}
					this._Maker.Entity = value;
					if ((value != null))
					{
						value.Parts.Add(this);
						this._MakerCode = value.MakerCode;
					}
					else
					{
						this._MakerCode = default(string);
					}
					this.SendPropertyChanged("Maker");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_Parts", Storage="_c_GenuineType", ThisKey="GenuineType", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType
		{
			get
			{
				return this._c_GenuineType.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType.Entity = null;
						previousValue.Parts.Remove(this);
					}
					this._c_GenuineType.Entity = value;
					if ((value != null))
					{
						value.Parts.Add(this);
						this._GenuineType = value.Code;
					}
					else
					{
						this._GenuineType = default(string);
					}
					this.SendPropertyChanged("c_GenuineType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstallableParts(InstallableParts entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_InstallableParts(InstallableParts entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Parts1 = this;
		}
		
		private void detach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.Parts1 = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_PartsStock(PartsStock entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_PartsStock(PartsStock entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
		
		private void attach_PartsAverageCost(PartsAverageCost entity)
		{
			this.SendPropertyChanging();
			entity.Parts = this;
		}
		
		private void detach_PartsAverageCost(PartsAverageCost entity)
		{
			this.SendPropertyChanging();
			entity.Parts = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsLocation")]
	public partial class PartsLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartsNumber;
		
		private string _DepartmentCode;
		
		private string _LocationCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _WarehouseCode;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    #endregion
		
		public PartsLocation()
		{
			this._Department = default(EntityRef<Department>);
			this._Parts = default(EntityRef<Parts>);
			this._Location = default(EntityRef<Location>);
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="nvarchar(6)", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsLocation", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PartsLocation.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PartsLocation.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsLocation", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.PartsLocation.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.PartsLocation.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsLocation", Storage="_Location", ThisKey="LocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.PartsLocation.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.PartsLocation.Add(this);
						this._LocationCode = value.LocationCode;
					}
					else
					{
						this._LocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_PartsLocation", Storage="_Warehouse", ThisKey="WarehouseCode", OtherKey="WarehouseCode", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.PartsLocation.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.PartsLocation.Add(this);
						this._WarehouseCode = value.WarehouseCode;
					}
					else
					{
						this._WarehouseCode = default(string);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentKind")]
	public partial class PaymentKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PaymentKindCode;
		
		private string _PaymentKindName;
		
		private decimal _CommissionRate;
		
		private int _ClaimDay;
		
		private string _PaymentType;
		
		private int _PaymentDay;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<CustomerClaimable> _CustomerClaimable;
		
		private EntityRef<c_PaymentType> _c_PaymentType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentKindCodeChanging(string value);
    partial void OnPaymentKindCodeChanged();
    partial void OnPaymentKindNameChanging(string value);
    partial void OnPaymentKindNameChanged();
    partial void OnCommissionRateChanging(decimal value);
    partial void OnCommissionRateChanged();
    partial void OnClaimDayChanging(int value);
    partial void OnClaimDayChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnPaymentDayChanging(int value);
    partial void OnPaymentDayChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public PaymentKind()
		{
			this._CustomerClaimable = new EntitySet<CustomerClaimable>(new Action<CustomerClaimable>(this.attach_CustomerClaimable), new Action<CustomerClaimable>(this.detach_CustomerClaimable));
			this._c_PaymentType = default(EntityRef<c_PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindCode
		{
			get
			{
				return this._PaymentKindCode;
			}
			set
			{
				if ((this._PaymentKindCode != value))
				{
					this.OnPaymentKindCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindCode = value;
					this.SendPropertyChanged("PaymentKindCode");
					this.OnPaymentKindCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindName
		{
			get
			{
				return this._PaymentKindName;
			}
			set
			{
				if ((this._PaymentKindName != value))
				{
					this.OnPaymentKindNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindName = value;
					this.SendPropertyChanged("PaymentKindName");
					this.OnPaymentKindNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRate", DbType="Decimal(8,5) NOT NULL")]
		public decimal CommissionRate
		{
			get
			{
				return this._CommissionRate;
			}
			set
			{
				if ((this._CommissionRate != value))
				{
					this.OnCommissionRateChanging(value);
					this.SendPropertyChanging();
					this._CommissionRate = value;
					this.SendPropertyChanged("CommissionRate");
					this.OnCommissionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimDay", DbType="Int NOT NULL")]
		public int ClaimDay
		{
			get
			{
				return this._ClaimDay;
			}
			set
			{
				if ((this._ClaimDay != value))
				{
					this.OnClaimDayChanging(value);
					this.SendPropertyChanging();
					this._ClaimDay = value;
					this.SendPropertyChanged("ClaimDay");
					this.OnClaimDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					if (this._c_PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDay", DbType="Int NOT NULL")]
		public int PaymentDay
		{
			get
			{
				return this._PaymentDay;
			}
			set
			{
				if ((this._PaymentDay != value))
				{
					this.OnPaymentDayChanging(value);
					this.SendPropertyChanging();
					this._PaymentDay = value;
					this.SendPropertyChanged("PaymentDay");
					this.OnPaymentDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentKind_CustomerClaimable", Storage="_CustomerClaimable", ThisKey="PaymentKindCode", OtherKey="PaymentKindCode")]
		public EntitySet<CustomerClaimable> CustomerClaimable
		{
			get
			{
				return this._CustomerClaimable;
			}
			set
			{
				this._CustomerClaimable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentType_PaymentKind", Storage="_c_PaymentType", ThisKey="PaymentType", OtherKey="Code", IsForeignKey=true)]
		public c_PaymentType c_PaymentType
		{
			get
			{
				return this._c_PaymentType.Entity;
			}
			set
			{
				c_PaymentType previousValue = this._c_PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._c_PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PaymentType.Entity = null;
						previousValue.PaymentKind.Remove(this);
					}
					this._c_PaymentType.Entity = value;
					if ((value != null))
					{
						value.PaymentKind.Add(this);
						this._PaymentType = value.Code;
					}
					else
					{
						this._PaymentType = default(string);
					}
					this.SendPropertyChanged("c_PaymentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerClaimable(CustomerClaimable entity)
		{
			this.SendPropertyChanging();
			entity.PaymentKind = this;
		}
		
		private void detach_CustomerClaimable(CustomerClaimable entity)
		{
			this.SendPropertyChanging();
			entity.PaymentKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentPlan")]
	public partial class PaymentPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PaymentPlanId;
		
		private string _SupplierCode;
		
		private System.Nullable<System.DateTime> _PaymentPlanDate;
		
		private string _PurchaseId;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _PaymentableBalance;
		
		private string _CompleteFlag;
		
		private string _AccountCode;
		
		private string _DepartmentCode;
		
		private string _OccurredDepartmentCode;
		
		private string _PurchaseOrderNumber;
		
		private string _CarPurchaseOrderNumber;
		
		private EntityRef<SupplierPayment> _SupplierPayment;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Department> _OccurredDepartment;
		
		private EntityRef<Account> _Account;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentPlanIdChanging(System.Guid value);
    partial void OnPaymentPlanIdChanged();
    partial void OnSupplierPaymentCodeChanging(string value);
    partial void OnSupplierPaymentCodeChanged();
    partial void OnPaymentPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentPlanDateChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnPaymentableBalanceChanging(System.Nullable<decimal> value);
    partial void OnPaymentableBalanceChanged();
    partial void OnCompleteFlagChanging(string value);
    partial void OnCompleteFlagChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnOccurredDepartmentCodeChanging(string value);
    partial void OnOccurredDepartmentCodeChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnCarPurchaseOrderNumberChanging(string value);
    partial void OnCarPurchaseOrderNumberChanged();
    #endregion
		
		public PaymentPlan()
		{
			this._SupplierPayment = default(EntityRef<SupplierPayment>);
			this._Department = default(EntityRef<Department>);
			this._OccurredDepartment = default(EntityRef<Department>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PaymentPlanId
		{
			get
			{
				return this._PaymentPlanId;
			}
			set
			{
				if ((this._PaymentPlanId != value))
				{
					this.OnPaymentPlanIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanId = value;
					this.SendPropertyChanged("PaymentPlanId");
					this.OnPaymentPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._SupplierPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierPaymentCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierPaymentCode");
					this.OnSupplierPaymentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentPlanDate
		{
			get
			{
				return this._PaymentPlanDate;
			}
			set
			{
				if ((this._PaymentPlanDate != value))
				{
					this.OnPaymentPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanDate = value;
					this.SendPropertyChanged("PaymentPlanDate");
					this.OnPaymentPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._PurchaseId;
			}
			set
			{
				if ((this._PurchaseId != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseId = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentableBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PaymentableBalance
		{
			get
			{
				return this._PaymentableBalance;
			}
			set
			{
				if ((this._PaymentableBalance != value))
				{
					this.OnPaymentableBalanceChanging(value);
					this.SendPropertyChanging();
					this._PaymentableBalance = value;
					this.SendPropertyChanged("PaymentableBalance");
					this.OnPaymentableBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompleteFlag
		{
			get
			{
				return this._CompleteFlag;
			}
			set
			{
				if ((this._CompleteFlag != value))
				{
					this.OnCompleteFlagChanging(value);
					this.SendPropertyChanging();
					this._CompleteFlag = value;
					this.SendPropertyChanged("CompleteFlag");
					this.OnCompleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccurredDepartmentCode
		{
			get
			{
				return this._OccurredDepartmentCode;
			}
			set
			{
				if ((this._OccurredDepartmentCode != value))
				{
					if (this._OccurredDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOccurredDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._OccurredDepartmentCode = value;
					this.SendPropertyChanged("OccurredDepartmentCode");
					this.OnOccurredDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderNumber = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseOrderNumber
		{
			get
			{
				return this._CarPurchaseOrderNumber;
			}
			set
			{
				if ((this._CarPurchaseOrderNumber != value))
				{
					this.OnCarPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseOrderNumber = value;
					this.SendPropertyChanged("CarPurchaseOrderNumber");
					this.OnCarPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_PaymentPlan", Storage="_SupplierPayment", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode", IsForeignKey=true)]
		public SupplierPayment SupplierPayment
		{
			get
			{
				return this._SupplierPayment.Entity;
			}
			set
			{
				SupplierPayment previousValue = this._SupplierPayment.Entity;
				if (((previousValue != value) 
							|| (this._SupplierPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierPayment.Entity = null;
						previousValue.PaymentPlan.Remove(this);
					}
					this._SupplierPayment.Entity = value;
					if ((value != null))
					{
						value.PaymentPlan.Add(this);
						this._SupplierCode = value.SupplierPaymentCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("SupplierPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PaymentPlan", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PaymentPlan.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PaymentPlan.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PaymentPlan1", Storage="_OccurredDepartment", ThisKey="OccurredDepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department OccurredDepartment
		{
			get
			{
				return this._OccurredDepartment.Entity;
			}
			set
			{
				Department previousValue = this._OccurredDepartment.Entity;
				if (((previousValue != value) 
							|| (this._OccurredDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OccurredDepartment.Entity = null;
						previousValue.PaymentPlan1.Remove(this);
					}
					this._OccurredDepartment.Entity = value;
					if ((value != null))
					{
						value.PaymentPlan1.Add(this);
						this._OccurredDepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._OccurredDepartmentCode = default(string);
					}
					this.SendPropertyChanged("OccurredDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PaymentPlan", Storage="_Account", ThisKey="AccountCode", OtherKey="AccountCode", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PaymentPlan.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PaymentPlan.Add(this);
						this._AccountCode = value.AccountCode;
					}
					else
					{
						this._AccountCode = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteMessage")]
	public partial class QuoteMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyCode;
		
		private string _QuoteType;
		
		private string _QuoteMessage1;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<c_QuoteType> _c_QuoteType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnQuoteTypeChanging(string value);
    partial void OnQuoteTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public QuoteMessage()
		{
			this._Company = default(EntityRef<Company>);
			this._c_QuoteType = default(EntityRef<c_QuoteType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteType", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string QuoteType
		{
			get
			{
				return this._QuoteType;
			}
			set
			{
				if ((this._QuoteType != value))
				{
					if (this._c_QuoteType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteTypeChanging(value);
					this.SendPropertyChanging();
					this._QuoteType = value;
					this.SendPropertyChanged("QuoteType");
					this.OnQuoteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteMessage1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._QuoteMessage1;
			}
			set
			{
				if ((this._QuoteMessage1 != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuoteMessage1 = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_QuoteMessage", Storage="_Company", ThisKey="CompanyCode", OtherKey="CompanyCode", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.QuoteMessage.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.QuoteMessage.Add(this);
						this._CompanyCode = value.CompanyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_QuoteType_QuoteMessage", Storage="_c_QuoteType", ThisKey="QuoteType", OtherKey="Code", IsForeignKey=true)]
		public c_QuoteType c_QuoteType
		{
			get
			{
				return this._c_QuoteType.Entity;
			}
			set
			{
				c_QuoteType previousValue = this._c_QuoteType.Entity;
				if (((previousValue != value) 
							|| (this._c_QuoteType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_QuoteType.Entity = null;
						previousValue.QuoteMessage.Remove(this);
					}
					this._c_QuoteType.Entity = value;
					if ((value != null))
					{
						value.QuoteMessage.Add(this);
						this._QuoteType = value.Code;
					}
					else
					{
						this._QuoteType = default(string);
					}
					this.SendPropertyChanged("c_QuoteType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesCar")]
	public partial class SalesCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SalesCarId;
		
		private string _NewUsedType;
		
		private string _ExteriorColorCode;
		
		private string _InteriorColorCode;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _MileageUnit;
		
		private string _ManufacturingYear;
		
		private System.Nullable<decimal> _CarTax;
		
		private System.Nullable<decimal> _CarWeightTax;
		
		private System.Nullable<decimal> _CarLiabilityInsurance;
		
		private System.Nullable<decimal> _AcquisitionTax;
		
		private System.Nullable<decimal> _RecycleDeposit;
		
		private string _CarStatus;
		
		private string _OwnerCode;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _InspectionDate;
		
		private System.Nullable<System.DateTime> _NextInspectionDate;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _Vin;
		
		private string _UsVin;
		
		private string _FirstRegistrationYear;
		
		private string _UsageType;
		
		private string _Usage;
		
		private string _CarClassification;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private string _MakerWarranty;
		
		private string _Figure;
		
		private string _Import;
		
		private string _Guarantee;
		
		private string _Instructions;
		
		private string _Recycle;
		
		private string _RecycleTicket;
		
		private string _Steering;
		
		private string _ChangeColor;
		
		private string _Light;
		
		private string _Aw;
		
		private string _Aero;
		
		private string _Sr;
		
		private string _Cd;
		
		private string _Md;
		
		private string _NaviType;
		
		private string _NaviEquipment;
		
		private string _NaviDashboard;
		
		private string _SeatColor;
		
		private string _SeatType;
		
		private string _DeclarationType;
		
		private string _AcquisitionReason;
		
		private string _TaxationTypeCarTax;
		
		private string _TaxationTypeAcquisitionTax;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CarGradeCode;
		
		private string _ColorType;
		
		private string _RecordingNote;
		
		private System.Nullable<System.DateTime> _ProductionDate;
		
		private string _ReparationRecord;
		
		private string _Oil;
		
		private string _Tire;
		
		private string _KeyCode;
		
		private string _AudioCode;
		
		private string _Memo1;
		
		private string _Memo2;
		
		private string _Memo3;
		
		private string _Memo4;
		
		private string _Memo5;
		
		private string _Memo6;
		
		private string _Memo7;
		
		private string _Memo8;
		
		private string _Memo9;
		
		private string _Memo10;
		
		private string _LocationCode;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _MakerName;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _MaximumLoadingWeight;
		
		private System.Nullable<int> _CarWeight;
		
		private System.Nullable<int> _TotalCarWeight;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _FFAxileWeight;
		
		private System.Nullable<int> _FRAxileWeight;
		
		private System.Nullable<int> _RFAxileWeight;
		
		private System.Nullable<int> _RRAxileWeight;
		
		private string _ModelName;
		
		private string _EngineType;
		
		private System.Nullable<decimal> _Displacement;
		
		private string _Fuel;
		
		private string _ModelSpecificateNumber;
		
		private string _ClassificationTypeNumber;
		
		private string _PossesorName;
		
		private string _PossesorAddress;
		
		private string _UserName;
		
		private string _UserAddress;
		
		private string _PrincipalPlace;
		
		private string _ExpireType;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _Memo;
		
		private string _CouponPresence;
		
		private string _ExteriorColorName;
		
		private string _InteriorColorName;
		
		private string _DocumentComplete;
		
		private string _DocumentRemarks;
		
		private string _EraseRegist;
		
		private string _UserCode;
		
		private string _ApprovedCarNumber;
		
		private System.Nullable<System.DateTime> _ApprovedCarWarrantyDateFrom;
		
		private System.Nullable<System.DateTime> _ApprovedCarWarrantyDateTo;
		
		private string _Finance;
		
		private string _InspectGuidFlag;
		
		private string _InspectGuidMemo;
		
		private string _CarUsage;
		
		private string _CompanyRegistrationFlag;
		
		private System.Nullable<System.DateTime> _FirstRegistrationDate;
		
		private System.Nullable<bool> _ConfirmDriverLicense;
		
		private System.Nullable<bool> _ConfirmCertificationSeal;
		
		private string _ConfirmOther;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<Transfer> _Transfer;
		
		private EntityRef<CarColor> _CarColor;
		
		private EntityRef<CarColor> _CarColor1;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<c_NewUsedType> _c_NewUsedType;
		
		private EntityRef<c_MileageUnit> _c_MileageUnit;
		
		private EntityRef<c_CarStatus> _c_CarStatus;
		
		private EntityRef<c_UsageType> _c_UsageType;
		
		private EntityRef<c_Usage> _c_Usage;
		
		private EntityRef<c_CarClassification> _c_CarClassification;
		
		private EntityRef<c_Figure> _c_Figure;
		
		private EntityRef<c_Import> _c_Import;
		
		private EntityRef<c_Recycle> _c_Recycle;
		
		private EntityRef<c_Steering> _c_Steering;
		
		private EntityRef<c_Light> _c_Light;
		
		private EntityRef<c_Sr> _c_Sr;
		
		private EntityRef<c_NaviEquipment> _c_NaviEquipment;
		
		private EntityRef<c_NaviDashboard> _c_NaviDashboard;
		
		private EntityRef<c_SeatType> _c_SeatType;
		
		private EntityRef<c_DeclarationType> _c_DeclarationType;
		
		private EntityRef<c_AcquisitionReason> _c_AcquisitionReason;
		
		private EntityRef<c_TaxationType> _c_TaxationType;
		
		private EntityRef<c_TaxationType> _c_TaxationType1;
		
		private EntityRef<c_OnOff> _c_OnOff;
		
		private EntityRef<c_OnOff> _c_OnOff1;
		
		private EntityRef<c_OnOff> _c_OnOff2;
		
		private EntityRef<c_OnOff> _c_OnOff3;
		
		private EntityRef<c_OnOff> _c_OnOff4;
		
		private EntityRef<c_GenuineType> _c_GenuineType;
		
		private EntityRef<c_GenuineType> _c_GenuineType1;
		
		private EntityRef<c_GenuineType> _c_GenuineType2;
		
		private EntityRef<c_GenuineType> _c_GenuineType3;
		
		private EntityRef<c_GenuineType> _c_GenuineType4;
		
		private EntityRef<c_OnOff> _c_OnOff5;
		
		private EntityRef<c_OnOff> _c_OnOff6;
		
		private EntityRef<c_ColorCategory> _c_ColorCategory;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<Parts> _Parts1;
		
		private EntityRef<CarGrade> _CarGrade;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<c_ExpireType> _c_ExpireType;
		
		private EntityRef<c_OnOff> _c_OnOff7;
		
		private EntityRef<c_DocumentComplete> _c_DocumentComplete;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist;
		
		private EntityRef<Customer> _User;
		
		private EntityRef<c_OnOff> _c_Finance;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnNewUsedTypeChanging(string value);
    partial void OnNewUsedTypeChanged();
    partial void OnExteriorColorCodeChanging(string value);
    partial void OnExteriorColorCodeChanged();
    partial void OnInteriorColorCodeChanging(string value);
    partial void OnInteriorColorCodeChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnManufacturingYearChanging(string value);
    partial void OnManufacturingYearChanged();
    partial void OnCarTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxChanged();
    partial void OnCarWeightTaxChanging(System.Nullable<decimal> value);
    partial void OnCarWeightTaxChanged();
    partial void OnCarLiabilityInsuranceChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceChanged();
    partial void OnAcquisitionTaxChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionTaxChanged();
    partial void OnRecycleDepositChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositChanged();
    partial void OnCarStatusChanging(string value);
    partial void OnCarStatusChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionDateChanged();
    partial void OnNextInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextInspectionDateChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnUsVinChanging(string value);
    partial void OnUsVinChanged();
    partial void OnFirstRegistrationYearChanging(string value);
    partial void OnFirstRegistrationYearChanged();
    partial void OnUsageTypeChanging(string value);
    partial void OnUsageTypeChanged();
    partial void OnUsageChanging(string value);
    partial void OnUsageChanged();
    partial void OnCarClassificationChanging(string value);
    partial void OnCarClassificationChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnRegistrationNumberTypeChanging(string value);
    partial void OnRegistrationNumberTypeChanged();
    partial void OnRegistrationNumberKanaChanging(string value);
    partial void OnRegistrationNumberKanaChanged();
    partial void OnRegistrationNumberPlateChanging(string value);
    partial void OnRegistrationNumberPlateChanged();
    partial void OnMakerWarrantyChanging(string value);
    partial void OnMakerWarrantyChanged();
    partial void OnFigureChanging(string value);
    partial void OnFigureChanged();
    partial void OnImportChanging(string value);
    partial void OnImportChanged();
    partial void OnGuaranteeChanging(string value);
    partial void OnGuaranteeChanged();
    partial void OnInstructionsChanging(string value);
    partial void OnInstructionsChanged();
    partial void OnRecycleChanging(string value);
    partial void OnRecycleChanged();
    partial void OnRecycleTicketChanging(string value);
    partial void OnRecycleTicketChanged();
    partial void OnSteeringChanging(string value);
    partial void OnSteeringChanged();
    partial void OnChangeColorChanging(string value);
    partial void OnChangeColorChanged();
    partial void OnLightChanging(string value);
    partial void OnLightChanged();
    partial void OnAwChanging(string value);
    partial void OnAwChanged();
    partial void OnAeroChanging(string value);
    partial void OnAeroChanged();
    partial void OnSrChanging(string value);
    partial void OnSrChanged();
    partial void OnCdChanging(string value);
    partial void OnCdChanged();
    partial void OnMdChanging(string value);
    partial void OnMdChanged();
    partial void OnNaviTypeChanging(string value);
    partial void OnNaviTypeChanged();
    partial void OnNaviEquipmentChanging(string value);
    partial void OnNaviEquipmentChanged();
    partial void OnNaviDashboardChanging(string value);
    partial void OnNaviDashboardChanged();
    partial void OnSeatColorChanging(string value);
    partial void OnSeatColorChanged();
    partial void OnSeatTypeChanging(string value);
    partial void OnSeatTypeChanged();
    partial void OnDeclarationTypeChanging(string value);
    partial void OnDeclarationTypeChanged();
    partial void OnAcquisitionReasonChanging(string value);
    partial void OnAcquisitionReasonChanged();
    partial void OnTaxationTypeCarTaxChanging(string value);
    partial void OnTaxationTypeCarTaxChanged();
    partial void OnTaxationTypeAcquisitionTaxChanging(string value);
    partial void OnTaxationTypeAcquisitionTaxChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnColorTypeChanging(string value);
    partial void OnColorTypeChanged();
    partial void OnRecordingNoteChanging(string value);
    partial void OnRecordingNoteChanged();
    partial void OnProductionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionDateChanged();
    partial void OnReparationRecordChanging(string value);
    partial void OnReparationRecordChanged();
    partial void OnOilChanging(string value);
    partial void OnOilChanged();
    partial void OnTireChanging(string value);
    partial void OnTireChanged();
    partial void OnKeyCodeChanging(string value);
    partial void OnKeyCodeChanged();
    partial void OnAudioCodeChanging(string value);
    partial void OnAudioCodeChanged();
    partial void OnMemo1Changing(string value);
    partial void OnMemo1Changed();
    partial void OnMemo2Changing(string value);
    partial void OnMemo2Changed();
    partial void OnMemo3Changing(string value);
    partial void OnMemo3Changed();
    partial void OnMemo4Changing(string value);
    partial void OnMemo4Changed();
    partial void OnMemo5Changing(string value);
    partial void OnMemo5Changed();
    partial void OnMemo6Changing(string value);
    partial void OnMemo6Changed();
    partial void OnMemo7Changing(string value);
    partial void OnMemo7Changed();
    partial void OnMemo8Changing(string value);
    partial void OnMemo8Changed();
    partial void OnMemo9Changing(string value);
    partial void OnMemo9Changed();
    partial void OnMemo10Changing(string value);
    partial void OnMemo10Changed();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnMaximumLoadingWeightChanging(System.Nullable<int> value);
    partial void OnMaximumLoadingWeightChanged();
    partial void OnCarWeightChanging(System.Nullable<int> value);
    partial void OnCarWeightChanged();
    partial void OnTotalCarWeightChanging(System.Nullable<int> value);
    partial void OnTotalCarWeightChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFFAxileWeightChanging(System.Nullable<int> value);
    partial void OnFFAxileWeightChanged();
    partial void OnFRAxileWeightChanging(System.Nullable<int> value);
    partial void OnFRAxileWeightChanged();
    partial void OnRFAxileWeightChanging(System.Nullable<int> value);
    partial void OnRFAxileWeightChanged();
    partial void OnRRAxileWeightChanging(System.Nullable<int> value);
    partial void OnRRAxileWeightChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnDisplacementChanging(System.Nullable<decimal> value);
    partial void OnDisplacementChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnModelSpecificateNumberChanging(string value);
    partial void OnModelSpecificateNumberChanged();
    partial void OnClassificationTypeNumberChanging(string value);
    partial void OnClassificationTypeNumberChanged();
    partial void OnPossesorNameChanging(string value);
    partial void OnPossesorNameChanged();
    partial void OnPossesorAddressChanging(string value);
    partial void OnPossesorAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnPrincipalPlaceChanging(string value);
    partial void OnPrincipalPlaceChanged();
    partial void OnExpireTypeChanging(string value);
    partial void OnExpireTypeChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCouponPresenceChanging(string value);
    partial void OnCouponPresenceChanged();
    partial void OnExteriorColorNameChanging(string value);
    partial void OnExteriorColorNameChanged();
    partial void OnInteriorColorNameChanging(string value);
    partial void OnInteriorColorNameChanged();
    partial void OnDocumentCompleteChanging(string value);
    partial void OnDocumentCompleteChanged();
    partial void OnDocumentRemarksChanging(string value);
    partial void OnDocumentRemarksChanged();
    partial void OnEraseRegistChanging(string value);
    partial void OnEraseRegistChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnApprovedCarNumberChanging(string value);
    partial void OnApprovedCarNumberChanged();
    partial void OnApprovedCarWarrantyDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedCarWarrantyDateFromChanged();
    partial void OnApprovedCarWarrantyDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedCarWarrantyDateToChanged();
    partial void OnFinanceChanging(string value);
    partial void OnFinanceChanged();
    partial void OnInspectGuidFlagChanging(string value);
    partial void OnInspectGuidFlagChanged();
    partial void OnInspectGuidMemoChanging(string value);
    partial void OnInspectGuidMemoChanged();
    partial void OnCarUsageChanging(string value);
    partial void OnCarUsageChanged();
    partial void OnCompanyRegistrationFlagChanging(string value);
    partial void OnCompanyRegistrationFlagChanged();
    partial void OnFirstRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRegistrationDateChanged();
    partial void OnConfirmDriverLicenseChanging(System.Nullable<bool> value);
    partial void OnConfirmDriverLicenseChanged();
    partial void OnConfirmCertificationSealChanging(System.Nullable<bool> value);
    partial void OnConfirmCertificationSealChanged();
    partial void OnConfirmOtherChanging(string value);
    partial void OnConfirmOtherChanged();
    #endregion
		
		public SalesCar()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			this._CarColor = default(EntityRef<CarColor>);
			this._CarColor1 = default(EntityRef<CarColor>);
			this._Customer = default(EntityRef<Customer>);
			this._c_NewUsedType = default(EntityRef<c_NewUsedType>);
			this._c_MileageUnit = default(EntityRef<c_MileageUnit>);
			this._c_CarStatus = default(EntityRef<c_CarStatus>);
			this._c_UsageType = default(EntityRef<c_UsageType>);
			this._c_Usage = default(EntityRef<c_Usage>);
			this._c_CarClassification = default(EntityRef<c_CarClassification>);
			this._c_Figure = default(EntityRef<c_Figure>);
			this._c_Import = default(EntityRef<c_Import>);
			this._c_Recycle = default(EntityRef<c_Recycle>);
			this._c_Steering = default(EntityRef<c_Steering>);
			this._c_Light = default(EntityRef<c_Light>);
			this._c_Sr = default(EntityRef<c_Sr>);
			this._c_NaviEquipment = default(EntityRef<c_NaviEquipment>);
			this._c_NaviDashboard = default(EntityRef<c_NaviDashboard>);
			this._c_SeatType = default(EntityRef<c_SeatType>);
			this._c_DeclarationType = default(EntityRef<c_DeclarationType>);
			this._c_AcquisitionReason = default(EntityRef<c_AcquisitionReason>);
			this._c_TaxationType = default(EntityRef<c_TaxationType>);
			this._c_TaxationType1 = default(EntityRef<c_TaxationType>);
			this._c_OnOff = default(EntityRef<c_OnOff>);
			this._c_OnOff1 = default(EntityRef<c_OnOff>);
			this._c_OnOff2 = default(EntityRef<c_OnOff>);
			this._c_OnOff3 = default(EntityRef<c_OnOff>);
			this._c_OnOff4 = default(EntityRef<c_OnOff>);
			this._c_GenuineType = default(EntityRef<c_GenuineType>);
			this._c_GenuineType1 = default(EntityRef<c_GenuineType>);
			this._c_GenuineType2 = default(EntityRef<c_GenuineType>);
			this._c_GenuineType3 = default(EntityRef<c_GenuineType>);
			this._c_GenuineType4 = default(EntityRef<c_GenuineType>);
			this._c_OnOff5 = default(EntityRef<c_OnOff>);
			this._c_OnOff6 = default(EntityRef<c_OnOff>);
			this._c_ColorCategory = default(EntityRef<c_ColorCategory>);
			this._Parts = default(EntityRef<Parts>);
			this._Parts1 = default(EntityRef<Parts>);
			this._CarGrade = default(EntityRef<CarGrade>);
			this._Location = default(EntityRef<Location>);
			this._c_ExpireType = default(EntityRef<c_ExpireType>);
			this._c_OnOff7 = default(EntityRef<c_OnOff>);
			this._c_DocumentComplete = default(EntityRef<c_DocumentComplete>);
			this._c_EraseRegist = default(EntityRef<c_EraseRegist>);
			this._User = default(EntityRef<Customer>);
			this._c_Finance = default(EntityRef<c_OnOff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarId = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					if (this._c_NewUsedType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewUsedTypeChanging(value);
					this.SendPropertyChanging();
					this._NewUsedType = value;
					this.SendPropertyChanged("NewUsedType");
					this.OnNewUsedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorCode
		{
			get
			{
				return this._ExteriorColorCode;
			}
			set
			{
				if ((this._ExteriorColorCode != value))
				{
					if (this._CarColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorCode = value;
					this.SendPropertyChanged("ExteriorColorCode");
					this.OnExteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorCode
		{
			get
			{
				return this._InteriorColorCode;
			}
			set
			{
				if ((this._InteriorColorCode != value))
				{
					if (this._CarColor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorCode = value;
					this.SendPropertyChanged("InteriorColorCode");
					this.OnInteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					if (this._c_MileageUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingYear", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ManufacturingYear
		{
			get
			{
				return this._ManufacturingYear;
			}
			set
			{
				if ((this._ManufacturingYear != value))
				{
					this.OnManufacturingYearChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingYear = value;
					this.SendPropertyChanged("ManufacturingYear");
					this.OnManufacturingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTax
		{
			get
			{
				return this._CarTax;
			}
			set
			{
				if ((this._CarTax != value))
				{
					this.OnCarTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTax = value;
					this.SendPropertyChanged("CarTax");
					this.OnCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarWeightTax
		{
			get
			{
				return this._CarWeightTax;
			}
			set
			{
				if ((this._CarWeightTax != value))
				{
					this.OnCarWeightTaxChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTax = value;
					this.SendPropertyChanged("CarWeightTax");
					this.OnCarWeightTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this.OnCarLiabilityInsuranceChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsurance = value;
					this.SendPropertyChanged("CarLiabilityInsurance");
					this.OnCarLiabilityInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AcquisitionTax
		{
			get
			{
				return this._AcquisitionTax;
			}
			set
			{
				if ((this._AcquisitionTax != value))
				{
					this.OnAcquisitionTaxChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionTax = value;
					this.SendPropertyChanged("AcquisitionTax");
					this.OnAcquisitionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this.OnRecycleDepositChanging(value);
					this.SendPropertyChanging();
					this._RecycleDeposit = value;
					this.SendPropertyChanged("RecycleDeposit");
					this.OnRecycleDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatus
		{
			get
			{
				return this._CarStatus;
			}
			set
			{
				if ((this._CarStatus != value))
				{
					if (this._c_CarStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarStatusChanging(value);
					this.SendPropertyChanging();
					this._CarStatus = value;
					this.SendPropertyChanged("CarStatus");
					this.OnCarStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextInspectionDate
		{
			get
			{
				return this._NextInspectionDate;
			}
			set
			{
				if ((this._NextInspectionDate != value))
				{
					this.OnNextInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._NextInspectionDate = value;
					this.SendPropertyChanged("NextInspectionDate");
					this.OnNextInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsVin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsVin
		{
			get
			{
				return this._UsVin;
			}
			set
			{
				if ((this._UsVin != value))
				{
					this.OnUsVinChanging(value);
					this.SendPropertyChanging();
					this._UsVin = value;
					this.SendPropertyChanged("UsVin");
					this.OnUsVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationYear", DbType="NVarChar(9)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistrationYear
		{
			get
			{
				return this._FirstRegistrationYear;
			}
			set
			{
				if ((this._FirstRegistrationYear != value))
				{
					this.OnFirstRegistrationYearChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationYear = value;
					this.SendPropertyChanged("FirstRegistrationYear");
					this.OnFirstRegistrationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					if (this._c_UsageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					if (this._c_Usage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassification", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassification
		{
			get
			{
				return this._CarClassification;
			}
			set
			{
				if ((this._CarClassification != value))
				{
					if (this._c_CarClassification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarClassificationChanging(value);
					this.SendPropertyChanging();
					this._CarClassification = value;
					this.SendPropertyChanged("CarClassification");
					this.OnCarClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this.OnRegistrationNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberType = value;
					this.SendPropertyChanged("RegistrationNumberType");
					this.OnRegistrationNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this.OnRegistrationNumberKanaChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberKana = value;
					this.SendPropertyChanged("RegistrationNumberKana");
					this.OnRegistrationNumberKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this.OnRegistrationNumberPlateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberPlate = value;
					this.SendPropertyChanged("RegistrationNumberPlate");
					this.OnRegistrationNumberPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerWarranty", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerWarranty
		{
			get
			{
				return this._MakerWarranty;
			}
			set
			{
				if ((this._MakerWarranty != value))
				{
					if (this._c_OnOff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMakerWarrantyChanging(value);
					this.SendPropertyChanging();
					this._MakerWarranty = value;
					this.SendPropertyChanged("MakerWarranty");
					this.OnMakerWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					if (this._c_Figure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					if (this._c_Import.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guarantee", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Guarantee
		{
			get
			{
				return this._Guarantee;
			}
			set
			{
				if ((this._Guarantee != value))
				{
					if (this._c_OnOff1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuaranteeChanging(value);
					this.SendPropertyChanging();
					this._Guarantee = value;
					this.SendPropertyChanged("Guarantee");
					this.OnGuaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					if (this._c_OnOff2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recycle", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Recycle
		{
			get
			{
				return this._Recycle;
			}
			set
			{
				if ((this._Recycle != value))
				{
					if (this._c_Recycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecycleChanging(value);
					this.SendPropertyChanging();
					this._Recycle = value;
					this.SendPropertyChanged("Recycle");
					this.OnRecycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleTicket", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecycleTicket
		{
			get
			{
				return this._RecycleTicket;
			}
			set
			{
				if ((this._RecycleTicket != value))
				{
					if (this._c_OnOff3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecycleTicketChanging(value);
					this.SendPropertyChanging();
					this._RecycleTicket = value;
					this.SendPropertyChanged("RecycleTicket");
					this.OnRecycleTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steering", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Steering
		{
			get
			{
				return this._Steering;
			}
			set
			{
				if ((this._Steering != value))
				{
					if (this._c_Steering.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSteeringChanging(value);
					this.SendPropertyChanging();
					this._Steering = value;
					this.SendPropertyChanged("Steering");
					this.OnSteeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeColor", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangeColor
		{
			get
			{
				return this._ChangeColor;
			}
			set
			{
				if ((this._ChangeColor != value))
				{
					if (this._c_OnOff4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChangeColorChanging(value);
					this.SendPropertyChanging();
					this._ChangeColor = value;
					this.SendPropertyChanged("ChangeColor");
					this.OnChangeColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					if (this._c_Light.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aw", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aw
		{
			get
			{
				return this._Aw;
			}
			set
			{
				if ((this._Aw != value))
				{
					if (this._c_GenuineType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAwChanging(value);
					this.SendPropertyChanging();
					this._Aw = value;
					this.SendPropertyChanged("Aw");
					this.OnAwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aero", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aero
		{
			get
			{
				return this._Aero;
			}
			set
			{
				if ((this._Aero != value))
				{
					if (this._c_GenuineType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAeroChanging(value);
					this.SendPropertyChanging();
					this._Aero = value;
					this.SendPropertyChanged("Aero");
					this.OnAeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sr", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Sr
		{
			get
			{
				return this._Sr;
			}
			set
			{
				if ((this._Sr != value))
				{
					if (this._c_Sr.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSrChanging(value);
					this.SendPropertyChanging();
					this._Sr = value;
					this.SendPropertyChanged("Sr");
					this.OnSrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Cd
		{
			get
			{
				return this._Cd;
			}
			set
			{
				if ((this._Cd != value))
				{
					if (this._c_GenuineType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCdChanging(value);
					this.SendPropertyChanging();
					this._Cd = value;
					this.SendPropertyChanged("Cd");
					this.OnCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Md
		{
			get
			{
				return this._Md;
			}
			set
			{
				if ((this._Md != value))
				{
					if (this._c_GenuineType3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMdChanging(value);
					this.SendPropertyChanging();
					this._Md = value;
					this.SendPropertyChanged("Md");
					this.OnMdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviType
		{
			get
			{
				return this._NaviType;
			}
			set
			{
				if ((this._NaviType != value))
				{
					if (this._c_GenuineType4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNaviTypeChanging(value);
					this.SendPropertyChanging();
					this._NaviType = value;
					this.SendPropertyChanged("NaviType");
					this.OnNaviTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviEquipment", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviEquipment
		{
			get
			{
				return this._NaviEquipment;
			}
			set
			{
				if ((this._NaviEquipment != value))
				{
					if (this._c_NaviEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNaviEquipmentChanging(value);
					this.SendPropertyChanging();
					this._NaviEquipment = value;
					this.SendPropertyChanged("NaviEquipment");
					this.OnNaviEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviDashboard", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviDashboard
		{
			get
			{
				return this._NaviDashboard;
			}
			set
			{
				if ((this._NaviDashboard != value))
				{
					if (this._c_NaviDashboard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNaviDashboardChanging(value);
					this.SendPropertyChanging();
					this._NaviDashboard = value;
					this.SendPropertyChanged("NaviDashboard");
					this.OnNaviDashboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatColor", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatColor
		{
			get
			{
				return this._SeatColor;
			}
			set
			{
				if ((this._SeatColor != value))
				{
					this.OnSeatColorChanging(value);
					this.SendPropertyChanging();
					this._SeatColor = value;
					this.SendPropertyChanged("SeatColor");
					this.OnSeatColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatType
		{
			get
			{
				return this._SeatType;
			}
			set
			{
				if ((this._SeatType != value))
				{
					if (this._c_SeatType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeatTypeChanging(value);
					this.SendPropertyChanging();
					this._SeatType = value;
					this.SendPropertyChanged("SeatType");
					this.OnSeatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DeclarationType
		{
			get
			{
				return this._DeclarationType;
			}
			set
			{
				if ((this._DeclarationType != value))
				{
					if (this._c_DeclarationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclarationTypeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationType = value;
					this.SendPropertyChanged("DeclarationType");
					this.OnDeclarationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionReason", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AcquisitionReason
		{
			get
			{
				return this._AcquisitionReason;
			}
			set
			{
				if ((this._AcquisitionReason != value))
				{
					if (this._c_AcquisitionReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcquisitionReasonChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionReason = value;
					this.SendPropertyChanged("AcquisitionReason");
					this.OnAcquisitionReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationTypeCarTax", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxationTypeCarTax
		{
			get
			{
				return this._TaxationTypeCarTax;
			}
			set
			{
				if ((this._TaxationTypeCarTax != value))
				{
					if (this._c_TaxationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxationTypeCarTaxChanging(value);
					this.SendPropertyChanging();
					this._TaxationTypeCarTax = value;
					this.SendPropertyChanged("TaxationTypeCarTax");
					this.OnTaxationTypeCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationTypeAcquisitionTax", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxationTypeAcquisitionTax
		{
			get
			{
				return this._TaxationTypeAcquisitionTax;
			}
			set
			{
				if ((this._TaxationTypeAcquisitionTax != value))
				{
					if (this._c_TaxationType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxationTypeAcquisitionTaxChanging(value);
					this.SendPropertyChanging();
					this._TaxationTypeAcquisitionTax = value;
					this.SendPropertyChanged("TaxationTypeAcquisitionTax");
					this.OnTaxationTypeAcquisitionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorType", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColorType
		{
			get
			{
				return this._ColorType;
			}
			set
			{
				if ((this._ColorType != value))
				{
					if (this._c_ColorCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorTypeChanging(value);
					this.SendPropertyChanging();
					this._ColorType = value;
					this.SendPropertyChanged("ColorType");
					this.OnColorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordingNote", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecordingNote
		{
			get
			{
				return this._RecordingNote;
			}
			set
			{
				if ((this._RecordingNote != value))
				{
					if (this._c_OnOff5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecordingNoteChanging(value);
					this.SendPropertyChanging();
					this._RecordingNote = value;
					this.SendPropertyChanged("RecordingNote");
					this.OnRecordingNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductionDate
		{
			get
			{
				return this._ProductionDate;
			}
			set
			{
				if ((this._ProductionDate != value))
				{
					this.OnProductionDateChanging(value);
					this.SendPropertyChanging();
					this._ProductionDate = value;
					this.SendPropertyChanged("ProductionDate");
					this.OnProductionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReparationRecord", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReparationRecord
		{
			get
			{
				return this._ReparationRecord;
			}
			set
			{
				if ((this._ReparationRecord != value))
				{
					if (this._c_OnOff6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReparationRecordChanging(value);
					this.SendPropertyChanging();
					this._ReparationRecord = value;
					this.SendPropertyChanged("ReparationRecord");
					this.OnReparationRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oil", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Oil
		{
			get
			{
				return this._Oil;
			}
			set
			{
				if ((this._Oil != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOilChanging(value);
					this.SendPropertyChanging();
					this._Oil = value;
					this.SendPropertyChanged("Oil");
					this.OnOilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tire", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Tire
		{
			get
			{
				return this._Tire;
			}
			set
			{
				if ((this._Tire != value))
				{
					if (this._Parts1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTireChanging(value);
					this.SendPropertyChanging();
					this._Tire = value;
					this.SendPropertyChanged("Tire");
					this.OnTireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string KeyCode
		{
			get
			{
				return this._KeyCode;
			}
			set
			{
				if ((this._KeyCode != value))
				{
					this.OnKeyCodeChanging(value);
					this.SendPropertyChanging();
					this._KeyCode = value;
					this.SendPropertyChanged("KeyCode");
					this.OnKeyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AudioCode
		{
			get
			{
				return this._AudioCode;
			}
			set
			{
				if ((this._AudioCode != value))
				{
					this.OnAudioCodeChanging(value);
					this.SendPropertyChanging();
					this._AudioCode = value;
					this.SendPropertyChanged("AudioCode");
					this.OnAudioCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo1
		{
			get
			{
				return this._Memo1;
			}
			set
			{
				if ((this._Memo1 != value))
				{
					this.OnMemo1Changing(value);
					this.SendPropertyChanging();
					this._Memo1 = value;
					this.SendPropertyChanged("Memo1");
					this.OnMemo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo2
		{
			get
			{
				return this._Memo2;
			}
			set
			{
				if ((this._Memo2 != value))
				{
					this.OnMemo2Changing(value);
					this.SendPropertyChanging();
					this._Memo2 = value;
					this.SendPropertyChanged("Memo2");
					this.OnMemo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo3", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo3
		{
			get
			{
				return this._Memo3;
			}
			set
			{
				if ((this._Memo3 != value))
				{
					this.OnMemo3Changing(value);
					this.SendPropertyChanging();
					this._Memo3 = value;
					this.SendPropertyChanged("Memo3");
					this.OnMemo3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo4", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo4
		{
			get
			{
				return this._Memo4;
			}
			set
			{
				if ((this._Memo4 != value))
				{
					this.OnMemo4Changing(value);
					this.SendPropertyChanging();
					this._Memo4 = value;
					this.SendPropertyChanged("Memo4");
					this.OnMemo4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo5", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo5
		{
			get
			{
				return this._Memo5;
			}
			set
			{
				if ((this._Memo5 != value))
				{
					this.OnMemo5Changing(value);
					this.SendPropertyChanging();
					this._Memo5 = value;
					this.SendPropertyChanged("Memo5");
					this.OnMemo5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo6", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo6
		{
			get
			{
				return this._Memo6;
			}
			set
			{
				if ((this._Memo6 != value))
				{
					this.OnMemo6Changing(value);
					this.SendPropertyChanging();
					this._Memo6 = value;
					this.SendPropertyChanged("Memo6");
					this.OnMemo6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo7", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo7
		{
			get
			{
				return this._Memo7;
			}
			set
			{
				if ((this._Memo7 != value))
				{
					this.OnMemo7Changing(value);
					this.SendPropertyChanging();
					this._Memo7 = value;
					this.SendPropertyChanged("Memo7");
					this.OnMemo7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo8", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo8
		{
			get
			{
				return this._Memo8;
			}
			set
			{
				if ((this._Memo8 != value))
				{
					this.OnMemo8Changing(value);
					this.SendPropertyChanging();
					this._Memo8 = value;
					this.SendPropertyChanged("Memo8");
					this.OnMemo8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo9", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo9
		{
			get
			{
				return this._Memo9;
			}
			set
			{
				if ((this._Memo9 != value))
				{
					this.OnMemo9Changing(value);
					this.SendPropertyChanging();
					this._Memo9 = value;
					this.SendPropertyChanged("Memo9");
					this.OnMemo9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo10", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo10
		{
			get
			{
				return this._Memo10;
			}
			set
			{
				if ((this._Memo10 != value))
				{
					this.OnMemo10Changing(value);
					this.SendPropertyChanging();
					this._Memo10 = value;
					this.SendPropertyChanged("Memo10");
					this.OnMemo10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumLoadingWeight", DbType="Int")]
		public System.Nullable<int> MaximumLoadingWeight
		{
			get
			{
				return this._MaximumLoadingWeight;
			}
			set
			{
				if ((this._MaximumLoadingWeight != value))
				{
					this.OnMaximumLoadingWeightChanging(value);
					this.SendPropertyChanging();
					this._MaximumLoadingWeight = value;
					this.SendPropertyChanged("MaximumLoadingWeight");
					this.OnMaximumLoadingWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeight", DbType="Int")]
		public System.Nullable<int> CarWeight
		{
			get
			{
				return this._CarWeight;
			}
			set
			{
				if ((this._CarWeight != value))
				{
					this.OnCarWeightChanging(value);
					this.SendPropertyChanging();
					this._CarWeight = value;
					this.SendPropertyChanged("CarWeight");
					this.OnCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCarWeight", DbType="Int")]
		public System.Nullable<int> TotalCarWeight
		{
			get
			{
				return this._TotalCarWeight;
			}
			set
			{
				if ((this._TotalCarWeight != value))
				{
					this.OnTotalCarWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalCarWeight = value;
					this.SendPropertyChanged("TotalCarWeight");
					this.OnTotalCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFAxileWeight", DbType="Int")]
		public System.Nullable<int> FFAxileWeight
		{
			get
			{
				return this._FFAxileWeight;
			}
			set
			{
				if ((this._FFAxileWeight != value))
				{
					this.OnFFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FFAxileWeight = value;
					this.SendPropertyChanged("FFAxileWeight");
					this.OnFFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRAxileWeight", DbType="Int")]
		public System.Nullable<int> FRAxileWeight
		{
			get
			{
				return this._FRAxileWeight;
			}
			set
			{
				if ((this._FRAxileWeight != value))
				{
					this.OnFRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FRAxileWeight = value;
					this.SendPropertyChanged("FRAxileWeight");
					this.OnFRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFAxileWeight", DbType="Int")]
		public System.Nullable<int> RFAxileWeight
		{
			get
			{
				return this._RFAxileWeight;
			}
			set
			{
				if ((this._RFAxileWeight != value))
				{
					this.OnRFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RFAxileWeight = value;
					this.SendPropertyChanged("RFAxileWeight");
					this.OnRFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRAxileWeight", DbType="Int")]
		public System.Nullable<int> RRAxileWeight
		{
			get
			{
				return this._RRAxileWeight;
			}
			set
			{
				if ((this._RRAxileWeight != value))
				{
					this.OnRRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RRAxileWeight = value;
					this.SendPropertyChanged("RRAxileWeight");
					this.OnRRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displacement", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Displacement
		{
			get
			{
				return this._Displacement;
			}
			set
			{
				if ((this._Displacement != value))
				{
					this.OnDisplacementChanging(value);
					this.SendPropertyChanging();
					this._Displacement = value;
					this.SendPropertyChanged("Displacement");
					this.OnDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelSpecificateNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelSpecificateNumber
		{
			get
			{
				return this._ModelSpecificateNumber;
			}
			set
			{
				if ((this._ModelSpecificateNumber != value))
				{
					this.OnModelSpecificateNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelSpecificateNumber = value;
					this.SendPropertyChanged("ModelSpecificateNumber");
					this.OnModelSpecificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTypeNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ClassificationTypeNumber
		{
			get
			{
				return this._ClassificationTypeNumber;
			}
			set
			{
				if ((this._ClassificationTypeNumber != value))
				{
					this.OnClassificationTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTypeNumber = value;
					this.SendPropertyChanged("ClassificationTypeNumber");
					this.OnClassificationTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorName
		{
			get
			{
				return this._PossesorName;
			}
			set
			{
				if ((this._PossesorName != value))
				{
					this.OnPossesorNameChanging(value);
					this.SendPropertyChanging();
					this._PossesorName = value;
					this.SendPropertyChanged("PossesorName");
					this.OnPossesorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorAddress
		{
			get
			{
				return this._PossesorAddress;
			}
			set
			{
				if ((this._PossesorAddress != value))
				{
					this.OnPossesorAddressChanging(value);
					this.SendPropertyChanging();
					this._PossesorAddress = value;
					this.SendPropertyChanged("PossesorAddress");
					this.OnPossesorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPlace", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrincipalPlace
		{
			get
			{
				return this._PrincipalPlace;
			}
			set
			{
				if ((this._PrincipalPlace != value))
				{
					this.OnPrincipalPlaceChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPlace = value;
					this.SendPropertyChanged("PrincipalPlace");
					this.OnPrincipalPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExpireType
		{
			get
			{
				return this._ExpireType;
			}
			set
			{
				if ((this._ExpireType != value))
				{
					if (this._c_ExpireType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpireTypeChanging(value);
					this.SendPropertyChanging();
					this._ExpireType = value;
					this.SendPropertyChanged("ExpireType");
					this.OnExpireTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponPresence", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CouponPresence
		{
			get
			{
				return this._CouponPresence;
			}
			set
			{
				if ((this._CouponPresence != value))
				{
					if (this._c_OnOff7.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCouponPresenceChanging(value);
					this.SendPropertyChanging();
					this._CouponPresence = value;
					this.SendPropertyChanged("CouponPresence");
					this.OnCouponPresenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this.OnExteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorName = value;
					this.SendPropertyChanged("ExteriorColorName");
					this.OnExteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorName
		{
			get
			{
				return this._InteriorColorName;
			}
			set
			{
				if ((this._InteriorColorName != value))
				{
					this.OnInteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorName = value;
					this.SendPropertyChanged("InteriorColorName");
					this.OnInteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentComplete", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentComplete
		{
			get
			{
				return this._DocumentComplete;
			}
			set
			{
				if ((this._DocumentComplete != value))
				{
					if (this._c_DocumentComplete.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentCompleteChanging(value);
					this.SendPropertyChanging();
					this._DocumentComplete = value;
					this.SendPropertyChanged("DocumentComplete");
					this.OnDocumentCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRemarks", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentRemarks
		{
			get
			{
				return this._DocumentRemarks;
			}
			set
			{
				if ((this._DocumentRemarks != value))
				{
					this.OnDocumentRemarksChanging(value);
					this.SendPropertyChanging();
					this._DocumentRemarks = value;
					this.SendPropertyChanged("DocumentRemarks");
					this.OnDocumentRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EraseRegist", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EraseRegist
		{
			get
			{
				return this._EraseRegist;
			}
			set
			{
				if ((this._EraseRegist != value))
				{
					if (this._c_EraseRegist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEraseRegistChanging(value);
					this.SendPropertyChanging();
					this._EraseRegist = value;
					this.SendPropertyChanged("EraseRegist");
					this.OnEraseRegistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApprovedCarNumber
		{
			get
			{
				return this._ApprovedCarNumber;
			}
			set
			{
				if ((this._ApprovedCarNumber != value))
				{
					this.OnApprovedCarNumberChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarNumber = value;
					this.SendPropertyChanged("ApprovedCarNumber");
					this.OnApprovedCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarWarrantyDateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedCarWarrantyDateFrom
		{
			get
			{
				return this._ApprovedCarWarrantyDateFrom;
			}
			set
			{
				if ((this._ApprovedCarWarrantyDateFrom != value))
				{
					this.OnApprovedCarWarrantyDateFromChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarWarrantyDateFrom = value;
					this.SendPropertyChanged("ApprovedCarWarrantyDateFrom");
					this.OnApprovedCarWarrantyDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarWarrantyDateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedCarWarrantyDateTo
		{
			get
			{
				return this._ApprovedCarWarrantyDateTo;
			}
			set
			{
				if ((this._ApprovedCarWarrantyDateTo != value))
				{
					this.OnApprovedCarWarrantyDateToChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarWarrantyDateTo = value;
					this.SendPropertyChanged("ApprovedCarWarrantyDateTo");
					this.OnApprovedCarWarrantyDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finance", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Finance
		{
			get
			{
				return this._Finance;
			}
			set
			{
				if ((this._Finance != value))
				{
					if (this._c_Finance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinanceChanging(value);
					this.SendPropertyChanging();
					this._Finance = value;
					this.SendPropertyChanged("Finance");
					this.OnFinanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidFlag
		{
			get
			{
				return this._InspectGuidFlag;
			}
			set
			{
				if ((this._InspectGuidFlag != value))
				{
					this.OnInspectGuidFlagChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidFlag = value;
					this.SendPropertyChanged("InspectGuidFlag");
					this.OnInspectGuidFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidMemo
		{
			get
			{
				return this._InspectGuidMemo;
			}
			set
			{
				if ((this._InspectGuidMemo != value))
				{
					this.OnInspectGuidMemoChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidMemo = value;
					this.SendPropertyChanged("InspectGuidMemo");
					this.OnInspectGuidMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarUsage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarUsage
		{
			get
			{
				return this._CarUsage;
			}
			set
			{
				if ((this._CarUsage != value))
				{
					this.OnCarUsageChanging(value);
					this.SendPropertyChanging();
					this._CarUsage = value;
					this.SendPropertyChanged("CarUsage");
					this.OnCarUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyRegistrationFlag", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyRegistrationFlag
		{
			get
			{
				return this._CompanyRegistrationFlag;
			}
			set
			{
				if ((this._CompanyRegistrationFlag != value))
				{
					this.OnCompanyRegistrationFlagChanging(value);
					this.SendPropertyChanging();
					this._CompanyRegistrationFlag = value;
					this.SendPropertyChanged("CompanyRegistrationFlag");
					this.OnCompanyRegistrationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstRegistrationDate
		{
			get
			{
				return this._FirstRegistrationDate;
			}
			set
			{
				if ((this._FirstRegistrationDate != value))
				{
					this.OnFirstRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationDate = value;
					this.SendPropertyChanged("FirstRegistrationDate");
					this.OnFirstRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDriverLicense", DbType="bit")]
		public System.Nullable<bool> ConfirmDriverLicense
		{
			get
			{
				return this._ConfirmDriverLicense;
			}
			set
			{
				if ((this._ConfirmDriverLicense != value))
				{
					this.OnConfirmDriverLicenseChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDriverLicense = value;
					this.SendPropertyChanged("ConfirmDriverLicense");
					this.OnConfirmDriverLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmCertificationSeal", DbType="bit")]
		public System.Nullable<bool> ConfirmCertificationSeal
		{
			get
			{
				return this._ConfirmCertificationSeal;
			}
			set
			{
				if ((this._ConfirmCertificationSeal != value))
				{
					this.OnConfirmCertificationSealChanging(value);
					this.SendPropertyChanging();
					this._ConfirmCertificationSeal = value;
					this.SendPropertyChanged("ConfirmCertificationSeal");
					this.OnConfirmCertificationSealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmOther", DbType="nvarchar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConfirmOther
		{
			get
			{
				return this._ConfirmOther;
			}
			set
			{
				if ((this._ConfirmOther != value))
				{
					this.OnConfirmOtherChanging(value);
					this.SendPropertyChanging();
					this._ConfirmOther = value;
					this.SendPropertyChanged("ConfirmOther");
					this.OnConfirmOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarPurchase", Storage="_CarPurchase", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_Transfer", Storage="_Transfer", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber")]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_SalesCar", Storage="_CarColor", ThisKey="ExteriorColorCode", OtherKey="CarColorCode", IsForeignKey=true)]
		public CarColor CarColor
		{
			get
			{
				return this._CarColor.Entity;
			}
			set
			{
				CarColor previousValue = this._CarColor.Entity;
				if (((previousValue != value) 
							|| (this._CarColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarColor.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._CarColor.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._ExteriorColorCode = value.CarColorCode;
					}
					else
					{
						this._ExteriorColorCode = default(string);
					}
					this.SendPropertyChanged("CarColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_SalesCar1", Storage="_CarColor1", ThisKey="InteriorColorCode", OtherKey="CarColorCode", IsForeignKey=true)]
		public CarColor CarColor1
		{
			get
			{
				return this._CarColor1.Entity;
			}
			set
			{
				CarColor previousValue = this._CarColor1.Entity;
				if (((previousValue != value) 
							|| (this._CarColor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarColor1.Entity = null;
						previousValue.SalesCar1.Remove(this);
					}
					this._CarColor1.Entity = value;
					if ((value != null))
					{
						value.SalesCar1.Add(this);
						this._InteriorColorCode = value.CarColorCode;
					}
					else
					{
						this._InteriorColorCode = default(string);
					}
					this.SendPropertyChanged("CarColor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesCar", Storage="_Customer", ThisKey="OwnerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._OwnerCode = value.CustomerCode;
					}
					else
					{
						this._OwnerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NewUsedType_SalesCar", Storage="_c_NewUsedType", ThisKey="NewUsedType", OtherKey="Code", IsForeignKey=true)]
		public c_NewUsedType c_NewUsedType
		{
			get
			{
				return this._c_NewUsedType.Entity;
			}
			set
			{
				c_NewUsedType previousValue = this._c_NewUsedType.Entity;
				if (((previousValue != value) 
							|| (this._c_NewUsedType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_NewUsedType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_NewUsedType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._NewUsedType = value.Code;
					}
					else
					{
						this._NewUsedType = default(string);
					}
					this.SendPropertyChanged("c_NewUsedType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_SalesCar", Storage="_c_MileageUnit", ThisKey="MileageUnit", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnit
		{
			get
			{
				return this._c_MileageUnit.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnit.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnit.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_MileageUnit.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._MileageUnit = value.Code;
					}
					else
					{
						this._MileageUnit = default(string);
					}
					this.SendPropertyChanged("c_MileageUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarStatus_SalesCar", Storage="_c_CarStatus", ThisKey="CarStatus", OtherKey="Code", IsForeignKey=true)]
		public c_CarStatus c_CarStatus
		{
			get
			{
				return this._c_CarStatus.Entity;
			}
			set
			{
				c_CarStatus previousValue = this._c_CarStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_CarStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CarStatus.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_CarStatus.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._CarStatus = value.Code;
					}
					else
					{
						this._CarStatus = default(string);
					}
					this.SendPropertyChanged("c_CarStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_UsageType_SalesCar", Storage="_c_UsageType", ThisKey="UsageType", OtherKey="Code", IsForeignKey=true)]
		public c_UsageType c_UsageType
		{
			get
			{
				return this._c_UsageType.Entity;
			}
			set
			{
				c_UsageType previousValue = this._c_UsageType.Entity;
				if (((previousValue != value) 
							|| (this._c_UsageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_UsageType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_UsageType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._UsageType = value.Code;
					}
					else
					{
						this._UsageType = default(string);
					}
					this.SendPropertyChanged("c_UsageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Usage_SalesCar", Storage="_c_Usage", ThisKey="Usage", OtherKey="Code", IsForeignKey=true)]
		public c_Usage c_Usage
		{
			get
			{
				return this._c_Usage.Entity;
			}
			set
			{
				c_Usage previousValue = this._c_Usage.Entity;
				if (((previousValue != value) 
							|| (this._c_Usage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Usage.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Usage.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Usage = value.Code;
					}
					else
					{
						this._Usage = default(string);
					}
					this.SendPropertyChanged("c_Usage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarClassification_SalesCar", Storage="_c_CarClassification", ThisKey="CarClassification", OtherKey="Code", IsForeignKey=true)]
		public c_CarClassification c_CarClassification
		{
			get
			{
				return this._c_CarClassification.Entity;
			}
			set
			{
				c_CarClassification previousValue = this._c_CarClassification.Entity;
				if (((previousValue != value) 
							|| (this._c_CarClassification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CarClassification.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_CarClassification.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._CarClassification = value.Code;
					}
					else
					{
						this._CarClassification = default(string);
					}
					this.SendPropertyChanged("c_CarClassification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Figure_SalesCar", Storage="_c_Figure", ThisKey="Figure", OtherKey="Code", IsForeignKey=true)]
		public c_Figure c_Figure
		{
			get
			{
				return this._c_Figure.Entity;
			}
			set
			{
				c_Figure previousValue = this._c_Figure.Entity;
				if (((previousValue != value) 
							|| (this._c_Figure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Figure.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Figure.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Figure = value.Code;
					}
					else
					{
						this._Figure = default(string);
					}
					this.SendPropertyChanged("c_Figure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Import_SalesCar", Storage="_c_Import", ThisKey="Import", OtherKey="Code", IsForeignKey=true)]
		public c_Import c_Import
		{
			get
			{
				return this._c_Import.Entity;
			}
			set
			{
				c_Import previousValue = this._c_Import.Entity;
				if (((previousValue != value) 
							|| (this._c_Import.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Import.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Import.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Import = value.Code;
					}
					else
					{
						this._Import = default(string);
					}
					this.SendPropertyChanged("c_Import");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Recycle_SalesCar", Storage="_c_Recycle", ThisKey="Recycle", OtherKey="Code", IsForeignKey=true)]
		public c_Recycle c_Recycle
		{
			get
			{
				return this._c_Recycle.Entity;
			}
			set
			{
				c_Recycle previousValue = this._c_Recycle.Entity;
				if (((previousValue != value) 
							|| (this._c_Recycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Recycle.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Recycle.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Recycle = value.Code;
					}
					else
					{
						this._Recycle = default(string);
					}
					this.SendPropertyChanged("c_Recycle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Steering_SalesCar", Storage="_c_Steering", ThisKey="Steering", OtherKey="Code", IsForeignKey=true)]
		public c_Steering c_Steering
		{
			get
			{
				return this._c_Steering.Entity;
			}
			set
			{
				c_Steering previousValue = this._c_Steering.Entity;
				if (((previousValue != value) 
							|| (this._c_Steering.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Steering.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Steering.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Steering = value.Code;
					}
					else
					{
						this._Steering = default(string);
					}
					this.SendPropertyChanged("c_Steering");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Light_SalesCar", Storage="_c_Light", ThisKey="Light", OtherKey="Code", IsForeignKey=true)]
		public c_Light c_Light
		{
			get
			{
				return this._c_Light.Entity;
			}
			set
			{
				c_Light previousValue = this._c_Light.Entity;
				if (((previousValue != value) 
							|| (this._c_Light.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Light.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Light.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Light = value.Code;
					}
					else
					{
						this._Light = default(string);
					}
					this.SendPropertyChanged("c_Light");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Sr_SalesCar", Storage="_c_Sr", ThisKey="Sr", OtherKey="Code", IsForeignKey=true)]
		public c_Sr c_Sr
		{
			get
			{
				return this._c_Sr.Entity;
			}
			set
			{
				c_Sr previousValue = this._c_Sr.Entity;
				if (((previousValue != value) 
							|| (this._c_Sr.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Sr.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_Sr.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Sr = value.Code;
					}
					else
					{
						this._Sr = default(string);
					}
					this.SendPropertyChanged("c_Sr");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NaviEquipment_SalesCar", Storage="_c_NaviEquipment", ThisKey="NaviEquipment", OtherKey="Code", IsForeignKey=true)]
		public c_NaviEquipment c_NaviEquipment
		{
			get
			{
				return this._c_NaviEquipment.Entity;
			}
			set
			{
				c_NaviEquipment previousValue = this._c_NaviEquipment.Entity;
				if (((previousValue != value) 
							|| (this._c_NaviEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_NaviEquipment.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_NaviEquipment.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._NaviEquipment = value.Code;
					}
					else
					{
						this._NaviEquipment = default(string);
					}
					this.SendPropertyChanged("c_NaviEquipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NaviDashboard_SalesCar", Storage="_c_NaviDashboard", ThisKey="NaviDashboard", OtherKey="Code", IsForeignKey=true)]
		public c_NaviDashboard c_NaviDashboard
		{
			get
			{
				return this._c_NaviDashboard.Entity;
			}
			set
			{
				c_NaviDashboard previousValue = this._c_NaviDashboard.Entity;
				if (((previousValue != value) 
							|| (this._c_NaviDashboard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_NaviDashboard.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_NaviDashboard.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._NaviDashboard = value.Code;
					}
					else
					{
						this._NaviDashboard = default(string);
					}
					this.SendPropertyChanged("c_NaviDashboard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SeatType_SalesCar", Storage="_c_SeatType", ThisKey="SeatType", OtherKey="Code", IsForeignKey=true)]
		public c_SeatType c_SeatType
		{
			get
			{
				return this._c_SeatType.Entity;
			}
			set
			{
				c_SeatType previousValue = this._c_SeatType.Entity;
				if (((previousValue != value) 
							|| (this._c_SeatType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SeatType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_SeatType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._SeatType = value.Code;
					}
					else
					{
						this._SeatType = default(string);
					}
					this.SendPropertyChanged("c_SeatType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DeclarationType_SalesCar", Storage="_c_DeclarationType", ThisKey="DeclarationType", OtherKey="Code", IsForeignKey=true)]
		public c_DeclarationType c_DeclarationType
		{
			get
			{
				return this._c_DeclarationType.Entity;
			}
			set
			{
				c_DeclarationType previousValue = this._c_DeclarationType.Entity;
				if (((previousValue != value) 
							|| (this._c_DeclarationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_DeclarationType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_DeclarationType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._DeclarationType = value.Code;
					}
					else
					{
						this._DeclarationType = default(string);
					}
					this.SendPropertyChanged("c_DeclarationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AcquisitionReason_SalesCar", Storage="_c_AcquisitionReason", ThisKey="AcquisitionReason", OtherKey="Code", IsForeignKey=true)]
		public c_AcquisitionReason c_AcquisitionReason
		{
			get
			{
				return this._c_AcquisitionReason.Entity;
			}
			set
			{
				c_AcquisitionReason previousValue = this._c_AcquisitionReason.Entity;
				if (((previousValue != value) 
							|| (this._c_AcquisitionReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_AcquisitionReason.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_AcquisitionReason.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._AcquisitionReason = value.Code;
					}
					else
					{
						this._AcquisitionReason = default(string);
					}
					this.SendPropertyChanged("c_AcquisitionReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaxationType_SalesCar", Storage="_c_TaxationType", ThisKey="TaxationTypeCarTax", OtherKey="Code", IsForeignKey=true)]
		public c_TaxationType c_TaxationType
		{
			get
			{
				return this._c_TaxationType.Entity;
			}
			set
			{
				c_TaxationType previousValue = this._c_TaxationType.Entity;
				if (((previousValue != value) 
							|| (this._c_TaxationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TaxationType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_TaxationType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._TaxationTypeCarTax = value.Code;
					}
					else
					{
						this._TaxationTypeCarTax = default(string);
					}
					this.SendPropertyChanged("c_TaxationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaxationType_SalesCar1", Storage="_c_TaxationType1", ThisKey="TaxationTypeAcquisitionTax", OtherKey="Code", IsForeignKey=true)]
		public c_TaxationType c_TaxationType1
		{
			get
			{
				return this._c_TaxationType1.Entity;
			}
			set
			{
				c_TaxationType previousValue = this._c_TaxationType1.Entity;
				if (((previousValue != value) 
							|| (this._c_TaxationType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TaxationType1.Entity = null;
						previousValue.SalesCar1.Remove(this);
					}
					this._c_TaxationType1.Entity = value;
					if ((value != null))
					{
						value.SalesCar1.Add(this);
						this._TaxationTypeAcquisitionTax = value.Code;
					}
					else
					{
						this._TaxationTypeAcquisitionTax = default(string);
					}
					this.SendPropertyChanged("c_TaxationType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar", Storage="_c_OnOff", ThisKey="MakerWarranty", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff
		{
			get
			{
				return this._c_OnOff.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_OnOff.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._MakerWarranty = value.Code;
					}
					else
					{
						this._MakerWarranty = default(string);
					}
					this.SendPropertyChanged("c_OnOff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar1", Storage="_c_OnOff1", ThisKey="Guarantee", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff1
		{
			get
			{
				return this._c_OnOff1.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff1.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff1.Entity = null;
						previousValue.SalesCar1.Remove(this);
					}
					this._c_OnOff1.Entity = value;
					if ((value != null))
					{
						value.SalesCar1.Add(this);
						this._Guarantee = value.Code;
					}
					else
					{
						this._Guarantee = default(string);
					}
					this.SendPropertyChanged("c_OnOff1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar2", Storage="_c_OnOff2", ThisKey="Instructions", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff2
		{
			get
			{
				return this._c_OnOff2.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff2.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff2.Entity = null;
						previousValue.SalesCar2.Remove(this);
					}
					this._c_OnOff2.Entity = value;
					if ((value != null))
					{
						value.SalesCar2.Add(this);
						this._Instructions = value.Code;
					}
					else
					{
						this._Instructions = default(string);
					}
					this.SendPropertyChanged("c_OnOff2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar3", Storage="_c_OnOff3", ThisKey="RecycleTicket", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff3
		{
			get
			{
				return this._c_OnOff3.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff3.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff3.Entity = null;
						previousValue.SalesCar3.Remove(this);
					}
					this._c_OnOff3.Entity = value;
					if ((value != null))
					{
						value.SalesCar3.Add(this);
						this._RecycleTicket = value.Code;
					}
					else
					{
						this._RecycleTicket = default(string);
					}
					this.SendPropertyChanged("c_OnOff3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar4", Storage="_c_OnOff4", ThisKey="ChangeColor", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff4
		{
			get
			{
				return this._c_OnOff4.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff4.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff4.Entity = null;
						previousValue.SalesCar4.Remove(this);
					}
					this._c_OnOff4.Entity = value;
					if ((value != null))
					{
						value.SalesCar4.Add(this);
						this._ChangeColor = value.Code;
					}
					else
					{
						this._ChangeColor = default(string);
					}
					this.SendPropertyChanged("c_OnOff4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar", Storage="_c_GenuineType", ThisKey="Aw", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType
		{
			get
			{
				return this._c_GenuineType.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_GenuineType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Aw = value.Code;
					}
					else
					{
						this._Aw = default(string);
					}
					this.SendPropertyChanged("c_GenuineType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar1", Storage="_c_GenuineType1", ThisKey="Aero", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType1
		{
			get
			{
				return this._c_GenuineType1.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType1.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType1.Entity = null;
						previousValue.SalesCar1.Remove(this);
					}
					this._c_GenuineType1.Entity = value;
					if ((value != null))
					{
						value.SalesCar1.Add(this);
						this._Aero = value.Code;
					}
					else
					{
						this._Aero = default(string);
					}
					this.SendPropertyChanged("c_GenuineType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar2", Storage="_c_GenuineType2", ThisKey="Cd", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType2
		{
			get
			{
				return this._c_GenuineType2.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType2.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType2.Entity = null;
						previousValue.SalesCar2.Remove(this);
					}
					this._c_GenuineType2.Entity = value;
					if ((value != null))
					{
						value.SalesCar2.Add(this);
						this._Cd = value.Code;
					}
					else
					{
						this._Cd = default(string);
					}
					this.SendPropertyChanged("c_GenuineType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar3", Storage="_c_GenuineType3", ThisKey="Md", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType3
		{
			get
			{
				return this._c_GenuineType3.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType3.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType3.Entity = null;
						previousValue.SalesCar3.Remove(this);
					}
					this._c_GenuineType3.Entity = value;
					if ((value != null))
					{
						value.SalesCar3.Add(this);
						this._Md = value.Code;
					}
					else
					{
						this._Md = default(string);
					}
					this.SendPropertyChanged("c_GenuineType3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar4", Storage="_c_GenuineType4", ThisKey="NaviType", OtherKey="Code", IsForeignKey=true)]
		public c_GenuineType c_GenuineType4
		{
			get
			{
				return this._c_GenuineType4.Entity;
			}
			set
			{
				c_GenuineType previousValue = this._c_GenuineType4.Entity;
				if (((previousValue != value) 
							|| (this._c_GenuineType4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_GenuineType4.Entity = null;
						previousValue.SalesCar4.Remove(this);
					}
					this._c_GenuineType4.Entity = value;
					if ((value != null))
					{
						value.SalesCar4.Add(this);
						this._NaviType = value.Code;
					}
					else
					{
						this._NaviType = default(string);
					}
					this.SendPropertyChanged("c_GenuineType4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar5", Storage="_c_OnOff5", ThisKey="RecordingNote", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff5
		{
			get
			{
				return this._c_OnOff5.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff5.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff5.Entity = null;
						previousValue.SalesCar5.Remove(this);
					}
					this._c_OnOff5.Entity = value;
					if ((value != null))
					{
						value.SalesCar5.Add(this);
						this._RecordingNote = value.Code;
					}
					else
					{
						this._RecordingNote = default(string);
					}
					this.SendPropertyChanged("c_OnOff5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar6", Storage="_c_OnOff6", ThisKey="ReparationRecord", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff6
		{
			get
			{
				return this._c_OnOff6.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff6.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff6.Entity = null;
						previousValue.SalesCar6.Remove(this);
					}
					this._c_OnOff6.Entity = value;
					if ((value != null))
					{
						value.SalesCar6.Add(this);
						this._ReparationRecord = value.Code;
					}
					else
					{
						this._ReparationRecord = default(string);
					}
					this.SendPropertyChanged("c_OnOff6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ColorCategory_SalesCar", Storage="_c_ColorCategory", ThisKey="ColorType", OtherKey="Code", IsForeignKey=true)]
		public c_ColorCategory c_ColorCategory
		{
			get
			{
				return this._c_ColorCategory.Entity;
			}
			set
			{
				c_ColorCategory previousValue = this._c_ColorCategory.Entity;
				if (((previousValue != value) 
							|| (this._c_ColorCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ColorCategory.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_ColorCategory.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._ColorType = value.Code;
					}
					else
					{
						this._ColorType = default(string);
					}
					this.SendPropertyChanged("c_ColorCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SalesCar", Storage="_Parts", ThisKey="Oil", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._Oil = value.PartsNumber;
					}
					else
					{
						this._Oil = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SalesCar1", Storage="_Parts1", ThisKey="Tire", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts1
		{
			get
			{
				return this._Parts1.Entity;
			}
			set
			{
				Parts previousValue = this._Parts1.Entity;
				if (((previousValue != value) 
							|| (this._Parts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts1.Entity = null;
						previousValue.SalesCar1.Remove(this);
					}
					this._Parts1.Entity = value;
					if ((value != null))
					{
						value.SalesCar1.Add(this);
						this._Tire = value.PartsNumber;
					}
					else
					{
						this._Tire = default(string);
					}
					this.SendPropertyChanged("Parts1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_SalesCar", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_SalesCar", Storage="_Location", ThisKey="LocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._LocationCode = value.LocationCode;
					}
					else
					{
						this._LocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ExpireType_SalesCar", Storage="_c_ExpireType", ThisKey="ExpireType", OtherKey="Code", IsForeignKey=true)]
		public c_ExpireType c_ExpireType
		{
			get
			{
				return this._c_ExpireType.Entity;
			}
			set
			{
				c_ExpireType previousValue = this._c_ExpireType.Entity;
				if (((previousValue != value) 
							|| (this._c_ExpireType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ExpireType.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_ExpireType.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._ExpireType = value.Code;
					}
					else
					{
						this._ExpireType = default(string);
					}
					this.SendPropertyChanged("c_ExpireType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar7", Storage="_c_OnOff7", ThisKey="CouponPresence", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff7
		{
			get
			{
				return this._c_OnOff7.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff7.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff7.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff7.Entity = null;
						previousValue.SalesCar7.Remove(this);
					}
					this._c_OnOff7.Entity = value;
					if ((value != null))
					{
						value.SalesCar7.Add(this);
						this._CouponPresence = value.Code;
					}
					else
					{
						this._CouponPresence = default(string);
					}
					this.SendPropertyChanged("c_OnOff7");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DocumentComplete_SalesCar", Storage="_c_DocumentComplete", ThisKey="DocumentComplete", OtherKey="Code", IsForeignKey=true)]
		public c_DocumentComplete c_DocumentComplete
		{
			get
			{
				return this._c_DocumentComplete.Entity;
			}
			set
			{
				c_DocumentComplete previousValue = this._c_DocumentComplete.Entity;
				if (((previousValue != value) 
							|| (this._c_DocumentComplete.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_DocumentComplete.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_DocumentComplete.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._DocumentComplete = value.Code;
					}
					else
					{
						this._DocumentComplete = default(string);
					}
					this.SendPropertyChanged("c_DocumentComplete");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_SalesCar", Storage="_c_EraseRegist", ThisKey="EraseRegist", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist
		{
			get
			{
				return this._c_EraseRegist.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist.Entity = null;
						previousValue.SalesCar.Remove(this);
					}
					this._c_EraseRegist.Entity = value;
					if ((value != null))
					{
						value.SalesCar.Add(this);
						this._EraseRegist = value.Code;
					}
					else
					{
						this._EraseRegist = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesCar1", Storage="_User", ThisKey="UserCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				Customer previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SalesCarByUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SalesCarByUser.Add(this);
						this._UserCode = value.CustomerCode;
					}
					else
					{
						this._UserCode = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar8", Storage="_c_Finance", ThisKey="Finance", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_Finance
		{
			get
			{
				return this._c_Finance.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_Finance.Entity;
				if (((previousValue != value) 
							|| (this._c_Finance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Finance.Entity = null;
						previousValue.SalesCar8.Remove(this);
					}
					this._c_Finance.Entity = value;
					if ((value != null))
					{
						value.SalesCar8.Add(this);
						this._Finance = value.Code;
					}
					else
					{
						this._Finance = default(string);
					}
					this.SendPropertyChanged("c_Finance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = null;
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.SalesCar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityRole")]
	public partial class SecurityRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SecurityRoleCode;
		
		private string _SecurityRoleName;
		
		private string _SecurityLevelCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<ApplicationRole> _ApplicationRole;
		
		private EntitySet<Employee> _Employee;
		
		private EntitySet<TaskRole> _TaskRole;
		
		private EntityRef<c_SecurityLevel> _c_SecurityLevel;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecurityRoleCodeChanging(string value);
    partial void OnSecurityRoleCodeChanged();
    partial void OnSecurityRoleNameChanging(string value);
    partial void OnSecurityRoleNameChanged();
    partial void OnSecurityLevelCodeChanging(string value);
    partial void OnSecurityLevelCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public SecurityRole()
		{
			this._ApplicationRole = new EntitySet<ApplicationRole>(new Action<ApplicationRole>(this.attach_ApplicationRole), new Action<ApplicationRole>(this.detach_ApplicationRole));
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			this._TaskRole = new EntitySet<TaskRole>(new Action<TaskRole>(this.attach_TaskRole), new Action<TaskRole>(this.detach_TaskRole));
			this._c_SecurityLevel = default(EntityRef<c_SecurityLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleCode
		{
			get
			{
				return this._SecurityRoleCode;
			}
			set
			{
				if ((this._SecurityRoleCode != value))
				{
					this.OnSecurityRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleCode = value;
					this.SendPropertyChanged("SecurityRoleCode");
					this.OnSecurityRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleName
		{
			get
			{
				return this._SecurityRoleName;
			}
			set
			{
				if ((this._SecurityRoleName != value))
				{
					this.OnSecurityRoleNameChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleName = value;
					this.SendPropertyChanged("SecurityRoleName");
					this.OnSecurityRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLevelCode", DbType="NVarchar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityLevelCode
		{
			get
			{
				return this._SecurityLevelCode;
			}
			set
			{
				if ((this._SecurityLevelCode != value))
				{
					if (this._c_SecurityLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityLevelCode = value;
					this.SendPropertyChanged("SecurityLevelCode");
					this.OnSecurityLevelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_ApplicationRole", Storage="_ApplicationRole", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode")]
		public EntitySet<ApplicationRole> ApplicationRole
		{
			get
			{
				return this._ApplicationRole;
			}
			set
			{
				this._ApplicationRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_Employee", Storage="_Employee", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_TaskRole", Storage="_TaskRole", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode")]
		public EntitySet<TaskRole> TaskRole
		{
			get
			{
				return this._TaskRole;
			}
			set
			{
				this._TaskRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SecurityLevel_SecurityRole", Storage="_c_SecurityLevel", ThisKey="SecurityLevelCode", OtherKey="Code", IsForeignKey=true)]
		public c_SecurityLevel c_SecurityLevel
		{
			get
			{
				return this._c_SecurityLevel.Entity;
			}
			set
			{
				c_SecurityLevel previousValue = this._c_SecurityLevel.Entity;
				if (((previousValue != value) 
							|| (this._c_SecurityLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SecurityLevel.Entity = null;
						previousValue.SecurityRole.Remove(this);
					}
					this._c_SecurityLevel.Entity = value;
					if ((value != null))
					{
						value.SecurityRole.Add(this);
						this._SecurityLevelCode = value.Code;
					}
					else
					{
						this._SecurityLevelCode = default(string);
					}
					this.SendPropertyChanged("c_SecurityLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationRole(ApplicationRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = this;
		}
		
		private void detach_ApplicationRole(ApplicationRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = null;
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = null;
		}
		
		private void attach_TaskRole(TaskRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = this;
		}
		
		private void detach_TaskRole(TaskRole entity)
		{
			this.SendPropertyChanging();
			entity.SecurityRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceCost")]
	public partial class ServiceCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ServiceMenuCode;
		
		private string _CarClassCode;
		
		private decimal _Cost;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<CarClass> _CarClass;
		
		private EntityRef<ServiceMenu> _ServiceMenu;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceMenuCodeChanging(string value);
    partial void OnServiceMenuCodeChanged();
    partial void OnCarClassCodeChanging(string value);
    partial void OnCarClassCodeChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ServiceCost()
		{
			this._CarClass = default(EntityRef<CarClass>);
			this._ServiceMenu = default(EntityRef<ServiceMenu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuCode
		{
			get
			{
				return this._ServiceMenuCode;
			}
			set
			{
				if ((this._ServiceMenuCode != value))
				{
					if (this._ServiceMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuCode = value;
					this.SendPropertyChanged("ServiceMenuCode");
					this.OnServiceMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassCode
		{
			get
			{
				return this._CarClassCode;
			}
			set
			{
				if ((this._CarClassCode != value))
				{
					if (this._CarClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarClassCodeChanging(value);
					this.SendPropertyChanging();
					this._CarClassCode = value;
					this.SendPropertyChanged("CarClassCode");
					this.OnCarClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(5,2) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarClass_ServiceCost", Storage="_CarClass", ThisKey="CarClassCode", OtherKey="CarClassCode", IsForeignKey=true)]
		public CarClass CarClass
		{
			get
			{
				return this._CarClass.Entity;
			}
			set
			{
				CarClass previousValue = this._CarClass.Entity;
				if (((previousValue != value) 
							|| (this._CarClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarClass.Entity = null;
						previousValue.ServiceCost.Remove(this);
					}
					this._CarClass.Entity = value;
					if ((value != null))
					{
						value.ServiceCost.Add(this);
						this._CarClassCode = value.CarClassCode;
					}
					else
					{
						this._CarClassCode = default(string);
					}
					this.SendPropertyChanged("CarClass");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_ServiceCost", Storage="_ServiceMenu", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode", IsForeignKey=true)]
		public ServiceMenu ServiceMenu
		{
			get
			{
				return this._ServiceMenu.Entity;
			}
			set
			{
				ServiceMenu previousValue = this._ServiceMenu.Entity;
				if (((previousValue != value) 
							|| (this._ServiceMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceMenu.Entity = null;
						previousValue.ServiceCost.Remove(this);
					}
					this._ServiceMenu.Entity = value;
					if ((value != null))
					{
						value.ServiceCost.Add(this);
						this._ServiceMenuCode = value.ServiceMenuCode;
					}
					else
					{
						this._ServiceMenuCode = default(string);
					}
					this.SendPropertyChanged("ServiceMenu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceMenu")]
	public partial class ServiceMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ServiceMenuCode;
		
		private string _ServiceMenuName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<ServiceCost> _ServiceCost;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceMenuCodeChanging(string value);
    partial void OnServiceMenuCodeChanged();
    partial void OnServiceMenuNameChanging(string value);
    partial void OnServiceMenuNameChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ServiceMenu()
		{
			this._ServiceCost = new EntitySet<ServiceCost>(new Action<ServiceCost>(this.attach_ServiceCost), new Action<ServiceCost>(this.detach_ServiceCost));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuCode
		{
			get
			{
				return this._ServiceMenuCode;
			}
			set
			{
				if ((this._ServiceMenuCode != value))
				{
					this.OnServiceMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuCode = value;
					this.SendPropertyChanged("ServiceMenuCode");
					this.OnServiceMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuName
		{
			get
			{
				return this._ServiceMenuName;
			}
			set
			{
				if ((this._ServiceMenuName != value))
				{
					this.OnServiceMenuNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuName = value;
					this.SendPropertyChanged("ServiceMenuName");
					this.OnServiceMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_ServiceCost", Storage="_ServiceCost", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode")]
		public EntitySet<ServiceCost> ServiceCost
		{
			get
			{
				return this._ServiceCost;
			}
			set
			{
				this._ServiceCost.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_SetMenuList", Storage="_SetMenuList", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceCost(ServiceCost entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = this;
		}
		
		private void detach_ServiceCost(ServiceCost entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = null;
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.ServiceMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceWork")]
	public partial class ServiceWork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ServiceWorkCode;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private string _Classification1;
		
		private string _Classification2;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _AccountClassCode;
		
		private string _CustomerClaimClass;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
		private EntityRef<c_ServiceWorkClass1> _c_ServiceWorkClass1;
		
		private EntityRef<c_ServiceWorkClass2> _c_ServiceWorkClass2;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceWorkCodeChanging(string value);
    partial void OnServiceWorkCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnClassification1Changing(string value);
    partial void OnClassification1Changed();
    partial void OnClassification2Changing(string value);
    partial void OnClassification2Changed();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnAccountClassCodeChanging(string value);
    partial void OnAccountClassCodeChanged();
    partial void OnCustomerClaimClassChanging(string value);
    partial void OnCustomerClaimClassChanged();
    #endregion
		
		public ServiceWork()
		{
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			this._c_ServiceWorkClass1 = default(EntityRef<c_ServiceWorkClass1>);
			this._c_ServiceWorkClass2 = default(EntityRef<c_ServiceWorkClass2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					this.OnServiceWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceWorkCode = value;
					this.SendPropertyChanged("ServiceWorkCode");
					this.OnServiceWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Classification1
		{
			get
			{
				return this._Classification1;
			}
			set
			{
				if ((this._Classification1 != value))
				{
					if (this._c_ServiceWorkClass1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassification1Changing(value);
					this.SendPropertyChanging();
					this._Classification1 = value;
					this.SendPropertyChanged("Classification1");
					this.OnClassification1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Classification2
		{
			get
			{
				return this._Classification2;
			}
			set
			{
				if ((this._Classification2 != value))
				{
					if (this._c_ServiceWorkClass2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassification2Changing(value);
					this.SendPropertyChanging();
					this._Classification2 = value;
					this.SendPropertyChanged("Classification2");
					this.OnClassification2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountClassCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountClassCode
		{
			get
			{
				return this._AccountClassCode;
			}
			set
			{
				if ((this._AccountClassCode != value))
				{
					this.OnAccountClassCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountClassCode = value;
					this.SendPropertyChanged("AccountClassCode");
					this.OnAccountClassCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimClass", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimClass
		{
			get
			{
				return this._CustomerClaimClass;
			}
			set
			{
				if ((this._CustomerClaimClass != value))
				{
					this.OnCustomerClaimClassChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimClass = value;
					this.SendPropertyChanged("CustomerClaimClass");
					this.OnCustomerClaimClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceWork_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="ServiceWorkCode", OtherKey="ServiceWorkCode")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceWork_SetMenuList", Storage="_SetMenuList", ThisKey="ServiceWorkCode", OtherKey="ServiceWorkCode")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass1_ServiceWork", Storage="_c_ServiceWorkClass1", ThisKey="Classification1", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceWorkClass1 c_ServiceWorkClass1
		{
			get
			{
				return this._c_ServiceWorkClass1.Entity;
			}
			set
			{
				c_ServiceWorkClass1 previousValue = this._c_ServiceWorkClass1.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceWorkClass1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceWorkClass1.Entity = null;
						previousValue.ServiceWork.Remove(this);
					}
					this._c_ServiceWorkClass1.Entity = value;
					if ((value != null))
					{
						value.ServiceWork.Add(this);
						this._Classification1 = value.Code;
					}
					else
					{
						this._Classification1 = default(string);
					}
					this.SendPropertyChanged("c_ServiceWorkClass1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass2_ServiceWork", Storage="_c_ServiceWorkClass2", ThisKey="Classification2", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceWorkClass2 c_ServiceWorkClass2
		{
			get
			{
				return this._c_ServiceWorkClass2.Entity;
			}
			set
			{
				c_ServiceWorkClass2 previousValue = this._c_ServiceWorkClass2.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceWorkClass2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceWorkClass2.Entity = null;
						previousValue.ServiceWork.Remove(this);
					}
					this._c_ServiceWorkClass2.Entity = value;
					if ((value != null))
					{
						value.ServiceWork.Add(this);
						this._Classification2 = value.Code;
					}
					else
					{
						this._Classification2 = default(string);
					}
					this.SendPropertyChanged("c_ServiceWorkClass2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceWork = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceWork = null;
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.ServiceWork = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.ServiceWork = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber1;
		
		private string _TelNumber2;
		
		private string _FaxNumber;
		
		private string _ContactName;
		
		private string _OutsourceFlag;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _IssueCompanyNumber;
		
		private EntitySet<Office> _Office;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntityRef<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumber1Changing(string value);
    partial void OnTelNumber1Changed();
    partial void OnTelNumber2Changing(string value);
    partial void OnTelNumber2Changed();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnOutsourceFlagChanging(string value);
    partial void OnOutsourceFlagChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnIssueCompanyNumberChanging(string value);
    partial void OnIssueCompanyNumberChanged();
    #endregion
		
		public Supplier()
		{
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber1", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber1
		{
			get
			{
				return this._TelNumber1;
			}
			set
			{
				if ((this._TelNumber1 != value))
				{
					this.OnTelNumber1Changing(value);
					this.SendPropertyChanging();
					this._TelNumber1 = value;
					this.SendPropertyChanged("TelNumber1");
					this.OnTelNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber2", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber2
		{
			get
			{
				return this._TelNumber2;
			}
			set
			{
				if ((this._TelNumber2 != value))
				{
					this.OnTelNumber2Changing(value);
					this.SendPropertyChanging();
					this._TelNumber2 = value;
					this.SendPropertyChanged("TelNumber2");
					this.OnTelNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutsourceFlag", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OutsourceFlag
		{
			get
			{
				return this._OutsourceFlag;
			}
			set
			{
				if ((this._OutsourceFlag != value))
				{
					this.OnOutsourceFlagChanging(value);
					this.SendPropertyChanging();
					this._OutsourceFlag = value;
					this.SendPropertyChanged("OutsourceFlag");
					this.OnOutsourceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueCompanyNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string IssueCompanyNumber
		{
			get
			{
				return this._IssueCompanyNumber;
			}
			set
			{
				if ((this._IssueCompanyNumber != value))
				{
					this.OnIssueCompanyNumberChanging(value);
					this.SendPropertyChanging();
					this._IssueCompanyNumber = value;
					this.SendPropertyChanged("IssueCompanyNumber");
					this.OnIssueCompanyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Office", Storage="_Office", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_CarPurchase", Storage="_CarPurchase", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PartsPurchase", Storage="_PartsPurchase", ThisKey="SupplierCode", OtherKey="SupplierCode")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Supplier", Storage="_Customer", ThisKey="SupplierCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Supplier = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Supplier = this;
						this._SupplierCode = value.CustomerCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransportBranchOffice")]
	public partial class TransportBranchOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TransportBranchOfficeCode;
		
		private string _TransportBranchOfficeName;
		
		private System.Nullable<decimal> _NormalPaintPrice;
		
		private System.Nullable<decimal> _NormalFluorescencePrice;
		
		private System.Nullable<decimal> _OrderPaintPrice;
		
		private System.Nullable<decimal> _OrderFluorescencePrice;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransportBranchOfficeCodeChanging(string value);
    partial void OnTransportBranchOfficeCodeChanged();
    partial void OnTransportBranchOfficeNameChanging(string value);
    partial void OnTransportBranchOfficeNameChanged();
    partial void OnNormalPaintPriceChanging(System.Nullable<decimal> value);
    partial void OnNormalPaintPriceChanged();
    partial void OnNormalFluorescencePriceChanging(System.Nullable<decimal> value);
    partial void OnNormalFluorescencePriceChanged();
    partial void OnOrderPaintPriceChanging(System.Nullable<decimal> value);
    partial void OnOrderPaintPriceChanged();
    partial void OnOrderFluorescencePriceChanging(System.Nullable<decimal> value);
    partial void OnOrderFluorescencePriceChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public TransportBranchOffice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportBranchOfficeCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransportBranchOfficeCode
		{
			get
			{
				return this._TransportBranchOfficeCode;
			}
			set
			{
				if ((this._TransportBranchOfficeCode != value))
				{
					this.OnTransportBranchOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._TransportBranchOfficeCode = value;
					this.SendPropertyChanged("TransportBranchOfficeCode");
					this.OnTransportBranchOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportBranchOfficeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransportBranchOfficeName
		{
			get
			{
				return this._TransportBranchOfficeName;
			}
			set
			{
				if ((this._TransportBranchOfficeName != value))
				{
					this.OnTransportBranchOfficeNameChanging(value);
					this.SendPropertyChanging();
					this._TransportBranchOfficeName = value;
					this.SendPropertyChanged("TransportBranchOfficeName");
					this.OnTransportBranchOfficeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalPaintPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> NormalPaintPrice
		{
			get
			{
				return this._NormalPaintPrice;
			}
			set
			{
				if ((this._NormalPaintPrice != value))
				{
					this.OnNormalPaintPriceChanging(value);
					this.SendPropertyChanging();
					this._NormalPaintPrice = value;
					this.SendPropertyChanged("NormalPaintPrice");
					this.OnNormalPaintPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalFluorescencePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> NormalFluorescencePrice
		{
			get
			{
				return this._NormalFluorescencePrice;
			}
			set
			{
				if ((this._NormalFluorescencePrice != value))
				{
					this.OnNormalFluorescencePriceChanging(value);
					this.SendPropertyChanging();
					this._NormalFluorescencePrice = value;
					this.SendPropertyChanged("NormalFluorescencePrice");
					this.OnNormalFluorescencePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPaintPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OrderPaintPrice
		{
			get
			{
				return this._OrderPaintPrice;
			}
			set
			{
				if ((this._OrderPaintPrice != value))
				{
					this.OnOrderPaintPriceChanging(value);
					this.SendPropertyChanging();
					this._OrderPaintPrice = value;
					this.SendPropertyChanged("OrderPaintPrice");
					this.OnOrderPaintPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderFluorescencePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OrderFluorescencePrice
		{
			get
			{
				return this._OrderFluorescencePrice;
			}
			set
			{
				if ((this._OrderFluorescencePrice != value))
				{
					this.OnOrderFluorescencePriceChanging(value);
					this.SendPropertyChanging();
					this._OrderFluorescencePrice = value;
					this.SendPropertyChanged("OrderFluorescencePrice");
					this.OnOrderFluorescencePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Task")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TaskId;
		
		private string _TaskName;
		
		private System.Nullable<System.DateTime> _TaskCreateDate;
		
		private System.Nullable<System.DateTime> _TaskCompleteDate;
		
		private string _EmployeeCode;
		
		private string _DepartmentCode;
		
		private string _NavigateUrl;
		
		private string _Description;
		
		private string _ActionResult;
		
		private System.Nullable<int> _Priority;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _TaskConfigId;
		
		private string _SlipNumber;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<TaskConfig> _TaskConfig;
		
		private EntityRef<Employee> _CreateEmployee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIdChanging(System.Guid value);
    partial void OnTaskIdChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskCreateDateChanged();
    partial void OnTaskCompleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTaskCompleteDateChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnNavigateUrlChanging(string value);
    partial void OnNavigateUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActionResultChanging(string value);
    partial void OnActionResultChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnTaskConfigIdChanging(string value);
    partial void OnTaskConfigIdChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    #endregion
		
		public Task()
		{
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._TaskConfig = default(EntityRef<TaskConfig>);
			this._CreateEmployee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaskCreateDate
		{
			get
			{
				return this._TaskCreateDate;
			}
			set
			{
				if ((this._TaskCreateDate != value))
				{
					this.OnTaskCreateDateChanging(value);
					this.SendPropertyChanging();
					this._TaskCreateDate = value;
					this.SendPropertyChanged("TaskCreateDate");
					this.OnTaskCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskCompleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TaskCompleteDate
		{
			get
			{
				return this._TaskCompleteDate;
			}
			set
			{
				if ((this._TaskCompleteDate != value))
				{
					this.OnTaskCompleteDateChanging(value);
					this.SendPropertyChanging();
					this._TaskCompleteDate = value;
					this.SendPropertyChanged("TaskCompleteDate");
					this.OnTaskCompleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavigateUrl", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NavigateUrl
		{
			get
			{
				return this._NavigateUrl;
			}
			set
			{
				if ((this._NavigateUrl != value))
				{
					this.OnNavigateUrlChanging(value);
					this.SendPropertyChanging();
					this._NavigateUrl = value;
					this.SendPropertyChanged("NavigateUrl");
					this.OnNavigateUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionResult", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ActionResult
		{
			get
			{
				return this._ActionResult;
			}
			set
			{
				if ((this._ActionResult != value))
				{
					this.OnActionResultChanging(value);
					this.SendPropertyChanging();
					this._ActionResult = value;
					this.SendPropertyChanged("ActionResult");
					this.OnActionResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					if (this._CreateEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskConfigId", DbType="NVarChar(50)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskConfigId
		{
			get
			{
				return this._TaskConfigId;
			}
			set
			{
				if ((this._TaskConfigId != value))
				{
					if (this._TaskConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskConfigIdChanging(value);
					this.SendPropertyChanging();
					this._TaskConfigId = value;
					this.SendPropertyChanged("TaskConfigId");
					this.OnTaskConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Task", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Task.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Task.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Task", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Task.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Task.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskConfig_Task", Storage="_TaskConfig", ThisKey="TaskConfigId", OtherKey="TaskConfigId", IsForeignKey=true)]
		public TaskConfig TaskConfig
		{
			get
			{
				return this._TaskConfig.Entity;
			}
			set
			{
				TaskConfig previousValue = this._TaskConfig.Entity;
				if (((previousValue != value) 
							|| (this._TaskConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskConfig.Entity = null;
						previousValue.Task.Remove(this);
					}
					this._TaskConfig.Entity = value;
					if ((value != null))
					{
						value.Task.Add(this);
						this._TaskConfigId = value.TaskConfigId;
					}
					else
					{
						this._TaskConfigId = default(string);
					}
					this.SendPropertyChanged("TaskConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Task1", Storage="_CreateEmployee", ThisKey="CreateEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee CreateEmployee
		{
			get
			{
				return this._CreateEmployee.Entity;
			}
			set
			{
				Employee previousValue = this._CreateEmployee.Entity;
				if (((previousValue != value) 
							|| (this._CreateEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreateEmployee.Entity = null;
						previousValue.Task1.Remove(this);
					}
					this._CreateEmployee.Entity = value;
					if ((value != null))
					{
						value.Task1.Add(this);
						this._CreateEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._CreateEmployeeCode = default(string);
					}
					this.SendPropertyChanged("CreateEmployee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarSalesLine")]
	public partial class CarSalesLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private int _LineNumber;
		
		private string _CarOptionCode;
		
		private string _CarOptionName;
		
		private string _OptionType;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private string _ConsumptionTaxId;
		
		private System.Nullable<int> _Rate;
		
		private EntityRef<CarOption> _CarOption;
		
		private EntityRef<CarSalesHeader> _CarSalesHeader;
		
		private EntityRef<c_OptionType> _c_OptionType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCarOptionCodeChanging(string value);
    partial void OnCarOptionCodeChanged();
    partial void OnCarOptionNameChanging(string value);
    partial void OnCarOptionNameChanged();
    partial void OnOptionTypeChanging(string value);
    partial void OnOptionTypeChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    #endregion
		
		public CarSalesLine()
		{
			this._CarOption = default(EntityRef<CarOption>);
			this._CarSalesHeader = default(EntityRef<CarSalesHeader>);
			this._c_OptionType = default(EntityRef<c_OptionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					if (this._CarOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOptionCodeChanging(value);
					this.SendPropertyChanging();
					this._CarOptionCode = value;
					this.SendPropertyChanged("CarOptionCode");
					this.OnCarOptionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionName
		{
			get
			{
				return this._CarOptionName;
			}
			set
			{
				if ((this._CarOptionName != value))
				{
					this.OnCarOptionNameChanging(value);
					this.SendPropertyChanging();
					this._CarOptionName = value;
					this.SendPropertyChanged("CarOptionName");
					this.OnCarOptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionType
		{
			get
			{
				return this._OptionType;
			}
			set
			{
				if ((this._OptionType != value))
				{
					if (this._c_OptionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionTypeChanging(value);
					this.SendPropertyChanging();
					this._OptionType = value;
					this.SendPropertyChanged("OptionType");
					this.OnOptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_CarSalesLine", Storage="_CarOption", ThisKey="CarOptionCode", OtherKey="CarOptionCode", IsForeignKey=true)]
		public CarOption CarOption
		{
			get
			{
				return this._CarOption.Entity;
			}
			set
			{
				CarOption previousValue = this._CarOption.Entity;
				if (((previousValue != value) 
							|| (this._CarOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOption.Entity = null;
						previousValue.CarSalesLine.Remove(this);
					}
					this._CarOption.Entity = value;
					if ((value != null))
					{
						value.CarSalesLine.Add(this);
						this._CarOptionCode = value.CarOptionCode;
					}
					else
					{
						this._CarOptionCode = default(string);
					}
					this.SendPropertyChanged("CarOption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesLine", Storage="_CarSalesHeader", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber", IsForeignKey=true)]
		public CarSalesHeader CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader.Entity;
			}
			set
			{
				CarSalesHeader previousValue = this._CarSalesHeader.Entity;
				if (((previousValue != value) 
							|| (this._CarSalesHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarSalesHeader.Entity = null;
						previousValue.CarSalesLine.Remove(this);
					}
					this._CarSalesHeader.Entity = value;
					if ((value != null))
					{
						value.CarSalesLine.Add(this);
						this._SlipNumber = value.SlipNumber;
						this._RevisionNumber = value.RevisionNumber;
					}
					else
					{
						this._SlipNumber = default(string);
						this._RevisionNumber = default(int);
					}
					this.SendPropertyChanged("CarSalesHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OptionType_CarSalesLine", Storage="_c_OptionType", ThisKey="OptionType", OtherKey="Code", IsForeignKey=true)]
		public c_OptionType c_OptionType
		{
			get
			{
				return this._c_OptionType.Entity;
			}
			set
			{
				c_OptionType previousValue = this._c_OptionType.Entity;
				if (((previousValue != value) 
							|| (this._c_OptionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OptionType.Entity = null;
						previousValue.CarSalesLine.Remove(this);
					}
					this._c_OptionType.Entity = value;
					if ((value != null))
					{
						value.CarSalesLine.Add(this);
						this._OptionType = value.Code;
					}
					else
					{
						this._OptionType = default(string);
					}
					this.SendPropertyChanged("c_OptionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Allowance")]
	public partial class c_Allowance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Allowance()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Allowance_Customer", Storage="_Customer", ThisKey="Code", OtherKey="DmFlag")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Allowance_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="Questionnarie")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Allowance = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Allowance = null;
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Allowance = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Allowance = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarOwner")]
	public partial class c_CarOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarOwner()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarOwner_Customer", Storage="_Customer", ThisKey="Code", OtherKey="CarOwner")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CarOwner = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CarOwner = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ColorCategory")]
	public partial class c_ColorCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarColor> _CarColor;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ColorCategory()
		{
			this._CarColor = new EntitySet<CarColor>(new Action<CarColor>(this.attach_CarColor), new Action<CarColor>(this.detach_CarColor));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ColorCategory_CarColor", Storage="_CarColor", ThisKey="Code", OtherKey="ColorCategory")]
		public EntitySet<CarColor> CarColor
		{
			get
			{
				return this._CarColor;
			}
			set
			{
				this._CarColor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ColorCategory_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="ColorType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarColor(CarColor entity)
		{
			this.SendPropertyChanging();
			entity.c_ColorCategory = this;
		}
		
		private void detach_CarColor(CarColor entity)
		{
			this.SendPropertyChanging();
			entity.c_ColorCategory = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_ColorCategory = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_ColorCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CustomerClaimType")]
	public partial class c_CustomerClaimType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _ServiceWorkClass1;
		
		private string _CustomerClaimFilter;
		
		private EntitySet<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCustomerClaimClassChanging(string value);
    partial void OnCustomerClaimClassChanged();
    partial void OnCustomerClaimFilterChanging(string value);
    partial void OnCustomerClaimFilterChanged();
    #endregion
		
		public c_CustomerClaimType()
		{
			this._CustomerClaim = new EntitySet<CustomerClaim>(new Action<CustomerClaim>(this.attach_CustomerClaim), new Action<CustomerClaim>(this.detach_CustomerClaim));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkClass1", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimClass
		{
			get
			{
				return this._ServiceWorkClass1;
			}
			set
			{
				if ((this._ServiceWorkClass1 != value))
				{
					this.OnCustomerClaimClassChanging(value);
					this.SendPropertyChanging();
					this._ServiceWorkClass1 = value;
					this.SendPropertyChanged("CustomerClaimClass");
					this.OnCustomerClaimClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimFilter", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimFilter
		{
			get
			{
				return this._CustomerClaimFilter;
			}
			set
			{
				if ((this._CustomerClaimFilter != value))
				{
					this.OnCustomerClaimFilterChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimFilter = value;
					this.SendPropertyChanged("CustomerClaimFilter");
					this.OnCustomerClaimFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerClaimType_CustomerClaim", Storage="_CustomerClaim", ThisKey="Code", OtherKey="CustomerClaimType")]
		public EntitySet<CustomerClaim> CustomerClaim
		{
			get
			{
				return this._CustomerClaim;
			}
			set
			{
				this._CustomerClaim.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerClaimType = this;
		}
		
		private void detach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerClaimType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CustomerKind")]
	public partial class c_CustomerKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CustomerKind()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerKind_Customer", Storage="_Customer", ThisKey="Code", OtherKey="CustomerKind")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerKind = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CustomerRank")]
	public partial class c_CustomerRank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CustomerRank()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerRank_Customer", Storage="_Customer", ThisKey="Code", OtherKey="CustomerRank")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerRank = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerRank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CustomerType")]
	public partial class c_CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CustomerType()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CustomerType_Customer", Storage="_Customer", ThisKey="Code", OtherKey="CustomerType")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerType = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_DrivingName")]
	public partial class c_DrivingName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarGrade> _CarGrade;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_DrivingName()
		{
			this._CarGrade = new EntitySet<CarGrade>(new Action<CarGrade>(this.attach_CarGrade), new Action<CarGrade>(this.detach_CarGrade));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DrivingName_CarGrade", Storage="_CarGrade", ThisKey="Code", OtherKey="DrivingName")]
		public EntitySet<CarGrade> CarGrade
		{
			get
			{
				return this._CarGrade;
			}
			set
			{
				this._CarGrade.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_DrivingName = this;
		}
		
		private void detach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_DrivingName = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_EmployeeType")]
	public partial class c_EmployeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Employee> _Employee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_EmployeeType()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EmployeeType_Employee", Storage="_Employee", ThisKey="Code", OtherKey="EmployeeType")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.c_EmployeeType = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.c_EmployeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Occupation")]
	public partial class c_Occupation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Occupation()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Occupation_Customer", Storage="_Customer", ThisKey="Code", OtherKey="Occupation")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Occupation = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Occupation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OnOff")]
	public partial class c_OnOff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerClaim> _CustomerClaim;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCar1;
		
		private EntitySet<SalesCar> _SalesCar2;
		
		private EntitySet<SalesCar> _SalesCar3;
		
		private EntitySet<SalesCar> _SalesCar4;
		
		private EntitySet<SalesCar> _SalesCar5;
		
		private EntitySet<SalesCar> _SalesCar6;
		
		private EntitySet<SalesCar> _SalesCar7;
		
		private EntitySet<SalesCar> _SalesCar8;
		
		private EntitySet<ServiceRequest> _ServiceRequest;
		
		private EntitySet<ServiceRequest> _ServiceRequest1;
		
		private EntitySet<TaskConfig> _TaskConfig;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OnOff()
		{
			this._CustomerClaim = new EntitySet<CustomerClaim>(new Action<CustomerClaim>(this.attach_CustomerClaim), new Action<CustomerClaim>(this.detach_CustomerClaim));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCar1 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar1), new Action<SalesCar>(this.detach_SalesCar1));
			this._SalesCar2 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar2), new Action<SalesCar>(this.detach_SalesCar2));
			this._SalesCar3 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar3), new Action<SalesCar>(this.detach_SalesCar3));
			this._SalesCar4 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar4), new Action<SalesCar>(this.detach_SalesCar4));
			this._SalesCar5 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar5), new Action<SalesCar>(this.detach_SalesCar5));
			this._SalesCar6 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar6), new Action<SalesCar>(this.detach_SalesCar6));
			this._SalesCar7 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar7), new Action<SalesCar>(this.detach_SalesCar7));
			this._SalesCar8 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar8), new Action<SalesCar>(this.detach_SalesCar8));
			this._ServiceRequest = new EntitySet<ServiceRequest>(new Action<ServiceRequest>(this.attach_ServiceRequest), new Action<ServiceRequest>(this.detach_ServiceRequest));
			this._ServiceRequest1 = new EntitySet<ServiceRequest>(new Action<ServiceRequest>(this.attach_ServiceRequest1), new Action<ServiceRequest>(this.detach_ServiceRequest1));
			this._TaskConfig = new EntitySet<TaskConfig>(new Action<TaskConfig>(this.attach_TaskConfig), new Action<TaskConfig>(this.detach_TaskConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_CustomerClaim", Storage="_CustomerClaim", ThisKey="Code", OtherKey="PaymentKindType")]
		public EntitySet<CustomerClaim> CustomerClaim
		{
			get
			{
				return this._CustomerClaim;
			}
			set
			{
				this._CustomerClaim.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="MakerWarranty")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar1", Storage="_SalesCar1", ThisKey="Code", OtherKey="Guarantee")]
		public EntitySet<SalesCar> SalesCar1
		{
			get
			{
				return this._SalesCar1;
			}
			set
			{
				this._SalesCar1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar2", Storage="_SalesCar2", ThisKey="Code", OtherKey="Instructions")]
		public EntitySet<SalesCar> SalesCar2
		{
			get
			{
				return this._SalesCar2;
			}
			set
			{
				this._SalesCar2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar3", Storage="_SalesCar3", ThisKey="Code", OtherKey="RecycleTicket")]
		public EntitySet<SalesCar> SalesCar3
		{
			get
			{
				return this._SalesCar3;
			}
			set
			{
				this._SalesCar3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar4", Storage="_SalesCar4", ThisKey="Code", OtherKey="ChangeColor")]
		public EntitySet<SalesCar> SalesCar4
		{
			get
			{
				return this._SalesCar4;
			}
			set
			{
				this._SalesCar4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar5", Storage="_SalesCar5", ThisKey="Code", OtherKey="RecordingNote")]
		public EntitySet<SalesCar> SalesCar5
		{
			get
			{
				return this._SalesCar5;
			}
			set
			{
				this._SalesCar5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar6", Storage="_SalesCar6", ThisKey="Code", OtherKey="ReparationRecord")]
		public EntitySet<SalesCar> SalesCar6
		{
			get
			{
				return this._SalesCar6;
			}
			set
			{
				this._SalesCar6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar7", Storage="_SalesCar7", ThisKey="Code", OtherKey="CouponPresence")]
		public EntitySet<SalesCar> SalesCar7
		{
			get
			{
				return this._SalesCar7;
			}
			set
			{
				this._SalesCar7.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_SalesCar8", Storage="_SalesCar8", ThisKey="Code", OtherKey="Finance")]
		public EntitySet<SalesCar> SalesCar8
		{
			get
			{
				return this._SalesCar8;
			}
			set
			{
				this._SalesCar8.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_ServiceRequest", Storage="_ServiceRequest", ThisKey="Code", OtherKey="AnnualInspection")]
		public EntitySet<ServiceRequest> ServiceRequest
		{
			get
			{
				return this._ServiceRequest;
			}
			set
			{
				this._ServiceRequest.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_ServiceRequest1", Storage="_ServiceRequest1", ThisKey="Code", OtherKey="InsuranceInheritance")]
		public EntitySet<ServiceRequest> ServiceRequest1
		{
			get
			{
				return this._ServiceRequest1;
			}
			set
			{
				this._ServiceRequest1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_TaskConfig", Storage="_TaskConfig", ThisKey="Code", OtherKey="PopUp")]
		public EntitySet<TaskConfig> TaskConfig
		{
			get
			{
				return this._TaskConfig;
			}
			set
			{
				this._TaskConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = this;
		}
		
		private void detach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = null;
		}
		
		private void attach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff1 = this;
		}
		
		private void detach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff1 = null;
		}
		
		private void attach_SalesCar2(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff2 = this;
		}
		
		private void detach_SalesCar2(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff2 = null;
		}
		
		private void attach_SalesCar3(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff3 = this;
		}
		
		private void detach_SalesCar3(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff3 = null;
		}
		
		private void attach_SalesCar4(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff4 = this;
		}
		
		private void detach_SalesCar4(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff4 = null;
		}
		
		private void attach_SalesCar5(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff5 = this;
		}
		
		private void detach_SalesCar5(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff5 = null;
		}
		
		private void attach_SalesCar6(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff6 = this;
		}
		
		private void detach_SalesCar6(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff6 = null;
		}
		
		private void attach_SalesCar7(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff7 = this;
		}
		
		private void detach_SalesCar7(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff7 = null;
		}
		
		private void attach_SalesCar8(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Finance = this;
		}
		
		private void detach_SalesCar8(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Finance = null;
		}
		
		private void attach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_AnnualInspection = this;
		}
		
		private void detach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_AnnualInspection = null;
		}
		
		private void attach_ServiceRequest1(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_InsuranceInheritance = this;
		}
		
		private void detach_ServiceRequest1(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_InsuranceInheritance = null;
		}
		
		private void attach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = this;
		}
		
		private void detach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_OnOff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PaymentKind")]
	public partial class c_PaymentKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PaymentKind()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentKind_Customer", Storage="_Customer", ThisKey="Code", OtherKey="PaymentKind")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentKind = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_RoundType")]
	public partial class c_RoundType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_RoundType()
		{
			this._CustomerClaim = new EntitySet<CustomerClaim>(new Action<CustomerClaim>(this.attach_CustomerClaim), new Action<CustomerClaim>(this.detach_CustomerClaim));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RoundType_CustomerClaim", Storage="_CustomerClaim", ThisKey="Code", OtherKey="RoundType")]
		public EntitySet<CustomerClaim> CustomerClaim
		{
			get
			{
				return this._CustomerClaim;
			}
			set
			{
				this._CustomerClaim.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_RoundType = this;
		}
		
		private void detach_CustomerClaim(CustomerClaim entity)
		{
			this.SendPropertyChanging();
			entity.c_RoundType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ServiceWorkClass1")]
	public partial class c_ServiceWorkClass1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<ServiceWork> _ServiceWork;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ServiceWorkClass1()
		{
			this._ServiceWork = new EntitySet<ServiceWork>(new Action<ServiceWork>(this.attach_ServiceWork), new Action<ServiceWork>(this.detach_ServiceWork));
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass1_ServiceWork", Storage="_ServiceWork", ThisKey="Code", OtherKey="Classification1")]
		public EntitySet<ServiceWork> ServiceWork
		{
			get
			{
				return this._ServiceWork;
			}
			set
			{
				this._ServiceWork.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass1_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="Code", OtherKey="Classification1")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceWork(ServiceWork entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass1 = this;
		}
		
		private void detach_ServiceWork(ServiceWork entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass1 = null;
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass1 = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ServiceWorkClass2")]
	public partial class c_ServiceWorkClass2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<ServiceWork> _ServiceWork;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ServiceWorkClass2()
		{
			this._ServiceWork = new EntitySet<ServiceWork>(new Action<ServiceWork>(this.attach_ServiceWork), new Action<ServiceWork>(this.detach_ServiceWork));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass2_ServiceWork", Storage="_ServiceWork", ThisKey="Code", OtherKey="Classification2")]
		public EntitySet<ServiceWork> ServiceWork
		{
			get
			{
				return this._ServiceWork;
			}
			set
			{
				this._ServiceWork.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceWork(ServiceWork entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass2 = this;
		}
		
		private void detach_ServiceWork(ServiceWork entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceWorkClass2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Sex")]
	public partial class c_Sex : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Sex()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Sex_Customer", Storage="_Customer", ThisKey="Code", OtherKey="Sex")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Sex = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_Sex = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_TransMission")]
	public partial class c_TransMission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarGrade> _CarGrade;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_TransMission()
		{
			this._CarGrade = new EntitySet<CarGrade>(new Action<CarGrade>(this.attach_CarGrade), new Action<CarGrade>(this.detach_CarGrade));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TransMission_CarGrade", Storage="_CarGrade", ThisKey="Code", OtherKey="TransMission")]
		public EntitySet<CarGrade> CarGrade
		{
			get
			{
				return this._CarGrade;
			}
			set
			{
				this._CarGrade.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_TransMission = this;
		}
		
		private void detach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_TransMission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_GenuineType")]
	public partial class c_GenuineType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Parts> _Parts;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCar1;
		
		private EntitySet<SalesCar> _SalesCar2;
		
		private EntitySet<SalesCar> _SalesCar3;
		
		private EntitySet<SalesCar> _SalesCar4;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_GenuineType()
		{
			this._Parts = new EntitySet<Parts>(new Action<Parts>(this.attach_Parts), new Action<Parts>(this.detach_Parts));
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCar1 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar1), new Action<SalesCar>(this.detach_SalesCar1));
			this._SalesCar2 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar2), new Action<SalesCar>(this.detach_SalesCar2));
			this._SalesCar3 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar3), new Action<SalesCar>(this.detach_SalesCar3));
			this._SalesCar4 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar4), new Action<SalesCar>(this.detach_SalesCar4));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_Parts", Storage="_Parts", ThisKey="Code", OtherKey="GenuineType")]
		public EntitySet<Parts> Parts
		{
			get
			{
				return this._Parts;
			}
			set
			{
				this._Parts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Aw")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar1", Storage="_SalesCar1", ThisKey="Code", OtherKey="Aero")]
		public EntitySet<SalesCar> SalesCar1
		{
			get
			{
				return this._SalesCar1;
			}
			set
			{
				this._SalesCar1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar2", Storage="_SalesCar2", ThisKey="Code", OtherKey="Cd")]
		public EntitySet<SalesCar> SalesCar2
		{
			get
			{
				return this._SalesCar2;
			}
			set
			{
				this._SalesCar2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar3", Storage="_SalesCar3", ThisKey="Code", OtherKey="Md")]
		public EntitySet<SalesCar> SalesCar3
		{
			get
			{
				return this._SalesCar3;
			}
			set
			{
				this._SalesCar3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_GenuineType_SalesCar4", Storage="_SalesCar4", ThisKey="Code", OtherKey="NaviType")]
		public EntitySet<SalesCar> SalesCar4
		{
			get
			{
				return this._SalesCar4;
			}
			set
			{
				this._SalesCar4.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parts(Parts entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType = this;
		}
		
		private void detach_Parts(Parts entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType = null;
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType = null;
		}
		
		private void attach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType1 = this;
		}
		
		private void detach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType1 = null;
		}
		
		private void attach_SalesCar2(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType2 = this;
		}
		
		private void detach_SalesCar2(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType2 = null;
		}
		
		private void attach_SalesCar3(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType3 = this;
		}
		
		private void detach_SalesCar3(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType3 = null;
		}
		
		private void attach_SalesCar4(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType4 = this;
		}
		
		private void detach_SalesCar4(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_GenuineType4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PaymentType")]
	public partial class c_PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<PaymentKind> _PaymentKind;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PaymentType()
		{
			this._PaymentKind = new EntitySet<PaymentKind>(new Action<PaymentKind>(this.attach_PaymentKind), new Action<PaymentKind>(this.detach_PaymentKind));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentType_PaymentKind", Storage="_PaymentKind", ThisKey="Code", OtherKey="PaymentType")]
		public EntitySet<PaymentKind> PaymentKind
		{
			get
			{
				return this._PaymentKind;
			}
			set
			{
				this._PaymentKind.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentKind(PaymentKind entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentType = this;
		}
		
		private void detach_PaymentKind(PaymentKind entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_QuoteType")]
	public partial class c_QuoteType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<QuoteMessage> _QuoteMessage;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_QuoteType()
		{
			this._QuoteMessage = new EntitySet<QuoteMessage>(new Action<QuoteMessage>(this.attach_QuoteMessage), new Action<QuoteMessage>(this.detach_QuoteMessage));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_QuoteType_QuoteMessage", Storage="_QuoteMessage", ThisKey="Code", OtherKey="QuoteType")]
		public EntitySet<QuoteMessage> QuoteMessage
		{
			get
			{
				return this._QuoteMessage;
			}
			set
			{
				this._QuoteMessage.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteMessage(QuoteMessage entity)
		{
			this.SendPropertyChanging();
			entity.c_QuoteType = this;
		}
		
		private void detach_QuoteMessage(QuoteMessage entity)
		{
			this.SendPropertyChanging();
			entity.c_QuoteType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_NewUsedType")]
	public partial class c_NewUsedType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_NewUsedType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NewUsedType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="NewUsedType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NewUsedType_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="NewUsedType")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NewUsedType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NewUsedType = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_NewUsedType = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_NewUsedType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_MileageUnit")]
	public partial class c_MileageUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarSalesHeader> _CarSalesHeaderTradeIn1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeaderTradeIn2;
		
		private EntitySet<CarSalesHeader> _CarSalesHeaderTradeIn3;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_MileageUnit()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarSalesHeaderTradeIn1 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeaderTradeIn1), new Action<CarSalesHeader>(this.detach_CarSalesHeaderTradeIn1));
			this._CarSalesHeaderTradeIn2 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeaderTradeIn2), new Action<CarSalesHeader>(this.detach_CarSalesHeaderTradeIn2));
			this._CarSalesHeaderTradeIn3 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeaderTradeIn3), new Action<CarSalesHeader>(this.detach_CarSalesHeaderTradeIn3));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="MileageUnit")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="MileageUnit")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader1", Storage="_CarSalesHeaderTradeIn1", ThisKey="Code", OtherKey="TradeInMileageUnit1")]
		public EntitySet<CarSalesHeader> CarSalesHeaderTradeIn1
		{
			get
			{
				return this._CarSalesHeaderTradeIn1;
			}
			set
			{
				this._CarSalesHeaderTradeIn1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader2", Storage="_CarSalesHeaderTradeIn2", ThisKey="Code", OtherKey="TradeInMileageUnit2")]
		public EntitySet<CarSalesHeader> CarSalesHeaderTradeIn2
		{
			get
			{
				return this._CarSalesHeaderTradeIn2;
			}
			set
			{
				this._CarSalesHeaderTradeIn2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader3", Storage="_CarSalesHeaderTradeIn3", ThisKey="Code", OtherKey="TradeInMileageUnit3")]
		public EntitySet<CarSalesHeader> CarSalesHeaderTradeIn3
		{
			get
			{
				return this._CarSalesHeaderTradeIn3;
			}
			set
			{
				this._CarSalesHeaderTradeIn3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="Code", OtherKey="MileageUnit")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = null;
		}
		
		private void attach_CarSalesHeaderTradeIn1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn1 = this;
		}
		
		private void detach_CarSalesHeaderTradeIn1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn1 = null;
		}
		
		private void attach_CarSalesHeaderTradeIn2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn2 = this;
		}
		
		private void detach_CarSalesHeaderTradeIn2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn2 = null;
		}
		
		private void attach_CarSalesHeaderTradeIn3(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn3 = this;
		}
		
		private void detach_CarSalesHeaderTradeIn3(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnitTradeIn3 = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_MileageUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarStatus")]
	public partial class c_CarStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarStatus()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarStatus_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="CarStatus")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_CarStatus = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_CarStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_UsageType")]
	public partial class c_UsageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_UsageType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_UsageType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="UsageType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_UsageType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_UsageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Usage")]
	public partial class c_Usage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Usage()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Usage_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Usage")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Usage = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Usage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarClassification")]
	public partial class c_CarClassification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarClassification()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarClassification_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="CarClassification")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_CarClassification = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_CarClassification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Figure")]
	public partial class c_Figure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Figure()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Figure_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Figure")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Figure = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Figure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Import")]
	public partial class c_Import : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Import()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Import_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Import")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Import = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Import = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Recycle")]
	public partial class c_Recycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Recycle()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Recycle_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Recycle")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Recycle = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Recycle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Steering")]
	public partial class c_Steering : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Steering()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Steering_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Steering")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Steering = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Steering = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Light")]
	public partial class c_Light : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Light()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Light_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Light")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Light = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Light = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Sr")]
	public partial class c_Sr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Sr()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Sr_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="Sr")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Sr = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_Sr = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_NaviEquipment")]
	public partial class c_NaviEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_NaviEquipment()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NaviEquipment_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="NaviEquipment")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NaviEquipment = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NaviEquipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_NaviDashboard")]
	public partial class c_NaviDashboard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_NaviDashboard()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NaviDashboard_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="NaviDashboard")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NaviDashboard = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_NaviDashboard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_SeatType")]
	public partial class c_SeatType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_SeatType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SeatType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="SeatType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_SeatType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_SeatType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_DeclarationType")]
	public partial class c_DeclarationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_DeclarationType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DeclarationType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="DeclarationType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_DeclarationType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_DeclarationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_AcquisitionReason")]
	public partial class c_AcquisitionReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_AcquisitionReason()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AcquisitionReason_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="AcquisitionReason")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_AcquisitionReason = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_AcquisitionReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_TaxationType")]
	public partial class c_TaxationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<SalesCar> _SalesCar1;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_TaxationType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._SalesCar1 = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar1), new Action<SalesCar>(this.detach_SalesCar1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaxationType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="TaxationTypeCarTax")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaxationType_SalesCar1", Storage="_SalesCar1", ThisKey="Code", OtherKey="TaxationTypeAcquisitionTax")]
		public EntitySet<SalesCar> SalesCar1
		{
			get
			{
				return this._SalesCar1;
			}
			set
			{
				this._SalesCar1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_TaxationType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_TaxationType = null;
		}
		
		private void attach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_TaxationType1 = this;
		}
		
		private void detach_SalesCar1(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_TaxationType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarSalesHeader")]
	public partial class CarSalesHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private System.Nullable<System.DateTime> _QuoteExpireDate;
		
		private string _SalesOrderStatus;
		
		private string _ApprovalFlag;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _CustomerCode;
		
		private string _DepartmentCode;
		
		private string _EmployeeCode;
		
		private string _NewUsedType;
		
		private string _SalesType;
		
		private string _MakerName;
		
		private string _CarName;
		
		private string _GradeName;
		
		private string _CarGradeCode;
		
		private string _ManufacturingYear;
		
		private string _ExteriorColorCode;
		
		private string _InteriorColorCode;
		
		private string _Vin;
		
		private string _UsVin;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _MileageUnit;
		
		private string _RequestPlateNumber;
		
		private string _RegistPlanDate;
		
		private string _HotStatus;
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _RequestRegistDate;
		
		private System.Nullable<System.DateTime> _SalesPlanDate;
		
		private string _RegistrationType;
		
		private string _MorterViecleOfficialCode;
		
		private string _OwnershipReservation;
		
		private string _CarLiabilityInsuranceType;
		
		private System.Nullable<System.DateTime> _SealSubmitDate;
		
		private System.Nullable<System.DateTime> _ProxySubmitDate;
		
		private System.Nullable<System.DateTime> _ParkingSpaceSubmitDate;
		
		private System.Nullable<System.DateTime> _CarLiabilityInsuranceSubmitDate;
		
		private System.Nullable<System.DateTime> _OwnershipReservationSubmitDate;
		
		private string _Memo;
		
		private System.Nullable<decimal> _CarTax;
		
		private System.Nullable<decimal> _CarLiabilityInsurance;
		
		private System.Nullable<decimal> _CarWeightTax;
		
		private System.Nullable<decimal> _AcquisitionTax;
		
		private System.Nullable<decimal> _InspectionRegistCost;
		
		private System.Nullable<decimal> _ParkingSpaceCost;
		
		private System.Nullable<decimal> _TradeInCost;
		
		private System.Nullable<decimal> _RecycleDeposit;
		
		private System.Nullable<decimal> _RecycleDepositTradeIn;
		
		private System.Nullable<decimal> _NumberPlateCost;
		
		private string _TaxFreeFieldName;
		
		private System.Nullable<decimal> _TaxFreeFieldValue;
		
		private System.Nullable<decimal> _InspectionRegistFee;
		
		private System.Nullable<decimal> _ParkingSpaceFee;
		
		private System.Nullable<decimal> _TradeInFee;
		
		private System.Nullable<decimal> _PreparationFee;
		
		private System.Nullable<decimal> _RecycleControlFee;
		
		private System.Nullable<decimal> _RecycleControlFeeTradeIn;
		
		private System.Nullable<decimal> _RequestNumberFee;
		
		private System.Nullable<decimal> _CarTaxUnexpiredAmount;
		
		private System.Nullable<decimal> _CarLiabilityInsuranceUnexpiredAmount;
		
		private string _TaxationFieldName;
		
		private System.Nullable<decimal> _TaxationFieldValue;
		
		private string _PossesorCode;
		
		private string _UserCode;
		
		private string _PrincipalPlace;
		
		private string _VoluntaryInsuranceType;
		
		private string _VoluntaryInsuranceCompanyName;
		
		private System.Nullable<decimal> _VoluntaryInsuranceAmount;
		
		private System.Nullable<System.DateTime> _VoluntaryInsuranceTermFrom;
		
		private System.Nullable<System.DateTime> _VoluntaryInsuranceTermTo;
		
		private string _PaymentPlanType;
		
		private System.Nullable<decimal> _TradeInAmount1;
		
		private System.Nullable<decimal> _TradeInTax1;
		
		private System.Nullable<decimal> _TradeInUnexpiredCarTax1;
		
		private System.Nullable<decimal> _TradeInRemainDebt1;
		
		private System.Nullable<decimal> _TradeInAppropriation1;
		
		private System.Nullable<decimal> _TradeInRecycleAmount1;
		
		private string _TradeInMakerName1;
		
		private string _TradeInCarName1;
		
		private string _TradeInClassificationTypeNumber1;
		
		private string _TradeInModelSpecificateNumber1;
		
		private string _TradeInManufacturingYear1;
		
		private System.Nullable<System.DateTime> _TradeInInspectionExpriredDate1;
		
		private System.Nullable<decimal> _TradeInMileage1;
		
		private string _TradeInMileageUnit1;
		
		private string _TradeInVin1;
		
		private System.Nullable<decimal> _TradeInAmount2;
		
		private System.Nullable<decimal> _TradeInTax2;
		
		private System.Nullable<decimal> _TradeInUnexpiredCarTax2;
		
		private System.Nullable<decimal> _TradeInRemainDebt2;
		
		private System.Nullable<decimal> _TradeInAppropriation2;
		
		private System.Nullable<decimal> _TradeInRecycleAmount2;
		
		private string _TradeInMakerName2;
		
		private string _TradeInCarName2;
		
		private string _TradeInClassificationTypeNumber2;
		
		private string _TradeInModelSpecificateNumber2;
		
		private string _TradeInManufacturingYear2;
		
		private System.Nullable<System.DateTime> _TradeInInspectionExpriredDate2;
		
		private System.Nullable<decimal> _TradeInMileage2;
		
		private string _TradeInMileageUnit2;
		
		private string _TradeInVin2;
		
		private System.Nullable<decimal> _TradeInAmount3;
		
		private System.Nullable<decimal> _TradeInTax3;
		
		private System.Nullable<decimal> _TradeInUnexpiredCarTax3;
		
		private System.Nullable<decimal> _TradeInRemainDebt3;
		
		private System.Nullable<decimal> _TradeInAppropriation3;
		
		private System.Nullable<decimal> _TradeInRecycleAmount3;
		
		private string _TradeInMakerName3;
		
		private string _TradeInCarName3;
		
		private string _TradeInClassificationTypeNumber3;
		
		private string _TradeInModelSpecificateNumber3;
		
		private string _TradeInManufacturingYear3;
		
		private System.Nullable<System.DateTime> _TradeInInspectionExpriredDate3;
		
		private System.Nullable<decimal> _TradeInMileage3;
		
		private string _TradeInMileageUnit3;
		
		private string _TradeInVin3;
		
		private string _CustomerClaimCodeA;
		
		private System.Nullable<int> _PaymentFrequencyA;
		
		private System.Nullable<System.DateTime> _PaymentTermFromA;
		
		private System.Nullable<System.DateTime> _PaymentTermToA;
		
		private System.Nullable<int> _BonusMonthA1;
		
		private System.Nullable<int> _BonusMonthA2;
		
		private System.Nullable<decimal> _FirstAmountA;
		
		private System.Nullable<decimal> _SecondAmountA;
		
		private System.Nullable<decimal> _BonusAmountA;
		
		private System.Nullable<decimal> _CashAmountA;
		
		private System.Nullable<decimal> _LoanPrincipalA;
		
		private System.Nullable<decimal> _LoanFeeA;
		
		private System.Nullable<decimal> _LoanTotalAmountA;
		
		private string _CustomerClaimCodeB;
		
		private System.Nullable<int> _PaymentFrequencyB;
		
		private System.Nullable<System.DateTime> _PaymentTermFromB;
		
		private System.Nullable<System.DateTime> _PaymentTermToB;
		
		private System.Nullable<int> _BonusMonthB1;
		
		private System.Nullable<int> _BonusMonthB2;
		
		private System.Nullable<decimal> _FirstAmountB;
		
		private System.Nullable<decimal> _SecondAmountB;
		
		private System.Nullable<decimal> _BonusAmountB;
		
		private System.Nullable<decimal> _CashAmountB;
		
		private System.Nullable<decimal> _LoanPrincipalB;
		
		private System.Nullable<decimal> _LoanFeeB;
		
		private System.Nullable<decimal> _LoanTotalAmountB;
		
		private string _CustomerClaimCodeC;
		
		private System.Nullable<int> _PaymentFrequencyC;
		
		private System.Nullable<System.DateTime> _PaymentTermFromC;
		
		private System.Nullable<System.DateTime> _PaymentTermToC;
		
		private System.Nullable<int> _BonusMonthC1;
		
		private System.Nullable<int> _BonusMonthC2;
		
		private System.Nullable<decimal> _FirstAmountC;
		
		private System.Nullable<decimal> _SecondAmountC;
		
		private System.Nullable<decimal> _BonusAmountC;
		
		private System.Nullable<decimal> _CashAmountC;
		
		private System.Nullable<decimal> _LoanPrincipalC;
		
		private System.Nullable<decimal> _LoanFeeC;
		
		private System.Nullable<decimal> _LoanTotalAmountC;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CampaignCode1;
		
		private string _CampaignCode2;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _AuthorizationNumberA;
		
		private string _AuthorizationNumberB;
		
		private string _AuthorizationNumberC;
		
		private string _CarBrandName;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _TaxationAmount;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<System.DateTime> _FirstDirectDebitDateA;
		
		private System.Nullable<int> _SecondDirectDebitDateA;
		
		private System.Nullable<System.DateTime> _FirstDirectDebitDateB;
		
		private System.Nullable<int> _SecondDirectDebitDateB;
		
		private System.Nullable<System.DateTime> _FirstDirectDebitDateC;
		
		private System.Nullable<int> _SecondDirectDebitDateC;
		
		private System.Nullable<decimal> _ShopOptionAmount;
		
		private System.Nullable<decimal> _MakerOptionAmount;
		
		private System.Nullable<decimal> _OutSourceAmount;
		
		private System.Nullable<decimal> _SubTotalAmount;
		
		private System.Nullable<decimal> _TaxFreeTotalAmount;
		
		private System.Nullable<decimal> _SalesCostTotalAmount;
		
		private System.Nullable<decimal> _CostTotalAmount;
		
		private System.Nullable<decimal> _TotalTaxAmount;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		private System.Nullable<decimal> _ShopOptionTaxAmount;
		
		private System.Nullable<decimal> _MakerOptionTaxAmount;
		
		private System.Nullable<decimal> _OutSourceTaxAmount;
		
		private System.Nullable<decimal> _SalesCostTotalTaxAmount;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private System.Nullable<decimal> _OtherCostTotalAmount;
		
		private System.Nullable<decimal> _TradeInTotalAmount;
		
		private System.Nullable<decimal> _TradeInTaxTotalAmount;
		
		private System.Nullable<decimal> _TradeInUnexpiredCarTaxTotalAmount;
		
		private System.Nullable<decimal> _TradeInRemainDebtTotalAmount;
		
		private System.Nullable<decimal> _TradeInAppropriationTotalAmount;
		
		private System.Nullable<decimal> _PaymentTotalAmount;
		
		private System.Nullable<decimal> _PaymentCashTotalAmount;
		
		private System.Nullable<decimal> _LoanPrincipalAmount;
		
		private System.Nullable<decimal> _LoanFeeAmount;
		
		private System.Nullable<decimal> _LoanTotalAmount;
		
		private string _ExteriorColorName;
		
		private string _InteriorColorName;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private System.Nullable<decimal> _RequestNumberCost;
		
		private System.Nullable<decimal> _TradeInFiscalStampCost;
		
		private System.Nullable<decimal> _TradeInAppraisalFee;
		
		private System.Nullable<decimal> _FarRegistFee;
		
		private System.Nullable<decimal> _TradeInMaintenanceFee;
		
		private System.Nullable<decimal> _InheritedInsuranceFee;
		
		private string _TradeInRegistrationNumber1;
		
		private string _TradeInRegistrationNumber2;
		
		private string _TradeInRegistrationNumber3;
		
		private System.Nullable<decimal> _TradeInUnexpiredLiabilityInsurance1;
		
		private System.Nullable<decimal> _TradeInUnexpiredLiabilityInsurance2;
		
		private System.Nullable<decimal> _TradeInUnexpiredLiabilityInsurance3;
		
		private System.Nullable<decimal> _RemainAmountA;
		
		private System.Nullable<decimal> _RemainAmountB;
		
		private System.Nullable<decimal> _RemainAmountC;
		
		private System.Nullable<System.DateTime> _RemainFinalMonthA;
		
		private System.Nullable<System.DateTime> _RemainFinalMonthB;
		
		private System.Nullable<System.DateTime> _RemainFinalMonthC;
		
		private System.Nullable<decimal> _LoanRateA;
		
		private System.Nullable<decimal> _LoanRateB;
		
		private System.Nullable<decimal> _LoanRateC;
		
		private System.Nullable<decimal> _InspectionRegistFeeTax;
		
		private System.Nullable<decimal> _ParkingSpaceFeeTax;
		
		private System.Nullable<decimal> _TradeInFeeTax;
		
		private System.Nullable<decimal> _PreparationFeeTax;
		
		private System.Nullable<decimal> _RecycleControlFeeTax;
		
		private System.Nullable<decimal> _RecycleControlFeeTradeInTax;
		
		private System.Nullable<decimal> _RequestNumberFeeTax;
		
		private System.Nullable<decimal> _CarTaxUnexpiredAmountTax;
		
		private System.Nullable<decimal> _CarLiabilityInsuranceUnexpiredAmountTax;
		
		private System.Nullable<decimal> _TradeInAppraisalFeeTax;
		
		private System.Nullable<decimal> _FarRegistFeeTax;
		
		private System.Nullable<decimal> _TradeInMaintenanceFeeTax;
		
		private System.Nullable<decimal> _InheritedInsuranceFeeTax;
		
		private System.Nullable<decimal> _TaxationFieldValueTax;
		
		private string _TradeInEraseRegist1;
		
		private string _TradeInEraseRegist2;
		
		private string _TradeInEraseRegist3;
		
		private System.Nullable<decimal> _SalesTax;
		
		private System.Nullable<decimal> _DiscountTax;
		
		private System.Nullable<decimal> _TradeInPrice1;
		
		private System.Nullable<decimal> _TradeInPrice2;
		
		private System.Nullable<decimal> _TradeInPrice3;
		
		private System.Nullable<decimal> _TradeInRecycleTotalAmount;
		
		private string _ConsumptionTaxId;
		
		private System.Nullable<int> _Rate;
		
		private System.Nullable<decimal> _RevenueStampCost;
		
		private System.Nullable<decimal> _TradeInCarTaxDeposit;
		
		private string _LastEditScreen;
		
		private System.Nullable<int> _PaymentSecondFrequencyA;
		
		private System.Nullable<int> _PaymentSecondFrequencyB;
		
		private System.Nullable<int> _PaymentSecondFrequencyC;
		
		private System.Nullable<System.Guid> _ProcessSessionId;
		
		private string _EPDiscountTaxId;
		
		private string _CostAreaCode;
		
		private System.Nullable<decimal> _MaintenancePackageAmount;
		
		private System.Nullable<decimal> _MaintenancePackageTaxAmount;
		
		private System.Nullable<decimal> _ExtendedWarrantyAmount;
		
		private System.Nullable<decimal> _ExtendedWarrantyTaxAmount;
		
		private string _TradeInHolderName1;
		
		private string _TradeInHolderName2;
		
		private System.Data.Linq.Link<string> _TradeInHolderName3;
		
		private System.Nullable<decimal> _OutJurisdictionRegistFee;
		
		private System.Nullable<decimal> _OutJurisdictionRegistFeeTax;
		
		private System.Nullable<decimal> _SurchargeAmount;
		
		private System.Nullable<decimal> _SurchargeTaxAmount;
		
		private System.Nullable<decimal> _SuspendTaxRecv;
		
		private EntitySet<CarSalesLine> _CarSalesLine;
		
		private EntitySet<CarSalesPayment> _CarSalesPayment;
		
		private EntitySet<CarSalesReport> _CarSalesReport;
		
		private EntityRef<CarGrade> _CarGrade;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Customer> _Possesor;
		
		private EntityRef<Customer> _User;
		
		private EntityRef<c_SalesOrderStatus> _c_SalesOrderStatus;
		
		private EntityRef<c_SalesType> _c_SalesType;
		
		private EntityRef<c_RegistrationType> _c_RegistrationType;
		
		private EntityRef<CarColor> _ExteriorColor;
		
		private EntityRef<CarColor> _InteriorColor;
		
		private EntityRef<c_NewUsedType> _c_NewUsedType;
		
		private EntityRef<c_CarLiabilityInsuranceType> _c_CarLiabilityInsuranceType;
		
		private EntityRef<c_OwnershipReservation> _c_OwnershipReservation;
		
		private EntityRef<c_VoluntaryInsuranceType> _c_VoluntaryInsuranceType;
		
		private EntityRef<c_MileageUnit> _c_MileageUnit;
		
		private EntityRef<c_MileageUnit> _c_MileageUnitTradeIn1;
		
		private EntityRef<c_MileageUnit> _c_MileageUnitTradeIn2;
		
		private EntityRef<c_MileageUnit> _c_MileageUnitTradeIn3;
		
		private EntityRef<SalesCar> _SalesCar;
		
		private EntityRef<Loan> _LoanA;
		
		private EntityRef<Loan> _LoanB;
		
		private EntityRef<Loan> _LoanC;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist1;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist2;
		
		private EntityRef<ProcessSessionControl> _ProcessSessionControl;
		
		private EntityRef<CostArea> _CostArea;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnQuoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteDateChanged();
    partial void OnQuoteExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteExpireDateChanged();
    partial void OnSalesOrderStatusChanging(string value);
    partial void OnSalesOrderStatusChanged();
    partial void OnApprovalFlagChanging(string value);
    partial void OnApprovalFlagChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnNewUsedTypeChanging(string value);
    partial void OnNewUsedTypeChanged();
    partial void OnSalesTypeChanging(string value);
    partial void OnSalesTypeChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCarGradeNameChanging(string value);
    partial void OnCarGradeNameChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnManufacturingYearChanging(string value);
    partial void OnManufacturingYearChanged();
    partial void OnExteriorColorCodeChanging(string value);
    partial void OnExteriorColorCodeChanged();
    partial void OnInteriorColorCodeChanging(string value);
    partial void OnInteriorColorCodeChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnUsVinChanging(string value);
    partial void OnUsVinChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnRequestPlateNumberChanging(string value);
    partial void OnRequestPlateNumberChanged();
    partial void OnRegistPlanDateChanging(string value);
    partial void OnRegistPlanDateChanged();
    partial void OnHotStatusChanging(string value);
    partial void OnHotStatusChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnRequestRegistDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestRegistDateChanged();
    partial void OnSalesPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesPlanDateChanged();
    partial void OnRegistrationTypeChanging(string value);
    partial void OnRegistrationTypeChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnOwnershipReservationChanging(string value);
    partial void OnOwnershipReservationChanged();
    partial void OnCarLiabilityInsuranceTypeChanging(string value);
    partial void OnCarLiabilityInsuranceTypeChanged();
    partial void OnSealSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSealSubmitDateChanged();
    partial void OnProxySubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProxySubmitDateChanged();
    partial void OnParkingSpaceSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnParkingSpaceSubmitDateChanged();
    partial void OnCarLiabilityInsuranceSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCarLiabilityInsuranceSubmitDateChanged();
    partial void OnOwnershipReservationSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOwnershipReservationSubmitDateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCarTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxChanged();
    partial void OnCarLiabilityInsuranceChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceChanged();
    partial void OnCarWeightTaxChanging(System.Nullable<decimal> value);
    partial void OnCarWeightTaxChanged();
    partial void OnAcquisitionTaxChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionTaxChanged();
    partial void OnInspectionRegistCostChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistCostChanged();
    partial void OnParkingSpaceCostChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceCostChanged();
    partial void OnTradeInCostChanging(System.Nullable<decimal> value);
    partial void OnTradeInCostChanged();
    partial void OnRecycleDepositChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositChanged();
    partial void OnRecycleDepositTradeInChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositTradeInChanged();
    partial void OnNumberPlateCostChanging(System.Nullable<decimal> value);
    partial void OnNumberPlateCostChanged();
    partial void OnTaxFreeFieldNameChanging(string value);
    partial void OnTaxFreeFieldNameChanged();
    partial void OnTaxFreeFieldValueChanging(System.Nullable<decimal> value);
    partial void OnTaxFreeFieldValueChanged();
    partial void OnInspectionRegistFeeChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistFeeChanged();
    partial void OnParkingSpaceFeeChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceFeeChanged();
    partial void OnTradeInFeeChanging(System.Nullable<decimal> value);
    partial void OnTradeInFeeChanged();
    partial void OnPreparationFeeChanging(System.Nullable<decimal> value);
    partial void OnPreparationFeeChanged();
    partial void OnRecycleControlFeeChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeChanged();
    partial void OnRecycleControlFeeTradeInChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeTradeInChanged();
    partial void OnRequestNumberFeeChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberFeeChanged();
    partial void OnCarTaxUnexpiredAmountChanging(System.Nullable<decimal> value);
    partial void OnCarTaxUnexpiredAmountChanged();
    partial void OnCarLiabilityInsuranceUnexpiredAmountChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceUnexpiredAmountChanged();
    partial void OnTaxationFieldNameChanging(string value);
    partial void OnTaxationFieldNameChanged();
    partial void OnTaxationFieldValueChanging(System.Nullable<decimal> value);
    partial void OnTaxationFieldValueChanged();
    partial void OnPossesorCodeChanging(string value);
    partial void OnPossesorCodeChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnPrincipalPlaceChanging(string value);
    partial void OnPrincipalPlaceChanged();
    partial void OnVoluntaryInsuranceTypeChanging(string value);
    partial void OnVoluntaryInsuranceTypeChanged();
    partial void OnVoluntaryInsuranceCompanyNameChanging(string value);
    partial void OnVoluntaryInsuranceCompanyNameChanged();
    partial void OnVoluntaryInsuranceAmountChanging(System.Nullable<decimal> value);
    partial void OnVoluntaryInsuranceAmountChanged();
    partial void OnVoluntaryInsuranceTermFromChanging(System.Nullable<System.DateTime> value);
    partial void OnVoluntaryInsuranceTermFromChanged();
    partial void OnVoluntaryInsuranceTermToChanging(System.Nullable<System.DateTime> value);
    partial void OnVoluntaryInsuranceTermToChanged();
    partial void OnPaymentPlanTypeChanging(string value);
    partial void OnPaymentPlanTypeChanged();
    partial void OnTradeInAmount1Changing(System.Nullable<decimal> value);
    partial void OnTradeInAmount1Changed();
    partial void OnTradeInTax1Changing(System.Nullable<decimal> value);
    partial void OnTradeInTax1Changed();
    partial void OnTradeInUnexpiredCarTax1Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredCarTax1Changed();
    partial void OnTradeInRemainDebt1Changing(System.Nullable<decimal> value);
    partial void OnTradeInRemainDebt1Changed();
    partial void OnTradeInAppropriation1Changing(System.Nullable<decimal> value);
    partial void OnTradeInAppropriation1Changed();
    partial void OnTradeInRecycleAmount1Changing(System.Nullable<decimal> value);
    partial void OnTradeInRecycleAmount1Changed();
    partial void OnTradeInMakerName1Changing(string value);
    partial void OnTradeInMakerName1Changed();
    partial void OnTradeInCarName1Changing(string value);
    partial void OnTradeInCarName1Changed();
    partial void OnTradeInClassificationTypeNumber1Changing(string value);
    partial void OnTradeInClassificationTypeNumber1Changed();
    partial void OnTradeInModelSpecificateNumber1Changing(string value);
    partial void OnTradeInModelSpecificateNumber1Changed();
    partial void OnTradeInManufacturingYear1Changing(string value);
    partial void OnTradeInManufacturingYear1Changed();
    partial void OnTradeInInspectionExpiredDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnTradeInInspectionExpiredDate1Changed();
    partial void OnTradeInMileage1Changing(System.Nullable<decimal> value);
    partial void OnTradeInMileage1Changed();
    partial void OnTradeInMileageUnit1Changing(string value);
    partial void OnTradeInMileageUnit1Changed();
    partial void OnTradeInVin1Changing(string value);
    partial void OnTradeInVin1Changed();
    partial void OnTradeInAmount2Changing(System.Nullable<decimal> value);
    partial void OnTradeInAmount2Changed();
    partial void OnTradeInTax2Changing(System.Nullable<decimal> value);
    partial void OnTradeInTax2Changed();
    partial void OnTradeInUnexpiredCarTax2Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredCarTax2Changed();
    partial void OnTradeInRemainDebt2Changing(System.Nullable<decimal> value);
    partial void OnTradeInRemainDebt2Changed();
    partial void OnTradeInAppropriation2Changing(System.Nullable<decimal> value);
    partial void OnTradeInAppropriation2Changed();
    partial void OnTradeInRecycleAmount2Changing(System.Nullable<decimal> value);
    partial void OnTradeInRecycleAmount2Changed();
    partial void OnTradeInMakerName2Changing(string value);
    partial void OnTradeInMakerName2Changed();
    partial void OnTradeInCarName2Changing(string value);
    partial void OnTradeInCarName2Changed();
    partial void OnTradeInClassificationTypeNumber2Changing(string value);
    partial void OnTradeInClassificationTypeNumber2Changed();
    partial void OnTradeInModelSpecificateNumber2Changing(string value);
    partial void OnTradeInModelSpecificateNumber2Changed();
    partial void OnTradeInManufacturingYear2Changing(string value);
    partial void OnTradeInManufacturingYear2Changed();
    partial void OnTradeInInspectionExpiredDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnTradeInInspectionExpiredDate2Changed();
    partial void OnTradeInMileage2Changing(System.Nullable<decimal> value);
    partial void OnTradeInMileage2Changed();
    partial void OnTradeInMileageUnit2Changing(string value);
    partial void OnTradeInMileageUnit2Changed();
    partial void OnTradeInVin2Changing(string value);
    partial void OnTradeInVin2Changed();
    partial void OnTradeInAmount3Changing(System.Nullable<decimal> value);
    partial void OnTradeInAmount3Changed();
    partial void OnTradeInTax3Changing(System.Nullable<decimal> value);
    partial void OnTradeInTax3Changed();
    partial void OnTradeInUnexpiredCarTax3Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredCarTax3Changed();
    partial void OnTradeInRemainDebt3Changing(System.Nullable<decimal> value);
    partial void OnTradeInRemainDebt3Changed();
    partial void OnTradeInAppropriation3Changing(System.Nullable<decimal> value);
    partial void OnTradeInAppropriation3Changed();
    partial void OnTradeInRecycleAmount3Changing(System.Nullable<decimal> value);
    partial void OnTradeInRecycleAmount3Changed();
    partial void OnTradeInMakerName3Changing(string value);
    partial void OnTradeInMakerName3Changed();
    partial void OnTradeInCarName3Changing(string value);
    partial void OnTradeInCarName3Changed();
    partial void OnTradeInClassificationTypeNumber3Changing(string value);
    partial void OnTradeInClassificationTypeNumber3Changed();
    partial void OnTradeInModelSpecificateNumber3Changing(string value);
    partial void OnTradeInModelSpecificateNumber3Changed();
    partial void OnTradeInManufacturingYear3Changing(string value);
    partial void OnTradeInManufacturingYear3Changed();
    partial void OnTradeInInspectionExpiredDate3Changing(System.Nullable<System.DateTime> value);
    partial void OnTradeInInspectionExpiredDate3Changed();
    partial void OnTradeInMileage3Changing(System.Nullable<decimal> value);
    partial void OnTradeInMileage3Changed();
    partial void OnTradeInMileageUnit3Changing(string value);
    partial void OnTradeInMileageUnit3Changed();
    partial void OnTradeInVin3Changing(string value);
    partial void OnTradeInVin3Changed();
    partial void OnLoanCodeAChanging(string value);
    partial void OnLoanCodeAChanged();
    partial void OnPaymentFrequencyAChanging(System.Nullable<int> value);
    partial void OnPaymentFrequencyAChanged();
    partial void OnPaymentTermFromAChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermFromAChanged();
    partial void OnPaymentTermToAChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermToAChanged();
    partial void OnBonusMonthA1Changing(System.Nullable<int> value);
    partial void OnBonusMonthA1Changed();
    partial void OnBonusMonthA2Changing(System.Nullable<int> value);
    partial void OnBonusMonthA2Changed();
    partial void OnFirstAmountAChanging(System.Nullable<decimal> value);
    partial void OnFirstAmountAChanged();
    partial void OnSecondAmountAChanging(System.Nullable<decimal> value);
    partial void OnSecondAmountAChanged();
    partial void OnBonusAmountAChanging(System.Nullable<decimal> value);
    partial void OnBonusAmountAChanged();
    partial void OnCashAmountAChanging(System.Nullable<decimal> value);
    partial void OnCashAmountAChanged();
    partial void OnLoanPrincipalAChanging(System.Nullable<decimal> value);
    partial void OnLoanPrincipalAChanged();
    partial void OnLoanFeeAChanging(System.Nullable<decimal> value);
    partial void OnLoanFeeAChanged();
    partial void OnLoanTotalAmountAChanging(System.Nullable<decimal> value);
    partial void OnLoanTotalAmountAChanged();
    partial void OnLoanCodeBChanging(string value);
    partial void OnLoanCodeBChanged();
    partial void OnPaymentFrequencyBChanging(System.Nullable<int> value);
    partial void OnPaymentFrequencyBChanged();
    partial void OnPaymentTermFromBChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermFromBChanged();
    partial void OnPaymentTermToBChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermToBChanged();
    partial void OnBonusMonthB1Changing(System.Nullable<int> value);
    partial void OnBonusMonthB1Changed();
    partial void OnBonusMonthB2Changing(System.Nullable<int> value);
    partial void OnBonusMonthB2Changed();
    partial void OnFirstAmountBChanging(System.Nullable<decimal> value);
    partial void OnFirstAmountBChanged();
    partial void OnSecondAmountBChanging(System.Nullable<decimal> value);
    partial void OnSecondAmountBChanged();
    partial void OnBonusAmountBChanging(System.Nullable<decimal> value);
    partial void OnBonusAmountBChanged();
    partial void OnCashAmountBChanging(System.Nullable<decimal> value);
    partial void OnCashAmountBChanged();
    partial void OnLoanPrincipalBChanging(System.Nullable<decimal> value);
    partial void OnLoanPrincipalBChanged();
    partial void OnLoanFeeBChanging(System.Nullable<decimal> value);
    partial void OnLoanFeeBChanged();
    partial void OnLoanTotalAmountBChanging(System.Nullable<decimal> value);
    partial void OnLoanTotalAmountBChanged();
    partial void OnLoanCodeCChanging(string value);
    partial void OnLoanCodeCChanged();
    partial void OnPaymentFrequencyCChanging(System.Nullable<int> value);
    partial void OnPaymentFrequencyCChanged();
    partial void OnPaymentTermFromCChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermFromCChanged();
    partial void OnPaymentTermToCChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentTermToCChanged();
    partial void OnBonusMonthC1Changing(System.Nullable<int> value);
    partial void OnBonusMonthC1Changed();
    partial void OnBonusMonthC2Changing(System.Nullable<int> value);
    partial void OnBonusMonthC2Changed();
    partial void OnFirstAmountCChanging(System.Nullable<decimal> value);
    partial void OnFirstAmountCChanged();
    partial void OnSecondAmountCChanging(System.Nullable<decimal> value);
    partial void OnSecondAmountCChanged();
    partial void OnBonusAmountCChanging(System.Nullable<decimal> value);
    partial void OnBonusAmountCChanged();
    partial void OnCashAmountCChanging(System.Nullable<decimal> value);
    partial void OnCashAmountCChanged();
    partial void OnLoanPrincipalCChanging(System.Nullable<decimal> value);
    partial void OnLoanPrincipalCChanged();
    partial void OnLoanFeeCChanging(System.Nullable<decimal> value);
    partial void OnLoanFeeCChanged();
    partial void OnLoanTotalAmountCChanging(System.Nullable<decimal> value);
    partial void OnLoanTotalAmountCChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCampaignCode1Changing(string value);
    partial void OnCampaignCode1Changed();
    partial void OnCampaignCode2Changing(string value);
    partial void OnCampaignCode2Changed();
    partial void OnSalesOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesOrderDateChanged();
    partial void OnAuthorizationNumberAChanging(string value);
    partial void OnAuthorizationNumberAChanged();
    partial void OnAuthorizationNumberBChanging(string value);
    partial void OnAuthorizationNumberBChanged();
    partial void OnAuthorizationNumberCChanging(string value);
    partial void OnAuthorizationNumberCChanged();
    partial void OnCarBrandNameChanging(string value);
    partial void OnCarBrandNameChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnTaxationAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxationAmountChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnFirstDirectDebitDateAChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstDirectDebitDateAChanged();
    partial void OnSecondDirectDebitDateAChanging(System.Nullable<int> value);
    partial void OnSecondDirectDebitDateAChanged();
    partial void OnFirstDirectDebitDateBChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstDirectDebitDateBChanged();
    partial void OnSecondDirectDebitDateBChanging(System.Nullable<int> value);
    partial void OnSecondDirectDebitDateBChanged();
    partial void OnFirstDirectDebitDateCChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstDirectDebitDateCChanged();
    partial void OnSecondDirectDebitDateCChanging(System.Nullable<int> value);
    partial void OnSecondDirectDebitDateCChanged();
    partial void OnShopOptionAmountChanging(System.Nullable<decimal> value);
    partial void OnShopOptionAmountChanged();
    partial void OnMakerOptionAmountChanging(System.Nullable<decimal> value);
    partial void OnMakerOptionAmountChanged();
    partial void OnOutSourceAmountChanging(System.Nullable<decimal> value);
    partial void OnOutSourceAmountChanged();
    partial void OnSubTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnSubTotalAmountChanged();
    partial void OnTaxFreeTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxFreeTotalAmountChanged();
    partial void OnSalesCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesCostTotalAmountChanged();
    partial void OnCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnCostTotalAmountChanged();
    partial void OnTotalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxAmountChanged();
    partial void OnGrandTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnGrandTotalAmountChanged();
    partial void OnShopOptionTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnShopOptionTaxAmountChanged();
    partial void OnMakerOptionTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnMakerOptionTaxAmountChanged();
    partial void OnOutSourceTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnOutSourceTaxAmountChanged();
    partial void OnSalesCostTotalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesCostTotalTaxAmountChanged();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnOtherCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnOtherCostTotalAmountChanged();
    partial void OnTradeInTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInTotalAmountChanged();
    partial void OnTradeInTaxTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInTaxTotalAmountChanged();
    partial void OnTradeInUnexpiredCarTaxTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredCarTaxTotalAmountChanged();
    partial void OnTradeInRemainDebtTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInRemainDebtTotalAmountChanged();
    partial void OnTradeInAppropriationTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInAppropriationTotalAmountChanged();
    partial void OnPaymentTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentTotalAmountChanged();
    partial void OnPaymentCashTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentCashTotalAmountChanged();
    partial void OnLoanPrincipalAmountChanging(System.Nullable<decimal> value);
    partial void OnLoanPrincipalAmountChanged();
    partial void OnLoanFeeAmountChanging(System.Nullable<decimal> value);
    partial void OnLoanFeeAmountChanged();
    partial void OnLoanTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnLoanTotalAmountChanged();
    partial void OnExteriorColorNameChanging(string value);
    partial void OnExteriorColorNameChanged();
    partial void OnInteriorColorNameChanging(string value);
    partial void OnInteriorColorNameChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnRequestNumberCostChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberCostChanged();
    partial void OnTradeInFiscalStampCostChanging(System.Nullable<decimal> value);
    partial void OnTradeInFiscalStampCostChanged();
    partial void OnTradeInAppraisalFeeChanging(System.Nullable<decimal> value);
    partial void OnTradeInAppraisalFeeChanged();
    partial void OnFarRegistFeeChanging(System.Nullable<decimal> value);
    partial void OnFarRegistFeeChanged();
    partial void OnTradeInMaintenanceFeeChanging(System.Nullable<decimal> value);
    partial void OnTradeInMaintenanceFeeChanged();
    partial void OnInheritedInsuranceFeeChanging(System.Nullable<decimal> value);
    partial void OnInheritedInsuranceFeeChanged();
    partial void OnTradeInRegistrationNumber1Changing(string value);
    partial void OnTradeInRegistrationNumber1Changed();
    partial void OnTradeInRegistrationNumber2Changing(string value);
    partial void OnTradeInRegistrationNumber2Changed();
    partial void OnTradeInRegistrationNumber3Changing(string value);
    partial void OnTradeInRegistrationNumber3Changed();
    partial void OnTradeInUnexpiredLiabilityInsurance1Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredLiabilityInsurance1Changed();
    partial void OnTradeInUnexpiredLiabilityInsurance2Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredLiabilityInsurance2Changed();
    partial void OnTradeInUnexpiredLiabilityInsurance3Changing(System.Nullable<decimal> value);
    partial void OnTradeInUnexpiredLiabilityInsurance3Changed();
    partial void OnRemainAmountAChanging(System.Nullable<decimal> value);
    partial void OnRemainAmountAChanged();
    partial void OnRemainAmountBChanging(System.Nullable<decimal> value);
    partial void OnRemainAmountBChanged();
    partial void OnRemainAmountCChanging(System.Nullable<decimal> value);
    partial void OnRemainAmountCChanged();
    partial void OnRemainFinalMonthAChanging(System.Nullable<System.DateTime> value);
    partial void OnRemainFinalMonthAChanged();
    partial void OnRemainFinalMonthBChanging(System.Nullable<System.DateTime> value);
    partial void OnRemainFinalMonthBChanged();
    partial void OnRemainFinalMonthCChanging(System.Nullable<System.DateTime> value);
    partial void OnRemainFinalMonthCChanged();
    partial void OnLoanRateAChanging(System.Nullable<decimal> value);
    partial void OnLoanRateAChanged();
    partial void OnLoanRateBChanging(System.Nullable<decimal> value);
    partial void OnLoanRateBChanged();
    partial void OnLoanRateCChanging(System.Nullable<decimal> value);
    partial void OnLoanRateCChanged();
    partial void OnInspectionRegistFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistFeeTaxChanged();
    partial void OnParkingSpaceFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceFeeTaxChanged();
    partial void OnTradeInFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnTradeInFeeTaxChanged();
    partial void OnPreparationFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnPreparationFeeTaxChanged();
    partial void OnRecycleControlFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeTaxChanged();
    partial void OnRecycleControlFeeTradeInTaxChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeTradeInTaxChanged();
    partial void OnRequestNumberFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberFeeTaxChanged();
    partial void OnCarTaxUnexpiredAmountTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxUnexpiredAmountTaxChanged();
    partial void OnCarLiabilityInsuranceUnexpiredAmountTaxChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceUnexpiredAmountTaxChanged();
    partial void OnTradeInAppraisalFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnTradeInAppraisalFeeTaxChanged();
    partial void OnFarRegistFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnFarRegistFeeTaxChanged();
    partial void OnTradeInMaintenanceFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnTradeInMaintenanceFeeTaxChanged();
    partial void OnInheritedInsuranceFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnInheritedInsuranceFeeTaxChanged();
    partial void OnTaxationFieldValueTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxationFieldValueTaxChanged();
    partial void OnTradeInEraseRegist1Changing(string value);
    partial void OnTradeInEraseRegist1Changed();
    partial void OnTradeInEraseRegist2Changing(string value);
    partial void OnTradeInEraseRegist2Changed();
    partial void OnTradeInEraseRegist3Changing(string value);
    partial void OnTradeInEraseRegist3Changed();
    partial void OnSalesTaxChanging(System.Nullable<decimal> value);
    partial void OnSalesTaxChanged();
    partial void OnDiscountTaxChanging(System.Nullable<decimal> value);
    partial void OnDiscountTaxChanged();
    partial void OnTradeInPrice1Changing(System.Nullable<decimal> value);
    partial void OnTradeInPrice1Changed();
    partial void OnTradeInPrice2Changing(System.Nullable<decimal> value);
    partial void OnTradeInPrice2Changed();
    partial void OnTradeInPrice3Changing(System.Nullable<decimal> value);
    partial void OnTradeInPrice3Changed();
    partial void OnTradeInRecycleTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTradeInRecycleTotalAmountChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnRevenueStampCostChanging(System.Nullable<decimal> value);
    partial void OnRevenueStampCostChanged();
    partial void OnTradeInCarTaxDepositChanging(System.Nullable<decimal> value);
    partial void OnTradeInCarTaxDepositChanged();
    partial void OnLastEditScreenChanging(string value);
    partial void OnLastEditScreenChanged();
    partial void OnPaymentSecondFrequencyAChanging(System.Nullable<int> value);
    partial void OnPaymentSecondFrequencyAChanged();
    partial void OnPaymentSecondFrequencyBChanging(System.Nullable<int> value);
    partial void OnPaymentSecondFrequencyBChanged();
    partial void OnPaymentSecondFrequencyCChanging(System.Nullable<int> value);
    partial void OnPaymentSecondFrequencyCChanged();
    partial void OnProcessSessionIdChanging(System.Nullable<System.Guid> value);
    partial void OnProcessSessionIdChanged();
    partial void OnEPDiscountTaxIdChanging(string value);
    partial void OnEPDiscountTaxIdChanged();
    partial void OnCostAreaCodeChanging(string value);
    partial void OnCostAreaCodeChanged();
    partial void OnMaintenancePackageAmountChanging(System.Nullable<decimal> value);
    partial void OnMaintenancePackageAmountChanged();
    partial void OnMaintenancePackageTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnMaintenancePackageTaxAmountChanged();
    partial void OnExtendedWarrantyAmountChanging(System.Nullable<decimal> value);
    partial void OnExtendedWarrantyAmountChanged();
    partial void OnExtendedWarrantyTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnExtendedWarrantyTaxAmountChanged();
    partial void OnTradeInHolderName1Changing(string value);
    partial void OnTradeInHolderName1Changed();
    partial void OnTradeInHolderName2Changing(string value);
    partial void OnTradeInHolderName2Changed();
    partial void OnTradeInHolderName3Changing(string value);
    partial void OnTradeInHolderName3Changed();
    partial void OnOutJurisdictionRegistFeeChanging(System.Nullable<decimal> value);
    partial void OnOutJurisdictionRegistFeeChanged();
    partial void OnOutJurisdictionRegistFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnOutJurisdictionRegistFeeTaxChanged();
    partial void OnSurchargeAmountChanging(System.Nullable<decimal> value);
    partial void OnSurchargeAmountChanged();
    partial void OnSurchargeTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnSurchargeTaxAmountChanged();
    partial void OnSuspendTaxRecvChanging(System.Nullable<decimal> value);
    partial void OnSuspendTaxRecvChanged();
    #endregion
		
		public CarSalesHeader()
		{
			this._CarSalesLine = new EntitySet<CarSalesLine>(new Action<CarSalesLine>(this.attach_CarSalesLine), new Action<CarSalesLine>(this.detach_CarSalesLine));
			this._CarSalesPayment = new EntitySet<CarSalesPayment>(new Action<CarSalesPayment>(this.attach_CarSalesPayment), new Action<CarSalesPayment>(this.detach_CarSalesPayment));
			this._CarSalesReport = new EntitySet<CarSalesReport>(new Action<CarSalesReport>(this.attach_CarSalesReport), new Action<CarSalesReport>(this.detach_CarSalesReport));
			this._CarGrade = default(EntityRef<CarGrade>);
			this._Customer = default(EntityRef<Customer>);
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._Possesor = default(EntityRef<Customer>);
			this._User = default(EntityRef<Customer>);
			this._c_SalesOrderStatus = default(EntityRef<c_SalesOrderStatus>);
			this._c_SalesType = default(EntityRef<c_SalesType>);
			this._c_RegistrationType = default(EntityRef<c_RegistrationType>);
			this._ExteriorColor = default(EntityRef<CarColor>);
			this._InteriorColor = default(EntityRef<CarColor>);
			this._c_NewUsedType = default(EntityRef<c_NewUsedType>);
			this._c_CarLiabilityInsuranceType = default(EntityRef<c_CarLiabilityInsuranceType>);
			this._c_OwnershipReservation = default(EntityRef<c_OwnershipReservation>);
			this._c_VoluntaryInsuranceType = default(EntityRef<c_VoluntaryInsuranceType>);
			this._c_MileageUnit = default(EntityRef<c_MileageUnit>);
			this._c_MileageUnitTradeIn1 = default(EntityRef<c_MileageUnit>);
			this._c_MileageUnitTradeIn2 = default(EntityRef<c_MileageUnit>);
			this._c_MileageUnitTradeIn3 = default(EntityRef<c_MileageUnit>);
			this._SalesCar = default(EntityRef<SalesCar>);
			this._LoanA = default(EntityRef<Loan>);
			this._LoanB = default(EntityRef<Loan>);
			this._LoanC = default(EntityRef<Loan>);
			this._c_EraseRegist = default(EntityRef<c_EraseRegist>);
			this._c_EraseRegist1 = default(EntityRef<c_EraseRegist>);
			this._c_EraseRegist2 = default(EntityRef<c_EraseRegist>);
			this._ProcessSessionControl = default(EntityRef<ProcessSessionControl>);
			this._CostArea = default(EntityRef<CostArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this.OnQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._SlipDate = value;
					this.SendPropertyChanged("QuoteDate");
					this.OnQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteExpireDate
		{
			get
			{
				return this._QuoteExpireDate;
			}
			set
			{
				if ((this._QuoteExpireDate != value))
				{
					this.OnQuoteExpireDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteExpireDate = value;
					this.SendPropertyChanged("QuoteExpireDate");
					this.OnQuoteExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesOrderStatus
		{
			get
			{
				return this._SalesOrderStatus;
			}
			set
			{
				if ((this._SalesOrderStatus != value))
				{
					if (this._c_SalesOrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderStatus = value;
					this.SendPropertyChanged("SalesOrderStatus");
					this.OnSalesOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApprovalFlag
		{
			get
			{
				return this._ApprovalFlag;
			}
			set
			{
				if ((this._ApprovalFlag != value))
				{
					this.OnApprovalFlagChanging(value);
					this.SendPropertyChanging();
					this._ApprovalFlag = value;
					this.SendPropertyChanged("ApprovalFlag");
					this.OnApprovalFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					if (this._c_NewUsedType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewUsedTypeChanging(value);
					this.SendPropertyChanging();
					this._NewUsedType = value;
					this.SendPropertyChanged("NewUsedType");
					this.OnNewUsedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesType
		{
			get
			{
				return this._SalesType;
			}
			set
			{
				if ((this._SalesType != value))
				{
					if (this._c_SalesType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesTypeChanging(value);
					this.SendPropertyChanging();
					this._SalesType = value;
					this.SendPropertyChanged("SalesType");
					this.OnSalesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._GradeName;
			}
			set
			{
				if ((this._GradeName != value))
				{
					this.OnCarGradeNameChanging(value);
					this.SendPropertyChanging();
					this._GradeName = value;
					this.SendPropertyChanged("CarGradeName");
					this.OnCarGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingYear", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ManufacturingYear
		{
			get
			{
				return this._ManufacturingYear;
			}
			set
			{
				if ((this._ManufacturingYear != value))
				{
					this.OnManufacturingYearChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingYear = value;
					this.SendPropertyChanged("ManufacturingYear");
					this.OnManufacturingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorCode
		{
			get
			{
				return this._ExteriorColorCode;
			}
			set
			{
				if ((this._ExteriorColorCode != value))
				{
					if (this._ExteriorColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorCode = value;
					this.SendPropertyChanged("ExteriorColorCode");
					this.OnExteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorCode
		{
			get
			{
				return this._InteriorColorCode;
			}
			set
			{
				if ((this._InteriorColorCode != value))
				{
					if (this._InteriorColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorCode = value;
					this.SendPropertyChanged("InteriorColorCode");
					this.OnInteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsVin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsVin
		{
			get
			{
				return this._UsVin;
			}
			set
			{
				if ((this._UsVin != value))
				{
					this.OnUsVinChanging(value);
					this.SendPropertyChanging();
					this._UsVin = value;
					this.SendPropertyChanged("UsVin");
					this.OnUsVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					if (this._c_MileageUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPlateNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestPlateNumber
		{
			get
			{
				return this._RequestPlateNumber;
			}
			set
			{
				if ((this._RequestPlateNumber != value))
				{
					this.OnRequestPlateNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestPlateNumber = value;
					this.SendPropertyChanged("RequestPlateNumber");
					this.OnRequestPlateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistPlanDate", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistPlanDate
		{
			get
			{
				return this._RegistPlanDate;
			}
			set
			{
				if ((this._RegistPlanDate != value))
				{
					this.OnRegistPlanDateChanging(value);
					this.SendPropertyChanging();
					this._RegistPlanDate = value;
					this.SendPropertyChanged("RegistPlanDate");
					this.OnRegistPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string HotStatus
		{
			get
			{
				return this._HotStatus;
			}
			set
			{
				if ((this._HotStatus != value))
				{
					this.OnHotStatusChanging(value);
					this.SendPropertyChanging();
					this._HotStatus = value;
					this.SendPropertyChanged("HotStatus");
					this.OnHotStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					if (this._SalesCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestRegistDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestRegistDate
		{
			get
			{
				return this._RequestRegistDate;
			}
			set
			{
				if ((this._RequestRegistDate != value))
				{
					this.OnRequestRegistDateChanging(value);
					this.SendPropertyChanging();
					this._RequestRegistDate = value;
					this.SendPropertyChanged("RequestRegistDate");
					this.OnRequestRegistDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesPlanDate
		{
			get
			{
				return this._SalesPlanDate;
			}
			set
			{
				if ((this._SalesPlanDate != value))
				{
					this.OnSalesPlanDateChanging(value);
					this.SendPropertyChanging();
					this._SalesPlanDate = value;
					this.SendPropertyChanged("SalesPlanDate");
					this.OnSalesPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationType
		{
			get
			{
				return this._RegistrationType;
			}
			set
			{
				if ((this._RegistrationType != value))
				{
					if (this._c_RegistrationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationType = value;
					this.SendPropertyChanged("RegistrationType");
					this.OnRegistrationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipReservation", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnershipReservation
		{
			get
			{
				return this._OwnershipReservation;
			}
			set
			{
				if ((this._OwnershipReservation != value))
				{
					if (this._c_OwnershipReservation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnershipReservationChanging(value);
					this.SendPropertyChanging();
					this._OwnershipReservation = value;
					this.SendPropertyChanged("OwnershipReservation");
					this.OnOwnershipReservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarLiabilityInsuranceType
		{
			get
			{
				return this._CarLiabilityInsuranceType;
			}
			set
			{
				if ((this._CarLiabilityInsuranceType != value))
				{
					if (this._c_CarLiabilityInsuranceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarLiabilityInsuranceTypeChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceType = value;
					this.SendPropertyChanged("CarLiabilityInsuranceType");
					this.OnCarLiabilityInsuranceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SealSubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SealSubmitDate
		{
			get
			{
				return this._SealSubmitDate;
			}
			set
			{
				if ((this._SealSubmitDate != value))
				{
					this.OnSealSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SealSubmitDate = value;
					this.SendPropertyChanged("SealSubmitDate");
					this.OnSealSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProxySubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProxySubmitDate
		{
			get
			{
				return this._ProxySubmitDate;
			}
			set
			{
				if ((this._ProxySubmitDate != value))
				{
					this.OnProxySubmitDateChanging(value);
					this.SendPropertyChanging();
					this._ProxySubmitDate = value;
					this.SendPropertyChanged("ProxySubmitDate");
					this.OnProxySubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceSubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParkingSpaceSubmitDate
		{
			get
			{
				return this._ParkingSpaceSubmitDate;
			}
			set
			{
				if ((this._ParkingSpaceSubmitDate != value))
				{
					this.OnParkingSpaceSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceSubmitDate = value;
					this.SendPropertyChanged("ParkingSpaceSubmitDate");
					this.OnParkingSpaceSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceSubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CarLiabilityInsuranceSubmitDate
		{
			get
			{
				return this._CarLiabilityInsuranceSubmitDate;
			}
			set
			{
				if ((this._CarLiabilityInsuranceSubmitDate != value))
				{
					this.OnCarLiabilityInsuranceSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceSubmitDate = value;
					this.SendPropertyChanged("CarLiabilityInsuranceSubmitDate");
					this.OnCarLiabilityInsuranceSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipReservationSubmitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OwnershipReservationSubmitDate
		{
			get
			{
				return this._OwnershipReservationSubmitDate;
			}
			set
			{
				if ((this._OwnershipReservationSubmitDate != value))
				{
					this.OnOwnershipReservationSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._OwnershipReservationSubmitDate = value;
					this.SendPropertyChanged("OwnershipReservationSubmitDate");
					this.OnOwnershipReservationSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTax
		{
			get
			{
				return this._CarTax;
			}
			set
			{
				if ((this._CarTax != value))
				{
					this.OnCarTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTax = value;
					this.SendPropertyChanged("CarTax");
					this.OnCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this.OnCarLiabilityInsuranceChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsurance = value;
					this.SendPropertyChanged("CarLiabilityInsurance");
					this.OnCarLiabilityInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarWeightTax
		{
			get
			{
				return this._CarWeightTax;
			}
			set
			{
				if ((this._CarWeightTax != value))
				{
					this.OnCarWeightTaxChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTax = value;
					this.SendPropertyChanged("CarWeightTax");
					this.OnCarWeightTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AcquisitionTax
		{
			get
			{
				return this._AcquisitionTax;
			}
			set
			{
				if ((this._AcquisitionTax != value))
				{
					this.OnAcquisitionTaxChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionTax = value;
					this.SendPropertyChanged("AcquisitionTax");
					this.OnAcquisitionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistCost
		{
			get
			{
				return this._InspectionRegistCost;
			}
			set
			{
				if ((this._InspectionRegistCost != value))
				{
					this.OnInspectionRegistCostChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistCost = value;
					this.SendPropertyChanged("InspectionRegistCost");
					this.OnInspectionRegistCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceCost
		{
			get
			{
				return this._ParkingSpaceCost;
			}
			set
			{
				if ((this._ParkingSpaceCost != value))
				{
					this.OnParkingSpaceCostChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceCost = value;
					this.SendPropertyChanged("ParkingSpaceCost");
					this.OnParkingSpaceCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInCost
		{
			get
			{
				return this._TradeInCost;
			}
			set
			{
				if ((this._TradeInCost != value))
				{
					this.OnTradeInCostChanging(value);
					this.SendPropertyChanging();
					this._TradeInCost = value;
					this.SendPropertyChanged("TradeInCost");
					this.OnTradeInCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this.OnRecycleDepositChanging(value);
					this.SendPropertyChanging();
					this._RecycleDeposit = value;
					this.SendPropertyChanged("RecycleDeposit");
					this.OnRecycleDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDepositTradeIn", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDepositTradeIn
		{
			get
			{
				return this._RecycleDepositTradeIn;
			}
			set
			{
				if ((this._RecycleDepositTradeIn != value))
				{
					this.OnRecycleDepositTradeInChanging(value);
					this.SendPropertyChanging();
					this._RecycleDepositTradeIn = value;
					this.SendPropertyChanged("RecycleDepositTradeIn");
					this.OnRecycleDepositTradeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPlateCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> NumberPlateCost
		{
			get
			{
				return this._NumberPlateCost;
			}
			set
			{
				if ((this._NumberPlateCost != value))
				{
					this.OnNumberPlateCostChanging(value);
					this.SendPropertyChanging();
					this._NumberPlateCost = value;
					this.SendPropertyChanged("NumberPlateCost");
					this.OnNumberPlateCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeFieldName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxFreeFieldName
		{
			get
			{
				return this._TaxFreeFieldName;
			}
			set
			{
				if ((this._TaxFreeFieldName != value))
				{
					this.OnTaxFreeFieldNameChanging(value);
					this.SendPropertyChanging();
					this._TaxFreeFieldName = value;
					this.SendPropertyChanged("TaxFreeFieldName");
					this.OnTaxFreeFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeFieldValue", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxFreeFieldValue
		{
			get
			{
				return this._TaxFreeFieldValue;
			}
			set
			{
				if ((this._TaxFreeFieldValue != value))
				{
					this.OnTaxFreeFieldValueChanging(value);
					this.SendPropertyChanging();
					this._TaxFreeFieldValue = value;
					this.SendPropertyChanged("TaxFreeFieldValue");
					this.OnTaxFreeFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistFee
		{
			get
			{
				return this._InspectionRegistFee;
			}
			set
			{
				if ((this._InspectionRegistFee != value))
				{
					this.OnInspectionRegistFeeChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistFee = value;
					this.SendPropertyChanged("InspectionRegistFee");
					this.OnInspectionRegistFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceFee
		{
			get
			{
				return this._ParkingSpaceFee;
			}
			set
			{
				if ((this._ParkingSpaceFee != value))
				{
					this.OnParkingSpaceFeeChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceFee = value;
					this.SendPropertyChanged("ParkingSpaceFee");
					this.OnParkingSpaceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInFee
		{
			get
			{
				return this._TradeInFee;
			}
			set
			{
				if ((this._TradeInFee != value))
				{
					this.OnTradeInFeeChanging(value);
					this.SendPropertyChanging();
					this._TradeInFee = value;
					this.SendPropertyChanged("TradeInFee");
					this.OnTradeInFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreparationFee
		{
			get
			{
				return this._PreparationFee;
			}
			set
			{
				if ((this._PreparationFee != value))
				{
					this.OnPreparationFeeChanging(value);
					this.SendPropertyChanging();
					this._PreparationFee = value;
					this.SendPropertyChanged("PreparationFee");
					this.OnPreparationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFee
		{
			get
			{
				return this._RecycleControlFee;
			}
			set
			{
				if ((this._RecycleControlFee != value))
				{
					this.OnRecycleControlFeeChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFee = value;
					this.SendPropertyChanged("RecycleControlFee");
					this.OnRecycleControlFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFeeTradeIn", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFeeTradeIn
		{
			get
			{
				return this._RecycleControlFeeTradeIn;
			}
			set
			{
				if ((this._RecycleControlFeeTradeIn != value))
				{
					this.OnRecycleControlFeeTradeInChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFeeTradeIn = value;
					this.SendPropertyChanged("RecycleControlFeeTradeIn");
					this.OnRecycleControlFeeTradeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberFee
		{
			get
			{
				return this._RequestNumberFee;
			}
			set
			{
				if ((this._RequestNumberFee != value))
				{
					this.OnRequestNumberFeeChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberFee = value;
					this.SendPropertyChanged("RequestNumberFee");
					this.OnRequestNumberFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxUnexpiredAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxUnexpiredAmount
		{
			get
			{
				return this._CarTaxUnexpiredAmount;
			}
			set
			{
				if ((this._CarTaxUnexpiredAmount != value))
				{
					this.OnCarTaxUnexpiredAmountChanging(value);
					this.SendPropertyChanging();
					this._CarTaxUnexpiredAmount = value;
					this.SendPropertyChanged("CarTaxUnexpiredAmount");
					this.OnCarTaxUnexpiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceUnexpiredAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsuranceUnexpiredAmount
		{
			get
			{
				return this._CarLiabilityInsuranceUnexpiredAmount;
			}
			set
			{
				if ((this._CarLiabilityInsuranceUnexpiredAmount != value))
				{
					this.OnCarLiabilityInsuranceUnexpiredAmountChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceUnexpiredAmount = value;
					this.SendPropertyChanged("CarLiabilityInsuranceUnexpiredAmount");
					this.OnCarLiabilityInsuranceUnexpiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationFieldName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxationFieldName
		{
			get
			{
				return this._TaxationFieldName;
			}
			set
			{
				if ((this._TaxationFieldName != value))
				{
					this.OnTaxationFieldNameChanging(value);
					this.SendPropertyChanging();
					this._TaxationFieldName = value;
					this.SendPropertyChanged("TaxationFieldName");
					this.OnTaxationFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationFieldValue", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxationFieldValue
		{
			get
			{
				return this._TaxationFieldValue;
			}
			set
			{
				if ((this._TaxationFieldValue != value))
				{
					this.OnTaxationFieldValueChanging(value);
					this.SendPropertyChanging();
					this._TaxationFieldValue = value;
					this.SendPropertyChanged("TaxationFieldValue");
					this.OnTaxationFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorCode
		{
			get
			{
				return this._PossesorCode;
			}
			set
			{
				if ((this._PossesorCode != value))
				{
					if (this._Possesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPossesorCodeChanging(value);
					this.SendPropertyChanging();
					this._PossesorCode = value;
					this.SendPropertyChanged("PossesorCode");
					this.OnPossesorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPlace", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrincipalPlace
		{
			get
			{
				return this._PrincipalPlace;
			}
			set
			{
				if ((this._PrincipalPlace != value))
				{
					this.OnPrincipalPlaceChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPlace = value;
					this.SendPropertyChanged("PrincipalPlace");
					this.OnPrincipalPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string VoluntaryInsuranceType
		{
			get
			{
				return this._VoluntaryInsuranceType;
			}
			set
			{
				if ((this._VoluntaryInsuranceType != value))
				{
					if (this._c_VoluntaryInsuranceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoluntaryInsuranceTypeChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceType = value;
					this.SendPropertyChanged("VoluntaryInsuranceType");
					this.OnVoluntaryInsuranceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceCompanyName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string VoluntaryInsuranceCompanyName
		{
			get
			{
				return this._VoluntaryInsuranceCompanyName;
			}
			set
			{
				if ((this._VoluntaryInsuranceCompanyName != value))
				{
					this.OnVoluntaryInsuranceCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceCompanyName = value;
					this.SendPropertyChanged("VoluntaryInsuranceCompanyName");
					this.OnVoluntaryInsuranceCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> VoluntaryInsuranceAmount
		{
			get
			{
				return this._VoluntaryInsuranceAmount;
			}
			set
			{
				if ((this._VoluntaryInsuranceAmount != value))
				{
					this.OnVoluntaryInsuranceAmountChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceAmount = value;
					this.SendPropertyChanged("VoluntaryInsuranceAmount");
					this.OnVoluntaryInsuranceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceTermFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoluntaryInsuranceTermFrom
		{
			get
			{
				return this._VoluntaryInsuranceTermFrom;
			}
			set
			{
				if ((this._VoluntaryInsuranceTermFrom != value))
				{
					this.OnVoluntaryInsuranceTermFromChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceTermFrom = value;
					this.SendPropertyChanged("VoluntaryInsuranceTermFrom");
					this.OnVoluntaryInsuranceTermFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceTermTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> VoluntaryInsuranceTermTo
		{
			get
			{
				return this._VoluntaryInsuranceTermTo;
			}
			set
			{
				if ((this._VoluntaryInsuranceTermTo != value))
				{
					this.OnVoluntaryInsuranceTermToChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceTermTo = value;
					this.SendPropertyChanged("VoluntaryInsuranceTermTo");
					this.OnVoluntaryInsuranceTermToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentPlanType
		{
			get
			{
				return this._PaymentPlanType;
			}
			set
			{
				if ((this._PaymentPlanType != value))
				{
					this.OnPaymentPlanTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanType = value;
					this.SendPropertyChanged("PaymentPlanType");
					this.OnPaymentPlanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAmount1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAmount1
		{
			get
			{
				return this._TradeInAmount1;
			}
			set
			{
				if ((this._TradeInAmount1 != value))
				{
					this.OnTradeInAmount1Changing(value);
					this.SendPropertyChanging();
					this._TradeInAmount1 = value;
					this.SendPropertyChanged("TradeInAmount1");
					this.OnTradeInAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTax1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTax1
		{
			get
			{
				return this._TradeInTax1;
			}
			set
			{
				if ((this._TradeInTax1 != value))
				{
					this.OnTradeInTax1Changing(value);
					this.SendPropertyChanging();
					this._TradeInTax1 = value;
					this.SendPropertyChanged("TradeInTax1");
					this.OnTradeInTax1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTax1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredCarTax1
		{
			get
			{
				return this._TradeInUnexpiredCarTax1;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTax1 != value))
				{
					this.OnTradeInUnexpiredCarTax1Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredCarTax1 = value;
					this.SendPropertyChanged("TradeInUnexpiredCarTax1");
					this.OnTradeInUnexpiredCarTax1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebt1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRemainDebt1
		{
			get
			{
				return this._TradeInRemainDebt1;
			}
			set
			{
				if ((this._TradeInRemainDebt1 != value))
				{
					this.OnTradeInRemainDebt1Changing(value);
					this.SendPropertyChanging();
					this._TradeInRemainDebt1 = value;
					this.SendPropertyChanged("TradeInRemainDebt1");
					this.OnTradeInRemainDebt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriation1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppropriation1
		{
			get
			{
				return this._TradeInAppropriation1;
			}
			set
			{
				if ((this._TradeInAppropriation1 != value))
				{
					this.OnTradeInAppropriation1Changing(value);
					this.SendPropertyChanging();
					this._TradeInAppropriation1 = value;
					this.SendPropertyChanged("TradeInAppropriation1");
					this.OnTradeInAppropriation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRecycleAmount1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRecycleAmount1
		{
			get
			{
				return this._TradeInRecycleAmount1;
			}
			set
			{
				if ((this._TradeInRecycleAmount1 != value))
				{
					this.OnTradeInRecycleAmount1Changing(value);
					this.SendPropertyChanging();
					this._TradeInRecycleAmount1 = value;
					this.SendPropertyChanged("TradeInRecycleAmount1");
					this.OnTradeInRecycleAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMakerName1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMakerName1
		{
			get
			{
				return this._TradeInMakerName1;
			}
			set
			{
				if ((this._TradeInMakerName1 != value))
				{
					this.OnTradeInMakerName1Changing(value);
					this.SendPropertyChanging();
					this._TradeInMakerName1 = value;
					this.SendPropertyChanged("TradeInMakerName1");
					this.OnTradeInMakerName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCarName1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInCarName1
		{
			get
			{
				return this._TradeInCarName1;
			}
			set
			{
				if ((this._TradeInCarName1 != value))
				{
					this.OnTradeInCarName1Changing(value);
					this.SendPropertyChanging();
					this._TradeInCarName1 = value;
					this.SendPropertyChanged("TradeInCarName1");
					this.OnTradeInCarName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInClassificationTypeNumber1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInClassificationTypeNumber1
		{
			get
			{
				return this._TradeInClassificationTypeNumber1;
			}
			set
			{
				if ((this._TradeInClassificationTypeNumber1 != value))
				{
					this.OnTradeInClassificationTypeNumber1Changing(value);
					this.SendPropertyChanging();
					this._TradeInClassificationTypeNumber1 = value;
					this.SendPropertyChanged("TradeInClassificationTypeNumber1");
					this.OnTradeInClassificationTypeNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInModelSpecificateNumber1", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInModelSpecificateNumber1
		{
			get
			{
				return this._TradeInModelSpecificateNumber1;
			}
			set
			{
				if ((this._TradeInModelSpecificateNumber1 != value))
				{
					this.OnTradeInModelSpecificateNumber1Changing(value);
					this.SendPropertyChanging();
					this._TradeInModelSpecificateNumber1 = value;
					this.SendPropertyChanged("TradeInModelSpecificateNumber1");
					this.OnTradeInModelSpecificateNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInManufacturingYear1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInManufacturingYear1
		{
			get
			{
				return this._TradeInManufacturingYear1;
			}
			set
			{
				if ((this._TradeInManufacturingYear1 != value))
				{
					this.OnTradeInManufacturingYear1Changing(value);
					this.SendPropertyChanging();
					this._TradeInManufacturingYear1 = value;
					this.SendPropertyChanged("TradeInManufacturingYear1");
					this.OnTradeInManufacturingYear1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInInspectionExpriredDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> TradeInInspectionExpiredDate1
		{
			get
			{
				return this._TradeInInspectionExpriredDate1;
			}
			set
			{
				if ((this._TradeInInspectionExpriredDate1 != value))
				{
					this.OnTradeInInspectionExpiredDate1Changing(value);
					this.SendPropertyChanging();
					this._TradeInInspectionExpriredDate1 = value;
					this.SendPropertyChanged("TradeInInspectionExpiredDate1");
					this.OnTradeInInspectionExpiredDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileage1", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TradeInMileage1
		{
			get
			{
				return this._TradeInMileage1;
			}
			set
			{
				if ((this._TradeInMileage1 != value))
				{
					this.OnTradeInMileage1Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileage1 = value;
					this.SendPropertyChanged("TradeInMileage1");
					this.OnTradeInMileage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileageUnit1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMileageUnit1
		{
			get
			{
				return this._TradeInMileageUnit1;
			}
			set
			{
				if ((this._TradeInMileageUnit1 != value))
				{
					if (this._c_MileageUnitTradeIn1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInMileageUnit1Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileageUnit1 = value;
					this.SendPropertyChanged("TradeInMileageUnit1");
					this.OnTradeInMileageUnit1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin1", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin1
		{
			get
			{
				return this._TradeInVin1;
			}
			set
			{
				if ((this._TradeInVin1 != value))
				{
					this.OnTradeInVin1Changing(value);
					this.SendPropertyChanging();
					this._TradeInVin1 = value;
					this.SendPropertyChanged("TradeInVin1");
					this.OnTradeInVin1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAmount2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAmount2
		{
			get
			{
				return this._TradeInAmount2;
			}
			set
			{
				if ((this._TradeInAmount2 != value))
				{
					this.OnTradeInAmount2Changing(value);
					this.SendPropertyChanging();
					this._TradeInAmount2 = value;
					this.SendPropertyChanged("TradeInAmount2");
					this.OnTradeInAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTax2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTax2
		{
			get
			{
				return this._TradeInTax2;
			}
			set
			{
				if ((this._TradeInTax2 != value))
				{
					this.OnTradeInTax2Changing(value);
					this.SendPropertyChanging();
					this._TradeInTax2 = value;
					this.SendPropertyChanged("TradeInTax2");
					this.OnTradeInTax2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTax2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredCarTax2
		{
			get
			{
				return this._TradeInUnexpiredCarTax2;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTax2 != value))
				{
					this.OnTradeInUnexpiredCarTax2Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredCarTax2 = value;
					this.SendPropertyChanged("TradeInUnexpiredCarTax2");
					this.OnTradeInUnexpiredCarTax2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebt2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRemainDebt2
		{
			get
			{
				return this._TradeInRemainDebt2;
			}
			set
			{
				if ((this._TradeInRemainDebt2 != value))
				{
					this.OnTradeInRemainDebt2Changing(value);
					this.SendPropertyChanging();
					this._TradeInRemainDebt2 = value;
					this.SendPropertyChanged("TradeInRemainDebt2");
					this.OnTradeInRemainDebt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriation2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppropriation2
		{
			get
			{
				return this._TradeInAppropriation2;
			}
			set
			{
				if ((this._TradeInAppropriation2 != value))
				{
					this.OnTradeInAppropriation2Changing(value);
					this.SendPropertyChanging();
					this._TradeInAppropriation2 = value;
					this.SendPropertyChanged("TradeInAppropriation2");
					this.OnTradeInAppropriation2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRecycleAmount2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRecycleAmount2
		{
			get
			{
				return this._TradeInRecycleAmount2;
			}
			set
			{
				if ((this._TradeInRecycleAmount2 != value))
				{
					this.OnTradeInRecycleAmount2Changing(value);
					this.SendPropertyChanging();
					this._TradeInRecycleAmount2 = value;
					this.SendPropertyChanged("TradeInRecycleAmount2");
					this.OnTradeInRecycleAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMakerName2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMakerName2
		{
			get
			{
				return this._TradeInMakerName2;
			}
			set
			{
				if ((this._TradeInMakerName2 != value))
				{
					this.OnTradeInMakerName2Changing(value);
					this.SendPropertyChanging();
					this._TradeInMakerName2 = value;
					this.SendPropertyChanged("TradeInMakerName2");
					this.OnTradeInMakerName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCarName2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInCarName2
		{
			get
			{
				return this._TradeInCarName2;
			}
			set
			{
				if ((this._TradeInCarName2 != value))
				{
					this.OnTradeInCarName2Changing(value);
					this.SendPropertyChanging();
					this._TradeInCarName2 = value;
					this.SendPropertyChanged("TradeInCarName2");
					this.OnTradeInCarName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInClassificationTypeNumber2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInClassificationTypeNumber2
		{
			get
			{
				return this._TradeInClassificationTypeNumber2;
			}
			set
			{
				if ((this._TradeInClassificationTypeNumber2 != value))
				{
					this.OnTradeInClassificationTypeNumber2Changing(value);
					this.SendPropertyChanging();
					this._TradeInClassificationTypeNumber2 = value;
					this.SendPropertyChanged("TradeInClassificationTypeNumber2");
					this.OnTradeInClassificationTypeNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInModelSpecificateNumber2", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInModelSpecificateNumber2
		{
			get
			{
				return this._TradeInModelSpecificateNumber2;
			}
			set
			{
				if ((this._TradeInModelSpecificateNumber2 != value))
				{
					this.OnTradeInModelSpecificateNumber2Changing(value);
					this.SendPropertyChanging();
					this._TradeInModelSpecificateNumber2 = value;
					this.SendPropertyChanged("TradeInModelSpecificateNumber2");
					this.OnTradeInModelSpecificateNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInManufacturingYear2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInManufacturingYear2
		{
			get
			{
				return this._TradeInManufacturingYear2;
			}
			set
			{
				if ((this._TradeInManufacturingYear2 != value))
				{
					this.OnTradeInManufacturingYear2Changing(value);
					this.SendPropertyChanging();
					this._TradeInManufacturingYear2 = value;
					this.SendPropertyChanged("TradeInManufacturingYear2");
					this.OnTradeInManufacturingYear2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInInspectionExpriredDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> TradeInInspectionExpiredDate2
		{
			get
			{
				return this._TradeInInspectionExpriredDate2;
			}
			set
			{
				if ((this._TradeInInspectionExpriredDate2 != value))
				{
					this.OnTradeInInspectionExpiredDate2Changing(value);
					this.SendPropertyChanging();
					this._TradeInInspectionExpriredDate2 = value;
					this.SendPropertyChanged("TradeInInspectionExpiredDate2");
					this.OnTradeInInspectionExpiredDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileage2", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TradeInMileage2
		{
			get
			{
				return this._TradeInMileage2;
			}
			set
			{
				if ((this._TradeInMileage2 != value))
				{
					this.OnTradeInMileage2Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileage2 = value;
					this.SendPropertyChanged("TradeInMileage2");
					this.OnTradeInMileage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileageUnit2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMileageUnit2
		{
			get
			{
				return this._TradeInMileageUnit2;
			}
			set
			{
				if ((this._TradeInMileageUnit2 != value))
				{
					if (this._c_MileageUnitTradeIn2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInMileageUnit2Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileageUnit2 = value;
					this.SendPropertyChanged("TradeInMileageUnit2");
					this.OnTradeInMileageUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin2
		{
			get
			{
				return this._TradeInVin2;
			}
			set
			{
				if ((this._TradeInVin2 != value))
				{
					this.OnTradeInVin2Changing(value);
					this.SendPropertyChanging();
					this._TradeInVin2 = value;
					this.SendPropertyChanged("TradeInVin2");
					this.OnTradeInVin2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAmount3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAmount3
		{
			get
			{
				return this._TradeInAmount3;
			}
			set
			{
				if ((this._TradeInAmount3 != value))
				{
					this.OnTradeInAmount3Changing(value);
					this.SendPropertyChanging();
					this._TradeInAmount3 = value;
					this.SendPropertyChanged("TradeInAmount3");
					this.OnTradeInAmount3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTax3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTax3
		{
			get
			{
				return this._TradeInTax3;
			}
			set
			{
				if ((this._TradeInTax3 != value))
				{
					this.OnTradeInTax3Changing(value);
					this.SendPropertyChanging();
					this._TradeInTax3 = value;
					this.SendPropertyChanged("TradeInTax3");
					this.OnTradeInTax3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTax3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredCarTax3
		{
			get
			{
				return this._TradeInUnexpiredCarTax3;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTax3 != value))
				{
					this.OnTradeInUnexpiredCarTax3Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredCarTax3 = value;
					this.SendPropertyChanged("TradeInUnexpiredCarTax3");
					this.OnTradeInUnexpiredCarTax3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebt3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRemainDebt3
		{
			get
			{
				return this._TradeInRemainDebt3;
			}
			set
			{
				if ((this._TradeInRemainDebt3 != value))
				{
					this.OnTradeInRemainDebt3Changing(value);
					this.SendPropertyChanging();
					this._TradeInRemainDebt3 = value;
					this.SendPropertyChanged("TradeInRemainDebt3");
					this.OnTradeInRemainDebt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriation3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppropriation3
		{
			get
			{
				return this._TradeInAppropriation3;
			}
			set
			{
				if ((this._TradeInAppropriation3 != value))
				{
					this.OnTradeInAppropriation3Changing(value);
					this.SendPropertyChanging();
					this._TradeInAppropriation3 = value;
					this.SendPropertyChanged("TradeInAppropriation3");
					this.OnTradeInAppropriation3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRecycleAmount3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRecycleAmount3
		{
			get
			{
				return this._TradeInRecycleAmount3;
			}
			set
			{
				if ((this._TradeInRecycleAmount3 != value))
				{
					this.OnTradeInRecycleAmount3Changing(value);
					this.SendPropertyChanging();
					this._TradeInRecycleAmount3 = value;
					this.SendPropertyChanged("TradeInRecycleAmount3");
					this.OnTradeInRecycleAmount3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMakerName3", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMakerName3
		{
			get
			{
				return this._TradeInMakerName3;
			}
			set
			{
				if ((this._TradeInMakerName3 != value))
				{
					this.OnTradeInMakerName3Changing(value);
					this.SendPropertyChanging();
					this._TradeInMakerName3 = value;
					this.SendPropertyChanged("TradeInMakerName3");
					this.OnTradeInMakerName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCarName3", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInCarName3
		{
			get
			{
				return this._TradeInCarName3;
			}
			set
			{
				if ((this._TradeInCarName3 != value))
				{
					this.OnTradeInCarName3Changing(value);
					this.SendPropertyChanging();
					this._TradeInCarName3 = value;
					this.SendPropertyChanged("TradeInCarName3");
					this.OnTradeInCarName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInClassificationTypeNumber3", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInClassificationTypeNumber3
		{
			get
			{
				return this._TradeInClassificationTypeNumber3;
			}
			set
			{
				if ((this._TradeInClassificationTypeNumber3 != value))
				{
					this.OnTradeInClassificationTypeNumber3Changing(value);
					this.SendPropertyChanging();
					this._TradeInClassificationTypeNumber3 = value;
					this.SendPropertyChanged("TradeInClassificationTypeNumber3");
					this.OnTradeInClassificationTypeNumber3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInModelSpecificateNumber3", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInModelSpecificateNumber3
		{
			get
			{
				return this._TradeInModelSpecificateNumber3;
			}
			set
			{
				if ((this._TradeInModelSpecificateNumber3 != value))
				{
					this.OnTradeInModelSpecificateNumber3Changing(value);
					this.SendPropertyChanging();
					this._TradeInModelSpecificateNumber3 = value;
					this.SendPropertyChanged("TradeInModelSpecificateNumber3");
					this.OnTradeInModelSpecificateNumber3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInManufacturingYear3", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInManufacturingYear3
		{
			get
			{
				return this._TradeInManufacturingYear3;
			}
			set
			{
				if ((this._TradeInManufacturingYear3 != value))
				{
					this.OnTradeInManufacturingYear3Changing(value);
					this.SendPropertyChanging();
					this._TradeInManufacturingYear3 = value;
					this.SendPropertyChanged("TradeInManufacturingYear3");
					this.OnTradeInManufacturingYear3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInInspectionExpriredDate3", DbType="DateTime")]
		public System.Nullable<System.DateTime> TradeInInspectionExpiredDate3
		{
			get
			{
				return this._TradeInInspectionExpriredDate3;
			}
			set
			{
				if ((this._TradeInInspectionExpriredDate3 != value))
				{
					this.OnTradeInInspectionExpiredDate3Changing(value);
					this.SendPropertyChanging();
					this._TradeInInspectionExpriredDate3 = value;
					this.SendPropertyChanged("TradeInInspectionExpiredDate3");
					this.OnTradeInInspectionExpiredDate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileage3", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TradeInMileage3
		{
			get
			{
				return this._TradeInMileage3;
			}
			set
			{
				if ((this._TradeInMileage3 != value))
				{
					this.OnTradeInMileage3Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileage3 = value;
					this.SendPropertyChanged("TradeInMileage3");
					this.OnTradeInMileage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMileageUnit3", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInMileageUnit3
		{
			get
			{
				return this._TradeInMileageUnit3;
			}
			set
			{
				if ((this._TradeInMileageUnit3 != value))
				{
					if (this._c_MileageUnitTradeIn3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInMileageUnit3Changing(value);
					this.SendPropertyChanging();
					this._TradeInMileageUnit3 = value;
					this.SendPropertyChanged("TradeInMileageUnit3");
					this.OnTradeInMileageUnit3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin3", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin3
		{
			get
			{
				return this._TradeInVin3;
			}
			set
			{
				if ((this._TradeInVin3 != value))
				{
					this.OnTradeInVin3Changing(value);
					this.SendPropertyChanging();
					this._TradeInVin3 = value;
					this.SendPropertyChanged("TradeInVin3");
					this.OnTradeInVin3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCodeA", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanCodeA
		{
			get
			{
				return this._CustomerClaimCodeA;
			}
			set
			{
				if ((this._CustomerClaimCodeA != value))
				{
					if (this._LoanA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanCodeAChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCodeA = value;
					this.SendPropertyChanged("LoanCodeA");
					this.OnLoanCodeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFrequencyA", DbType="Int")]
		public System.Nullable<int> PaymentFrequencyA
		{
			get
			{
				return this._PaymentFrequencyA;
			}
			set
			{
				if ((this._PaymentFrequencyA != value))
				{
					this.OnPaymentFrequencyAChanging(value);
					this.SendPropertyChanging();
					this._PaymentFrequencyA = value;
					this.SendPropertyChanged("PaymentFrequencyA");
					this.OnPaymentFrequencyAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermFromA", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermFromA
		{
			get
			{
				return this._PaymentTermFromA;
			}
			set
			{
				if ((this._PaymentTermFromA != value))
				{
					this.OnPaymentTermFromAChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermFromA = value;
					this.SendPropertyChanged("PaymentTermFromA");
					this.OnPaymentTermFromAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermToA", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermToA
		{
			get
			{
				return this._PaymentTermToA;
			}
			set
			{
				if ((this._PaymentTermToA != value))
				{
					this.OnPaymentTermToAChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermToA = value;
					this.SendPropertyChanged("PaymentTermToA");
					this.OnPaymentTermToAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthA1", DbType="Int")]
		public System.Nullable<int> BonusMonthA1
		{
			get
			{
				return this._BonusMonthA1;
			}
			set
			{
				if ((this._BonusMonthA1 != value))
				{
					this.OnBonusMonthA1Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthA1 = value;
					this.SendPropertyChanged("BonusMonthA1");
					this.OnBonusMonthA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthA2", DbType="Int")]
		public System.Nullable<int> BonusMonthA2
		{
			get
			{
				return this._BonusMonthA2;
			}
			set
			{
				if ((this._BonusMonthA2 != value))
				{
					this.OnBonusMonthA2Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthA2 = value;
					this.SendPropertyChanged("BonusMonthA2");
					this.OnBonusMonthA2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirstAmountA
		{
			get
			{
				return this._FirstAmountA;
			}
			set
			{
				if ((this._FirstAmountA != value))
				{
					this.OnFirstAmountAChanging(value);
					this.SendPropertyChanging();
					this._FirstAmountA = value;
					this.SendPropertyChanged("FirstAmountA");
					this.OnFirstAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SecondAmountA
		{
			get
			{
				return this._SecondAmountA;
			}
			set
			{
				if ((this._SecondAmountA != value))
				{
					this.OnSecondAmountAChanging(value);
					this.SendPropertyChanging();
					this._SecondAmountA = value;
					this.SendPropertyChanged("SecondAmountA");
					this.OnSecondAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BonusAmountA
		{
			get
			{
				return this._BonusAmountA;
			}
			set
			{
				if ((this._BonusAmountA != value))
				{
					this.OnBonusAmountAChanging(value);
					this.SendPropertyChanging();
					this._BonusAmountA = value;
					this.SendPropertyChanged("BonusAmountA");
					this.OnBonusAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CashAmountA
		{
			get
			{
				return this._CashAmountA;
			}
			set
			{
				if ((this._CashAmountA != value))
				{
					this.OnCashAmountAChanging(value);
					this.SendPropertyChanging();
					this._CashAmountA = value;
					this.SendPropertyChanged("CashAmountA");
					this.OnCashAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPrincipalA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanPrincipalA
		{
			get
			{
				return this._LoanPrincipalA;
			}
			set
			{
				if ((this._LoanPrincipalA != value))
				{
					this.OnLoanPrincipalAChanging(value);
					this.SendPropertyChanging();
					this._LoanPrincipalA = value;
					this.SendPropertyChanged("LoanPrincipalA");
					this.OnLoanPrincipalAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFeeA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanFeeA
		{
			get
			{
				return this._LoanFeeA;
			}
			set
			{
				if ((this._LoanFeeA != value))
				{
					this.OnLoanFeeAChanging(value);
					this.SendPropertyChanging();
					this._LoanFeeA = value;
					this.SendPropertyChanged("LoanFeeA");
					this.OnLoanFeeAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTotalAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanTotalAmountA
		{
			get
			{
				return this._LoanTotalAmountA;
			}
			set
			{
				if ((this._LoanTotalAmountA != value))
				{
					this.OnLoanTotalAmountAChanging(value);
					this.SendPropertyChanging();
					this._LoanTotalAmountA = value;
					this.SendPropertyChanged("LoanTotalAmountA");
					this.OnLoanTotalAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCodeB", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanCodeB
		{
			get
			{
				return this._CustomerClaimCodeB;
			}
			set
			{
				if ((this._CustomerClaimCodeB != value))
				{
					if (this._LoanB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanCodeBChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCodeB = value;
					this.SendPropertyChanged("LoanCodeB");
					this.OnLoanCodeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFrequencyB", DbType="Int")]
		public System.Nullable<int> PaymentFrequencyB
		{
			get
			{
				return this._PaymentFrequencyB;
			}
			set
			{
				if ((this._PaymentFrequencyB != value))
				{
					this.OnPaymentFrequencyBChanging(value);
					this.SendPropertyChanging();
					this._PaymentFrequencyB = value;
					this.SendPropertyChanged("PaymentFrequencyB");
					this.OnPaymentFrequencyBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermFromB", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermFromB
		{
			get
			{
				return this._PaymentTermFromB;
			}
			set
			{
				if ((this._PaymentTermFromB != value))
				{
					this.OnPaymentTermFromBChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermFromB = value;
					this.SendPropertyChanged("PaymentTermFromB");
					this.OnPaymentTermFromBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermToB", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermToB
		{
			get
			{
				return this._PaymentTermToB;
			}
			set
			{
				if ((this._PaymentTermToB != value))
				{
					this.OnPaymentTermToBChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermToB = value;
					this.SendPropertyChanged("PaymentTermToB");
					this.OnPaymentTermToBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthB1", DbType="Int")]
		public System.Nullable<int> BonusMonthB1
		{
			get
			{
				return this._BonusMonthB1;
			}
			set
			{
				if ((this._BonusMonthB1 != value))
				{
					this.OnBonusMonthB1Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthB1 = value;
					this.SendPropertyChanged("BonusMonthB1");
					this.OnBonusMonthB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthB2", DbType="Int")]
		public System.Nullable<int> BonusMonthB2
		{
			get
			{
				return this._BonusMonthB2;
			}
			set
			{
				if ((this._BonusMonthB2 != value))
				{
					this.OnBonusMonthB2Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthB2 = value;
					this.SendPropertyChanged("BonusMonthB2");
					this.OnBonusMonthB2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirstAmountB
		{
			get
			{
				return this._FirstAmountB;
			}
			set
			{
				if ((this._FirstAmountB != value))
				{
					this.OnFirstAmountBChanging(value);
					this.SendPropertyChanging();
					this._FirstAmountB = value;
					this.SendPropertyChanged("FirstAmountB");
					this.OnFirstAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SecondAmountB
		{
			get
			{
				return this._SecondAmountB;
			}
			set
			{
				if ((this._SecondAmountB != value))
				{
					this.OnSecondAmountBChanging(value);
					this.SendPropertyChanging();
					this._SecondAmountB = value;
					this.SendPropertyChanged("SecondAmountB");
					this.OnSecondAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BonusAmountB
		{
			get
			{
				return this._BonusAmountB;
			}
			set
			{
				if ((this._BonusAmountB != value))
				{
					this.OnBonusAmountBChanging(value);
					this.SendPropertyChanging();
					this._BonusAmountB = value;
					this.SendPropertyChanged("BonusAmountB");
					this.OnBonusAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CashAmountB
		{
			get
			{
				return this._CashAmountB;
			}
			set
			{
				if ((this._CashAmountB != value))
				{
					this.OnCashAmountBChanging(value);
					this.SendPropertyChanging();
					this._CashAmountB = value;
					this.SendPropertyChanged("CashAmountB");
					this.OnCashAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPrincipalB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanPrincipalB
		{
			get
			{
				return this._LoanPrincipalB;
			}
			set
			{
				if ((this._LoanPrincipalB != value))
				{
					this.OnLoanPrincipalBChanging(value);
					this.SendPropertyChanging();
					this._LoanPrincipalB = value;
					this.SendPropertyChanged("LoanPrincipalB");
					this.OnLoanPrincipalBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFeeB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanFeeB
		{
			get
			{
				return this._LoanFeeB;
			}
			set
			{
				if ((this._LoanFeeB != value))
				{
					this.OnLoanFeeBChanging(value);
					this.SendPropertyChanging();
					this._LoanFeeB = value;
					this.SendPropertyChanged("LoanFeeB");
					this.OnLoanFeeBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTotalAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanTotalAmountB
		{
			get
			{
				return this._LoanTotalAmountB;
			}
			set
			{
				if ((this._LoanTotalAmountB != value))
				{
					this.OnLoanTotalAmountBChanging(value);
					this.SendPropertyChanging();
					this._LoanTotalAmountB = value;
					this.SendPropertyChanged("LoanTotalAmountB");
					this.OnLoanTotalAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCodeC", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanCodeC
		{
			get
			{
				return this._CustomerClaimCodeC;
			}
			set
			{
				if ((this._CustomerClaimCodeC != value))
				{
					if (this._LoanC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanCodeCChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCodeC = value;
					this.SendPropertyChanged("LoanCodeC");
					this.OnLoanCodeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentFrequencyC", DbType="Int")]
		public System.Nullable<int> PaymentFrequencyC
		{
			get
			{
				return this._PaymentFrequencyC;
			}
			set
			{
				if ((this._PaymentFrequencyC != value))
				{
					this.OnPaymentFrequencyCChanging(value);
					this.SendPropertyChanging();
					this._PaymentFrequencyC = value;
					this.SendPropertyChanged("PaymentFrequencyC");
					this.OnPaymentFrequencyCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermFromC", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermFromC
		{
			get
			{
				return this._PaymentTermFromC;
			}
			set
			{
				if ((this._PaymentTermFromC != value))
				{
					this.OnPaymentTermFromCChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermFromC = value;
					this.SendPropertyChanged("PaymentTermFromC");
					this.OnPaymentTermFromCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermToC", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentTermToC
		{
			get
			{
				return this._PaymentTermToC;
			}
			set
			{
				if ((this._PaymentTermToC != value))
				{
					this.OnPaymentTermToCChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermToC = value;
					this.SendPropertyChanged("PaymentTermToC");
					this.OnPaymentTermToCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthC1", DbType="Int")]
		public System.Nullable<int> BonusMonthC1
		{
			get
			{
				return this._BonusMonthC1;
			}
			set
			{
				if ((this._BonusMonthC1 != value))
				{
					this.OnBonusMonthC1Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthC1 = value;
					this.SendPropertyChanged("BonusMonthC1");
					this.OnBonusMonthC1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusMonthC2", DbType="Int")]
		public System.Nullable<int> BonusMonthC2
		{
			get
			{
				return this._BonusMonthC2;
			}
			set
			{
				if ((this._BonusMonthC2 != value))
				{
					this.OnBonusMonthC2Changing(value);
					this.SendPropertyChanging();
					this._BonusMonthC2 = value;
					this.SendPropertyChanged("BonusMonthC2");
					this.OnBonusMonthC2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirstAmountC
		{
			get
			{
				return this._FirstAmountC;
			}
			set
			{
				if ((this._FirstAmountC != value))
				{
					this.OnFirstAmountCChanging(value);
					this.SendPropertyChanging();
					this._FirstAmountC = value;
					this.SendPropertyChanged("FirstAmountC");
					this.OnFirstAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SecondAmountC
		{
			get
			{
				return this._SecondAmountC;
			}
			set
			{
				if ((this._SecondAmountC != value))
				{
					this.OnSecondAmountCChanging(value);
					this.SendPropertyChanging();
					this._SecondAmountC = value;
					this.SendPropertyChanged("SecondAmountC");
					this.OnSecondAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BonusAmountC
		{
			get
			{
				return this._BonusAmountC;
			}
			set
			{
				if ((this._BonusAmountC != value))
				{
					this.OnBonusAmountCChanging(value);
					this.SendPropertyChanging();
					this._BonusAmountC = value;
					this.SendPropertyChanged("BonusAmountC");
					this.OnBonusAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CashAmountC
		{
			get
			{
				return this._CashAmountC;
			}
			set
			{
				if ((this._CashAmountC != value))
				{
					this.OnCashAmountCChanging(value);
					this.SendPropertyChanging();
					this._CashAmountC = value;
					this.SendPropertyChanged("CashAmountC");
					this.OnCashAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPrincipalC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanPrincipalC
		{
			get
			{
				return this._LoanPrincipalC;
			}
			set
			{
				if ((this._LoanPrincipalC != value))
				{
					this.OnLoanPrincipalCChanging(value);
					this.SendPropertyChanging();
					this._LoanPrincipalC = value;
					this.SendPropertyChanged("LoanPrincipalC");
					this.OnLoanPrincipalCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFeeC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanFeeC
		{
			get
			{
				return this._LoanFeeC;
			}
			set
			{
				if ((this._LoanFeeC != value))
				{
					this.OnLoanFeeCChanging(value);
					this.SendPropertyChanging();
					this._LoanFeeC = value;
					this.SendPropertyChanged("LoanFeeC");
					this.OnLoanFeeCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTotalAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanTotalAmountC
		{
			get
			{
				return this._LoanTotalAmountC;
			}
			set
			{
				if ((this._LoanTotalAmountC != value))
				{
					this.OnLoanTotalAmountCChanging(value);
					this.SendPropertyChanging();
					this._LoanTotalAmountC = value;
					this.SendPropertyChanged("LoanTotalAmountC");
					this.OnLoanTotalAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode1", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode1
		{
			get
			{
				return this._CampaignCode1;
			}
			set
			{
				if ((this._CampaignCode1 != value))
				{
					this.OnCampaignCode1Changing(value);
					this.SendPropertyChanging();
					this._CampaignCode1 = value;
					this.SendPropertyChanged("CampaignCode1");
					this.OnCampaignCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode2
		{
			get
			{
				return this._CampaignCode2;
			}
			set
			{
				if ((this._CampaignCode2 != value))
				{
					this.OnCampaignCode2Changing(value);
					this.SendPropertyChanging();
					this._CampaignCode2 = value;
					this.SendPropertyChanged("CampaignCode2");
					this.OnCampaignCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this.OnSalesOrderDateChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderDate = value;
					this.SendPropertyChanged("SalesOrderDate");
					this.OnSalesOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationNumberA", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AuthorizationNumberA
		{
			get
			{
				return this._AuthorizationNumberA;
			}
			set
			{
				if ((this._AuthorizationNumberA != value))
				{
					this.OnAuthorizationNumberAChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationNumberA = value;
					this.SendPropertyChanged("AuthorizationNumberA");
					this.OnAuthorizationNumberAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationNumberB", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AuthorizationNumberB
		{
			get
			{
				return this._AuthorizationNumberB;
			}
			set
			{
				if ((this._AuthorizationNumberB != value))
				{
					this.OnAuthorizationNumberBChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationNumberB = value;
					this.SendPropertyChanged("AuthorizationNumberB");
					this.OnAuthorizationNumberBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationNumberC", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AuthorizationNumberC
		{
			get
			{
				return this._AuthorizationNumberC;
			}
			set
			{
				if ((this._AuthorizationNumberC != value))
				{
					this.OnAuthorizationNumberCChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationNumberC = value;
					this.SendPropertyChanged("AuthorizationNumberC");
					this.OnAuthorizationNumberCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this.OnCarBrandNameChanging(value);
					this.SendPropertyChanging();
					this._CarBrandName = value;
					this.SendPropertyChanged("CarBrandName");
					this.OnCarBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxationAmount
		{
			get
			{
				return this._TaxationAmount;
			}
			set
			{
				if ((this._TaxationAmount != value))
				{
					this.OnTaxationAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxationAmount = value;
					this.SendPropertyChanged("TaxationAmount");
					this.OnTaxationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDirectDebitDateA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstDirectDebitDateA
		{
			get
			{
				return this._FirstDirectDebitDateA;
			}
			set
			{
				if ((this._FirstDirectDebitDateA != value))
				{
					this.OnFirstDirectDebitDateAChanging(value);
					this.SendPropertyChanging();
					this._FirstDirectDebitDateA = value;
					this.SendPropertyChanged("FirstDirectDebitDateA");
					this.OnFirstDirectDebitDateAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondDirectDebitDateA", DbType="Int")]
		public System.Nullable<int> SecondDirectDebitDateA
		{
			get
			{
				return this._SecondDirectDebitDateA;
			}
			set
			{
				if ((this._SecondDirectDebitDateA != value))
				{
					this.OnSecondDirectDebitDateAChanging(value);
					this.SendPropertyChanging();
					this._SecondDirectDebitDateA = value;
					this.SendPropertyChanged("SecondDirectDebitDateA");
					this.OnSecondDirectDebitDateAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDirectDebitDateB", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstDirectDebitDateB
		{
			get
			{
				return this._FirstDirectDebitDateB;
			}
			set
			{
				if ((this._FirstDirectDebitDateB != value))
				{
					this.OnFirstDirectDebitDateBChanging(value);
					this.SendPropertyChanging();
					this._FirstDirectDebitDateB = value;
					this.SendPropertyChanged("FirstDirectDebitDateB");
					this.OnFirstDirectDebitDateBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondDirectDebitDateB", DbType="Int")]
		public System.Nullable<int> SecondDirectDebitDateB
		{
			get
			{
				return this._SecondDirectDebitDateB;
			}
			set
			{
				if ((this._SecondDirectDebitDateB != value))
				{
					this.OnSecondDirectDebitDateBChanging(value);
					this.SendPropertyChanging();
					this._SecondDirectDebitDateB = value;
					this.SendPropertyChanged("SecondDirectDebitDateB");
					this.OnSecondDirectDebitDateBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDirectDebitDateC", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstDirectDebitDateC
		{
			get
			{
				return this._FirstDirectDebitDateC;
			}
			set
			{
				if ((this._FirstDirectDebitDateC != value))
				{
					this.OnFirstDirectDebitDateCChanging(value);
					this.SendPropertyChanging();
					this._FirstDirectDebitDateC = value;
					this.SendPropertyChanged("FirstDirectDebitDateC");
					this.OnFirstDirectDebitDateCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondDirectDebitDateC", DbType="Int")]
		public System.Nullable<int> SecondDirectDebitDateC
		{
			get
			{
				return this._SecondDirectDebitDateC;
			}
			set
			{
				if ((this._SecondDirectDebitDateC != value))
				{
					this.OnSecondDirectDebitDateCChanging(value);
					this.SendPropertyChanging();
					this._SecondDirectDebitDateC = value;
					this.SendPropertyChanged("SecondDirectDebitDateC");
					this.OnSecondDirectDebitDateCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ShopOptionAmount
		{
			get
			{
				return this._ShopOptionAmount;
			}
			set
			{
				if ((this._ShopOptionAmount != value))
				{
					this.OnShopOptionAmountChanging(value);
					this.SendPropertyChanging();
					this._ShopOptionAmount = value;
					this.SendPropertyChanged("ShopOptionAmount");
					this.OnShopOptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MakerOptionAmount
		{
			get
			{
				return this._MakerOptionAmount;
			}
			set
			{
				if ((this._MakerOptionAmount != value))
				{
					this.OnMakerOptionAmountChanging(value);
					this.SendPropertyChanging();
					this._MakerOptionAmount = value;
					this.SendPropertyChanged("MakerOptionAmount");
					this.OnMakerOptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutSourceAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OutSourceAmount
		{
			get
			{
				return this._OutSourceAmount;
			}
			set
			{
				if ((this._OutSourceAmount != value))
				{
					this.OnOutSourceAmountChanging(value);
					this.SendPropertyChanging();
					this._OutSourceAmount = value;
					this.SendPropertyChanged("OutSourceAmount");
					this.OnOutSourceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SubTotalAmount
		{
			get
			{
				return this._SubTotalAmount;
			}
			set
			{
				if ((this._SubTotalAmount != value))
				{
					this.OnSubTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._SubTotalAmount = value;
					this.SendPropertyChanged("SubTotalAmount");
					this.OnSubTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxFreeTotalAmount
		{
			get
			{
				return this._TaxFreeTotalAmount;
			}
			set
			{
				if ((this._TaxFreeTotalAmount != value))
				{
					this.OnTaxFreeTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxFreeTotalAmount = value;
					this.SendPropertyChanged("TaxFreeTotalAmount");
					this.OnTaxFreeTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesCostTotalAmount
		{
			get
			{
				return this._SalesCostTotalAmount;
			}
			set
			{
				if ((this._SalesCostTotalAmount != value))
				{
					this.OnSalesCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesCostTotalAmount = value;
					this.SendPropertyChanged("SalesCostTotalAmount");
					this.OnSalesCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CostTotalAmount
		{
			get
			{
				return this._CostTotalAmount;
			}
			set
			{
				if ((this._CostTotalAmount != value))
				{
					this.OnCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._CostTotalAmount = value;
					this.SendPropertyChanged("CostTotalAmount");
					this.OnCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this.OnTotalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxAmount = value;
					this.SendPropertyChanged("TotalTaxAmount");
					this.OnTotalTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this.OnGrandTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._GrandTotalAmount = value;
					this.SendPropertyChanged("GrandTotalAmount");
					this.OnGrandTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ShopOptionTaxAmount
		{
			get
			{
				return this._ShopOptionTaxAmount;
			}
			set
			{
				if ((this._ShopOptionTaxAmount != value))
				{
					this.OnShopOptionTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._ShopOptionTaxAmount = value;
					this.SendPropertyChanged("ShopOptionTaxAmount");
					this.OnShopOptionTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MakerOptionTaxAmount
		{
			get
			{
				return this._MakerOptionTaxAmount;
			}
			set
			{
				if ((this._MakerOptionTaxAmount != value))
				{
					this.OnMakerOptionTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._MakerOptionTaxAmount = value;
					this.SendPropertyChanged("MakerOptionTaxAmount");
					this.OnMakerOptionTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutSourceTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OutSourceTaxAmount
		{
			get
			{
				return this._OutSourceTaxAmount;
			}
			set
			{
				if ((this._OutSourceTaxAmount != value))
				{
					this.OnOutSourceTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._OutSourceTaxAmount = value;
					this.SendPropertyChanged("OutSourceTaxAmount");
					this.OnOutSourceTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesCostTotalTaxAmount
		{
			get
			{
				return this._SalesCostTotalTaxAmount;
			}
			set
			{
				if ((this._SalesCostTotalTaxAmount != value))
				{
					this.OnSalesCostTotalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesCostTotalTaxAmount = value;
					this.SendPropertyChanged("SalesCostTotalTaxAmount");
					this.OnSalesCostTotalTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OtherCostTotalAmount
		{
			get
			{
				return this._OtherCostTotalAmount;
			}
			set
			{
				if ((this._OtherCostTotalAmount != value))
				{
					this.OnOtherCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._OtherCostTotalAmount = value;
					this.SendPropertyChanged("OtherCostTotalAmount");
					this.OnOtherCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTotalAmount
		{
			get
			{
				return this._TradeInTotalAmount;
			}
			set
			{
				if ((this._TradeInTotalAmount != value))
				{
					this.OnTradeInTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInTotalAmount = value;
					this.SendPropertyChanged("TradeInTotalAmount");
					this.OnTradeInTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTaxTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTaxTotalAmount
		{
			get
			{
				return this._TradeInTaxTotalAmount;
			}
			set
			{
				if ((this._TradeInTaxTotalAmount != value))
				{
					this.OnTradeInTaxTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInTaxTotalAmount = value;
					this.SendPropertyChanged("TradeInTaxTotalAmount");
					this.OnTradeInTaxTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTaxTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredCarTaxTotalAmount
		{
			get
			{
				return this._TradeInUnexpiredCarTaxTotalAmount;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTaxTotalAmount != value))
				{
					this.OnTradeInUnexpiredCarTaxTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredCarTaxTotalAmount = value;
					this.SendPropertyChanged("TradeInUnexpiredCarTaxTotalAmount");
					this.OnTradeInUnexpiredCarTaxTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebtTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRemainDebtTotalAmount
		{
			get
			{
				return this._TradeInRemainDebtTotalAmount;
			}
			set
			{
				if ((this._TradeInRemainDebtTotalAmount != value))
				{
					this.OnTradeInRemainDebtTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInRemainDebtTotalAmount = value;
					this.SendPropertyChanged("TradeInRemainDebtTotalAmount");
					this.OnTradeInRemainDebtTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriationTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppropriationTotalAmount
		{
			get
			{
				return this._TradeInAppropriationTotalAmount;
			}
			set
			{
				if ((this._TradeInAppropriationTotalAmount != value))
				{
					this.OnTradeInAppropriationTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInAppropriationTotalAmount = value;
					this.SendPropertyChanged("TradeInAppropriationTotalAmount");
					this.OnTradeInAppropriationTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PaymentTotalAmount
		{
			get
			{
				return this._PaymentTotalAmount;
			}
			set
			{
				if ((this._PaymentTotalAmount != value))
				{
					this.OnPaymentTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentTotalAmount = value;
					this.SendPropertyChanged("PaymentTotalAmount");
					this.OnPaymentTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCashTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PaymentCashTotalAmount
		{
			get
			{
				return this._PaymentCashTotalAmount;
			}
			set
			{
				if ((this._PaymentCashTotalAmount != value))
				{
					this.OnPaymentCashTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentCashTotalAmount = value;
					this.SendPropertyChanged("PaymentCashTotalAmount");
					this.OnPaymentCashTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPrincipalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanPrincipalAmount
		{
			get
			{
				return this._LoanPrincipalAmount;
			}
			set
			{
				if ((this._LoanPrincipalAmount != value))
				{
					this.OnLoanPrincipalAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanPrincipalAmount = value;
					this.SendPropertyChanged("LoanPrincipalAmount");
					this.OnLoanPrincipalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanFeeAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanFeeAmount
		{
			get
			{
				return this._LoanFeeAmount;
			}
			set
			{
				if ((this._LoanFeeAmount != value))
				{
					this.OnLoanFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanFeeAmount = value;
					this.SendPropertyChanged("LoanFeeAmount");
					this.OnLoanFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LoanTotalAmount
		{
			get
			{
				return this._LoanTotalAmount;
			}
			set
			{
				if ((this._LoanTotalAmount != value))
				{
					this.OnLoanTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanTotalAmount = value;
					this.SendPropertyChanged("LoanTotalAmount");
					this.OnLoanTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this.OnExteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorName = value;
					this.SendPropertyChanged("ExteriorColorName");
					this.OnExteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorName
		{
			get
			{
				return this._InteriorColorName;
			}
			set
			{
				if ((this._InteriorColorName != value))
				{
					this.OnInteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorName = value;
					this.SendPropertyChanged("InteriorColorName");
					this.OnInteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberCost
		{
			get
			{
				return this._RequestNumberCost;
			}
			set
			{
				if ((this._RequestNumberCost != value))
				{
					this.OnRequestNumberCostChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberCost = value;
					this.SendPropertyChanged("RequestNumberCost");
					this.OnRequestNumberCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInFiscalStampCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInFiscalStampCost
		{
			get
			{
				return this._TradeInFiscalStampCost;
			}
			set
			{
				if ((this._TradeInFiscalStampCost != value))
				{
					this.OnTradeInFiscalStampCostChanging(value);
					this.SendPropertyChanging();
					this._TradeInFiscalStampCost = value;
					this.SendPropertyChanged("TradeInFiscalStampCost");
					this.OnTradeInFiscalStampCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppraisalFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppraisalFee
		{
			get
			{
				return this._TradeInAppraisalFee;
			}
			set
			{
				if ((this._TradeInAppraisalFee != value))
				{
					this.OnTradeInAppraisalFeeChanging(value);
					this.SendPropertyChanging();
					this._TradeInAppraisalFee = value;
					this.SendPropertyChanged("TradeInAppraisalFee");
					this.OnTradeInAppraisalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarRegistFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FarRegistFee
		{
			get
			{
				return this._FarRegistFee;
			}
			set
			{
				if ((this._FarRegistFee != value))
				{
					this.OnFarRegistFeeChanging(value);
					this.SendPropertyChanging();
					this._FarRegistFee = value;
					this.SendPropertyChanged("FarRegistFee");
					this.OnFarRegistFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMaintenanceFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInMaintenanceFee
		{
			get
			{
				return this._TradeInMaintenanceFee;
			}
			set
			{
				if ((this._TradeInMaintenanceFee != value))
				{
					this.OnTradeInMaintenanceFeeChanging(value);
					this.SendPropertyChanging();
					this._TradeInMaintenanceFee = value;
					this.SendPropertyChanged("TradeInMaintenanceFee");
					this.OnTradeInMaintenanceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritedInsuranceFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InheritedInsuranceFee
		{
			get
			{
				return this._InheritedInsuranceFee;
			}
			set
			{
				if ((this._InheritedInsuranceFee != value))
				{
					this.OnInheritedInsuranceFeeChanging(value);
					this.SendPropertyChanging();
					this._InheritedInsuranceFee = value;
					this.SendPropertyChanged("InheritedInsuranceFee");
					this.OnInheritedInsuranceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRegistrationNumber1", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInRegistrationNumber1
		{
			get
			{
				return this._TradeInRegistrationNumber1;
			}
			set
			{
				if ((this._TradeInRegistrationNumber1 != value))
				{
					this.OnTradeInRegistrationNumber1Changing(value);
					this.SendPropertyChanging();
					this._TradeInRegistrationNumber1 = value;
					this.SendPropertyChanged("TradeInRegistrationNumber1");
					this.OnTradeInRegistrationNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRegistrationNumber2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInRegistrationNumber2
		{
			get
			{
				return this._TradeInRegistrationNumber2;
			}
			set
			{
				if ((this._TradeInRegistrationNumber2 != value))
				{
					this.OnTradeInRegistrationNumber2Changing(value);
					this.SendPropertyChanging();
					this._TradeInRegistrationNumber2 = value;
					this.SendPropertyChanged("TradeInRegistrationNumber2");
					this.OnTradeInRegistrationNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRegistrationNumber3", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInRegistrationNumber3
		{
			get
			{
				return this._TradeInRegistrationNumber3;
			}
			set
			{
				if ((this._TradeInRegistrationNumber3 != value))
				{
					this.OnTradeInRegistrationNumber3Changing(value);
					this.SendPropertyChanging();
					this._TradeInRegistrationNumber3 = value;
					this.SendPropertyChanged("TradeInRegistrationNumber3");
					this.OnTradeInRegistrationNumber3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredLiabilityInsurance1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredLiabilityInsurance1
		{
			get
			{
				return this._TradeInUnexpiredLiabilityInsurance1;
			}
			set
			{
				if ((this._TradeInUnexpiredLiabilityInsurance1 != value))
				{
					this.OnTradeInUnexpiredLiabilityInsurance1Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredLiabilityInsurance1 = value;
					this.SendPropertyChanged("TradeInUnexpiredLiabilityInsurance1");
					this.OnTradeInUnexpiredLiabilityInsurance1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredLiabilityInsurance2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredLiabilityInsurance2
		{
			get
			{
				return this._TradeInUnexpiredLiabilityInsurance2;
			}
			set
			{
				if ((this._TradeInUnexpiredLiabilityInsurance2 != value))
				{
					this.OnTradeInUnexpiredLiabilityInsurance2Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredLiabilityInsurance2 = value;
					this.SendPropertyChanged("TradeInUnexpiredLiabilityInsurance2");
					this.OnTradeInUnexpiredLiabilityInsurance2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredLiabilityInsurance3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredLiabilityInsurance3
		{
			get
			{
				return this._TradeInUnexpiredLiabilityInsurance3;
			}
			set
			{
				if ((this._TradeInUnexpiredLiabilityInsurance3 != value))
				{
					this.OnTradeInUnexpiredLiabilityInsurance3Changing(value);
					this.SendPropertyChanging();
					this._TradeInUnexpiredLiabilityInsurance3 = value;
					this.SendPropertyChanged("TradeInUnexpiredLiabilityInsurance3");
					this.OnTradeInUnexpiredLiabilityInsurance3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainAmountA", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RemainAmountA
		{
			get
			{
				return this._RemainAmountA;
			}
			set
			{
				if ((this._RemainAmountA != value))
				{
					this.OnRemainAmountAChanging(value);
					this.SendPropertyChanging();
					this._RemainAmountA = value;
					this.SendPropertyChanged("RemainAmountA");
					this.OnRemainAmountAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainAmountB", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RemainAmountB
		{
			get
			{
				return this._RemainAmountB;
			}
			set
			{
				if ((this._RemainAmountB != value))
				{
					this.OnRemainAmountBChanging(value);
					this.SendPropertyChanging();
					this._RemainAmountB = value;
					this.SendPropertyChanged("RemainAmountB");
					this.OnRemainAmountBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainAmountC", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RemainAmountC
		{
			get
			{
				return this._RemainAmountC;
			}
			set
			{
				if ((this._RemainAmountC != value))
				{
					this.OnRemainAmountCChanging(value);
					this.SendPropertyChanging();
					this._RemainAmountC = value;
					this.SendPropertyChanged("RemainAmountC");
					this.OnRemainAmountCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainFinalMonthA", DbType="DateTime")]
		public System.Nullable<System.DateTime> RemainFinalMonthA
		{
			get
			{
				return this._RemainFinalMonthA;
			}
			set
			{
				if ((this._RemainFinalMonthA != value))
				{
					this.OnRemainFinalMonthAChanging(value);
					this.SendPropertyChanging();
					this._RemainFinalMonthA = value;
					this.SendPropertyChanged("RemainFinalMonthA");
					this.OnRemainFinalMonthAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainFinalMonthB", DbType="DateTime")]
		public System.Nullable<System.DateTime> RemainFinalMonthB
		{
			get
			{
				return this._RemainFinalMonthB;
			}
			set
			{
				if ((this._RemainFinalMonthB != value))
				{
					this.OnRemainFinalMonthBChanging(value);
					this.SendPropertyChanging();
					this._RemainFinalMonthB = value;
					this.SendPropertyChanged("RemainFinalMonthB");
					this.OnRemainFinalMonthBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainFinalMonthC", DbType="DateTime")]
		public System.Nullable<System.DateTime> RemainFinalMonthC
		{
			get
			{
				return this._RemainFinalMonthC;
			}
			set
			{
				if ((this._RemainFinalMonthC != value))
				{
					this.OnRemainFinalMonthCChanging(value);
					this.SendPropertyChanging();
					this._RemainFinalMonthC = value;
					this.SendPropertyChanged("RemainFinalMonthC");
					this.OnRemainFinalMonthCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanRateA", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> LoanRateA
		{
			get
			{
				return this._LoanRateA;
			}
			set
			{
				if ((this._LoanRateA != value))
				{
					this.OnLoanRateAChanging(value);
					this.SendPropertyChanging();
					this._LoanRateA = value;
					this.SendPropertyChanged("LoanRateA");
					this.OnLoanRateAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanRateB", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> LoanRateB
		{
			get
			{
				return this._LoanRateB;
			}
			set
			{
				if ((this._LoanRateB != value))
				{
					this.OnLoanRateBChanging(value);
					this.SendPropertyChanging();
					this._LoanRateB = value;
					this.SendPropertyChanged("LoanRateB");
					this.OnLoanRateBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanRateC", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> LoanRateC
		{
			get
			{
				return this._LoanRateC;
			}
			set
			{
				if ((this._LoanRateC != value))
				{
					this.OnLoanRateCChanging(value);
					this.SendPropertyChanging();
					this._LoanRateC = value;
					this.SendPropertyChanged("LoanRateC");
					this.OnLoanRateCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistFeeTax
		{
			get
			{
				return this._InspectionRegistFeeTax;
			}
			set
			{
				if ((this._InspectionRegistFeeTax != value))
				{
					this.OnInspectionRegistFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistFeeTax = value;
					this.SendPropertyChanged("InspectionRegistFeeTax");
					this.OnInspectionRegistFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceFeeTax
		{
			get
			{
				return this._ParkingSpaceFeeTax;
			}
			set
			{
				if ((this._ParkingSpaceFeeTax != value))
				{
					this.OnParkingSpaceFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceFeeTax = value;
					this.SendPropertyChanged("ParkingSpaceFeeTax");
					this.OnParkingSpaceFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInFeeTax
		{
			get
			{
				return this._TradeInFeeTax;
			}
			set
			{
				if ((this._TradeInFeeTax != value))
				{
					this.OnTradeInFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._TradeInFeeTax = value;
					this.SendPropertyChanged("TradeInFeeTax");
					this.OnTradeInFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreparationFeeTax
		{
			get
			{
				return this._PreparationFeeTax;
			}
			set
			{
				if ((this._PreparationFeeTax != value))
				{
					this.OnPreparationFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._PreparationFeeTax = value;
					this.SendPropertyChanged("PreparationFeeTax");
					this.OnPreparationFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFeeTax
		{
			get
			{
				return this._RecycleControlFeeTax;
			}
			set
			{
				if ((this._RecycleControlFeeTax != value))
				{
					this.OnRecycleControlFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFeeTax = value;
					this.SendPropertyChanged("RecycleControlFeeTax");
					this.OnRecycleControlFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFeeTradeInTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFeeTradeInTax
		{
			get
			{
				return this._RecycleControlFeeTradeInTax;
			}
			set
			{
				if ((this._RecycleControlFeeTradeInTax != value))
				{
					this.OnRecycleControlFeeTradeInTaxChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFeeTradeInTax = value;
					this.SendPropertyChanged("RecycleControlFeeTradeInTax");
					this.OnRecycleControlFeeTradeInTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberFeeTax
		{
			get
			{
				return this._RequestNumberFeeTax;
			}
			set
			{
				if ((this._RequestNumberFeeTax != value))
				{
					this.OnRequestNumberFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberFeeTax = value;
					this.SendPropertyChanged("RequestNumberFeeTax");
					this.OnRequestNumberFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxUnexpiredAmountTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxUnexpiredAmountTax
		{
			get
			{
				return this._CarTaxUnexpiredAmountTax;
			}
			set
			{
				if ((this._CarTaxUnexpiredAmountTax != value))
				{
					this.OnCarTaxUnexpiredAmountTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTaxUnexpiredAmountTax = value;
					this.SendPropertyChanged("CarTaxUnexpiredAmountTax");
					this.OnCarTaxUnexpiredAmountTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceUnexpiredAmountTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsuranceUnexpiredAmountTax
		{
			get
			{
				return this._CarLiabilityInsuranceUnexpiredAmountTax;
			}
			set
			{
				if ((this._CarLiabilityInsuranceUnexpiredAmountTax != value))
				{
					this.OnCarLiabilityInsuranceUnexpiredAmountTaxChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceUnexpiredAmountTax = value;
					this.SendPropertyChanged("CarLiabilityInsuranceUnexpiredAmountTax");
					this.OnCarLiabilityInsuranceUnexpiredAmountTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppraisalFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppraisalFeeTax
		{
			get
			{
				return this._TradeInAppraisalFeeTax;
			}
			set
			{
				if ((this._TradeInAppraisalFeeTax != value))
				{
					this.OnTradeInAppraisalFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._TradeInAppraisalFeeTax = value;
					this.SendPropertyChanged("TradeInAppraisalFeeTax");
					this.OnTradeInAppraisalFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarRegistFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FarRegistFeeTax
		{
			get
			{
				return this._FarRegistFeeTax;
			}
			set
			{
				if ((this._FarRegistFeeTax != value))
				{
					this.OnFarRegistFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._FarRegistFeeTax = value;
					this.SendPropertyChanged("FarRegistFeeTax");
					this.OnFarRegistFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMaintenanceFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInMaintenanceFeeTax
		{
			get
			{
				return this._TradeInMaintenanceFeeTax;
			}
			set
			{
				if ((this._TradeInMaintenanceFeeTax != value))
				{
					this.OnTradeInMaintenanceFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._TradeInMaintenanceFeeTax = value;
					this.SendPropertyChanged("TradeInMaintenanceFeeTax");
					this.OnTradeInMaintenanceFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritedInsuranceFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InheritedInsuranceFeeTax
		{
			get
			{
				return this._InheritedInsuranceFeeTax;
			}
			set
			{
				if ((this._InheritedInsuranceFeeTax != value))
				{
					this.OnInheritedInsuranceFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._InheritedInsuranceFeeTax = value;
					this.SendPropertyChanged("InheritedInsuranceFeeTax");
					this.OnInheritedInsuranceFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationFieldValueTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxationFieldValueTax
		{
			get
			{
				return this._TaxationFieldValueTax;
			}
			set
			{
				if ((this._TaxationFieldValueTax != value))
				{
					this.OnTaxationFieldValueTaxChanging(value);
					this.SendPropertyChanging();
					this._TaxationFieldValueTax = value;
					this.SendPropertyChanged("TaxationFieldValueTax");
					this.OnTaxationFieldValueTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInEraseRegist1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInEraseRegist1
		{
			get
			{
				return this._TradeInEraseRegist1;
			}
			set
			{
				if ((this._TradeInEraseRegist1 != value))
				{
					if (this._c_EraseRegist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInEraseRegist1Changing(value);
					this.SendPropertyChanging();
					this._TradeInEraseRegist1 = value;
					this.SendPropertyChanged("TradeInEraseRegist1");
					this.OnTradeInEraseRegist1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInEraseRegist2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInEraseRegist2
		{
			get
			{
				return this._TradeInEraseRegist2;
			}
			set
			{
				if ((this._TradeInEraseRegist2 != value))
				{
					if (this._c_EraseRegist1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInEraseRegist2Changing(value);
					this.SendPropertyChanging();
					this._TradeInEraseRegist2 = value;
					this.SendPropertyChanged("TradeInEraseRegist2");
					this.OnTradeInEraseRegist2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInEraseRegist3", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInEraseRegist3
		{
			get
			{
				return this._TradeInEraseRegist3;
			}
			set
			{
				if ((this._TradeInEraseRegist3 != value))
				{
					if (this._c_EraseRegist2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTradeInEraseRegist3Changing(value);
					this.SendPropertyChanging();
					this._TradeInEraseRegist3 = value;
					this.SendPropertyChanged("TradeInEraseRegist3");
					this.OnTradeInEraseRegist3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesTax
		{
			get
			{
				return this._SalesTax;
			}
			set
			{
				if ((this._SalesTax != value))
				{
					this.OnSalesTaxChanging(value);
					this.SendPropertyChanging();
					this._SalesTax = value;
					this.SendPropertyChanged("SalesTax");
					this.OnSalesTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountTax
		{
			get
			{
				return this._DiscountTax;
			}
			set
			{
				if ((this._DiscountTax != value))
				{
					this.OnDiscountTaxChanging(value);
					this.SendPropertyChanging();
					this._DiscountTax = value;
					this.SendPropertyChanged("DiscountTax");
					this.OnDiscountTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInPrice1", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInPrice1
		{
			get
			{
				return this._TradeInPrice1;
			}
			set
			{
				if ((this._TradeInPrice1 != value))
				{
					this.OnTradeInPrice1Changing(value);
					this.SendPropertyChanging();
					this._TradeInPrice1 = value;
					this.SendPropertyChanged("TradeInPrice1");
					this.OnTradeInPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInPrice2", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInPrice2
		{
			get
			{
				return this._TradeInPrice2;
			}
			set
			{
				if ((this._TradeInPrice2 != value))
				{
					this.OnTradeInPrice2Changing(value);
					this.SendPropertyChanging();
					this._TradeInPrice2 = value;
					this.SendPropertyChanged("TradeInPrice2");
					this.OnTradeInPrice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInPrice3", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInPrice3
		{
			get
			{
				return this._TradeInPrice3;
			}
			set
			{
				if ((this._TradeInPrice3 != value))
				{
					this.OnTradeInPrice3Changing(value);
					this.SendPropertyChanging();
					this._TradeInPrice3 = value;
					this.SendPropertyChanged("TradeInPrice3");
					this.OnTradeInPrice3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRecycleTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRecycleTotalAmount
		{
			get
			{
				return this._TradeInRecycleTotalAmount;
			}
			set
			{
				if ((this._TradeInRecycleTotalAmount != value))
				{
					this.OnTradeInRecycleTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TradeInRecycleTotalAmount = value;
					this.SendPropertyChanged("TradeInRecycleTotalAmount");
					this.OnTradeInRecycleTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueStampCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RevenueStampCost
		{
			get
			{
				return this._RevenueStampCost;
			}
			set
			{
				if ((this._RevenueStampCost != value))
				{
					this.OnRevenueStampCostChanging(value);
					this.SendPropertyChanging();
					this._RevenueStampCost = value;
					this.SendPropertyChanged("RevenueStampCost");
					this.OnRevenueStampCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCarTaxDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInCarTaxDeposit
		{
			get
			{
				return this._TradeInCarTaxDeposit;
			}
			set
			{
				if ((this._TradeInCarTaxDeposit != value))
				{
					this.OnTradeInCarTaxDepositChanging(value);
					this.SendPropertyChanging();
					this._TradeInCarTaxDeposit = value;
					this.SendPropertyChanged("TradeInCarTaxDeposit");
					this.OnTradeInCarTaxDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditScreen", DbType="NVarChar(3)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastEditScreen
		{
			get
			{
				return this._LastEditScreen;
			}
			set
			{
				if ((this._LastEditScreen != value))
				{
					this.OnLastEditScreenChanging(value);
					this.SendPropertyChanging();
					this._LastEditScreen = value;
					this.SendPropertyChanged("LastEditScreen");
					this.OnLastEditScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentSecondFrequencyA", DbType="Int")]
		public System.Nullable<int> PaymentSecondFrequencyA
		{
			get
			{
				return this._PaymentSecondFrequencyA;
			}
			set
			{
				if ((this._PaymentSecondFrequencyA != value))
				{
					this.OnPaymentSecondFrequencyAChanging(value);
					this.SendPropertyChanging();
					this._PaymentSecondFrequencyA = value;
					this.SendPropertyChanged("PaymentSecondFrequencyA");
					this.OnPaymentSecondFrequencyAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentSecondFrequencyB", DbType="Int")]
		public System.Nullable<int> PaymentSecondFrequencyB
		{
			get
			{
				return this._PaymentSecondFrequencyB;
			}
			set
			{
				if ((this._PaymentSecondFrequencyB != value))
				{
					this.OnPaymentSecondFrequencyBChanging(value);
					this.SendPropertyChanging();
					this._PaymentSecondFrequencyB = value;
					this.SendPropertyChanged("PaymentSecondFrequencyB");
					this.OnPaymentSecondFrequencyBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentSecondFrequencyC", DbType="Int")]
		public System.Nullable<int> PaymentSecondFrequencyC
		{
			get
			{
				return this._PaymentSecondFrequencyC;
			}
			set
			{
				if ((this._PaymentSecondFrequencyC != value))
				{
					this.OnPaymentSecondFrequencyCChanging(value);
					this.SendPropertyChanging();
					this._PaymentSecondFrequencyC = value;
					this.SendPropertyChanged("PaymentSecondFrequencyC");
					this.OnPaymentSecondFrequencyCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessSessionId", DbType="uniqueidentifier")]
		public System.Nullable<System.Guid> ProcessSessionId
		{
			get
			{
				return this._ProcessSessionId;
			}
			set
			{
				if ((this._ProcessSessionId != value))
				{
					if (this._ProcessSessionControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessSessionIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessSessionId = value;
					this.SendPropertyChanged("ProcessSessionId");
					this.OnProcessSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPDiscountTaxId", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EPDiscountTaxId
		{
			get
			{
				return this._EPDiscountTaxId;
			}
			set
			{
				if ((this._EPDiscountTaxId != value))
				{
					this.OnEPDiscountTaxIdChanging(value);
					this.SendPropertyChanging();
					this._EPDiscountTaxId = value;
					this.SendPropertyChanged("EPDiscountTaxId");
					this.OnEPDiscountTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAreaCode", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CostAreaCode
		{
			get
			{
				return this._CostAreaCode;
			}
			set
			{
				if ((this._CostAreaCode != value))
				{
					if (this._CostArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._CostAreaCode = value;
					this.SendPropertyChanged("CostAreaCode");
					this.OnCostAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenancePackageAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> MaintenancePackageAmount
		{
			get
			{
				return this._MaintenancePackageAmount;
			}
			set
			{
				if ((this._MaintenancePackageAmount != value))
				{
					this.OnMaintenancePackageAmountChanging(value);
					this.SendPropertyChanging();
					this._MaintenancePackageAmount = value;
					this.SendPropertyChanged("MaintenancePackageAmount");
					this.OnMaintenancePackageAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenancePackageTaxAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> MaintenancePackageTaxAmount
		{
			get
			{
				return this._MaintenancePackageTaxAmount;
			}
			set
			{
				if ((this._MaintenancePackageTaxAmount != value))
				{
					this.OnMaintenancePackageTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._MaintenancePackageTaxAmount = value;
					this.SendPropertyChanged("MaintenancePackageTaxAmount");
					this.OnMaintenancePackageTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedWarrantyAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> ExtendedWarrantyAmount
		{
			get
			{
				return this._ExtendedWarrantyAmount;
			}
			set
			{
				if ((this._ExtendedWarrantyAmount != value))
				{
					this.OnExtendedWarrantyAmountChanging(value);
					this.SendPropertyChanging();
					this._ExtendedWarrantyAmount = value;
					this.SendPropertyChanged("ExtendedWarrantyAmount");
					this.OnExtendedWarrantyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedWarrantyTaxAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> ExtendedWarrantyTaxAmount
		{
			get
			{
				return this._ExtendedWarrantyTaxAmount;
			}
			set
			{
				if ((this._ExtendedWarrantyTaxAmount != value))
				{
					this.OnExtendedWarrantyTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._ExtendedWarrantyTaxAmount = value;
					this.SendPropertyChanged("ExtendedWarrantyTaxAmount");
					this.OnExtendedWarrantyTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TradeInHolderName1 ", Storage="_TradeInHolderName1", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInHolderName1
		{
			get
			{
				return this._TradeInHolderName1;
			}
			set
			{
				if ((this._TradeInHolderName1 != value))
				{
					this.OnTradeInHolderName1Changing(value);
					this.SendPropertyChanging();
					this._TradeInHolderName1 = value;
					this.SendPropertyChanged("TradeInHolderName1");
					this.OnTradeInHolderName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInHolderName2", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInHolderName2
		{
			get
			{
				return this._TradeInHolderName2;
			}
			set
			{
				if ((this._TradeInHolderName2 != value))
				{
					this.OnTradeInHolderName2Changing(value);
					this.SendPropertyChanging();
					this._TradeInHolderName2 = value;
					this.SendPropertyChanged("TradeInHolderName2");
					this.OnTradeInHolderName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInHolderName3", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInHolderName3
		{
			get
			{
				return this._TradeInHolderName3.Value;
			}
			set
			{
				if ((this._TradeInHolderName3.Value != value))
				{
					this.OnTradeInHolderName3Changing(value);
					this.SendPropertyChanging();
					this._TradeInHolderName3.Value = value;
					this.SendPropertyChanged("TradeInHolderName3");
					this.OnTradeInHolderName3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutJurisdictionRegistFee", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> OutJurisdictionRegistFee
		{
			get
			{
				return this._OutJurisdictionRegistFee;
			}
			set
			{
				if ((this._OutJurisdictionRegistFee != value))
				{
					this.OnOutJurisdictionRegistFeeChanging(value);
					this.SendPropertyChanging();
					this._OutJurisdictionRegistFee = value;
					this.SendPropertyChanged("OutJurisdictionRegistFee");
					this.OnOutJurisdictionRegistFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutJurisdictionRegistFeeTax", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> OutJurisdictionRegistFeeTax
		{
			get
			{
				return this._OutJurisdictionRegistFeeTax;
			}
			set
			{
				if ((this._OutJurisdictionRegistFeeTax != value))
				{
					this.OnOutJurisdictionRegistFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._OutJurisdictionRegistFeeTax = value;
					this.SendPropertyChanged("OutJurisdictionRegistFeeTax");
					this.OnOutJurisdictionRegistFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurchargeAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> SurchargeAmount
		{
			get
			{
				return this._SurchargeAmount;
			}
			set
			{
				if ((this._SurchargeAmount != value))
				{
					this.OnSurchargeAmountChanging(value);
					this.SendPropertyChanging();
					this._SurchargeAmount = value;
					this.SendPropertyChanged("SurchargeAmount");
					this.OnSurchargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurchargeTaxAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> SurchargeTaxAmount
		{
			get
			{
				return this._SurchargeTaxAmount;
			}
			set
			{
				if ((this._SurchargeTaxAmount != value))
				{
					this.OnSurchargeTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._SurchargeTaxAmount = value;
					this.SendPropertyChanged("SurchargeTaxAmount");
					this.OnSurchargeTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendTaxRecv", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> SuspendTaxRecv
		{
			get
			{
				return this._SuspendTaxRecv;
			}
			set
			{
				if ((this._SuspendTaxRecv != value))
				{
					this.OnSuspendTaxRecvChanging(value);
					this.SendPropertyChanging();
					this._SuspendTaxRecv = value;
					this.SendPropertyChanged("SuspendTaxRecv");
					this.OnSuspendTaxRecvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesLine", Storage="_CarSalesLine", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber")]
		public EntitySet<CarSalesLine> CarSalesLine
		{
			get
			{
				return this._CarSalesLine;
			}
			set
			{
				this._CarSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesPayment", Storage="_CarSalesPayment", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber")]
		public EntitySet<CarSalesPayment> CarSalesPayment
		{
			get
			{
				return this._CarSalesPayment;
			}
			set
			{
				this._CarSalesPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesReport", Storage="_CarSalesReport", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber")]
		public EntitySet<CarSalesReport> CarSalesReport
		{
			get
			{
				return this._CarSalesReport;
			}
			set
			{
				this._CarSalesReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CarSalesHeader", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader", Storage="_Customer", ThisKey="CustomerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._CustomerCode = value.CustomerCode;
					}
					else
					{
						this._CustomerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarSalesHeader", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarSalesHeader", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader1", Storage="_Possesor", ThisKey="PossesorCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Possesor
		{
			get
			{
				return this._Possesor.Entity;
			}
			set
			{
				Customer previousValue = this._Possesor.Entity;
				if (((previousValue != value) 
							|| (this._Possesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Possesor.Entity = null;
						previousValue.CarSalesHeader1.Remove(this);
					}
					this._Possesor.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader1.Add(this);
						this._PossesorCode = value.CustomerCode;
					}
					else
					{
						this._PossesorCode = default(string);
					}
					this.SendPropertyChanged("Possesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CarSalesHeader2", Storage="_User", ThisKey="UserCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				Customer previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CarSalesHeader2.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader2.Add(this);
						this._UserCode = value.CustomerCode;
					}
					else
					{
						this._UserCode = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SalesOrderStatus_CarSalesHeader", Storage="_c_SalesOrderStatus", ThisKey="SalesOrderStatus", OtherKey="Code", IsForeignKey=true)]
		public c_SalesOrderStatus c_SalesOrderStatus
		{
			get
			{
				return this._c_SalesOrderStatus.Entity;
			}
			set
			{
				c_SalesOrderStatus previousValue = this._c_SalesOrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_SalesOrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SalesOrderStatus.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_SalesOrderStatus.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._SalesOrderStatus = value.Code;
					}
					else
					{
						this._SalesOrderStatus = default(string);
					}
					this.SendPropertyChanged("c_SalesOrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SalesType_CarSalesHeader", Storage="_c_SalesType", ThisKey="SalesType", OtherKey="Code", IsForeignKey=true)]
		public c_SalesType c_SalesType
		{
			get
			{
				return this._c_SalesType.Entity;
			}
			set
			{
				c_SalesType previousValue = this._c_SalesType.Entity;
				if (((previousValue != value) 
							|| (this._c_SalesType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SalesType.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_SalesType.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._SalesType = value.Code;
					}
					else
					{
						this._SalesType = default(string);
					}
					this.SendPropertyChanged("c_SalesType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RegistrationType_CarSalesHeader", Storage="_c_RegistrationType", ThisKey="RegistrationType", OtherKey="Code", IsForeignKey=true)]
		public c_RegistrationType c_RegistrationType
		{
			get
			{
				return this._c_RegistrationType.Entity;
			}
			set
			{
				c_RegistrationType previousValue = this._c_RegistrationType.Entity;
				if (((previousValue != value) 
							|| (this._c_RegistrationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_RegistrationType.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_RegistrationType.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._RegistrationType = value.Code;
					}
					else
					{
						this._RegistrationType = default(string);
					}
					this.SendPropertyChanged("c_RegistrationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarSalesHeader", Storage="_ExteriorColor", ThisKey="ExteriorColorCode", OtherKey="CarColorCode", IsForeignKey=true)]
		public CarColor ExteriorColor
		{
			get
			{
				return this._ExteriorColor.Entity;
			}
			set
			{
				CarColor previousValue = this._ExteriorColor.Entity;
				if (((previousValue != value) 
							|| (this._ExteriorColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExteriorColor.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._ExteriorColor.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._ExteriorColorCode = value.CarColorCode;
					}
					else
					{
						this._ExteriorColorCode = default(string);
					}
					this.SendPropertyChanged("ExteriorColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarSalesHeader1", Storage="_InteriorColor", ThisKey="InteriorColorCode", OtherKey="CarColorCode", IsForeignKey=true)]
		public CarColor InteriorColor
		{
			get
			{
				return this._InteriorColor.Entity;
			}
			set
			{
				CarColor previousValue = this._InteriorColor.Entity;
				if (((previousValue != value) 
							|| (this._InteriorColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InteriorColor.Entity = null;
						previousValue.CarSalesHeader1.Remove(this);
					}
					this._InteriorColor.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader1.Add(this);
						this._InteriorColorCode = value.CarColorCode;
					}
					else
					{
						this._InteriorColorCode = default(string);
					}
					this.SendPropertyChanged("InteriorColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_NewUsedType_CarSalesHeader", Storage="_c_NewUsedType", ThisKey="NewUsedType", OtherKey="Code", IsForeignKey=true)]
		public c_NewUsedType c_NewUsedType
		{
			get
			{
				return this._c_NewUsedType.Entity;
			}
			set
			{
				c_NewUsedType previousValue = this._c_NewUsedType.Entity;
				if (((previousValue != value) 
							|| (this._c_NewUsedType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_NewUsedType.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_NewUsedType.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._NewUsedType = value.Code;
					}
					else
					{
						this._NewUsedType = default(string);
					}
					this.SendPropertyChanged("c_NewUsedType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarLiabilityInsuranceType_CarSalesHeader", Storage="_c_CarLiabilityInsuranceType", ThisKey="CarLiabilityInsuranceType", OtherKey="Code", IsForeignKey=true)]
		public c_CarLiabilityInsuranceType c_CarLiabilityInsuranceType
		{
			get
			{
				return this._c_CarLiabilityInsuranceType.Entity;
			}
			set
			{
				c_CarLiabilityInsuranceType previousValue = this._c_CarLiabilityInsuranceType.Entity;
				if (((previousValue != value) 
							|| (this._c_CarLiabilityInsuranceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CarLiabilityInsuranceType.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_CarLiabilityInsuranceType.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._CarLiabilityInsuranceType = value.Code;
					}
					else
					{
						this._CarLiabilityInsuranceType = default(string);
					}
					this.SendPropertyChanged("c_CarLiabilityInsuranceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OwnershipReservation_CarSalesHeader", Storage="_c_OwnershipReservation", ThisKey="OwnershipReservation", OtherKey="Code", IsForeignKey=true)]
		public c_OwnershipReservation c_OwnershipReservation
		{
			get
			{
				return this._c_OwnershipReservation.Entity;
			}
			set
			{
				c_OwnershipReservation previousValue = this._c_OwnershipReservation.Entity;
				if (((previousValue != value) 
							|| (this._c_OwnershipReservation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OwnershipReservation.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_OwnershipReservation.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._OwnershipReservation = value.Code;
					}
					else
					{
						this._OwnershipReservation = default(string);
					}
					this.SendPropertyChanged("c_OwnershipReservation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VoluntaryInsuranceType_CarSalesHeader", Storage="_c_VoluntaryInsuranceType", ThisKey="VoluntaryInsuranceType", OtherKey="Code", IsForeignKey=true)]
		public c_VoluntaryInsuranceType c_VoluntaryInsuranceType
		{
			get
			{
				return this._c_VoluntaryInsuranceType.Entity;
			}
			set
			{
				c_VoluntaryInsuranceType previousValue = this._c_VoluntaryInsuranceType.Entity;
				if (((previousValue != value) 
							|| (this._c_VoluntaryInsuranceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_VoluntaryInsuranceType.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_VoluntaryInsuranceType.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._VoluntaryInsuranceType = value.Code;
					}
					else
					{
						this._VoluntaryInsuranceType = default(string);
					}
					this.SendPropertyChanged("c_VoluntaryInsuranceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader", Storage="_c_MileageUnit", ThisKey="MileageUnit", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnit
		{
			get
			{
				return this._c_MileageUnit.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnit.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnit.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_MileageUnit.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._MileageUnit = value.Code;
					}
					else
					{
						this._MileageUnit = default(string);
					}
					this.SendPropertyChanged("c_MileageUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader1", Storage="_c_MileageUnitTradeIn1", ThisKey="TradeInMileageUnit1", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnitTradeIn1
		{
			get
			{
				return this._c_MileageUnitTradeIn1.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnitTradeIn1.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnitTradeIn1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnitTradeIn1.Entity = null;
						previousValue.CarSalesHeaderTradeIn1.Remove(this);
					}
					this._c_MileageUnitTradeIn1.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeaderTradeIn1.Add(this);
						this._TradeInMileageUnit1 = value.Code;
					}
					else
					{
						this._TradeInMileageUnit1 = default(string);
					}
					this.SendPropertyChanged("c_MileageUnitTradeIn1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader2", Storage="_c_MileageUnitTradeIn2", ThisKey="TradeInMileageUnit2", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnitTradeIn2
		{
			get
			{
				return this._c_MileageUnitTradeIn2.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnitTradeIn2.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnitTradeIn2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnitTradeIn2.Entity = null;
						previousValue.CarSalesHeaderTradeIn2.Remove(this);
					}
					this._c_MileageUnitTradeIn2.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeaderTradeIn2.Add(this);
						this._TradeInMileageUnit2 = value.Code;
					}
					else
					{
						this._TradeInMileageUnit2 = default(string);
					}
					this.SendPropertyChanged("c_MileageUnitTradeIn2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_CarSalesHeader3", Storage="_c_MileageUnitTradeIn3", ThisKey="TradeInMileageUnit3", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnitTradeIn3
		{
			get
			{
				return this._c_MileageUnitTradeIn3.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnitTradeIn3.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnitTradeIn3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnitTradeIn3.Entity = null;
						previousValue.CarSalesHeaderTradeIn3.Remove(this);
					}
					this._c_MileageUnitTradeIn3.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeaderTradeIn3.Add(this);
						this._TradeInMileageUnit3 = value.Code;
					}
					else
					{
						this._TradeInMileageUnit3 = default(string);
					}
					this.SendPropertyChanged("c_MileageUnitTradeIn3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarSalesHeader", Storage="_SalesCar", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber", IsForeignKey=true)]
		public SalesCar SalesCar
		{
			get
			{
				return this._SalesCar.Entity;
			}
			set
			{
				SalesCar previousValue = this._SalesCar.Entity;
				if (((previousValue != value) 
							|| (this._SalesCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesCar.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._SalesCar.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._SalesCarNumber = value.SalesCarNumber;
					}
					else
					{
						this._SalesCarNumber = default(string);
					}
					this.SendPropertyChanged("SalesCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader", Storage="_LoanA", ThisKey="LoanCodeA", OtherKey="LoanCode", IsForeignKey=true)]
		public Loan LoanA
		{
			get
			{
				return this._LoanA.Entity;
			}
			set
			{
				Loan previousValue = this._LoanA.Entity;
				if (((previousValue != value) 
							|| (this._LoanA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanA.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._LoanA.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._CustomerClaimCodeA = value.LoanCode;
					}
					else
					{
						this._CustomerClaimCodeA = default(string);
					}
					this.SendPropertyChanged("LoanA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader1", Storage="_LoanB", ThisKey="LoanCodeB", OtherKey="LoanCode", IsForeignKey=true)]
		public Loan LoanB
		{
			get
			{
				return this._LoanB.Entity;
			}
			set
			{
				Loan previousValue = this._LoanB.Entity;
				if (((previousValue != value) 
							|| (this._LoanB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanB.Entity = null;
						previousValue.CarSalesHeader1.Remove(this);
					}
					this._LoanB.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader1.Add(this);
						this._CustomerClaimCodeB = value.LoanCode;
					}
					else
					{
						this._CustomerClaimCodeB = default(string);
					}
					this.SendPropertyChanged("LoanB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_CarSalesHeader2", Storage="_LoanC", ThisKey="LoanCodeC", OtherKey="LoanCode", IsForeignKey=true)]
		public Loan LoanC
		{
			get
			{
				return this._LoanC.Entity;
			}
			set
			{
				Loan previousValue = this._LoanC.Entity;
				if (((previousValue != value) 
							|| (this._LoanC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanC.Entity = null;
						previousValue.CarSalesHeader2.Remove(this);
					}
					this._LoanC.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader2.Add(this);
						this._CustomerClaimCodeC = value.LoanCode;
					}
					else
					{
						this._CustomerClaimCodeC = default(string);
					}
					this.SendPropertyChanged("LoanC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader", Storage="_c_EraseRegist", ThisKey="TradeInEraseRegist1", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist
		{
			get
			{
				return this._c_EraseRegist.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._c_EraseRegist.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._TradeInEraseRegist1 = value.Code;
					}
					else
					{
						this._TradeInEraseRegist1 = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader1", Storage="_c_EraseRegist1", ThisKey="TradeInEraseRegist2", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist1
		{
			get
			{
				return this._c_EraseRegist1.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist1.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist1.Entity = null;
						previousValue.CarSalesHeader1.Remove(this);
					}
					this._c_EraseRegist1.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader1.Add(this);
						this._TradeInEraseRegist2 = value.Code;
					}
					else
					{
						this._TradeInEraseRegist2 = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader2", Storage="_c_EraseRegist2", ThisKey="TradeInEraseRegist3", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist2
		{
			get
			{
				return this._c_EraseRegist2.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist2.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist2.Entity = null;
						previousValue.CarSalesHeader2.Remove(this);
					}
					this._c_EraseRegist2.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader2.Add(this);
						this._TradeInEraseRegist3 = value.Code;
					}
					else
					{
						this._TradeInEraseRegist3 = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessSessionControl_CarSalesHeader", Storage="_ProcessSessionControl", ThisKey="ProcessSessionId", OtherKey="ProcessSessionId", IsForeignKey=true)]
		public ProcessSessionControl ProcessSessionControl
		{
			get
			{
				return this._ProcessSessionControl.Entity;
			}
			set
			{
				ProcessSessionControl previousValue = this._ProcessSessionControl.Entity;
				if (((previousValue != value) 
							|| (this._ProcessSessionControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessSessionControl.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._ProcessSessionControl.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._ProcessSessionId = value.ProcessSessionId;
					}
					else
					{
						this._ProcessSessionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ProcessSessionControl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArea_CarSalesHeader", Storage="_CostArea", ThisKey="CostAreaCode", OtherKey="CostAreaCode", IsForeignKey=true)]
		public CostArea CostArea
		{
			get
			{
				return this._CostArea.Entity;
			}
			set
			{
				CostArea previousValue = this._CostArea.Entity;
				if (((previousValue != value) 
							|| (this._CostArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostArea.Entity = null;
						previousValue.CarSalesHeader.Remove(this);
					}
					this._CostArea.Entity = value;
					if ((value != null))
					{
						value.CarSalesHeader.Add(this);
						this._CostAreaCode = value.CostAreaCode;
					}
					else
					{
						this._CostAreaCode = default(string);
					}
					this.SendPropertyChanged("CostArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = this;
		}
		
		private void detach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = null;
		}
		
		private void attach_CarSalesPayment(CarSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = this;
		}
		
		private void detach_CarSalesPayment(CarSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = null;
		}
		
		private void attach_CarSalesReport(CarSalesReport entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = this;
		}
		
		private void detach_CarSalesReport(CarSalesReport entity)
		{
			this.SendPropertyChanging();
			entity.CarSalesHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_SalesOrderStatus")]
	public partial class c_SalesOrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_SalesOrderStatus()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SalesOrderStatus_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="SalesOrderStatus")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_SalesOrderStatus = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_SalesOrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierPayment")]
	public partial class SupplierPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierPaymentCode;
		
		private string _SupplierPaymentName;
		
		private string _SupplierPaymentType;
		
		private string _PaymentType;
		
		private System.Nullable<int> _PaymentDay;
		
		private System.Nullable<int> _PaymentDayCount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<int> _PaymentPeriod1;
		
		private System.Nullable<int> _PaymentPeriod2;
		
		private System.Nullable<int> _PaymentPeriod3;
		
		private System.Nullable<int> _PaymentPeriod4;
		
		private System.Nullable<int> _PaymentPeriod5;
		
		private System.Nullable<int> _PaymentPeriod6;
		
		private System.Nullable<decimal> _PaymentRate1;
		
		private System.Nullable<decimal> _PaymentRate2;
		
		private System.Nullable<decimal> _PaymentRate3;
		
		private System.Nullable<decimal> _PaymentRate4;
		
		private System.Nullable<decimal> _PaymentRate5;
		
		private System.Nullable<decimal> _PaymentRate6;
		
		private string _BankCode;
		
		private string _BranchCode;
		
		private string _DepositKind;
		
		private string _AccountNumber;
		
		private string _AccountHolder;
		
		private string _AccountHolderKana;
		
		private EntitySet<PaymentPlan> _PaymentPlan;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntityRef<c_SupplierPaymentType> _c_SupplierPaymentType;
		
		private EntityRef<c_PaymentType2> _c_PaymentType2;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Bank> _Bank;
		
		private EntityRef<Branch> _Branch;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierPaymentCodeChanging(string value);
    partial void OnSupplierPaymentCodeChanged();
    partial void OnSupplierPaymentNameChanging(string value);
    partial void OnSupplierPaymentNameChanged();
    partial void OnSupplierPaymentTypeChanging(string value);
    partial void OnSupplierPaymentTypeChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnPaymentDayChanging(System.Nullable<int> value);
    partial void OnPaymentDayChanged();
    partial void OnPaymentDayCountChanging(System.Nullable<int> value);
    partial void OnPaymentDayCountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnPaymentPeriod1Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod1Changed();
    partial void OnPaymentPeriod2Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod2Changed();
    partial void OnPaymentPeriod3Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod3Changed();
    partial void OnPaymentPeriod4Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod4Changed();
    partial void OnPaymentPeriod5Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod5Changed();
    partial void OnPaymentPeriod6Changing(System.Nullable<int> value);
    partial void OnPaymentPeriod6Changed();
    partial void OnPaymentRate1Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate1Changed();
    partial void OnPaymentRate2Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate2Changed();
    partial void OnPaymentRate3Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate3Changed();
    partial void OnPaymentRate4Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate4Changed();
    partial void OnPaymentRate5Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate5Changed();
    partial void OnPaymentRate6Changing(System.Nullable<decimal> value);
    partial void OnPaymentRate6Changed();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnDepositKindChanging(string value);
    partial void OnDepositKindChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountHolderChanging(string value);
    partial void OnAccountHolderChanged();
    partial void OnAccountHolderKanaChanging(string value);
    partial void OnAccountHolderKanaChanged();
    #endregion
		
		public SupplierPayment()
		{
			this._PaymentPlan = new EntitySet<PaymentPlan>(new Action<PaymentPlan>(this.attach_PaymentPlan), new Action<PaymentPlan>(this.detach_PaymentPlan));
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			this._c_SupplierPaymentType = default(EntityRef<c_SupplierPaymentType>);
			this._c_PaymentType2 = default(EntityRef<c_PaymentType2>);
			this._Customer = default(EntityRef<Customer>);
			this._Bank = default(EntityRef<Bank>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentCode
		{
			get
			{
				return this._SupplierPaymentCode;
			}
			set
			{
				if ((this._SupplierPaymentCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierPaymentCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierPaymentCode = value;
					this.SendPropertyChanged("SupplierPaymentCode");
					this.OnSupplierPaymentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentName
		{
			get
			{
				return this._SupplierPaymentName;
			}
			set
			{
				if ((this._SupplierPaymentName != value))
				{
					this.OnSupplierPaymentNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierPaymentName = value;
					this.SendPropertyChanged("SupplierPaymentName");
					this.OnSupplierPaymentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentType
		{
			get
			{
				return this._SupplierPaymentType;
			}
			set
			{
				if ((this._SupplierPaymentType != value))
				{
					if (this._c_SupplierPaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._SupplierPaymentType = value;
					this.SendPropertyChanged("SupplierPaymentType");
					this.OnSupplierPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					if (this._c_PaymentType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDay", DbType="Int")]
		public System.Nullable<int> PaymentDay
		{
			get
			{
				return this._PaymentDay;
			}
			set
			{
				if ((this._PaymentDay != value))
				{
					this.OnPaymentDayChanging(value);
					this.SendPropertyChanging();
					this._PaymentDay = value;
					this.SendPropertyChanged("PaymentDay");
					this.OnPaymentDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDayCount", DbType="Int")]
		public System.Nullable<int> PaymentDayCount
		{
			get
			{
				return this._PaymentDayCount;
			}
			set
			{
				if ((this._PaymentDayCount != value))
				{
					this.OnPaymentDayCountChanging(value);
					this.SendPropertyChanging();
					this._PaymentDayCount = value;
					this.SendPropertyChanged("PaymentDayCount");
					this.OnPaymentDayCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod1", DbType="Int")]
		public System.Nullable<int> PaymentPeriod1
		{
			get
			{
				return this._PaymentPeriod1;
			}
			set
			{
				if ((this._PaymentPeriod1 != value))
				{
					this.OnPaymentPeriod1Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod1 = value;
					this.SendPropertyChanged("PaymentPeriod1");
					this.OnPaymentPeriod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod2", DbType="Int")]
		public System.Nullable<int> PaymentPeriod2
		{
			get
			{
				return this._PaymentPeriod2;
			}
			set
			{
				if ((this._PaymentPeriod2 != value))
				{
					this.OnPaymentPeriod2Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod2 = value;
					this.SendPropertyChanged("PaymentPeriod2");
					this.OnPaymentPeriod2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod3", DbType="Int")]
		public System.Nullable<int> PaymentPeriod3
		{
			get
			{
				return this._PaymentPeriod3;
			}
			set
			{
				if ((this._PaymentPeriod3 != value))
				{
					this.OnPaymentPeriod3Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod3 = value;
					this.SendPropertyChanged("PaymentPeriod3");
					this.OnPaymentPeriod3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod4", DbType="Int")]
		public System.Nullable<int> PaymentPeriod4
		{
			get
			{
				return this._PaymentPeriod4;
			}
			set
			{
				if ((this._PaymentPeriod4 != value))
				{
					this.OnPaymentPeriod4Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod4 = value;
					this.SendPropertyChanged("PaymentPeriod4");
					this.OnPaymentPeriod4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod5", DbType="Int")]
		public System.Nullable<int> PaymentPeriod5
		{
			get
			{
				return this._PaymentPeriod5;
			}
			set
			{
				if ((this._PaymentPeriod5 != value))
				{
					this.OnPaymentPeriod5Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod5 = value;
					this.SendPropertyChanged("PaymentPeriod5");
					this.OnPaymentPeriod5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriod6", DbType="Int")]
		public System.Nullable<int> PaymentPeriod6
		{
			get
			{
				return this._PaymentPeriod6;
			}
			set
			{
				if ((this._PaymentPeriod6 != value))
				{
					this.OnPaymentPeriod6Changing(value);
					this.SendPropertyChanging();
					this._PaymentPeriod6 = value;
					this.SendPropertyChanged("PaymentPeriod6");
					this.OnPaymentPeriod6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate1", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate1
		{
			get
			{
				return this._PaymentRate1;
			}
			set
			{
				if ((this._PaymentRate1 != value))
				{
					this.OnPaymentRate1Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate1 = value;
					this.SendPropertyChanged("PaymentRate1");
					this.OnPaymentRate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate2", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate2
		{
			get
			{
				return this._PaymentRate2;
			}
			set
			{
				if ((this._PaymentRate2 != value))
				{
					this.OnPaymentRate2Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate2 = value;
					this.SendPropertyChanged("PaymentRate2");
					this.OnPaymentRate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate3", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate3
		{
			get
			{
				return this._PaymentRate3;
			}
			set
			{
				if ((this._PaymentRate3 != value))
				{
					this.OnPaymentRate3Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate3 = value;
					this.SendPropertyChanged("PaymentRate3");
					this.OnPaymentRate3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate4", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate4
		{
			get
			{
				return this._PaymentRate4;
			}
			set
			{
				if ((this._PaymentRate4 != value))
				{
					this.OnPaymentRate4Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate4 = value;
					this.SendPropertyChanged("PaymentRate4");
					this.OnPaymentRate4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate5", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate5
		{
			get
			{
				return this._PaymentRate5;
			}
			set
			{
				if ((this._PaymentRate5 != value))
				{
					this.OnPaymentRate5Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate5 = value;
					this.SendPropertyChanged("PaymentRate5");
					this.OnPaymentRate5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentRate6", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PaymentRate6
		{
			get
			{
				return this._PaymentRate6;
			}
			set
			{
				if ((this._PaymentRate6 != value))
				{
					this.OnPaymentRate6Changing(value);
					this.SendPropertyChanging();
					this._PaymentRate6 = value;
					this.SendPropertyChanged("PaymentRate6");
					this.OnPaymentRate6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if ((this._Bank.HasLoadedOrAssignedValue || this._Branch.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositKind", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositKind
		{
			get
			{
				return this._DepositKind;
			}
			set
			{
				if ((this._DepositKind != value))
				{
					this.OnDepositKindChanging(value);
					this.SendPropertyChanging();
					this._DepositKind = value;
					this.SendPropertyChanged("DepositKind");
					this.OnDepositKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(7)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountHolder", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountHolder
		{
			get
			{
				return this._AccountHolder;
			}
			set
			{
				if ((this._AccountHolder != value))
				{
					this.OnAccountHolderChanging(value);
					this.SendPropertyChanging();
					this._AccountHolder = value;
					this.SendPropertyChanged("AccountHolder");
					this.OnAccountHolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountHolderKana", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountHolderKana
		{
			get
			{
				return this._AccountHolderKana;
			}
			set
			{
				if ((this._AccountHolderKana != value))
				{
					this.OnAccountHolderKanaChanging(value);
					this.SendPropertyChanging();
					this._AccountHolderKana = value;
					this.SendPropertyChanged("AccountHolderKana");
					this.OnAccountHolderKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_PaymentPlan", Storage="_PaymentPlan", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode")]
		public EntitySet<PaymentPlan> PaymentPlan
		{
			get
			{
				return this._PaymentPlan;
			}
			set
			{
				this._PaymentPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SupplierPaymentType_SupplierPayment", Storage="_c_SupplierPaymentType", ThisKey="SupplierPaymentType", OtherKey="Code", IsForeignKey=true)]
		public c_SupplierPaymentType c_SupplierPaymentType
		{
			get
			{
				return this._c_SupplierPaymentType.Entity;
			}
			set
			{
				c_SupplierPaymentType previousValue = this._c_SupplierPaymentType.Entity;
				if (((previousValue != value) 
							|| (this._c_SupplierPaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SupplierPaymentType.Entity = null;
						previousValue.SupplierPayment.Remove(this);
					}
					this._c_SupplierPaymentType.Entity = value;
					if ((value != null))
					{
						value.SupplierPayment.Add(this);
						this._SupplierPaymentType = value.Code;
					}
					else
					{
						this._SupplierPaymentType = default(string);
					}
					this.SendPropertyChanged("c_SupplierPaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentType2_SupplierPayment", Storage="_c_PaymentType2", ThisKey="PaymentType", OtherKey="Code", IsForeignKey=true)]
		public c_PaymentType2 c_PaymentType2
		{
			get
			{
				return this._c_PaymentType2.Entity;
			}
			set
			{
				c_PaymentType2 previousValue = this._c_PaymentType2.Entity;
				if (((previousValue != value) 
							|| (this._c_PaymentType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PaymentType2.Entity = null;
						previousValue.SupplierPayment.Remove(this);
					}
					this._c_PaymentType2.Entity = value;
					if ((value != null))
					{
						value.SupplierPayment.Add(this);
						this._PaymentType = value.Code;
					}
					else
					{
						this._PaymentType = default(string);
					}
					this.SendPropertyChanged("c_PaymentType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SupplierPayment", Storage="_Customer", ThisKey="SupplierPaymentCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SupplierPayment = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SupplierPayment = this;
						this._SupplierPaymentCode = value.CustomerCode;
					}
					else
					{
						this._SupplierPaymentCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_SupplierPayment", Storage="_Bank", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.SupplierPayment.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.SupplierPayment.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_SupplierPayment", Storage="_Branch", ThisKey="BranchCode,BankCode", OtherKey="BranchCode,BankCode", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.SupplierPayment.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.SupplierPayment.Add(this);
						this._BranchCode = value.BranchCode;
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BranchCode = default(string);
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = this;
		}
		
		private void detach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = null;
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = null;
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.SupplierPayment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_SupplierPaymentType")]
	public partial class c_SupplierPaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SupplierPayment> _SupplierPayment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_SupplierPaymentType()
		{
			this._SupplierPayment = new EntitySet<SupplierPayment>(new Action<SupplierPayment>(this.attach_SupplierPayment), new Action<SupplierPayment>(this.detach_SupplierPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SupplierPaymentType_SupplierPayment", Storage="_SupplierPayment", ThisKey="Code", OtherKey="SupplierPaymentType")]
		public EntitySet<SupplierPayment> SupplierPayment
		{
			get
			{
				return this._SupplierPayment;
			}
			set
			{
				this._SupplierPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.c_SupplierPaymentType = this;
		}
		
		private void detach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.c_SupplierPaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PaymentType2")]
	public partial class c_PaymentType2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SupplierPayment> _SupplierPayment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PaymentType2()
		{
			this._SupplierPayment = new EntitySet<SupplierPayment>(new Action<SupplierPayment>(this.attach_SupplierPayment), new Action<SupplierPayment>(this.detach_SupplierPayment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PaymentType2_SupplierPayment", Storage="_SupplierPayment", ThisKey="Code", OtherKey="PaymentType")]
		public EntitySet<SupplierPayment> SupplierPayment
		{
			get
			{
				return this._SupplierPayment;
			}
			set
			{
				this._SupplierPayment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentType2 = this;
		}
		
		private void detach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.c_PaymentType2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Car")]
	public partial class Car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarCode;
		
		private string _CarName;
		
		private string _CarBrandCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntitySet<CarGrade> _CarGrade;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption1;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption2;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption3;
		
		private EntityRef<Brand> _Brand;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarCodeChanging(string value);
    partial void OnCarCodeChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCarBrandCodeChanging(string value);
    partial void OnCarBrandCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Car()
		{
			this._CarGrade = new EntitySet<CarGrade>(new Action<CarGrade>(this.attach_CarGrade), new Action<CarGrade>(this.detach_CarGrade));
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._CustomerReceiption1 = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption1), new Action<CustomerReceiption>(this.detach_CustomerReceiption1));
			this._CustomerReceiption2 = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption2), new Action<CustomerReceiption>(this.detach_CustomerReceiption2));
			this._CustomerReceiption3 = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption3), new Action<CustomerReceiption>(this.detach_CustomerReceiption3));
			this._Brand = default(EntityRef<Brand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this.OnCarCodeChanging(value);
					this.SendPropertyChanging();
					this._CarCode = value;
					this.SendPropertyChanged("CarCode");
					this.OnCarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarBrandCodeChanging(value);
					this.SendPropertyChanging();
					this._CarBrandCode = value;
					this.SendPropertyChanged("CarBrandCode");
					this.OnCarBrandCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CarGrade", Storage="_CarGrade", ThisKey="CarCode", OtherKey="CarCode")]
		public EntitySet<CarGrade> CarGrade
		{
			get
			{
				return this._CarGrade;
			}
			set
			{
				this._CarGrade.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="CarCode", OtherKey="InterestedCar1")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption1", Storage="_CustomerReceiption1", ThisKey="CarCode", OtherKey="InterestedCar2")]
		public EntitySet<CustomerReceiption> CustomerReceiption1
		{
			get
			{
				return this._CustomerReceiption1;
			}
			set
			{
				this._CustomerReceiption1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption2", Storage="_CustomerReceiption2", ThisKey="CarCode", OtherKey="InterestedCar3")]
		public EntitySet<CustomerReceiption> CustomerReceiption2
		{
			get
			{
				return this._CustomerReceiption2;
			}
			set
			{
				this._CustomerReceiption2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Car_CustomerReceiption3", Storage="_CustomerReceiption3", ThisKey="CarCode", OtherKey="InterestedCar4")]
		public EntitySet<CustomerReceiption> CustomerReceiption3
		{
			get
			{
				return this._CustomerReceiption3;
			}
			set
			{
				this._CustomerReceiption3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Brand_Car", Storage="_Brand", ThisKey="CarBrandCode", OtherKey="CarBrandCode", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Car.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Car.Add(this);
						this._CarBrandCode = value.CarBrandCode;
					}
					else
					{
						this._CarBrandCode = default(string);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.Car = this;
		}
		
		private void detach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.Car = null;
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car1 = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car1 = null;
		}
		
		private void attach_CustomerReceiption1(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car2 = this;
		}
		
		private void detach_CustomerReceiption1(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car2 = null;
		}
		
		private void attach_CustomerReceiption2(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car3 = this;
		}
		
		private void detach_CustomerReceiption2(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car3 = null;
		}
		
		private void attach_CustomerReceiption3(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car4 = this;
		}
		
		private void detach_CustomerReceiption3(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Car4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_SalesType")]
	public partial class c_SalesType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_SalesType()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SalesType_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="SalesType")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_SalesType = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_SalesType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_RegistrationType")]
	public partial class c_RegistrationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_RegistrationType()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RegistrationType_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="RegistrationType")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_RegistrationType = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_RegistrationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SerialNumber")]
	public partial class SerialNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SerialCode;
		
		private string _SerialName;
		
		private string _PrefixCode;
		
		private string _SuffixCode;
		
		private decimal _SequenceNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerialCodeChanging(string value);
    partial void OnSerialCodeChanged();
    partial void OnSerialNameChanging(string value);
    partial void OnSerialNameChanged();
    partial void OnPrefixCodeChanging(string value);
    partial void OnPrefixCodeChanged();
    partial void OnSuffixCodeChanging(string value);
    partial void OnSuffixCodeChanged();
    partial void OnSequenceNumberChanging(decimal value);
    partial void OnSequenceNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public SerialNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SerialCode
		{
			get
			{
				return this._SerialCode;
			}
			set
			{
				if ((this._SerialCode != value))
				{
					this.OnSerialCodeChanging(value);
					this.SendPropertyChanging();
					this._SerialCode = value;
					this.SendPropertyChanged("SerialCode");
					this.OnSerialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SerialName
		{
			get
			{
				return this._SerialName;
			}
			set
			{
				if ((this._SerialName != value))
				{
					this.OnSerialNameChanging(value);
					this.SendPropertyChanging();
					this._SerialName = value;
					this.SendPropertyChanged("SerialName");
					this.OnSerialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrefixCode
		{
			get
			{
				return this._PrefixCode;
			}
			set
			{
				if ((this._PrefixCode != value))
				{
					this.OnPrefixCodeChanging(value);
					this.SendPropertyChanging();
					this._PrefixCode = value;
					this.SendPropertyChanged("PrefixCode");
					this.OnPrefixCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SuffixCode
		{
			get
			{
				return this._SuffixCode;
			}
			set
			{
				if ((this._SuffixCode != value))
				{
					this.OnSuffixCodeChanging(value);
					this.SendPropertyChanging();
					this._SuffixCode = value;
					this.SendPropertyChanged("SuffixCode");
					this.OnSuffixCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Decimal(10,0) NOT NULL")]
		public decimal SequenceNumber
		{
			get
			{
				return this._SequenceNumber;
			}
			set
			{
				if ((this._SequenceNumber != value))
				{
					this.OnSequenceNumberChanging(value);
					this.SendPropertyChanging();
					this._SequenceNumber = value;
					this.SendPropertyChanged("SequenceNumber");
					this.OnSequenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OptionType")]
	public partial class c_OptionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesLine> _CarSalesLine;
		
		private EntitySet<ServiceRequestLine> _ServiceRequestLine;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OptionType()
		{
			this._CarSalesLine = new EntitySet<CarSalesLine>(new Action<CarSalesLine>(this.attach_CarSalesLine), new Action<CarSalesLine>(this.detach_CarSalesLine));
			this._ServiceRequestLine = new EntitySet<ServiceRequestLine>(new Action<ServiceRequestLine>(this.attach_ServiceRequestLine), new Action<ServiceRequestLine>(this.detach_ServiceRequestLine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OptionType_CarSalesLine", Storage="_CarSalesLine", ThisKey="Code", OtherKey="OptionType")]
		public EntitySet<CarSalesLine> CarSalesLine
		{
			get
			{
				return this._CarSalesLine;
			}
			set
			{
				this._CarSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OptionType_ServiceRequestLine", Storage="_ServiceRequestLine", ThisKey="Code", OtherKey="OptionType")]
		public EntitySet<ServiceRequestLine> ServiceRequestLine
		{
			get
			{
				return this._ServiceRequestLine;
			}
			set
			{
				this._ServiceRequestLine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_OptionType = this;
		}
		
		private void detach_CarSalesLine(CarSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_OptionType = null;
		}
		
		private void attach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.c_OptionType = this;
		}
		
		private void detach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.c_OptionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarSalesPayment")]
	public partial class CarSalesPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private int _LineNumber;
		
		private string _CustomerClaimCode;
		
		private System.Nullable<System.DateTime> _PaymentPlanDate;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Memo;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntityRef<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnPaymentPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentPlanDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    #endregion
		
		public CarSalesPayment()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._CarSalesHeader = default(EntityRef<CarSalesHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentPlanDate
		{
			get
			{
				return this._PaymentPlanDate;
			}
			set
			{
				if ((this._PaymentPlanDate != value))
				{
					this.OnPaymentPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanDate = value;
					this.SendPropertyChanged("PaymentPlanDate");
					this.OnPaymentPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_CarSalesPayment", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.CarSalesPayment.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.CarSalesPayment.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesPayment", Storage="_CarSalesHeader", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber", IsForeignKey=true)]
		public CarSalesHeader CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader.Entity;
			}
			set
			{
				CarSalesHeader previousValue = this._CarSalesHeader.Entity;
				if (((previousValue != value) 
							|| (this._CarSalesHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarSalesHeader.Entity = null;
						previousValue.CarSalesPayment.Remove(this);
					}
					this._CarSalesHeader.Entity = value;
					if ((value != null))
					{
						value.CarSalesPayment.Add(this);
						this._SlipNumber = value.SlipNumber;
						this._RevisionNumber = value.RevisionNumber;
					}
					else
					{
						this._SlipNumber = default(string);
						this._RevisionNumber = default(int);
					}
					this.SendPropertyChanged("CarSalesHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarLiabilityInsuranceType")]
	public partial class c_CarLiabilityInsuranceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarLiabilityInsuranceType()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarLiabilityInsuranceType_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="CarLiabilityInsuranceType")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_CarLiabilityInsuranceType = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_CarLiabilityInsuranceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OwnershipReservation")]
	public partial class c_OwnershipReservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OwnershipReservation()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OwnershipReservation_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="OwnershipReservation")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_OwnershipReservation = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_OwnershipReservation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_VoluntaryInsuranceType")]
	public partial class c_VoluntaryInsuranceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_VoluntaryInsuranceType()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VoluntaryInsuranceType_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="VoluntaryInsuranceType")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_VoluntaryInsuranceType = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_VoluntaryInsuranceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ReceiptionState")]
	public partial class c_ReceiptionState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ReceiptionState()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ReceiptionState_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="ReceiptionState")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_ReceiptionState = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_ReceiptionState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ReceiptionType")]
	public partial class c_ReceiptionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ReceiptionType()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ReceiptionType_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="ReceiptionType")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_ReceiptionType = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_ReceiptionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_VisitOpportunity")]
	public partial class c_VisitOpportunity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_VisitOpportunity()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VisitOpportunity_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="VisitOpportunity")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_VisitOpportunity = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_VisitOpportunity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_RequestContent")]
	public partial class c_RequestContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_RequestContent()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RequestContent_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="RequestContent")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_RequestContent = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_RequestContent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaign")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CampaignCode;
		
		private string _CampaignName;
		
		private string _TargetService;
		
		private string _EmployeeCode;
		
		private string _AdvertisingMedia;
		
		private System.Nullable<System.DateTime> _PublishStartDate;
		
		private System.Nullable<System.DateTime> _PublishEndDate;
		
		private System.Nullable<System.DateTime> _CampainStartDate;
		
		private System.Nullable<System.DateTime> _CampainEndDate;
		
		private string _CampainType;
		
		private string _LoanCode;
		
		private System.Nullable<decimal> _Cost;
		
		private string _MakerSupport;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption1;
		
		private EntitySet<CampaignCar> _CampaignCar;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader1;
		
		private EntitySet<CarSalesReport> _CarSalesReport;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<c_TargetService> _c_TargetService;
		
		private EntityRef<c_CampaignType> _c_CampaignType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignCodeChanging(string value);
    partial void OnCampaignCodeChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnTargetServiceChanging(string value);
    partial void OnTargetServiceChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnAdvertisingMediaChanging(string value);
    partial void OnAdvertisingMediaChanged();
    partial void OnPublishStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishStartDateChanged();
    partial void OnPublishEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishEndDateChanged();
    partial void OnCampaignStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampaignStartDateChanged();
    partial void OnCampaignEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampaignEndDateChanged();
    partial void OnCampaignTypeChanging(string value);
    partial void OnCampaignTypeChanged();
    partial void OnLoanCodeChanging(string value);
    partial void OnLoanCodeChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnMakerSupportChanging(string value);
    partial void OnMakerSupportChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Campaign()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			this._CustomerReceiption1 = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption1), new Action<CustomerReceiption>(this.detach_CustomerReceiption1));
			this._CampaignCar = new EntitySet<CampaignCar>(new Action<CampaignCar>(this.attach_CampaignCar), new Action<CampaignCar>(this.detach_CampaignCar));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._ServiceSalesHeader1 = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader1), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader1));
			this._CarSalesReport = new EntitySet<CarSalesReport>(new Action<CarSalesReport>(this.attach_CarSalesReport), new Action<CarSalesReport>(this.detach_CarSalesReport));
			this._Employee = default(EntityRef<Employee>);
			this._c_TargetService = default(EntityRef<c_TargetService>);
			this._c_CampaignType = default(EntityRef<c_CampaignType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode
		{
			get
			{
				return this._CampaignCode;
			}
			set
			{
				if ((this._CampaignCode != value))
				{
					this.OnCampaignCodeChanging(value);
					this.SendPropertyChanging();
					this._CampaignCode = value;
					this.SendPropertyChanged("CampaignCode");
					this.OnCampaignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampaignName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetService", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TargetService
		{
			get
			{
				return this._TargetService;
			}
			set
			{
				if ((this._TargetService != value))
				{
					if (this._c_TargetService.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetServiceChanging(value);
					this.SendPropertyChanging();
					this._TargetService = value;
					this.SendPropertyChanged("TargetService");
					this.OnTargetServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertisingMedia", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AdvertisingMedia
		{
			get
			{
				return this._AdvertisingMedia;
			}
			set
			{
				if ((this._AdvertisingMedia != value))
				{
					this.OnAdvertisingMediaChanging(value);
					this.SendPropertyChanging();
					this._AdvertisingMedia = value;
					this.SendPropertyChanged("AdvertisingMedia");
					this.OnAdvertisingMediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishStartDate
		{
			get
			{
				return this._PublishStartDate;
			}
			set
			{
				if ((this._PublishStartDate != value))
				{
					this.OnPublishStartDateChanging(value);
					this.SendPropertyChanging();
					this._PublishStartDate = value;
					this.SendPropertyChanged("PublishStartDate");
					this.OnPublishStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishEndDate
		{
			get
			{
				return this._PublishEndDate;
			}
			set
			{
				if ((this._PublishEndDate != value))
				{
					this.OnPublishEndDateChanging(value);
					this.SendPropertyChanging();
					this._PublishEndDate = value;
					this.SendPropertyChanged("PublishEndDate");
					this.OnPublishEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampainStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampaignStartDate
		{
			get
			{
				return this._CampainStartDate;
			}
			set
			{
				if ((this._CampainStartDate != value))
				{
					this.OnCampaignStartDateChanging(value);
					this.SendPropertyChanging();
					this._CampainStartDate = value;
					this.SendPropertyChanged("CampaignStartDate");
					this.OnCampaignStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampainEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampaignEndDate
		{
			get
			{
				return this._CampainEndDate;
			}
			set
			{
				if ((this._CampainEndDate != value))
				{
					this.OnCampaignEndDateChanging(value);
					this.SendPropertyChanging();
					this._CampainEndDate = value;
					this.SendPropertyChanged("CampaignEndDate");
					this.OnCampaignEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampainType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignType
		{
			get
			{
				return this._CampainType;
			}
			set
			{
				if ((this._CampainType != value))
				{
					if (this._c_CampaignType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignTypeChanging(value);
					this.SendPropertyChanging();
					this._CampainType = value;
					this.SendPropertyChanged("CampaignType");
					this.OnCampaignTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LoanCode
		{
			get
			{
				return this._LoanCode;
			}
			set
			{
				if ((this._LoanCode != value))
				{
					this.OnLoanCodeChanging(value);
					this.SendPropertyChanging();
					this._LoanCode = value;
					this.SendPropertyChanged("LoanCode");
					this.OnLoanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerSupport", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerSupport
		{
			get
			{
				return this._MakerSupport;
			}
			set
			{
				if ((this._MakerSupport != value))
				{
					this.OnMakerSupportChanging(value);
					this.SendPropertyChanging();
					this._MakerSupport = value;
					this.SendPropertyChanged("MakerSupport");
					this.OnMakerSupportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="CampaignCode", OtherKey="CampaignCode1")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CustomerReceiption1", Storage="_CustomerReceiption1", ThisKey="CampaignCode", OtherKey="CampaignCode2")]
		public EntitySet<CustomerReceiption> CustomerReceiption1
		{
			get
			{
				return this._CustomerReceiption1;
			}
			set
			{
				this._CustomerReceiption1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignCar", Storage="_CampaignCar", ThisKey="CampaignCode", OtherKey="CampaignCode")]
		public EntitySet<CampaignCar> CampaignCar
		{
			get
			{
				return this._CampaignCar;
			}
			set
			{
				this._CampaignCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="CampaignCode", OtherKey="CampaignCode1")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_ServiceSalesHeader1", Storage="_ServiceSalesHeader1", ThisKey="CampaignCode", OtherKey="CampaignCode2")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader1
		{
			get
			{
				return this._ServiceSalesHeader1;
			}
			set
			{
				this._ServiceSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CarSalesReport", Storage="_CarSalesReport", ThisKey="CampaignCode", OtherKey="CampaignCode")]
		public EntitySet<CarSalesReport> CarSalesReport
		{
			get
			{
				return this._CarSalesReport;
			}
			set
			{
				this._CarSalesReport.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Campaign", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Campaign.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Campaign.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TargetService_Campaign", Storage="_c_TargetService", ThisKey="TargetService", OtherKey="Code", IsForeignKey=true)]
		public c_TargetService c_TargetService
		{
			get
			{
				return this._c_TargetService.Entity;
			}
			set
			{
				c_TargetService previousValue = this._c_TargetService.Entity;
				if (((previousValue != value) 
							|| (this._c_TargetService.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TargetService.Entity = null;
						previousValue.Campaign.Remove(this);
					}
					this._c_TargetService.Entity = value;
					if ((value != null))
					{
						value.Campaign.Add(this);
						this._TargetService = value.Code;
					}
					else
					{
						this._TargetService = default(string);
					}
					this.SendPropertyChanged("c_TargetService");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CampaignType_Campaign", Storage="_c_CampaignType", ThisKey="CampaignType", OtherKey="Code", IsForeignKey=true)]
		public c_CampaignType c_CampaignType
		{
			get
			{
				return this._c_CampaignType.Entity;
			}
			set
			{
				c_CampaignType previousValue = this._c_CampaignType.Entity;
				if (((previousValue != value) 
							|| (this._c_CampaignType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CampaignType.Entity = null;
						previousValue.Campaign.Remove(this);
					}
					this._c_CampaignType.Entity = value;
					if ((value != null))
					{
						value.Campaign.Add(this);
						this._CampainType = value.Code;
					}
					else
					{
						this._CampainType = default(string);
					}
					this.SendPropertyChanged("c_CampaignType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Campaign1 = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Campaign1 = null;
		}
		
		private void attach_CustomerReceiption1(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Campaign2 = this;
		}
		
		private void detach_CustomerReceiption1(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.Campaign2 = null;
		}
		
		private void attach_CampaignCar(CampaignCar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignCar(CampaignCar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Campaign1 = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Campaign1 = null;
		}
		
		private void attach_ServiceSalesHeader1(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Campaign2 = this;
		}
		
		private void detach_ServiceSalesHeader1(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.Campaign2 = null;
		}
		
		private void attach_CarSalesReport(CarSalesReport entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CarSalesReport(CarSalesReport entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignCar")]
	public partial class CampaignCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CampaignCode;
		
		private string _CarGradeCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CarGrade> _CarGrade;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignCodeChanging(string value);
    partial void OnCampaignCodeChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CampaignCar()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._CarGrade = default(EntityRef<CarGrade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode
		{
			get
			{
				return this._CampaignCode;
			}
			set
			{
				if ((this._CampaignCode != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCodeChanging(value);
					this.SendPropertyChanging();
					this._CampaignCode = value;
					this.SendPropertyChanged("CampaignCode");
					this.OnCampaignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignCar", Storage="_Campaign", ThisKey="CampaignCode", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignCar.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignCar.Add(this);
						this._CampaignCode = value.CampaignCode;
					}
					else
					{
						this._CampaignCode = default(string);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CampaignCar", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.CampaignCar.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.CampaignCar.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_TargetService")]
	public partial class c_TargetService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Campaign> _Campaign;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_TargetService()
		{
			this._Campaign = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaign), new Action<Campaign>(this.detach_Campaign));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TargetService_Campaign", Storage="_Campaign", ThisKey="Code", OtherKey="TargetService")]
		public EntitySet<Campaign> Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				this._Campaign.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.c_TargetService = this;
		}
		
		private void detach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.c_TargetService = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CampaignType")]
	public partial class c_CampaignType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Campaign> _Campaign;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CampaignType()
		{
			this._Campaign = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaign), new Action<Campaign>(this.detach_Campaign));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CampaignType_Campaign", Storage="_Campaign", ThisKey="Code", OtherKey="CampaignType")]
		public EntitySet<Campaign> Campaign
		{
			get
			{
				return this._Campaign;
			}
			set
			{
				this._Campaign.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.c_CampaignType = this;
		}
		
		private void detach_Campaign(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.c_CampaignType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarPurchaseOrder")]
	public partial class CarPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarPurchaseOrderId;
		
		private string _SlipNumber;
		
		private string _PurchaseOrderStatus;
		
		private string _ReservationStatus;
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _PurchaseOrderDate;
		
		private string _MakerOrderNumber;
		
		private string _EmployeeCode;
		
		private string _OrderType;
		
		private string _ArrangementNumber;
		
		private System.Nullable<System.DateTime> _PDIDepartureDate;
		
		private System.Nullable<System.DateTime> _MakerShipmentDate;
		
		private string _Vin;
		
		private string _ReserveLocationCode;
		
		private System.Nullable<System.DateTime> _InspectionDate;
		
		private string _InspectionInformation;
		
		private string _IncentiveOfficeCode;
		
		private string _ArrivalLocationCode;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _RegistrationPlanMonth;
		
		private System.Nullable<System.DateTime> _RegistrationPlanDate;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _GracePeriod;
		
		private System.Nullable<System.DateTime> _PayDueDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _DocumentReceiptPlanDate;
		
		private System.Nullable<System.DateTime> _DocumentReceiptDate;
		
		private string _StopFlag;
		
		private string _SupplierPaymentCode;
		
		private string _SupplierCode;
		
		private string _PurchasePlanStatus;
		
		private string _RegistrationStatus;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<System.DateTime> _MakerShipmentPlanDate;
		
		private System.Nullable<System.DateTime> _ReInspectionDate;
		
		private string _RegistMonth;
		
		private System.Nullable<System.DateTime> _DocumentPurchaseRequestDate;
		
		private string _Firm;
		
		private System.Nullable<System.DateTime> _DocumentPurchaseDate;
		
		private System.Nullable<decimal> _VehiclePrice;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _MetallicPrice;
		
		private System.Nullable<decimal> _OptionPrice;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _FirmMargin;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<SalesCar> _SalesCar;
		
		private EntityRef<SupplierPayment> _SupplierPayment;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<c_RegistMonth> _c_RegistMonth;
		
		private EntityRef<c_Firm> _c_Firm;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarPurchaseOrderNumberChanging(string value);
    partial void OnCarPurchaseOrderNumberChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnPurchaseOrderStatusChanging(string value);
    partial void OnPurchaseOrderStatusChanged();
    partial void OnReservationStatusChanging(string value);
    partial void OnReservationStatusChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnPurchaseOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseOrderDateChanged();
    partial void OnMakerOrderNumberChanging(string value);
    partial void OnMakerOrderNumberChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnArrangementNumberChanging(string value);
    partial void OnArrangementNumberChanged();
    partial void OnPDIDepartureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPDIDepartureDateChanged();
    partial void OnMakerShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMakerShipmentDateChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnReserveLocationCodeChanging(string value);
    partial void OnReserveLocationCodeChanged();
    partial void OnInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionDateChanged();
    partial void OnInspectionInformationChanging(string value);
    partial void OnInspectionInformationChanged();
    partial void OnIncentiveOfficeCodeChanging(string value);
    partial void OnIncentiveOfficeCodeChanged();
    partial void OnArrivalLocationCodeChanging(string value);
    partial void OnArrivalLocationCodeChanged();
    partial void OnArrivalPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalPlanDateChanged();
    partial void OnRegistrationPlanMonthChanging(string value);
    partial void OnRegistrationPlanMonthChanged();
    partial void OnRegistrationPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationPlanDateChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnGracePeriodChanging(string value);
    partial void OnGracePeriodChanged();
    partial void OnPayDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPayDueDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDocumentReceiptPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentReceiptPlanDateChanged();
    partial void OnDocumentReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentReceiptDateChanged();
    partial void OnStopFlagChanging(string value);
    partial void OnStopFlagChanged();
    partial void OnSupplierPaymentCodeChanging(string value);
    partial void OnSupplierPaymentCodeChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnPurchasePlanStatusChanging(string value);
    partial void OnPurchasePlanStatusChanged();
    partial void OnRegistrationStatusChanging(string value);
    partial void OnRegistrationStatusChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnMakerShipmentPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMakerShipmentPlanDateChanged();
    partial void OnReInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReInspectionDateChanged();
    partial void OnRegistMonthChanging(string value);
    partial void OnRegistMonthChanged();
    partial void OnDocumentPurchaseRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentPurchaseRequestDateChanged();
    partial void OnFirmChanging(string value);
    partial void OnFirmChanged();
    partial void OnDocumentPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentPurchaseDateChanged();
    partial void OnVehiclePriceChanging(System.Nullable<decimal> value);
    partial void OnVehiclePriceChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnMetallicPriceChanging(System.Nullable<decimal> value);
    partial void OnMetallicPriceChanged();
    partial void OnOptionPriceChanging(System.Nullable<decimal> value);
    partial void OnOptionPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnFirmMarginChanging(System.Nullable<decimal> value);
    partial void OnFirmMarginChanged();
    #endregion
		
		public CarPurchaseOrder()
		{
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._Location = default(EntityRef<Location>);
			this._Employee = default(EntityRef<Employee>);
			this._Office = default(EntityRef<Office>);
			this._SalesCar = default(EntityRef<SalesCar>);
			this._SupplierPayment = default(EntityRef<SupplierPayment>);
			this._Supplier = default(EntityRef<Supplier>);
			this._c_RegistMonth = default(EntityRef<c_RegistMonth>);
			this._c_Firm = default(EntityRef<c_Firm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseOrderId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseOrderNumber
		{
			get
			{
				return this._CarPurchaseOrderId;
			}
			set
			{
				if ((this._CarPurchaseOrderId != value))
				{
					this.OnCarPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseOrderId = value;
					this.SendPropertyChanged("CarPurchaseOrderNumber");
					this.OnCarPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderStatus
		{
			get
			{
				return this._PurchaseOrderStatus;
			}
			set
			{
				if ((this._PurchaseOrderStatus != value))
				{
					this.OnPurchaseOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderStatus = value;
					this.SendPropertyChanged("PurchaseOrderStatus");
					this.OnPurchaseOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReservationStatus
		{
			get
			{
				return this._ReservationStatus;
			}
			set
			{
				if ((this._ReservationStatus != value))
				{
					this.OnReservationStatusChanging(value);
					this.SendPropertyChanging();
					this._ReservationStatus = value;
					this.SendPropertyChanged("ReservationStatus");
					this.OnReservationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					if (this._SalesCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this.OnPurchaseOrderDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderDate = value;
					this.SendPropertyChanged("PurchaseOrderDate");
					this.OnPurchaseOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this.OnMakerOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._MakerOrderNumber = value;
					this.SendPropertyChanged("MakerOrderNumber");
					this.OnMakerOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrangementNumber
		{
			get
			{
				return this._ArrangementNumber;
			}
			set
			{
				if ((this._ArrangementNumber != value))
				{
					this.OnArrangementNumberChanging(value);
					this.SendPropertyChanging();
					this._ArrangementNumber = value;
					this.SendPropertyChanged("ArrangementNumber");
					this.OnArrangementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDIDepartureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PDIDepartureDate
		{
			get
			{
				return this._PDIDepartureDate;
			}
			set
			{
				if ((this._PDIDepartureDate != value))
				{
					this.OnPDIDepartureDateChanging(value);
					this.SendPropertyChanging();
					this._PDIDepartureDate = value;
					this.SendPropertyChanged("PDIDepartureDate");
					this.OnPDIDepartureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MakerShipmentDate
		{
			get
			{
				return this._MakerShipmentDate;
			}
			set
			{
				if ((this._MakerShipmentDate != value))
				{
					this.OnMakerShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._MakerShipmentDate = value;
					this.SendPropertyChanged("MakerShipmentDate");
					this.OnMakerShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReserveLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReserveLocationCode
		{
			get
			{
				return this._ReserveLocationCode;
			}
			set
			{
				if ((this._ReserveLocationCode != value))
				{
					this.OnReserveLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._ReserveLocationCode = value;
					this.SendPropertyChanged("ReserveLocationCode");
					this.OnReserveLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionInformation", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectionInformation
		{
			get
			{
				return this._InspectionInformation;
			}
			set
			{
				if ((this._InspectionInformation != value))
				{
					this.OnInspectionInformationChanging(value);
					this.SendPropertyChanging();
					this._InspectionInformation = value;
					this.SendPropertyChanged("InspectionInformation");
					this.OnInspectionInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncentiveOfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string IncentiveOfficeCode
		{
			get
			{
				return this._IncentiveOfficeCode;
			}
			set
			{
				if ((this._IncentiveOfficeCode != value))
				{
					if (this._Office.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIncentiveOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._IncentiveOfficeCode = value;
					this.SendPropertyChanged("IncentiveOfficeCode");
					this.OnIncentiveOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrivalLocationCode
		{
			get
			{
				return this._ArrivalLocationCode;
			}
			set
			{
				if ((this._ArrivalLocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrivalLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalLocationCode = value;
					this.SendPropertyChanged("ArrivalLocationCode");
					this.OnArrivalLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this.OnArrivalPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalPlanDate = value;
					this.SendPropertyChanged("ArrivalPlanDate");
					this.OnArrivalPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationPlanMonth", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationPlanMonth
		{
			get
			{
				return this._RegistrationPlanMonth;
			}
			set
			{
				if ((this._RegistrationPlanMonth != value))
				{
					this.OnRegistrationPlanMonthChanging(value);
					this.SendPropertyChanging();
					this._RegistrationPlanMonth = value;
					this.SendPropertyChanged("RegistrationPlanMonth");
					this.OnRegistrationPlanMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationPlanDate
		{
			get
			{
				return this._RegistrationPlanDate;
			}
			set
			{
				if ((this._RegistrationPlanDate != value))
				{
					this.OnRegistrationPlanDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationPlanDate = value;
					this.SendPropertyChanged("RegistrationPlanDate");
					this.OnRegistrationPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GracePeriod", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string GracePeriod
		{
			get
			{
				return this._GracePeriod;
			}
			set
			{
				if ((this._GracePeriod != value))
				{
					this.OnGracePeriodChanging(value);
					this.SendPropertyChanging();
					this._GracePeriod = value;
					this.SendPropertyChanged("GracePeriod");
					this.OnGracePeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PayDueDate
		{
			get
			{
				return this._PayDueDate;
			}
			set
			{
				if ((this._PayDueDate != value))
				{
					this.OnPayDueDateChanging(value);
					this.SendPropertyChanging();
					this._PayDueDate = value;
					this.SendPropertyChanged("PayDueDate");
					this.OnPayDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReceiptPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentReceiptPlanDate
		{
			get
			{
				return this._DocumentReceiptPlanDate;
			}
			set
			{
				if ((this._DocumentReceiptPlanDate != value))
				{
					this.OnDocumentReceiptPlanDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentReceiptPlanDate = value;
					this.SendPropertyChanged("DocumentReceiptPlanDate");
					this.OnDocumentReceiptPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentReceiptDate
		{
			get
			{
				return this._DocumentReceiptDate;
			}
			set
			{
				if ((this._DocumentReceiptDate != value))
				{
					this.OnDocumentReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentReceiptDate = value;
					this.SendPropertyChanged("DocumentReceiptDate");
					this.OnDocumentReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StopFlag
		{
			get
			{
				return this._StopFlag;
			}
			set
			{
				if ((this._StopFlag != value))
				{
					this.OnStopFlagChanging(value);
					this.SendPropertyChanging();
					this._StopFlag = value;
					this.SendPropertyChanged("StopFlag");
					this.OnStopFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentCode
		{
			get
			{
				return this._SupplierPaymentCode;
			}
			set
			{
				if ((this._SupplierPaymentCode != value))
				{
					if (this._SupplierPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierPaymentCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierPaymentCode = value;
					this.SendPropertyChanged("SupplierPaymentCode");
					this.OnSupplierPaymentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchasePlanStatus
		{
			get
			{
				return this._PurchasePlanStatus;
			}
			set
			{
				if ((this._PurchasePlanStatus != value))
				{
					this.OnPurchasePlanStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchasePlanStatus = value;
					this.SendPropertyChanged("PurchasePlanStatus");
					this.OnPurchasePlanStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationStatus
		{
			get
			{
				return this._RegistrationStatus;
			}
			set
			{
				if ((this._RegistrationStatus != value))
				{
					this.OnRegistrationStatusChanging(value);
					this.SendPropertyChanging();
					this._RegistrationStatus = value;
					this.SendPropertyChanged("RegistrationStatus");
					this.OnRegistrationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerShipmentPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MakerShipmentPlanDate
		{
			get
			{
				return this._MakerShipmentPlanDate;
			}
			set
			{
				if ((this._MakerShipmentPlanDate != value))
				{
					this.OnMakerShipmentPlanDateChanging(value);
					this.SendPropertyChanging();
					this._MakerShipmentPlanDate = value;
					this.SendPropertyChanged("MakerShipmentPlanDate");
					this.OnMakerShipmentPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReInspectionDate
		{
			get
			{
				return this._ReInspectionDate;
			}
			set
			{
				if ((this._ReInspectionDate != value))
				{
					this.OnReInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._ReInspectionDate = value;
					this.SendPropertyChanged("ReInspectionDate");
					this.OnReInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistMonth", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistMonth
		{
			get
			{
				return this._RegistMonth;
			}
			set
			{
				if ((this._RegistMonth != value))
				{
					if (this._c_RegistMonth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistMonthChanging(value);
					this.SendPropertyChanging();
					this._RegistMonth = value;
					this.SendPropertyChanged("RegistMonth");
					this.OnRegistMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentPurchaseRequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentPurchaseRequestDate
		{
			get
			{
				return this._DocumentPurchaseRequestDate;
			}
			set
			{
				if ((this._DocumentPurchaseRequestDate != value))
				{
					this.OnDocumentPurchaseRequestDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentPurchaseRequestDate = value;
					this.SendPropertyChanged("DocumentPurchaseRequestDate");
					this.OnDocumentPurchaseRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firm", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Firm
		{
			get
			{
				return this._Firm;
			}
			set
			{
				if ((this._Firm != value))
				{
					if (this._c_Firm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFirmChanging(value);
					this.SendPropertyChanging();
					this._Firm = value;
					this.SendPropertyChanged("Firm");
					this.OnFirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentPurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentPurchaseDate
		{
			get
			{
				return this._DocumentPurchaseDate;
			}
			set
			{
				if ((this._DocumentPurchaseDate != value))
				{
					this.OnDocumentPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentPurchaseDate = value;
					this.SendPropertyChanged("DocumentPurchaseDate");
					this.OnDocumentPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> VehiclePrice
		{
			get
			{
				return this._VehiclePrice;
			}
			set
			{
				if ((this._VehiclePrice != value))
				{
					this.OnVehiclePriceChanging(value);
					this.SendPropertyChanging();
					this._VehiclePrice = value;
					this.SendPropertyChanged("VehiclePrice");
					this.OnVehiclePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetallicPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MetallicPrice
		{
			get
			{
				return this._MetallicPrice;
			}
			set
			{
				if ((this._MetallicPrice != value))
				{
					this.OnMetallicPriceChanging(value);
					this.SendPropertyChanging();
					this._MetallicPrice = value;
					this.SendPropertyChanged("MetallicPrice");
					this.OnMetallicPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OptionPrice
		{
			get
			{
				return this._OptionPrice;
			}
			set
			{
				if ((this._OptionPrice != value))
				{
					this.OnOptionPriceChanging(value);
					this.SendPropertyChanging();
					this._OptionPrice = value;
					this.SendPropertyChanged("OptionPrice");
					this.OnOptionPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmMargin", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirmMargin
		{
			get
			{
				return this._FirmMargin;
			}
			set
			{
				if ((this._FirmMargin != value))
				{
					this.OnFirmMarginChanging(value);
					this.SendPropertyChanging();
					this._FirmMargin = value;
					this.SendPropertyChanged("FirmMargin");
					this.OnFirmMarginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarPurchaseOrder_CarPurchase", Storage="_CarPurchase", ThisKey="CarPurchaseOrderNumber", OtherKey="CarPurchaseOrderNumber")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_CarPurchaseOrder", Storage="_Location", ThisKey="ArrivalLocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._ArrivalLocationCode = value.LocationCode;
					}
					else
					{
						this._ArrivalLocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchaseOrder", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_CarPurchaseOrder", Storage="_Office", ThisKey="IncentiveOfficeCode", OtherKey="OfficeCode", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._IncentiveOfficeCode = value.OfficeCode;
					}
					else
					{
						this._IncentiveOfficeCode = default(string);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarPurchaseOrder", Storage="_SalesCar", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber", IsForeignKey=true)]
		public SalesCar SalesCar
		{
			get
			{
				return this._SalesCar.Entity;
			}
			set
			{
				SalesCar previousValue = this._SalesCar.Entity;
				if (((previousValue != value) 
							|| (this._SalesCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesCar.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._SalesCar.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._SalesCarNumber = value.SalesCarNumber;
					}
					else
					{
						this._SalesCarNumber = default(string);
					}
					this.SendPropertyChanged("SalesCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_CarPurchaseOrder", Storage="_SupplierPayment", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode", IsForeignKey=true)]
		public SupplierPayment SupplierPayment
		{
			get
			{
				return this._SupplierPayment.Entity;
			}
			set
			{
				SupplierPayment previousValue = this._SupplierPayment.Entity;
				if (((previousValue != value) 
							|| (this._SupplierPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierPayment.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._SupplierPayment.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._SupplierPaymentCode = value.SupplierPaymentCode;
					}
					else
					{
						this._SupplierPaymentCode = default(string);
					}
					this.SendPropertyChanged("SupplierPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_CarPurchaseOrder", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RegistMonth_CarPurchaseOrder", Storage="_c_RegistMonth", ThisKey="RegistMonth", OtherKey="Code", IsForeignKey=true)]
		public c_RegistMonth c_RegistMonth
		{
			get
			{
				return this._c_RegistMonth.Entity;
			}
			set
			{
				c_RegistMonth previousValue = this._c_RegistMonth.Entity;
				if (((previousValue != value) 
							|| (this._c_RegistMonth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_RegistMonth.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._c_RegistMonth.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._RegistMonth = value.Code;
					}
					else
					{
						this._RegistMonth = default(string);
					}
					this.SendPropertyChanged("c_RegistMonth");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Firm_CarPurchaseOrder", Storage="_c_Firm", ThisKey="Firm", OtherKey="Code", IsForeignKey=true)]
		public c_Firm c_Firm
		{
			get
			{
				return this._c_Firm.Entity;
			}
			set
			{
				c_Firm previousValue = this._c_Firm.Entity;
				if (((previousValue != value) 
							|| (this._c_Firm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Firm.Entity = null;
						previousValue.CarPurchaseOrder.Remove(this);
					}
					this._c_Firm.Entity = value;
					if ((value != null))
					{
						value.CarPurchaseOrder.Add(this);
						this._Firm = value.Code;
					}
					else
					{
						this._Firm = default(string);
					}
					this.SendPropertyChanged("c_Firm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.CarPurchaseOrder = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.CarPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceRequest")]
	public partial class ServiceRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServiceRequestId;
		
		private string _OriginalSlipNumber;
		
		private string _OwnershipChange;
		
		private string _AnnualInspection;
		
		private string _InsuranceInheritance;
		
		private string _Memo;
		
		private System.Nullable<System.DateTime> _DeliveryRequirement;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _DepartmentCode;
		
		private EntitySet<ServiceRequestLine> _ServiceRequestLine;
		
		private EntityRef<c_OwnershipChange> _c_OwnershipChange;
		
		private EntityRef<c_OnOff> _c_AnnualInspection;
		
		private EntityRef<c_OnOff> _c_InsuranceInheritance;
		
		private EntityRef<Department> _Department;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceRequestIdChanging(System.Guid value);
    partial void OnServiceRequestIdChanged();
    partial void OnOriginalSlipNumberChanging(string value);
    partial void OnOriginalSlipNumberChanged();
    partial void OnOwnershipChangeChanging(string value);
    partial void OnOwnershipChangeChanged();
    partial void OnAnnualInspectionChanging(string value);
    partial void OnAnnualInspectionChanged();
    partial void OnInsuranceInheritanceChanging(string value);
    partial void OnInsuranceInheritanceChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDeliveryRequirementChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryRequirementChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    #endregion
		
		public ServiceRequest()
		{
			this._ServiceRequestLine = new EntitySet<ServiceRequestLine>(new Action<ServiceRequestLine>(this.attach_ServiceRequestLine), new Action<ServiceRequestLine>(this.detach_ServiceRequestLine));
			this._c_OwnershipChange = default(EntityRef<c_OwnershipChange>);
			this._c_AnnualInspection = default(EntityRef<c_OnOff>);
			this._c_InsuranceInheritance = default(EntityRef<c_OnOff>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRequestId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServiceRequestId
		{
			get
			{
				return this._ServiceRequestId;
			}
			set
			{
				if ((this._ServiceRequestId != value))
				{
					this.OnServiceRequestIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceRequestId = value;
					this.SendPropertyChanged("ServiceRequestId");
					this.OnServiceRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OriginalSlipNumber
		{
			get
			{
				return this._OriginalSlipNumber;
			}
			set
			{
				if ((this._OriginalSlipNumber != value))
				{
					this.OnOriginalSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._OriginalSlipNumber = value;
					this.SendPropertyChanged("OriginalSlipNumber");
					this.OnOriginalSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipChange", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnershipChange
		{
			get
			{
				return this._OwnershipChange;
			}
			set
			{
				if ((this._OwnershipChange != value))
				{
					if (this._c_OwnershipChange.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnershipChangeChanging(value);
					this.SendPropertyChanging();
					this._OwnershipChange = value;
					this.SendPropertyChanged("OwnershipChange");
					this.OnOwnershipChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualInspection", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AnnualInspection
		{
			get
			{
				return this._AnnualInspection;
			}
			set
			{
				if ((this._AnnualInspection != value))
				{
					if (this._c_AnnualInspection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnnualInspectionChanging(value);
					this.SendPropertyChanging();
					this._AnnualInspection = value;
					this.SendPropertyChanged("AnnualInspection");
					this.OnAnnualInspectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsuranceInheritance", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InsuranceInheritance
		{
			get
			{
				return this._InsuranceInheritance;
			}
			set
			{
				if ((this._InsuranceInheritance != value))
				{
					if (this._c_InsuranceInheritance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsuranceInheritanceChanging(value);
					this.SendPropertyChanging();
					this._InsuranceInheritance = value;
					this.SendPropertyChanged("InsuranceInheritance");
					this.OnInsuranceInheritanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryRequirement", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryRequirement
		{
			get
			{
				return this._DeliveryRequirement;
			}
			set
			{
				if ((this._DeliveryRequirement != value))
				{
					this.OnDeliveryRequirementChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRequirement = value;
					this.SendPropertyChanged("DeliveryRequirement");
					this.OnDeliveryRequirementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceRequest_ServiceRequestLine", Storage="_ServiceRequestLine", ThisKey="ServiceRequestId", OtherKey="ServiceRequestId")]
		public EntitySet<ServiceRequestLine> ServiceRequestLine
		{
			get
			{
				return this._ServiceRequestLine;
			}
			set
			{
				this._ServiceRequestLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OwnershipChange_ServiceRequest", Storage="_c_OwnershipChange", ThisKey="OwnershipChange", OtherKey="Code", IsForeignKey=true)]
		public c_OwnershipChange c_OwnershipChange
		{
			get
			{
				return this._c_OwnershipChange.Entity;
			}
			set
			{
				c_OwnershipChange previousValue = this._c_OwnershipChange.Entity;
				if (((previousValue != value) 
							|| (this._c_OwnershipChange.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OwnershipChange.Entity = null;
						previousValue.ServiceRequest.Remove(this);
					}
					this._c_OwnershipChange.Entity = value;
					if ((value != null))
					{
						value.ServiceRequest.Add(this);
						this._OwnershipChange = value.Code;
					}
					else
					{
						this._OwnershipChange = default(string);
					}
					this.SendPropertyChanged("c_OwnershipChange");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_ServiceRequest", Storage="_c_AnnualInspection", ThisKey="AnnualInspection", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_AnnualInspection
		{
			get
			{
				return this._c_AnnualInspection.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_AnnualInspection.Entity;
				if (((previousValue != value) 
							|| (this._c_AnnualInspection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_AnnualInspection.Entity = null;
						previousValue.ServiceRequest.Remove(this);
					}
					this._c_AnnualInspection.Entity = value;
					if ((value != null))
					{
						value.ServiceRequest.Add(this);
						this._AnnualInspection = value.Code;
					}
					else
					{
						this._AnnualInspection = default(string);
					}
					this.SendPropertyChanged("c_AnnualInspection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_ServiceRequest1", Storage="_c_InsuranceInheritance", ThisKey="InsuranceInheritance", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_InsuranceInheritance
		{
			get
			{
				return this._c_InsuranceInheritance.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_InsuranceInheritance.Entity;
				if (((previousValue != value) 
							|| (this._c_InsuranceInheritance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_InsuranceInheritance.Entity = null;
						previousValue.ServiceRequest1.Remove(this);
					}
					this._c_InsuranceInheritance.Entity = value;
					if ((value != null))
					{
						value.ServiceRequest1.Add(this);
						this._InsuranceInheritance = value.Code;
					}
					else
					{
						this._InsuranceInheritance = default(string);
					}
					this.SendPropertyChanged("c_InsuranceInheritance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ServiceRequest", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.ServiceRequest.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.ServiceRequest.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceRequest = this;
		}
		
		private void detach_ServiceRequestLine(ServiceRequestLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskConfig")]
	public partial class TaskConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskConfigId;
		
		private string _TaskName;
		
		private string _TaskTrigger;
		
		private string _PopUp;
		
		private string _DelFlag;
		
		private string _SecurityLevelCode;
		
		private string _ConpleteCondition;
		
		private string _TaskType;
		
		private System.Nullable<bool> _Visible;
		
		private EntitySet<Task> _Task;
		
		private EntitySet<TaskRole> _TaskRole;
		
		private EntityRef<c_SecurityLevel> _c_SecurityLevel;
		
		private EntityRef<c_OnOff> _c_OnOff;
		
		private EntityRef<c_TaskType> _c_TaskType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskConfigIdChanging(string value);
    partial void OnTaskConfigIdChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskTriggerChanging(string value);
    partial void OnTaskTriggerChanged();
    partial void OnPopUpChanging(string value);
    partial void OnPopUpChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSecurityLevelCodeChanging(string value);
    partial void OnSecurityLevelCodeChanged();
    partial void OnCompleteConditionChanging(string value);
    partial void OnCompleteConditionChanged();
    partial void OnTaskTypeChanging(string value);
    partial void OnTaskTypeChanged();
    partial void OnVisibleChanging(System.Nullable<bool> value);
    partial void OnVisibleChanged();
    #endregion
		
		public TaskConfig()
		{
			this._Task = new EntitySet<Task>(new Action<Task>(this.attach_Task), new Action<Task>(this.detach_Task));
			this._TaskRole = new EntitySet<TaskRole>(new Action<TaskRole>(this.attach_TaskRole), new Action<TaskRole>(this.detach_TaskRole));
			this._c_SecurityLevel = default(EntityRef<c_SecurityLevel>);
			this._c_OnOff = default(EntityRef<c_OnOff>);
			this._c_TaskType = default(EntityRef<c_TaskType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskConfigId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskConfigId
		{
			get
			{
				return this._TaskConfigId;
			}
			set
			{
				if ((this._TaskConfigId != value))
				{
					this.OnTaskConfigIdChanging(value);
					this.SendPropertyChanging();
					this._TaskConfigId = value;
					this.SendPropertyChanged("TaskConfigId");
					this.OnTaskConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskTrigger", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskTrigger
		{
			get
			{
				return this._TaskTrigger;
			}
			set
			{
				if ((this._TaskTrigger != value))
				{
					this.OnTaskTriggerChanging(value);
					this.SendPropertyChanging();
					this._TaskTrigger = value;
					this.SendPropertyChanged("TaskTrigger");
					this.OnTaskTriggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopUp", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PopUp
		{
			get
			{
				return this._PopUp;
			}
			set
			{
				if ((this._PopUp != value))
				{
					if (this._c_OnOff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPopUpChanging(value);
					this.SendPropertyChanging();
					this._PopUp = value;
					this.SendPropertyChanged("PopUp");
					this.OnPopUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityLevelCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityLevelCode
		{
			get
			{
				return this._SecurityLevelCode;
			}
			set
			{
				if ((this._SecurityLevelCode != value))
				{
					if (this._c_SecurityLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityLevelCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityLevelCode = value;
					this.SendPropertyChanged("SecurityLevelCode");
					this.OnSecurityLevelCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConpleteCondition", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompleteCondition
		{
			get
			{
				return this._ConpleteCondition;
			}
			set
			{
				if ((this._ConpleteCondition != value))
				{
					this.OnCompleteConditionChanging(value);
					this.SendPropertyChanging();
					this._ConpleteCondition = value;
					this.SendPropertyChanged("CompleteCondition");
					this.OnCompleteConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskType", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskType
		{
			get
			{
				return this._TaskType;
			}
			set
			{
				if ((this._TaskType != value))
				{
					if (this._c_TaskType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskTypeChanging(value);
					this.SendPropertyChanging();
					this._TaskType = value;
					this.SendPropertyChanged("TaskType");
					this.OnTaskTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit")]
		public System.Nullable<bool> Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskConfig_Task", Storage="_Task", ThisKey="TaskConfigId", OtherKey="TaskConfigId")]
		public EntitySet<Task> Task
		{
			get
			{
				return this._Task;
			}
			set
			{
				this._Task.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskConfig_TaskRole", Storage="_TaskRole", ThisKey="TaskConfigId", OtherKey="TaskConfigId")]
		public EntitySet<TaskRole> TaskRole
		{
			get
			{
				return this._TaskRole;
			}
			set
			{
				this._TaskRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SecurityLevel_TaskConfig", Storage="_c_SecurityLevel", ThisKey="SecurityLevelCode", OtherKey="Code", IsForeignKey=true)]
		public c_SecurityLevel c_SecurityLevel
		{
			get
			{
				return this._c_SecurityLevel.Entity;
			}
			set
			{
				c_SecurityLevel previousValue = this._c_SecurityLevel.Entity;
				if (((previousValue != value) 
							|| (this._c_SecurityLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_SecurityLevel.Entity = null;
						previousValue.TaskConfig.Remove(this);
					}
					this._c_SecurityLevel.Entity = value;
					if ((value != null))
					{
						value.TaskConfig.Add(this);
						this._SecurityLevelCode = value.Code;
					}
					else
					{
						this._SecurityLevelCode = default(string);
					}
					this.SendPropertyChanged("c_SecurityLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OnOff_TaskConfig", Storage="_c_OnOff", ThisKey="PopUp", OtherKey="Code", IsForeignKey=true)]
		public c_OnOff c_OnOff
		{
			get
			{
				return this._c_OnOff.Entity;
			}
			set
			{
				c_OnOff previousValue = this._c_OnOff.Entity;
				if (((previousValue != value) 
							|| (this._c_OnOff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OnOff.Entity = null;
						previousValue.TaskConfig.Remove(this);
					}
					this._c_OnOff.Entity = value;
					if ((value != null))
					{
						value.TaskConfig.Add(this);
						this._PopUp = value.Code;
					}
					else
					{
						this._PopUp = default(string);
					}
					this.SendPropertyChanged("c_OnOff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaskType_TaskConfig", Storage="_c_TaskType", ThisKey="TaskType", OtherKey="Code", IsForeignKey=true)]
		public c_TaskType c_TaskType
		{
			get
			{
				return this._c_TaskType.Entity;
			}
			set
			{
				c_TaskType previousValue = this._c_TaskType.Entity;
				if (((previousValue != value) 
							|| (this._c_TaskType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TaskType.Entity = null;
						previousValue.TaskConfig.Remove(this);
					}
					this._c_TaskType.Entity = value;
					if ((value != null))
					{
						value.TaskConfig.Add(this);
						this._TaskType = value.Code;
					}
					else
					{
						this._TaskType = default(string);
					}
					this.SendPropertyChanged("c_TaskType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.TaskConfig = this;
		}
		
		private void detach_Task(Task entity)
		{
			this.SendPropertyChanging();
			entity.TaskConfig = null;
		}
		
		private void attach_TaskRole(TaskRole entity)
		{
			this.SendPropertyChanging();
			entity.TaskConfig = this;
		}
		
		private void detach_TaskRole(TaskRole entity)
		{
			this.SendPropertyChanging();
			entity.TaskConfig = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskRole")]
	public partial class TaskRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskConfigId;
		
		private string _SecurityRoleCode;
		
		private bool _EnableFlag;
		
		private EntityRef<TaskConfig> _TaskConfig;
		
		private EntityRef<SecurityRole> _SecurityRole;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskConfigIdChanging(string value);
    partial void OnTaskConfigIdChanged();
    partial void OnSecurityRoleCodeChanging(string value);
    partial void OnSecurityRoleCodeChanged();
    partial void OnEnableFlagChanging(bool value);
    partial void OnEnableFlagChanged();
    #endregion
		
		public TaskRole()
		{
			this._TaskConfig = default(EntityRef<TaskConfig>);
			this._SecurityRole = default(EntityRef<SecurityRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskConfigId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaskConfigId
		{
			get
			{
				return this._TaskConfigId;
			}
			set
			{
				if ((this._TaskConfigId != value))
				{
					if (this._TaskConfig.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskConfigIdChanging(value);
					this.SendPropertyChanging();
					this._TaskConfigId = value;
					this.SendPropertyChanged("TaskConfigId");
					this.OnTaskConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleCode
		{
			get
			{
				return this._SecurityRoleCode;
			}
			set
			{
				if ((this._SecurityRoleCode != value))
				{
					if (this._SecurityRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSecurityRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleCode = value;
					this.SendPropertyChanged("SecurityRoleCode");
					this.OnSecurityRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableFlag", DbType="Bit NOT NULL")]
		public bool EnableFlag
		{
			get
			{
				return this._EnableFlag;
			}
			set
			{
				if ((this._EnableFlag != value))
				{
					this.OnEnableFlagChanging(value);
					this.SendPropertyChanging();
					this._EnableFlag = value;
					this.SendPropertyChanged("EnableFlag");
					this.OnEnableFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskConfig_TaskRole", Storage="_TaskConfig", ThisKey="TaskConfigId", OtherKey="TaskConfigId", IsForeignKey=true)]
		public TaskConfig TaskConfig
		{
			get
			{
				return this._TaskConfig.Entity;
			}
			set
			{
				TaskConfig previousValue = this._TaskConfig.Entity;
				if (((previousValue != value) 
							|| (this._TaskConfig.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskConfig.Entity = null;
						previousValue.TaskRole.Remove(this);
					}
					this._TaskConfig.Entity = value;
					if ((value != null))
					{
						value.TaskRole.Add(this);
						this._TaskConfigId = value.TaskConfigId;
					}
					else
					{
						this._TaskConfigId = default(string);
					}
					this.SendPropertyChanged("TaskConfig");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SecurityRole_TaskRole", Storage="_SecurityRole", ThisKey="SecurityRoleCode", OtherKey="SecurityRoleCode", IsForeignKey=true)]
		public SecurityRole SecurityRole
		{
			get
			{
				return this._SecurityRole.Entity;
			}
			set
			{
				SecurityRole previousValue = this._SecurityRole.Entity;
				if (((previousValue != value) 
							|| (this._SecurityRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SecurityRole.Entity = null;
						previousValue.TaskRole.Remove(this);
					}
					this._SecurityRole.Entity = value;
					if ((value != null))
					{
						value.TaskRole.Add(this);
						this._SecurityRoleCode = value.SecurityRoleCode;
					}
					else
					{
						this._SecurityRoleCode = default(string);
					}
					this.SendPropertyChanged("SecurityRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_SecurityLevel")]
	public partial class c_SecurityLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SecurityRole> _SecurityRole;
		
		private EntitySet<TaskConfig> _TaskConfig;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_SecurityLevel()
		{
			this._SecurityRole = new EntitySet<SecurityRole>(new Action<SecurityRole>(this.attach_SecurityRole), new Action<SecurityRole>(this.detach_SecurityRole));
			this._TaskConfig = new EntitySet<TaskConfig>(new Action<TaskConfig>(this.attach_TaskConfig), new Action<TaskConfig>(this.detach_TaskConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SecurityLevel_SecurityRole", Storage="_SecurityRole", ThisKey="Code", OtherKey="SecurityLevelCode")]
		public EntitySet<SecurityRole> SecurityRole
		{
			get
			{
				return this._SecurityRole;
			}
			set
			{
				this._SecurityRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_SecurityLevel_TaskConfig", Storage="_TaskConfig", ThisKey="Code", OtherKey="SecurityLevelCode")]
		public EntitySet<TaskConfig> TaskConfig
		{
			get
			{
				return this._TaskConfig;
			}
			set
			{
				this._TaskConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SecurityRole(SecurityRole entity)
		{
			this.SendPropertyChanging();
			entity.c_SecurityLevel = this;
		}
		
		private void detach_SecurityRole(SecurityRole entity)
		{
			this.SendPropertyChanging();
			entity.c_SecurityLevel = null;
		}
		
		private void attach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_SecurityLevel = this;
		}
		
		private void detach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_SecurityLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ServiceReceiptTarget")]
	public partial class V_ServiceReceiptTarget
	{
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _FamilyNameKana;
		
		private string _CustomerAddress;
		
		private string _TelNumber;
		
		private string _MobileNumber;
		
		private System.Nullable<System.DateTime> _FirstReceiptionDate;
		
		private System.Nullable<System.DateTime> _LastReceiptionDate;
		
		private string _SalesCarId;
		
		private string _Vin;
		
		private string _RegistrationNumberPlate;
		
		private string _CarGradeName;
		
		private string _CarName;
		
		private string _MakerName;
		
		private string _EmployeeName;
		
		private char _CustomerNameCtrl;
		
		private char _MakerNameCtrl;
		
		private char _CarNameCtrl;
		
		private char _CarGradeNameCtrl;
		
		private char _RegistrationNumberPlateCtrl;
		
		private char _VinCtrl;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _ModelName;
		
		private string _MorterViecleOfficialCode;
		
		public V_ServiceReceiptTarget()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerNameKana
		{
			get
			{
				return this._FamilyNameKana;
			}
			set
			{
				if ((this._FamilyNameKana != value))
				{
					this._FamilyNameKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this._CustomerAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this._TelNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstReceiptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstReceiptionDate
		{
			get
			{
				return this._FirstReceiptionDate;
			}
			set
			{
				if ((this._FirstReceiptionDate != value))
				{
					this._FirstReceiptionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReceiptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReceiptionDate
		{
			get
			{
				return this._LastReceiptionDate;
			}
			set
			{
				if ((this._LastReceiptionDate != value))
				{
					this._LastReceiptionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					this._SalesCarId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this._RegistrationNumberPlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNameCtrl", DbType="VarChar(1) NOT NULL")]
		public char CustomerNameCtrl
		{
			get
			{
				return this._CustomerNameCtrl;
			}
			set
			{
				if ((this._CustomerNameCtrl != value))
				{
					this._CustomerNameCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerNameCtrl", DbType="VarChar(1) NOT NULL")]
		public char MakerNameCtrl
		{
			get
			{
				return this._MakerNameCtrl;
			}
			set
			{
				if ((this._MakerNameCtrl != value))
				{
					this._MakerNameCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarNameCtrl", DbType="VarChar(1) NOT NULL")]
		public char CarNameCtrl
		{
			get
			{
				return this._CarNameCtrl;
			}
			set
			{
				if ((this._CarNameCtrl != value))
				{
					this._CarNameCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeNameCtrl", DbType="VarChar(1) NOT NULL")]
		public char CarGradeNameCtrl
		{
			get
			{
				return this._CarGradeNameCtrl;
			}
			set
			{
				if ((this._CarGradeNameCtrl != value))
				{
					this._CarGradeNameCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlateCtrl", DbType="VarChar(1) NOT NULL")]
		public char RegistrationNumberPlateCtrl
		{
			get
			{
				return this._RegistrationNumberPlateCtrl;
			}
			set
			{
				if ((this._RegistrationNumberPlateCtrl != value))
				{
					this._RegistrationNumberPlateCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VinCtrl", DbType="VarChar(1) NOT NULL")]
		public char VinCtrl
		{
			get
			{
				return this._VinCtrl;
			}
			set
			{
				if ((this._VinCtrl != value))
				{
					this._VinCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this._RegistrationNumberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this._RegistrationNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this._MorterViecleOfficialCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Purpose")]
	public partial class c_Purpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Purpose()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Purpose_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="Purpose")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Purpose = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Purpose = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_KnowOpportunity")]
	public partial class c_KnowOpportunity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_KnowOpportunity()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_KnowOpportunity_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="KnowOpportunity")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_KnowOpportunity = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_KnowOpportunity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Demand")]
	public partial class c_Demand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Demand()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Demand_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="Demand")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Demand = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_Demand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_AttractivePoint")]
	public partial class c_AttractivePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CustomerReceiption> _CustomerReceiption;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_AttractivePoint()
		{
			this._CustomerReceiption = new EntitySet<CustomerReceiption>(new Action<CustomerReceiption>(this.attach_CustomerReceiption), new Action<CustomerReceiption>(this.detach_CustomerReceiption));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AttractivePoint_CustomerReceiption", Storage="_CustomerReceiption", ThisKey="Code", OtherKey="AttractivePoint")]
		public EntitySet<CustomerReceiption> CustomerReceiption
		{
			get
			{
				return this._CustomerReceiption;
			}
			set
			{
				this._CustomerReceiption.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_AttractivePoint = this;
		}
		
		private void detach_CustomerReceiption(CustomerReceiption entity)
		{
			this.SendPropertyChanging();
			entity.c_AttractivePoint = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_TaskType")]
	public partial class c_TaskType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<TaskConfig> _TaskConfig;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_TaskType()
		{
			this._TaskConfig = new EntitySet<TaskConfig>(new Action<TaskConfig>(this.attach_TaskConfig), new Action<TaskConfig>(this.detach_TaskConfig));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TaskType_TaskConfig", Storage="_TaskConfig", ThisKey="Code", OtherKey="TaskType")]
		public EntitySet<TaskConfig> TaskConfig
		{
			get
			{
				return this._TaskConfig;
			}
			set
			{
				this._TaskConfig.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_TaskType = this;
		}
		
		private void detach_TaskConfig(TaskConfig entity)
		{
			this.SendPropertyChanging();
			entity.c_TaskType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PurchaseStatus")]
	public partial class c_PurchaseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PurchaseStatus()
		{
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseStatus_CarPurchase", Storage="_CarPurchase", ThisKey="Code", OtherKey="PurchaseStatus")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseStatus_PartsPurchase", Storage="_PartsPurchase", ThisKey="Code", OtherKey="PurchaseStatus")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseStatus = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseStatus = null;
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseStatus = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarAppraisal")]
	public partial class CarAppraisal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarAppraisalId;
		
		private string _SlipNumber;
		
		private string _PurchaseCreated;
		
		private string _DepartmentCode;
		
		private string _EmployeeCode;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _FirstRegistrationYear;
		
		private string _CarClassification;
		
		private string _Usage;
		
		private string _UsageType;
		
		private string _Figure;
		
		private string _MakerName;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _MaximumLoadingWeight;
		
		private System.Nullable<int> _CarWeight;
		
		private System.Nullable<int> _TotalCarWeight;
		
		private string _Vin;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _FFAxileWeight;
		
		private System.Nullable<int> _FRAxileWeight;
		
		private System.Nullable<int> _RFAxileWeight;
		
		private System.Nullable<int> _RRAxileWeight;
		
		private string _ModelName;
		
		private string _EngineType;
		
		private System.Nullable<decimal> _Displacement;
		
		private string _Fuel;
		
		private string _ClassificationTypeNumber;
		
		private string _ModelSpecificateNumber;
		
		private string _PossesorName;
		
		private string _PossesorAddress;
		
		private string _UserName;
		
		private string _UserAddress;
		
		private string _PrincipalPlace;
		
		private System.Nullable<System.DateTime> _InspectionExpireDate;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _MileageUnit;
		
		private string _Memo;
		
		private string _ModelYear;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private string _Door;
		
		private string _TransMission;
		
		private string _ExteriorColorName;
		
		private string _ChangeColor;
		
		private string _OriginalColorName;
		
		private string _InteriorColorName;
		
		private string _MakerWarranty;
		
		private string _Instructions;
		
		private string _Steering;
		
		private string _Import;
		
		private string _Light;
		
		private string _Aw;
		
		private string _Aero;
		
		private string _Sr;
		
		private string _Cd;
		
		private string _Md;
		
		private string _NaviType;
		
		private string _NaviEquipment;
		
		private string _NaviDashboard;
		
		private string _SeatColor;
		
		private string _SeatType;
		
		private string _UsVin;
		
		private string _Recycle;
		
		private string _RecycleTicket;
		
		private string _RecycleNumber;
		
		private System.Nullable<decimal> _RecycleAmount;
		
		private System.Nullable<decimal> _RemainDebt;
		
		private System.Nullable<decimal> _CarTaxUnexpiredAmount;
		
		private string _ExteriorEvaluation;
		
		private string _InteriorEvaluation;
		
		private string _ReparationRecord;
		
		private string _Evaluation;
		
		private System.Nullable<decimal> _AppraisalPrice;
		
		private string _Remarks;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _CarGradeCode;
		
		private string _DocumentComplete;
		
		private string _DocumentRemarks;
		
		private string _RemainDebtPayee;
		
		private string _EraseRegist;
		
		private System.Nullable<System.DateTime> _PurchasePlanDate;
		
		private string _OwnerCode;
		
		private string _UserCode;
		
		private System.Nullable<System.DateTime> _AppraisalDate;
		
		private System.Nullable<System.DateTime> _PurchaseAgreementDate;
		
		private string _ConsumptionTaxId;
		
		private int _Rate;
		
		private string _LastEditScreen;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist;
		
		private EntityRef<c_Fuel> _c_Fuel;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarAppraisalIdChanging(System.Guid value);
    partial void OnCarAppraisalIdChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnPurchaseCreatedChanging(string value);
    partial void OnPurchaseCreatedChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnRegistrationNumberTypeChanging(string value);
    partial void OnRegistrationNumberTypeChanged();
    partial void OnRegistrationNumberKanaChanging(string value);
    partial void OnRegistrationNumberKanaChanged();
    partial void OnRegistrationNumberPlateChanging(string value);
    partial void OnRegistrationNumberPlateChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnFirstRegistrationYearChanging(string value);
    partial void OnFirstRegistrationYearChanged();
    partial void OnCarClassificationChanging(string value);
    partial void OnCarClassificationChanged();
    partial void OnUsageChanging(string value);
    partial void OnUsageChanged();
    partial void OnUsageTypeChanging(string value);
    partial void OnUsageTypeChanged();
    partial void OnFigureChanging(string value);
    partial void OnFigureChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnMaximumLoadingWeightChanging(System.Nullable<int> value);
    partial void OnMaximumLoadingWeightChanged();
    partial void OnCarWeightChanging(System.Nullable<int> value);
    partial void OnCarWeightChanged();
    partial void OnTotalCarWeightChanging(System.Nullable<int> value);
    partial void OnTotalCarWeightChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFFAxileWeightChanging(System.Nullable<int> value);
    partial void OnFFAxileWeightChanged();
    partial void OnFRAxileWeightChanging(System.Nullable<int> value);
    partial void OnFRAxileWeightChanged();
    partial void OnRFAxileWeightChanging(System.Nullable<int> value);
    partial void OnRFAxileWeightChanged();
    partial void OnRRAxileWeightChanging(System.Nullable<int> value);
    partial void OnRRAxileWeightChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnDisplacementChanging(System.Nullable<decimal> value);
    partial void OnDisplacementChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnModelSpecificateNumberChanging(string value);
    partial void OnModelSpecificateNumberChanged();
    partial void OnClassificationTypeNumberChanging(string value);
    partial void OnClassificationTypeNumberChanged();
    partial void OnPossesorNameChanging(string value);
    partial void OnPossesorNameChanged();
    partial void OnPossesorAddressChanging(string value);
    partial void OnPossesorAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnPrincipalPlaceChanging(string value);
    partial void OnPrincipalPlaceChanged();
    partial void OnInspectionExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionExpireDateChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnModelYearChanging(string value);
    partial void OnModelYearChanged();
    partial void OnCarBrandNameChanging(string value);
    partial void OnCarBrandNameChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCarGradeNameChanging(string value);
    partial void OnCarGradeNameChanged();
    partial void OnDoorChanging(string value);
    partial void OnDoorChanged();
    partial void OnTransMissionChanging(string value);
    partial void OnTransMissionChanged();
    partial void OnExteriorColorNameChanging(string value);
    partial void OnExteriorColorNameChanged();
    partial void OnChangeColorChanging(string value);
    partial void OnChangeColorChanged();
    partial void OnOriginalColorNameChanging(string value);
    partial void OnOriginalColorNameChanged();
    partial void OnInteriorColorNameChanging(string value);
    partial void OnInteriorColorNameChanged();
    partial void OnGuaranteeChanging(string value);
    partial void OnGuaranteeChanged();
    partial void OnInstructionsChanging(string value);
    partial void OnInstructionsChanged();
    partial void OnSteeringChanging(string value);
    partial void OnSteeringChanged();
    partial void OnImportChanging(string value);
    partial void OnImportChanged();
    partial void OnLightChanging(string value);
    partial void OnLightChanged();
    partial void OnAwChanging(string value);
    partial void OnAwChanged();
    partial void OnAeroChanging(string value);
    partial void OnAeroChanged();
    partial void OnSrChanging(string value);
    partial void OnSrChanged();
    partial void OnCdChanging(string value);
    partial void OnCdChanged();
    partial void OnMdChanging(string value);
    partial void OnMdChanged();
    partial void OnNaviTypeChanging(string value);
    partial void OnNaviTypeChanged();
    partial void OnNaviEquipmentChanging(string value);
    partial void OnNaviEquipmentChanged();
    partial void OnNaviDashboardChanging(string value);
    partial void OnNaviDashboardChanged();
    partial void OnSeatColorChanging(string value);
    partial void OnSeatColorChanged();
    partial void OnSeatTypeChanging(string value);
    partial void OnSeatTypeChanged();
    partial void OnUsVinChanging(string value);
    partial void OnUsVinChanged();
    partial void OnRecycleChanging(string value);
    partial void OnRecycleChanged();
    partial void OnRecycleTicketChanging(string value);
    partial void OnRecycleTicketChanged();
    partial void OnRecycleNumberChanging(string value);
    partial void OnRecycleNumberChanged();
    partial void OnRecycleDepositChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositChanged();
    partial void OnRemainDebtChanging(System.Nullable<decimal> value);
    partial void OnRemainDebtChanged();
    partial void OnCarTaxUnexpiredAmountChanging(System.Nullable<decimal> value);
    partial void OnCarTaxUnexpiredAmountChanged();
    partial void OnExteriorEvaluationChanging(string value);
    partial void OnExteriorEvaluationChanged();
    partial void OnInteriorEvaluationChanging(string value);
    partial void OnInteriorEvaluationChanged();
    partial void OnReparationRecordChanging(string value);
    partial void OnReparationRecordChanged();
    partial void OnEvaluationChanging(string value);
    partial void OnEvaluationChanged();
    partial void OnAppraisalPriceChanging(System.Nullable<decimal> value);
    partial void OnAppraisalPriceChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnDocumentCompleteChanging(string value);
    partial void OnDocumentCompleteChanged();
    partial void OnDocumentRemarksChanging(string value);
    partial void OnDocumentRemarksChanged();
    partial void OnRemainDebtPayeeChanging(string value);
    partial void OnRemainDebtPayeeChanged();
    partial void OnEraseRegistChanging(string value);
    partial void OnEraseRegistChanged();
    partial void OnPurchasePlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchasePlanDateChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnAppraisalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppraisalDateChanged();
    partial void OnPurchaseAgreementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseAgreementDateChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(int value);
    partial void OnRateChanged();
    partial void OnLastEditScreenChanging(string value);
    partial void OnLastEditScreenChanged();
    #endregion
		
		public CarAppraisal()
		{
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			this._Employee = default(EntityRef<Employee>);
			this._Department = default(EntityRef<Department>);
			this._c_EraseRegist = default(EntityRef<c_EraseRegist>);
			this._c_Fuel = default(EntityRef<c_Fuel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAppraisalId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarAppraisalId
		{
			get
			{
				return this._CarAppraisalId;
			}
			set
			{
				if ((this._CarAppraisalId != value))
				{
					this.OnCarAppraisalIdChanging(value);
					this.SendPropertyChanging();
					this._CarAppraisalId = value;
					this.SendPropertyChanged("CarAppraisalId");
					this.OnCarAppraisalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseCreated", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseCreated
		{
			get
			{
				return this._PurchaseCreated;
			}
			set
			{
				if ((this._PurchaseCreated != value))
				{
					this.OnPurchaseCreatedChanging(value);
					this.SendPropertyChanging();
					this._PurchaseCreated = value;
					this.SendPropertyChanged("PurchaseCreated");
					this.OnPurchaseCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this.OnRegistrationNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberType = value;
					this.SendPropertyChanged("RegistrationNumberType");
					this.OnRegistrationNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this.OnRegistrationNumberKanaChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberKana = value;
					this.SendPropertyChanged("RegistrationNumberKana");
					this.OnRegistrationNumberKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this.OnRegistrationNumberPlateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberPlate = value;
					this.SendPropertyChanged("RegistrationNumberPlate");
					this.OnRegistrationNumberPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationYear", DbType="NVarChar(9)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistrationYear
		{
			get
			{
				return this._FirstRegistrationYear;
			}
			set
			{
				if ((this._FirstRegistrationYear != value))
				{
					this.OnFirstRegistrationYearChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationYear = value;
					this.SendPropertyChanged("FirstRegistrationYear");
					this.OnFirstRegistrationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassification", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassification
		{
			get
			{
				return this._CarClassification;
			}
			set
			{
				if ((this._CarClassification != value))
				{
					this.OnCarClassificationChanging(value);
					this.SendPropertyChanging();
					this._CarClassification = value;
					this.SendPropertyChanged("CarClassification");
					this.OnCarClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumLoadingWeight", DbType="Int")]
		public System.Nullable<int> MaximumLoadingWeight
		{
			get
			{
				return this._MaximumLoadingWeight;
			}
			set
			{
				if ((this._MaximumLoadingWeight != value))
				{
					this.OnMaximumLoadingWeightChanging(value);
					this.SendPropertyChanging();
					this._MaximumLoadingWeight = value;
					this.SendPropertyChanged("MaximumLoadingWeight");
					this.OnMaximumLoadingWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeight", DbType="Int")]
		public System.Nullable<int> CarWeight
		{
			get
			{
				return this._CarWeight;
			}
			set
			{
				if ((this._CarWeight != value))
				{
					this.OnCarWeightChanging(value);
					this.SendPropertyChanging();
					this._CarWeight = value;
					this.SendPropertyChanged("CarWeight");
					this.OnCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCarWeight", DbType="Int")]
		public System.Nullable<int> TotalCarWeight
		{
			get
			{
				return this._TotalCarWeight;
			}
			set
			{
				if ((this._TotalCarWeight != value))
				{
					this.OnTotalCarWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalCarWeight = value;
					this.SendPropertyChanged("TotalCarWeight");
					this.OnTotalCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFAxileWeight", DbType="Int")]
		public System.Nullable<int> FFAxileWeight
		{
			get
			{
				return this._FFAxileWeight;
			}
			set
			{
				if ((this._FFAxileWeight != value))
				{
					this.OnFFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FFAxileWeight = value;
					this.SendPropertyChanged("FFAxileWeight");
					this.OnFFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRAxileWeight", DbType="Int")]
		public System.Nullable<int> FRAxileWeight
		{
			get
			{
				return this._FRAxileWeight;
			}
			set
			{
				if ((this._FRAxileWeight != value))
				{
					this.OnFRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FRAxileWeight = value;
					this.SendPropertyChanged("FRAxileWeight");
					this.OnFRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFAxileWeight", DbType="Int")]
		public System.Nullable<int> RFAxileWeight
		{
			get
			{
				return this._RFAxileWeight;
			}
			set
			{
				if ((this._RFAxileWeight != value))
				{
					this.OnRFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RFAxileWeight = value;
					this.SendPropertyChanged("RFAxileWeight");
					this.OnRFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRAxileWeight", DbType="Int")]
		public System.Nullable<int> RRAxileWeight
		{
			get
			{
				return this._RRAxileWeight;
			}
			set
			{
				if ((this._RRAxileWeight != value))
				{
					this.OnRRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RRAxileWeight = value;
					this.SendPropertyChanged("RRAxileWeight");
					this.OnRRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displacement", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Displacement
		{
			get
			{
				return this._Displacement;
			}
			set
			{
				if ((this._Displacement != value))
				{
					this.OnDisplacementChanging(value);
					this.SendPropertyChanging();
					this._Displacement = value;
					this.SendPropertyChanged("Displacement");
					this.OnDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					if (this._c_Fuel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTypeNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelSpecificateNumber
		{
			get
			{
				return this._ClassificationTypeNumber;
			}
			set
			{
				if ((this._ClassificationTypeNumber != value))
				{
					this.OnModelSpecificateNumberChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTypeNumber = value;
					this.SendPropertyChanged("ModelSpecificateNumber");
					this.OnModelSpecificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelSpecificateNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ClassificationTypeNumber
		{
			get
			{
				return this._ModelSpecificateNumber;
			}
			set
			{
				if ((this._ModelSpecificateNumber != value))
				{
					this.OnClassificationTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelSpecificateNumber = value;
					this.SendPropertyChanged("ClassificationTypeNumber");
					this.OnClassificationTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorName
		{
			get
			{
				return this._PossesorName;
			}
			set
			{
				if ((this._PossesorName != value))
				{
					this.OnPossesorNameChanging(value);
					this.SendPropertyChanging();
					this._PossesorName = value;
					this.SendPropertyChanged("PossesorName");
					this.OnPossesorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorAddress
		{
			get
			{
				return this._PossesorAddress;
			}
			set
			{
				if ((this._PossesorAddress != value))
				{
					this.OnPossesorAddressChanging(value);
					this.SendPropertyChanging();
					this._PossesorAddress = value;
					this.SendPropertyChanged("PossesorAddress");
					this.OnPossesorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPlace", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrincipalPlace
		{
			get
			{
				return this._PrincipalPlace;
			}
			set
			{
				if ((this._PrincipalPlace != value))
				{
					this.OnPrincipalPlaceChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPlace = value;
					this.SendPropertyChanged("PrincipalPlace");
					this.OnPrincipalPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionExpireDate
		{
			get
			{
				return this._InspectionExpireDate;
			}
			set
			{
				if ((this._InspectionExpireDate != value))
				{
					this.OnInspectionExpireDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionExpireDate = value;
					this.SendPropertyChanged("InspectionExpireDate");
					this.OnInspectionExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelYear", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelYear
		{
			get
			{
				return this._ModelYear;
			}
			set
			{
				if ((this._ModelYear != value))
				{
					this.OnModelYearChanging(value);
					this.SendPropertyChanging();
					this._ModelYear = value;
					this.SendPropertyChanged("ModelYear");
					this.OnModelYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this.OnCarBrandNameChanging(value);
					this.SendPropertyChanging();
					this._CarBrandName = value;
					this.SendPropertyChanged("CarBrandName");
					this.OnCarBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this.OnCarGradeNameChanging(value);
					this.SendPropertyChanging();
					this._CarGradeName = value;
					this.SendPropertyChanged("CarGradeName");
					this.OnCarGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Door", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Door
		{
			get
			{
				return this._Door;
			}
			set
			{
				if ((this._Door != value))
				{
					this.OnDoorChanging(value);
					this.SendPropertyChanging();
					this._Door = value;
					this.SendPropertyChanged("Door");
					this.OnDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransMission", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransMission
		{
			get
			{
				return this._TransMission;
			}
			set
			{
				if ((this._TransMission != value))
				{
					this.OnTransMissionChanging(value);
					this.SendPropertyChanging();
					this._TransMission = value;
					this.SendPropertyChanged("TransMission");
					this.OnTransMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this.OnExteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorName = value;
					this.SendPropertyChanged("ExteriorColorName");
					this.OnExteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeColor", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangeColor
		{
			get
			{
				return this._ChangeColor;
			}
			set
			{
				if ((this._ChangeColor != value))
				{
					this.OnChangeColorChanging(value);
					this.SendPropertyChanging();
					this._ChangeColor = value;
					this.SendPropertyChanged("ChangeColor");
					this.OnChangeColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OriginalColorName
		{
			get
			{
				return this._OriginalColorName;
			}
			set
			{
				if ((this._OriginalColorName != value))
				{
					this.OnOriginalColorNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalColorName = value;
					this.SendPropertyChanged("OriginalColorName");
					this.OnOriginalColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorName
		{
			get
			{
				return this._InteriorColorName;
			}
			set
			{
				if ((this._InteriorColorName != value))
				{
					this.OnInteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorName = value;
					this.SendPropertyChanged("InteriorColorName");
					this.OnInteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerWarranty", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Guarantee
		{
			get
			{
				return this._MakerWarranty;
			}
			set
			{
				if ((this._MakerWarranty != value))
				{
					this.OnGuaranteeChanging(value);
					this.SendPropertyChanging();
					this._MakerWarranty = value;
					this.SendPropertyChanged("Guarantee");
					this.OnGuaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steering", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Steering
		{
			get
			{
				return this._Steering;
			}
			set
			{
				if ((this._Steering != value))
				{
					this.OnSteeringChanging(value);
					this.SendPropertyChanging();
					this._Steering = value;
					this.SendPropertyChanged("Steering");
					this.OnSteeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aw", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aw
		{
			get
			{
				return this._Aw;
			}
			set
			{
				if ((this._Aw != value))
				{
					this.OnAwChanging(value);
					this.SendPropertyChanging();
					this._Aw = value;
					this.SendPropertyChanged("Aw");
					this.OnAwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aero", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aero
		{
			get
			{
				return this._Aero;
			}
			set
			{
				if ((this._Aero != value))
				{
					this.OnAeroChanging(value);
					this.SendPropertyChanging();
					this._Aero = value;
					this.SendPropertyChanged("Aero");
					this.OnAeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sr", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Sr
		{
			get
			{
				return this._Sr;
			}
			set
			{
				if ((this._Sr != value))
				{
					this.OnSrChanging(value);
					this.SendPropertyChanging();
					this._Sr = value;
					this.SendPropertyChanged("Sr");
					this.OnSrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Cd
		{
			get
			{
				return this._Cd;
			}
			set
			{
				if ((this._Cd != value))
				{
					this.OnCdChanging(value);
					this.SendPropertyChanging();
					this._Cd = value;
					this.SendPropertyChanged("Cd");
					this.OnCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Md
		{
			get
			{
				return this._Md;
			}
			set
			{
				if ((this._Md != value))
				{
					this.OnMdChanging(value);
					this.SendPropertyChanging();
					this._Md = value;
					this.SendPropertyChanged("Md");
					this.OnMdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviType
		{
			get
			{
				return this._NaviType;
			}
			set
			{
				if ((this._NaviType != value))
				{
					this.OnNaviTypeChanging(value);
					this.SendPropertyChanging();
					this._NaviType = value;
					this.SendPropertyChanged("NaviType");
					this.OnNaviTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviEquipment", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviEquipment
		{
			get
			{
				return this._NaviEquipment;
			}
			set
			{
				if ((this._NaviEquipment != value))
				{
					this.OnNaviEquipmentChanging(value);
					this.SendPropertyChanging();
					this._NaviEquipment = value;
					this.SendPropertyChanged("NaviEquipment");
					this.OnNaviEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviDashboard", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviDashboard
		{
			get
			{
				return this._NaviDashboard;
			}
			set
			{
				if ((this._NaviDashboard != value))
				{
					this.OnNaviDashboardChanging(value);
					this.SendPropertyChanging();
					this._NaviDashboard = value;
					this.SendPropertyChanged("NaviDashboard");
					this.OnNaviDashboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatColor", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatColor
		{
			get
			{
				return this._SeatColor;
			}
			set
			{
				if ((this._SeatColor != value))
				{
					this.OnSeatColorChanging(value);
					this.SendPropertyChanging();
					this._SeatColor = value;
					this.SendPropertyChanged("SeatColor");
					this.OnSeatColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatType
		{
			get
			{
				return this._SeatType;
			}
			set
			{
				if ((this._SeatType != value))
				{
					this.OnSeatTypeChanging(value);
					this.SendPropertyChanging();
					this._SeatType = value;
					this.SendPropertyChanged("SeatType");
					this.OnSeatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsVin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsVin
		{
			get
			{
				return this._UsVin;
			}
			set
			{
				if ((this._UsVin != value))
				{
					this.OnUsVinChanging(value);
					this.SendPropertyChanging();
					this._UsVin = value;
					this.SendPropertyChanged("UsVin");
					this.OnUsVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recycle", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Recycle
		{
			get
			{
				return this._Recycle;
			}
			set
			{
				if ((this._Recycle != value))
				{
					this.OnRecycleChanging(value);
					this.SendPropertyChanging();
					this._Recycle = value;
					this.SendPropertyChanged("Recycle");
					this.OnRecycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleTicket", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecycleTicket
		{
			get
			{
				return this._RecycleTicket;
			}
			set
			{
				if ((this._RecycleTicket != value))
				{
					this.OnRecycleTicketChanging(value);
					this.SendPropertyChanging();
					this._RecycleTicket = value;
					this.SendPropertyChanged("RecycleTicket");
					this.OnRecycleTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleNumber", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecycleNumber
		{
			get
			{
				return this._RecycleNumber;
			}
			set
			{
				if ((this._RecycleNumber != value))
				{
					this.OnRecycleNumberChanging(value);
					this.SendPropertyChanging();
					this._RecycleNumber = value;
					this.SendPropertyChanged("RecycleNumber");
					this.OnRecycleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleAmount;
			}
			set
			{
				if ((this._RecycleAmount != value))
				{
					this.OnRecycleDepositChanging(value);
					this.SendPropertyChanging();
					this._RecycleAmount = value;
					this.SendPropertyChanged("RecycleDeposit");
					this.OnRecycleDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainDebt", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RemainDebt
		{
			get
			{
				return this._RemainDebt;
			}
			set
			{
				if ((this._RemainDebt != value))
				{
					this.OnRemainDebtChanging(value);
					this.SendPropertyChanging();
					this._RemainDebt = value;
					this.SendPropertyChanged("RemainDebt");
					this.OnRemainDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxUnexpiredAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxUnexpiredAmount
		{
			get
			{
				return this._CarTaxUnexpiredAmount;
			}
			set
			{
				if ((this._CarTaxUnexpiredAmount != value))
				{
					this.OnCarTaxUnexpiredAmountChanging(value);
					this.SendPropertyChanging();
					this._CarTaxUnexpiredAmount = value;
					this.SendPropertyChanged("CarTaxUnexpiredAmount");
					this.OnCarTaxUnexpiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorEvaluation", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorEvaluation
		{
			get
			{
				return this._ExteriorEvaluation;
			}
			set
			{
				if ((this._ExteriorEvaluation != value))
				{
					this.OnExteriorEvaluationChanging(value);
					this.SendPropertyChanging();
					this._ExteriorEvaluation = value;
					this.SendPropertyChanged("ExteriorEvaluation");
					this.OnExteriorEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorEvaluation", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorEvaluation
		{
			get
			{
				return this._InteriorEvaluation;
			}
			set
			{
				if ((this._InteriorEvaluation != value))
				{
					this.OnInteriorEvaluationChanging(value);
					this.SendPropertyChanging();
					this._InteriorEvaluation = value;
					this.SendPropertyChanged("InteriorEvaluation");
					this.OnInteriorEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReparationRecord", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReparationRecord
		{
			get
			{
				return this._ReparationRecord;
			}
			set
			{
				if ((this._ReparationRecord != value))
				{
					this.OnReparationRecordChanging(value);
					this.SendPropertyChanging();
					this._ReparationRecord = value;
					this.SendPropertyChanged("ReparationRecord");
					this.OnReparationRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evaluation", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Evaluation
		{
			get
			{
				return this._Evaluation;
			}
			set
			{
				if ((this._Evaluation != value))
				{
					this.OnEvaluationChanging(value);
					this.SendPropertyChanging();
					this._Evaluation = value;
					this.SendPropertyChanged("Evaluation");
					this.OnEvaluationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AppraisalPrice
		{
			get
			{
				return this._AppraisalPrice;
			}
			set
			{
				if ((this._AppraisalPrice != value))
				{
					this.OnAppraisalPriceChanging(value);
					this.SendPropertyChanging();
					this._AppraisalPrice = value;
					this.SendPropertyChanged("AppraisalPrice");
					this.OnAppraisalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(500)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentComplete", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentComplete
		{
			get
			{
				return this._DocumentComplete;
			}
			set
			{
				if ((this._DocumentComplete != value))
				{
					this.OnDocumentCompleteChanging(value);
					this.SendPropertyChanging();
					this._DocumentComplete = value;
					this.SendPropertyChanged("DocumentComplete");
					this.OnDocumentCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRemarks", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentRemarks
		{
			get
			{
				return this._DocumentRemarks;
			}
			set
			{
				if ((this._DocumentRemarks != value))
				{
					this.OnDocumentRemarksChanging(value);
					this.SendPropertyChanging();
					this._DocumentRemarks = value;
					this.SendPropertyChanged("DocumentRemarks");
					this.OnDocumentRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainDebtPayee", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RemainDebtPayee
		{
			get
			{
				return this._RemainDebtPayee;
			}
			set
			{
				if ((this._RemainDebtPayee != value))
				{
					this.OnRemainDebtPayeeChanging(value);
					this.SendPropertyChanging();
					this._RemainDebtPayee = value;
					this.SendPropertyChanged("RemainDebtPayee");
					this.OnRemainDebtPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EraseRegist", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EraseRegist
		{
			get
			{
				return this._EraseRegist;
			}
			set
			{
				if ((this._EraseRegist != value))
				{
					if (this._c_EraseRegist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEraseRegistChanging(value);
					this.SendPropertyChanging();
					this._EraseRegist = value;
					this.SendPropertyChanged("EraseRegist");
					this.OnEraseRegistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchasePlanDate
		{
			get
			{
				return this._PurchasePlanDate;
			}
			set
			{
				if ((this._PurchasePlanDate != value))
				{
					this.OnPurchasePlanDateChanging(value);
					this.SendPropertyChanging();
					this._PurchasePlanDate = value;
					this.SendPropertyChanged("PurchasePlanDate");
					this.OnPurchasePlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AppraisalDate
		{
			get
			{
				return this._AppraisalDate;
			}
			set
			{
				if ((this._AppraisalDate != value))
				{
					this.OnAppraisalDateChanging(value);
					this.SendPropertyChanging();
					this._AppraisalDate = value;
					this.SendPropertyChanged("AppraisalDate");
					this.OnAppraisalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAgreementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseAgreementDate
		{
			get
			{
				return this._PurchaseAgreementDate;
			}
			set
			{
				if ((this._PurchaseAgreementDate != value))
				{
					this.OnPurchaseAgreementDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAgreementDate = value;
					this.SendPropertyChanged("PurchaseAgreementDate");
					this.OnPurchaseAgreementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public int Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditScreen", DbType="NVarChar(3)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastEditScreen
		{
			get
			{
				return this._LastEditScreen;
			}
			set
			{
				if ((this._LastEditScreen != value))
				{
					this.OnLastEditScreenChanging(value);
					this.SendPropertyChanging();
					this._LastEditScreen = value;
					this.SendPropertyChanged("LastEditScreen");
					this.OnLastEditScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAppraisal_CarPurchase", Storage="_CarPurchase", ThisKey="CarAppraisalId", OtherKey="CarAppraisalId")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarAppraisal", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CarAppraisal.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CarAppraisal.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarAppraisal", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.CarAppraisal.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.CarAppraisal.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarAppraisal", Storage="_c_EraseRegist", ThisKey="EraseRegist", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist
		{
			get
			{
				return this._c_EraseRegist.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist.Entity = null;
						previousValue.CarAppraisal.Remove(this);
					}
					this._c_EraseRegist.Entity = value;
					if ((value != null))
					{
						value.CarAppraisal.Add(this);
						this._EraseRegist = value.Code;
					}
					else
					{
						this._EraseRegist = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Fuel_CarAppraisal", Storage="_c_Fuel", ThisKey="Fuel", OtherKey="Code", IsForeignKey=true)]
		public c_Fuel c_Fuel
		{
			get
			{
				return this._c_Fuel.Entity;
			}
			set
			{
				c_Fuel previousValue = this._c_Fuel.Entity;
				if (((previousValue != value) 
							|| (this._c_Fuel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_Fuel.Entity = null;
						previousValue.CarAppraisal.Remove(this);
					}
					this._c_Fuel.Entity = value;
					if ((value != null))
					{
						value.CarAppraisal.Add(this);
						this._Fuel = value.Code;
					}
					else
					{
						this._Fuel = default(string);
					}
					this.SendPropertyChanged("c_Fuel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.CarAppraisal = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.CarAppraisal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarPurchase")]
	public partial class CarPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarPurchaseId;
		
		private string _PurchaseOrderId;
		
		private System.Nullable<System.Guid> _CarAppraisalId;
		
		private string _PurchaseStatus;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _SupplierCode;
		
		private string _PurchaseLocationCode;
		
		private string _EmployeeCode;
		
		private decimal _Amount;
		
		private decimal _TaxAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _DepartmentCode;
		
		private string _SalesCarId;
		
		private decimal _VehiclePrice;
		
		private decimal _MetallicPrice;
		
		private decimal _OptionPrice;
		
		private decimal _FirmPrice;
		
		private decimal _DiscountPrice;
		
		private decimal _EquipmentPrice;
		
		private decimal _RepairPrice;
		
		private decimal _OthersPrice;
		
		private string _Memo;
		
		private string _EraseRegist;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private System.Nullable<decimal> _CarTaxAppropriateAmount;
		
		private System.Nullable<decimal> _RecycleAmount;
		
		private string _CarPurchaseType;
		
		private System.Nullable<decimal> _VehicleTax;
		
		private System.Nullable<decimal> _VehicleAmount;
		
		private System.Nullable<decimal> _MetallicTax;
		
		private System.Nullable<decimal> _MetallicAmount;
		
		private System.Nullable<decimal> _OptionTax;
		
		private System.Nullable<decimal> _OptionAmount;
		
		private System.Nullable<decimal> _FirmTax;
		
		private System.Nullable<decimal> _FirmAmount;
		
		private System.Nullable<decimal> _DiscountTax;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _OthersTax;
		
		private System.Nullable<decimal> _OthersAmount;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<decimal> _AuctionFeePrice;
		
		private System.Nullable<decimal> _AuctionFeeTax;
		
		private System.Nullable<decimal> _AuctionFeeAmount;
		
		private System.Nullable<decimal> _CarTaxAppropriatePrice;
		
		private System.Nullable<decimal> _RecyclePrice;
		
		private System.Nullable<decimal> _EquipmentTax;
		
		private System.Nullable<decimal> _EquipmentAmount;
		
		private System.Nullable<decimal> _RepairTax;
		
		private System.Nullable<decimal> _RepairAmount;
		
		private System.Nullable<decimal> _CarTaxAppropriateTax;
		
		private string _ConsumptionTaxId;
		
		private System.Nullable<int> _Rate;
		
		private string _CancelFlag;
		
		private string _SlipNumber;
		
		private string _LastEditScreen;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private string _CancelCarPurchaseId;
		
		private string _CancelMemo;
		
		private string _RegistOwnFlag;
		
		private System.Nullable<decimal> _FinancialAmount;
		
		private string _Vin;
		
		private string _FinancialDataCaptured;
		
		private EntityRef<c_PurchaseStatus> _c_PurchaseStatus;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<SalesCar> _SalesCar;
		
		private EntityRef<CarPurchaseOrder> _CarPurchaseOrder;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<CarAppraisal> _CarAppraisal;
		
		private EntityRef<c_EraseRegist> _c_EraseRegist;
		
		private EntityRef<c_CarPurchaseType> _c_CarPurchaseType;
		
		private EntityRef<Employee> _Employee1;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarPurchaseIdChanging(System.Guid value);
    partial void OnCarPurchaseIdChanged();
    partial void OnCarPurchaseOrderNumberChanging(string value);
    partial void OnCarPurchaseOrderNumberChanged();
    partial void OnCarAppraisalIdChanging(System.Nullable<System.Guid> value);
    partial void OnCarAppraisalIdChanged();
    partial void OnPurchaseStatusChanging(string value);
    partial void OnPurchaseStatusChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnPurchaseLocationCodeChanging(string value);
    partial void OnPurchaseLocationCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnVehiclePriceChanging(decimal value);
    partial void OnVehiclePriceChanged();
    partial void OnMetallicPriceChanging(decimal value);
    partial void OnMetallicPriceChanged();
    partial void OnOptionPriceChanging(decimal value);
    partial void OnOptionPriceChanged();
    partial void OnFirmPriceChanging(decimal value);
    partial void OnFirmPriceChanged();
    partial void OnDiscountPriceChanging(decimal value);
    partial void OnDiscountPriceChanged();
    partial void OnEquipmentPriceChanging(decimal value);
    partial void OnEquipmentPriceChanged();
    partial void OnRepairPriceChanging(decimal value);
    partial void OnRepairPriceChanged();
    partial void OnOthersPriceChanging(decimal value);
    partial void OnOthersPriceChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnEraseRegistChanging(string value);
    partial void OnEraseRegistChanged();
    partial void OnSlipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSlipDateChanged();
    partial void OnCarTaxAppropriateAmountChanging(System.Nullable<decimal> value);
    partial void OnCarTaxAppropriateAmountChanged();
    partial void OnRecycleAmountChanging(System.Nullable<decimal> value);
    partial void OnRecycleAmountChanged();
    partial void OnCarPurchaseTypeChanging(string value);
    partial void OnCarPurchaseTypeChanged();
    partial void OnVehicleTaxChanging(System.Nullable<decimal> value);
    partial void OnVehicleTaxChanged();
    partial void OnVehicleAmountChanging(System.Nullable<decimal> value);
    partial void OnVehicleAmountChanged();
    partial void OnMetallicTaxChanging(System.Nullable<decimal> value);
    partial void OnMetallicTaxChanged();
    partial void OnMetallicAmountChanging(System.Nullable<decimal> value);
    partial void OnMetallicAmountChanged();
    partial void OnOptionTaxChanging(System.Nullable<decimal> value);
    partial void OnOptionTaxChanged();
    partial void OnOptionAmountChanging(System.Nullable<decimal> value);
    partial void OnOptionAmountChanged();
    partial void OnFirmTaxChanging(System.Nullable<decimal> value);
    partial void OnFirmTaxChanged();
    partial void OnFirmAmountChanging(System.Nullable<decimal> value);
    partial void OnFirmAmountChanged();
    partial void OnDiscountTaxChanging(System.Nullable<decimal> value);
    partial void OnDiscountTaxChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnOthersTaxChanging(System.Nullable<decimal> value);
    partial void OnOthersTaxChanged();
    partial void OnOthersAmountChanging(System.Nullable<decimal> value);
    partial void OnOthersAmountChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnAuctionFeePriceChanging(System.Nullable<decimal> value);
    partial void OnAuctionFeePriceChanged();
    partial void OnAuctionFeeTaxChanging(System.Nullable<decimal> value);
    partial void OnAuctionFeeTaxChanged();
    partial void OnAuctionFeeAmountChanging(System.Nullable<decimal> value);
    partial void OnAuctionFeeAmountChanged();
    partial void OnCarTaxAppropriatePriceChanging(System.Nullable<decimal> value);
    partial void OnCarTaxAppropriatePriceChanged();
    partial void OnRecyclePriceChanging(System.Nullable<decimal> value);
    partial void OnRecyclePriceChanged();
    partial void OnEquipmentTaxChanging(System.Nullable<decimal> value);
    partial void OnEquipmentTaxChanged();
    partial void OnEquipmentAmountChanging(System.Nullable<decimal> value);
    partial void OnEquipmentAmountChanged();
    partial void OnRepairTaxChanging(System.Nullable<decimal> value);
    partial void OnRepairTaxChanged();
    partial void OnRepairAmountChanging(System.Nullable<decimal> value);
    partial void OnRepairAmountChanged();
    partial void OnCarTaxAppropriateTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxAppropriateTaxChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnCancelFlagChanging(string value);
    partial void OnCancelFlagChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnLastEditScreenChanging(string value);
    partial void OnLastEditScreenChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnCancelCarPurchaseIdChanging(string value);
    partial void OnCancelCarPurchaseIdChanged();
    partial void OnCancelMemoChanging(string value);
    partial void OnCancelMemoChanged();
    partial void OnRegistOwnFlagChanging(string value);
    partial void OnRegistOwnFlagChanged();
    partial void OnFinancialAmountChanging(System.Nullable<decimal> value);
    partial void OnFinancialAmountChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnFinancialAmountLockedChanging(string value);
    partial void OnFinancialAmountLockedChanged();
    #endregion
		
		public CarPurchase()
		{
			this._c_PurchaseStatus = default(EntityRef<c_PurchaseStatus>);
			this._Employee = default(EntityRef<Employee>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Department = default(EntityRef<Department>);
			this._SalesCar = default(EntityRef<SalesCar>);
			this._CarPurchaseOrder = default(EntityRef<CarPurchaseOrder>);
			this._Location = default(EntityRef<Location>);
			this._CarAppraisal = default(EntityRef<CarAppraisal>);
			this._c_EraseRegist = default(EntityRef<c_EraseRegist>);
			this._c_CarPurchaseType = default(EntityRef<c_CarPurchaseType>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarPurchaseId
		{
			get
			{
				return this._CarPurchaseId;
			}
			set
			{
				if ((this._CarPurchaseId != value))
				{
					this.OnCarPurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseId = value;
					this.SendPropertyChanged("CarPurchaseId");
					this.OnCarPurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderId;
			}
			set
			{
				if ((this._PurchaseOrderId != value))
				{
					if (this._CarPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderId = value;
					this.SendPropertyChanged("CarPurchaseOrderNumber");
					this.OnCarPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAppraisalId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CarAppraisalId
		{
			get
			{
				return this._CarAppraisalId;
			}
			set
			{
				if ((this._CarAppraisalId != value))
				{
					if (this._CarAppraisal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarAppraisalIdChanging(value);
					this.SendPropertyChanging();
					this._CarAppraisalId = value;
					this.SendPropertyChanged("CarAppraisalId");
					this.OnCarAppraisalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					if (this._c_PurchaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchaseStatus = value;
					this.SendPropertyChanged("PurchaseStatus");
					this.OnPurchaseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationCode
		{
			get
			{
				return this._PurchaseLocationCode;
			}
			set
			{
				if ((this._PurchaseLocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseLocationCode = value;
					this.SendPropertyChanged("PurchaseLocationCode");
					this.OnPurchaseLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					if (this._SalesCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarId = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal VehiclePrice
		{
			get
			{
				return this._VehiclePrice;
			}
			set
			{
				if ((this._VehiclePrice != value))
				{
					this.OnVehiclePriceChanging(value);
					this.SendPropertyChanging();
					this._VehiclePrice = value;
					this.SendPropertyChanged("VehiclePrice");
					this.OnVehiclePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetallicPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal MetallicPrice
		{
			get
			{
				return this._MetallicPrice;
			}
			set
			{
				if ((this._MetallicPrice != value))
				{
					this.OnMetallicPriceChanging(value);
					this.SendPropertyChanging();
					this._MetallicPrice = value;
					this.SendPropertyChanged("MetallicPrice");
					this.OnMetallicPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal OptionPrice
		{
			get
			{
				return this._OptionPrice;
			}
			set
			{
				if ((this._OptionPrice != value))
				{
					this.OnOptionPriceChanging(value);
					this.SendPropertyChanging();
					this._OptionPrice = value;
					this.SendPropertyChanged("OptionPrice");
					this.OnOptionPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal FirmPrice
		{
			get
			{
				return this._FirmPrice;
			}
			set
			{
				if ((this._FirmPrice != value))
				{
					this.OnFirmPriceChanging(value);
					this.SendPropertyChanging();
					this._FirmPrice = value;
					this.SendPropertyChanged("FirmPrice");
					this.OnFirmPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal DiscountPrice
		{
			get
			{
				return this._DiscountPrice;
			}
			set
			{
				if ((this._DiscountPrice != value))
				{
					this.OnDiscountPriceChanging(value);
					this.SendPropertyChanging();
					this._DiscountPrice = value;
					this.SendPropertyChanged("DiscountPrice");
					this.OnDiscountPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal EquipmentPrice
		{
			get
			{
				return this._EquipmentPrice;
			}
			set
			{
				if ((this._EquipmentPrice != value))
				{
					this.OnEquipmentPriceChanging(value);
					this.SendPropertyChanging();
					this._EquipmentPrice = value;
					this.SendPropertyChanged("EquipmentPrice");
					this.OnEquipmentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal RepairPrice
		{
			get
			{
				return this._RepairPrice;
			}
			set
			{
				if ((this._RepairPrice != value))
				{
					this.OnRepairPriceChanging(value);
					this.SendPropertyChanging();
					this._RepairPrice = value;
					this.SendPropertyChanged("RepairPrice");
					this.OnRepairPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OthersPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal OthersPrice
		{
			get
			{
				return this._OthersPrice;
			}
			set
			{
				if ((this._OthersPrice != value))
				{
					this.OnOthersPriceChanging(value);
					this.SendPropertyChanging();
					this._OthersPrice = value;
					this.SendPropertyChanged("OthersPrice");
					this.OnOthersPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EraseRegist", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EraseRegist
		{
			get
			{
				return this._EraseRegist;
			}
			set
			{
				if ((this._EraseRegist != value))
				{
					if (this._c_EraseRegist.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEraseRegistChanging(value);
					this.SendPropertyChanging();
					this._EraseRegist = value;
					this.SendPropertyChanged("EraseRegist");
					this.OnEraseRegistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlipDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this.OnSlipDateChanging(value);
					this.SendPropertyChanging();
					this._SlipDate = value;
					this.SendPropertyChanged("SlipDate");
					this.OnSlipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriateAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxAppropriateAmount
		{
			get
			{
				return this._CarTaxAppropriateAmount;
			}
			set
			{
				if ((this._CarTaxAppropriateAmount != value))
				{
					this.OnCarTaxAppropriateAmountChanging(value);
					this.SendPropertyChanging();
					this._CarTaxAppropriateAmount = value;
					this.SendPropertyChanged("CarTaxAppropriateAmount");
					this.OnCarTaxAppropriateAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleAmount
		{
			get
			{
				return this._RecycleAmount;
			}
			set
			{
				if ((this._RecycleAmount != value))
				{
					this.OnRecycleAmountChanging(value);
					this.SendPropertyChanging();
					this._RecycleAmount = value;
					this.SendPropertyChanged("RecycleAmount");
					this.OnRecycleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseType
		{
			get
			{
				return this._CarPurchaseType;
			}
			set
			{
				if ((this._CarPurchaseType != value))
				{
					if (this._c_CarPurchaseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseType = value;
					this.SendPropertyChanged("CarPurchaseType");
					this.OnCarPurchaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> VehicleTax
		{
			get
			{
				return this._VehicleTax;
			}
			set
			{
				if ((this._VehicleTax != value))
				{
					this.OnVehicleTaxChanging(value);
					this.SendPropertyChanging();
					this._VehicleTax = value;
					this.SendPropertyChanged("VehicleTax");
					this.OnVehicleTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> VehicleAmount
		{
			get
			{
				return this._VehicleAmount;
			}
			set
			{
				if ((this._VehicleAmount != value))
				{
					this.OnVehicleAmountChanging(value);
					this.SendPropertyChanging();
					this._VehicleAmount = value;
					this.SendPropertyChanged("VehicleAmount");
					this.OnVehicleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetallicTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MetallicTax
		{
			get
			{
				return this._MetallicTax;
			}
			set
			{
				if ((this._MetallicTax != value))
				{
					this.OnMetallicTaxChanging(value);
					this.SendPropertyChanging();
					this._MetallicTax = value;
					this.SendPropertyChanged("MetallicTax");
					this.OnMetallicTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetallicAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MetallicAmount
		{
			get
			{
				return this._MetallicAmount;
			}
			set
			{
				if ((this._MetallicAmount != value))
				{
					this.OnMetallicAmountChanging(value);
					this.SendPropertyChanging();
					this._MetallicAmount = value;
					this.SendPropertyChanged("MetallicAmount");
					this.OnMetallicAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OptionTax
		{
			get
			{
				return this._OptionTax;
			}
			set
			{
				if ((this._OptionTax != value))
				{
					this.OnOptionTaxChanging(value);
					this.SendPropertyChanging();
					this._OptionTax = value;
					this.SendPropertyChanged("OptionTax");
					this.OnOptionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OptionAmount
		{
			get
			{
				return this._OptionAmount;
			}
			set
			{
				if ((this._OptionAmount != value))
				{
					this.OnOptionAmountChanging(value);
					this.SendPropertyChanging();
					this._OptionAmount = value;
					this.SendPropertyChanged("OptionAmount");
					this.OnOptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirmTax
		{
			get
			{
				return this._FirmTax;
			}
			set
			{
				if ((this._FirmTax != value))
				{
					this.OnFirmTaxChanging(value);
					this.SendPropertyChanging();
					this._FirmTax = value;
					this.SendPropertyChanged("FirmTax");
					this.OnFirmTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FirmAmount
		{
			get
			{
				return this._FirmAmount;
			}
			set
			{
				if ((this._FirmAmount != value))
				{
					this.OnFirmAmountChanging(value);
					this.SendPropertyChanging();
					this._FirmAmount = value;
					this.SendPropertyChanged("FirmAmount");
					this.OnFirmAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountTax
		{
			get
			{
				return this._DiscountTax;
			}
			set
			{
				if ((this._DiscountTax != value))
				{
					this.OnDiscountTaxChanging(value);
					this.SendPropertyChanging();
					this._DiscountTax = value;
					this.SendPropertyChanged("DiscountTax");
					this.OnDiscountTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OthersTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OthersTax
		{
			get
			{
				return this._OthersTax;
			}
			set
			{
				if ((this._OthersTax != value))
				{
					this.OnOthersTaxChanging(value);
					this.SendPropertyChanging();
					this._OthersTax = value;
					this.SendPropertyChanged("OthersTax");
					this.OnOthersTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OthersAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OthersAmount
		{
			get
			{
				return this._OthersAmount;
			}
			set
			{
				if ((this._OthersAmount != value))
				{
					this.OnOthersAmountChanging(value);
					this.SendPropertyChanging();
					this._OthersAmount = value;
					this.SendPropertyChanged("OthersAmount");
					this.OnOthersAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AuctionFeePrice
		{
			get
			{
				return this._AuctionFeePrice;
			}
			set
			{
				if ((this._AuctionFeePrice != value))
				{
					this.OnAuctionFeePriceChanging(value);
					this.SendPropertyChanging();
					this._AuctionFeePrice = value;
					this.SendPropertyChanged("AuctionFeePrice");
					this.OnAuctionFeePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeeTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AuctionFeeTax
		{
			get
			{
				return this._AuctionFeeTax;
			}
			set
			{
				if ((this._AuctionFeeTax != value))
				{
					this.OnAuctionFeeTaxChanging(value);
					this.SendPropertyChanging();
					this._AuctionFeeTax = value;
					this.SendPropertyChanged("AuctionFeeTax");
					this.OnAuctionFeeTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeeAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AuctionFeeAmount
		{
			get
			{
				return this._AuctionFeeAmount;
			}
			set
			{
				if ((this._AuctionFeeAmount != value))
				{
					this.OnAuctionFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._AuctionFeeAmount = value;
					this.SendPropertyChanged("AuctionFeeAmount");
					this.OnAuctionFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriatePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxAppropriatePrice
		{
			get
			{
				return this._CarTaxAppropriatePrice;
			}
			set
			{
				if ((this._CarTaxAppropriatePrice != value))
				{
					this.OnCarTaxAppropriatePriceChanging(value);
					this.SendPropertyChanging();
					this._CarTaxAppropriatePrice = value;
					this.SendPropertyChanged("CarTaxAppropriatePrice");
					this.OnCarTaxAppropriatePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecyclePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecyclePrice
		{
			get
			{
				return this._RecyclePrice;
			}
			set
			{
				if ((this._RecyclePrice != value))
				{
					this.OnRecyclePriceChanging(value);
					this.SendPropertyChanging();
					this._RecyclePrice = value;
					this.SendPropertyChanged("RecyclePrice");
					this.OnRecyclePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> EquipmentTax
		{
			get
			{
				return this._EquipmentTax;
			}
			set
			{
				if ((this._EquipmentTax != value))
				{
					this.OnEquipmentTaxChanging(value);
					this.SendPropertyChanging();
					this._EquipmentTax = value;
					this.SendPropertyChanged("EquipmentTax");
					this.OnEquipmentTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> EquipmentAmount
		{
			get
			{
				return this._EquipmentAmount;
			}
			set
			{
				if ((this._EquipmentAmount != value))
				{
					this.OnEquipmentAmountChanging(value);
					this.SendPropertyChanging();
					this._EquipmentAmount = value;
					this.SendPropertyChanged("EquipmentAmount");
					this.OnEquipmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RepairTax
		{
			get
			{
				return this._RepairTax;
			}
			set
			{
				if ((this._RepairTax != value))
				{
					this.OnRepairTaxChanging(value);
					this.SendPropertyChanging();
					this._RepairTax = value;
					this.SendPropertyChanged("RepairTax");
					this.OnRepairTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepairAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RepairAmount
		{
			get
			{
				return this._RepairAmount;
			}
			set
			{
				if ((this._RepairAmount != value))
				{
					this.OnRepairAmountChanging(value);
					this.SendPropertyChanging();
					this._RepairAmount = value;
					this.SendPropertyChanged("RepairAmount");
					this.OnRepairAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriateTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxAppropriateTax
		{
			get
			{
				return this._CarTaxAppropriateTax;
			}
			set
			{
				if ((this._CarTaxAppropriateTax != value))
				{
					this.OnCarTaxAppropriateTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTaxAppropriateTax = value;
					this.SendPropertyChanged("CarTaxAppropriateTax");
					this.OnCarTaxAppropriateTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFlag", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CancelFlag
		{
			get
			{
				return this._CancelFlag;
			}
			set
			{
				if ((this._CancelFlag != value))
				{
					this.OnCancelFlagChanging(value);
					this.SendPropertyChanging();
					this._CancelFlag = value;
					this.SendPropertyChanged("CancelFlag");
					this.OnCancelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditScreen", DbType="NVarChar(3)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastEditScreen
		{
			get
			{
				return this._LastEditScreen;
			}
			set
			{
				if ((this._LastEditScreen != value))
				{
					this.OnLastEditScreenChanging(value);
					this.SendPropertyChanging();
					this._LastEditScreen = value;
					this.SendPropertyChanged("LastEditScreen");
					this.OnLastEditScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelCarPurchaseId", DbType="nvarchar(36)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CancelCarPurchaseId
		{
			get
			{
				return this._CancelCarPurchaseId;
			}
			set
			{
				if ((this._CancelCarPurchaseId != value))
				{
					this.OnCancelCarPurchaseIdChanging(value);
					this.SendPropertyChanging();
					this._CancelCarPurchaseId = value;
					this.SendPropertyChanged("CancelCarPurchaseId");
					this.OnCancelCarPurchaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelMemo", DbType="nvarchar(100)")]
		public new string CancelMemo
		{
			get
			{
				return this._CancelMemo;
			}
			set
			{
				if ((this._CancelMemo != value))
				{
					this.OnCancelMemoChanging(value);
					this.SendPropertyChanging();
					this._CancelMemo = value;
					this.SendPropertyChanged("CancelMemo");
					this.OnCancelMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistOwnFlag", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistOwnFlag
		{
			get
			{
				return this._RegistOwnFlag;
			}
			set
			{
				if ((this._RegistOwnFlag != value))
				{
					this.OnRegistOwnFlagChanging(value);
					this.SendPropertyChanging();
					this._RegistOwnFlag = value;
					this.SendPropertyChanged("RegistOwnFlag");
					this.OnRegistOwnFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> FinancialAmount
		{
			get
			{
				return this._FinancialAmount;
			}
			set
			{
				if ((this._FinancialAmount != value))
				{
					this.OnFinancialAmountChanging(value);
					this.SendPropertyChanging();
					this._FinancialAmount = value;
					this.SendPropertyChanged("FinancialAmount");
					this.OnFinancialAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialDataCaptured", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FinancialAmountLocked
		{
			get
			{
				return this._FinancialDataCaptured;
			}
			set
			{
				if ((this._FinancialDataCaptured != value))
				{
					this.OnFinancialAmountLockedChanging(value);
					this.SendPropertyChanging();
					this._FinancialDataCaptured = value;
					this.SendPropertyChanged("FinancialAmountLocked");
					this.OnFinancialAmountLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseStatus_CarPurchase", Storage="_c_PurchaseStatus", ThisKey="PurchaseStatus", OtherKey="Code", IsForeignKey=true)]
		public c_PurchaseStatus c_PurchaseStatus
		{
			get
			{
				return this._c_PurchaseStatus.Entity;
			}
			set
			{
				c_PurchaseStatus previousValue = this._c_PurchaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_PurchaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PurchaseStatus.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._c_PurchaseStatus.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._PurchaseStatus = value.Code;
					}
					else
					{
						this._PurchaseStatus = default(string);
					}
					this.SendPropertyChanged("c_PurchaseStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchase", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_CarPurchase", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_CarPurchase", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_CarPurchase", Storage="_SalesCar", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber", IsForeignKey=true)]
		public SalesCar SalesCar
		{
			get
			{
				return this._SalesCar.Entity;
			}
			set
			{
				SalesCar previousValue = this._SalesCar.Entity;
				if (((previousValue != value) 
							|| (this._SalesCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesCar.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._SalesCar.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._SalesCarId = value.SalesCarNumber;
					}
					else
					{
						this._SalesCarId = default(string);
					}
					this.SendPropertyChanged("SalesCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarPurchaseOrder_CarPurchase", Storage="_CarPurchaseOrder", ThisKey="CarPurchaseOrderNumber", OtherKey="CarPurchaseOrderNumber", IsForeignKey=true)]
		public CarPurchaseOrder CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder.Entity;
			}
			set
			{
				CarPurchaseOrder previousValue = this._CarPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._CarPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarPurchaseOrder.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._CarPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._PurchaseOrderId = value.CarPurchaseOrderNumber;
					}
					else
					{
						this._PurchaseOrderId = default(string);
					}
					this.SendPropertyChanged("CarPurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_CarPurchase", Storage="_Location", ThisKey="PurchaseLocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._PurchaseLocationCode = value.LocationCode;
					}
					else
					{
						this._PurchaseLocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarAppraisal_CarPurchase", Storage="_CarAppraisal", ThisKey="CarAppraisalId", OtherKey="CarAppraisalId", IsForeignKey=true)]
		public CarAppraisal CarAppraisal
		{
			get
			{
				return this._CarAppraisal.Entity;
			}
			set
			{
				CarAppraisal previousValue = this._CarAppraisal.Entity;
				if (((previousValue != value) 
							|| (this._CarAppraisal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarAppraisal.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._CarAppraisal.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._CarAppraisalId = value.CarAppraisalId;
					}
					else
					{
						this._CarAppraisalId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CarAppraisal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarPurchase", Storage="_c_EraseRegist", ThisKey="EraseRegist", OtherKey="Code", IsForeignKey=true)]
		public c_EraseRegist c_EraseRegist
		{
			get
			{
				return this._c_EraseRegist.Entity;
			}
			set
			{
				c_EraseRegist previousValue = this._c_EraseRegist.Entity;
				if (((previousValue != value) 
							|| (this._c_EraseRegist.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_EraseRegist.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._c_EraseRegist.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._EraseRegist = value.Code;
					}
					else
					{
						this._EraseRegist = default(string);
					}
					this.SendPropertyChanged("c_EraseRegist");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarPurchaseType_CarPurchase", Storage="_c_CarPurchaseType", ThisKey="CarPurchaseType", OtherKey="Code", IsForeignKey=true)]
		public c_CarPurchaseType c_CarPurchaseType
		{
			get
			{
				return this._c_CarPurchaseType.Entity;
			}
			set
			{
				c_CarPurchaseType previousValue = this._c_CarPurchaseType.Entity;
				if (((previousValue != value) 
							|| (this._c_CarPurchaseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CarPurchaseType.Entity = null;
						previousValue.CarPurchase.Remove(this);
					}
					this._c_CarPurchaseType.Entity = value;
					if ((value != null))
					{
						value.CarPurchase.Add(this);
						this._CarPurchaseType = value.Code;
					}
					else
					{
						this._CarPurchaseType = default(string);
					}
					this.SendPropertyChanged("c_CarPurchaseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CarPurchase1", Storage="_Employee1", ThisKey="LastUpdateEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.CarPurchase1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.CarPurchase1.Add(this);
						this._LastUpdateEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._LastUpdateEmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarAppraisal")]
	public partial class V_CarAppraisal
	{
		
		private System.Guid _CarAppraisalId;
		
		private string _Vin;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _SlipNumber;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _PurchaseStatus;
		
		private string _AppraisalEmployeeName;
		
		private string _OrderEmployeeName;
		
		private string _CustomerName;
		
		private char _SlipNumberCtrl;
		
		private string _DelFlag;
		
		public V_CarAppraisal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAppraisalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CarAppraisalId
		{
			get
			{
				return this._CarAppraisalId;
			}
			set
			{
				if ((this._CarAppraisalId != value))
				{
					this._CarAppraisalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					this._PurchaseStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AppraisalEmployeeName
		{
			get
			{
				return this._AppraisalEmployeeName;
			}
			set
			{
				if ((this._AppraisalEmployeeName != value))
				{
					this._AppraisalEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderEmployeeName
		{
			get
			{
				return this._OrderEmployeeName;
			}
			set
			{
				if ((this._OrderEmployeeName != value))
				{
					this._OrderEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumberCtrl", DbType="VarChar(1) NOT NULL")]
		public char SlipNumberCtrl
		{
			get
			{
				return this._SlipNumberCtrl;
			}
			set
			{
				if ((this._SlipNumberCtrl != value))
				{
					this._SlipNumberCtrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSalesHeader")]
	public partial class ServiceSalesHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _CarSlipNumber;
		
		private System.Nullable<System.DateTime> _CarSalesOrderDate;
		
		private System.Nullable<System.DateTime> _QuoteDate;
		
		private System.Nullable<System.DateTime> _QuoteExpireDate;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _ServiceOrderStatus;
		
		private string _ApprovalFlag;
		
		private string _CampaignCode1;
		
		private string _CampaignCode2;
		
		private System.Nullable<System.DateTime> _WorkingStartDate;
		
		private System.Nullable<System.DateTime> _WorkingEndDate;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _CustomerCode;
		
		private string _DepartmentCode;
		
		private string _CarEmployeeCode;
		
		private string _FrontEmployeeCode;
		
		private string _ReceiptionEmployeeCode;
		
		private string _CarGradeCode;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private string _EngineType;
		
		private string _ManufacturingYear;
		
		private string _Vin;
		
		private string _ModelName;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _MileageUnit;
		
		private System.Nullable<System.DateTime> _SalesPlanDate;
		
		private string _FirstRegistration;
		
		private System.Nullable<System.DateTime> _NextInspectionDate;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private System.Nullable<System.DateTime> _MakerShipmentDate;
		
		private System.Nullable<System.DateTime> _RegistrationPlanDate;
		
		private string _RequestContent;
		
		private System.Nullable<decimal> _CarTax;
		
		private System.Nullable<decimal> _CarLiabilityInsurance;
		
		private System.Nullable<decimal> _CarWeightTax;
		
		private System.Nullable<decimal> _FiscalStampCost;
		
		private System.Nullable<decimal> _InspectionRegistCost;
		
		private System.Nullable<decimal> _ParkingSpaceCost;
		
		private System.Nullable<decimal> _TradeInCost;
		
		private System.Nullable<decimal> _ReplacementFee;
		
		private System.Nullable<decimal> _InspectionRegistFee;
		
		private System.Nullable<decimal> _ParkingSpaceFee;
		
		private System.Nullable<decimal> _TradeInFee;
		
		private System.Nullable<decimal> _PreparationFee;
		
		private System.Nullable<decimal> _RecycleControlFee;
		
		private System.Nullable<decimal> _RecycleControlFeeTradeIn;
		
		private System.Nullable<decimal> _RequestNumberFee;
		
		private System.Nullable<decimal> _CarTaxUnexpiredAmount;
		
		private System.Nullable<decimal> _CarLiabilityInsuranceUnexpiredAmount;
		
		private System.Nullable<decimal> _LaborRate;
		
		private string _Memo;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _EngineerTotalAmount;
		
		private System.Nullable<decimal> _PartsTotalAmount;
		
		private System.Nullable<decimal> _SubTotalAmount;
		
		private System.Nullable<decimal> _TotalTaxAmount;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		private System.Nullable<decimal> _ServiceTotalAmount;
		
		private System.Nullable<decimal> _CostTotalAmount;
		
		private System.Nullable<decimal> _PaymentTotalAmount;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _InspectionExpireDate;
		
		private System.Nullable<decimal> _NumberPlateCost;
		
		private string _TaxFreeFieldName;
		
		private System.Nullable<decimal> _TaxFreeFieldValue;
		
		private string _UsVin;
		
		private System.Nullable<System.Guid> _ProcessSessionId;
		
		private string _ConsumptionTaxId;
		
		private System.Nullable<int> _Rate;
		
		private bool _KeepsCarFlag;
		
		private System.Nullable<decimal> _VoluntaryInsurance;
		
		private string _CarTaxMemo;
		
		private string _CarLiabilityInsuranceMemo;
		
		private string _CarWeightTaxMemo;
		
		private string _NumberPlateCostMemo;
		
		private string _FiscalStampCostMemo;
		
		private string _VoluntaryInsuranceMemo;
		
		private System.Nullable<decimal> _SubscriptionFee;
		
		private string _SubscriptionFeeMemo;
		
		private System.Nullable<decimal> _TaxableCostTotalAmount;
		
		private System.Nullable<decimal> _TaxableFreeFieldValue;
		
		private string _TaxableFreeFieldName;
		
		private string _CustomerClaimCode;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<ServiceSalesPayment> _ServiceSalesPayment;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<CarGrade> _CarGrade;
		
		private EntityRef<c_MileageUnit> _c_MileageUnit;
		
		private EntityRef<Campaign> _Campaign1;
		
		private EntityRef<Campaign> _Campaign2;
		
		private EntityRef<c_ServiceOrderStatus> _c_ServiceOrderStatus;
		
		private EntityRef<Employee> _FrontEmployee;
		
		private EntityRef<Employee> _ReceiptionEmployee;
		
		private EntityRef<ProcessSessionControl> _ProcessSessionControl;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnCarSlipNumberChanging(string value);
    partial void OnCarSlipNumberChanged();
    partial void OnCarSalesOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCarSalesOrderDateChanged();
    partial void OnQuoteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteDateChanged();
    partial void OnQuoteExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnQuoteExpireDateChanged();
    partial void OnSalesOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesOrderDateChanged();
    partial void OnServiceOrderStatusChanging(string value);
    partial void OnServiceOrderStatusChanged();
    partial void OnApprovalFlagChanging(string value);
    partial void OnApprovalFlagChanged();
    partial void OnCampaignCode1Changing(string value);
    partial void OnCampaignCode1Changed();
    partial void OnCampaignCode2Changing(string value);
    partial void OnCampaignCode2Changed();
    partial void OnWorkingStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkingStartDateChanged();
    partial void OnWorkingEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkingEndDateChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCarEmployeeCodeChanging(string value);
    partial void OnCarEmployeeCodeChanged();
    partial void OnFrontEmployeeCodeChanging(string value);
    partial void OnFrontEmployeeCodeChanged();
    partial void OnReceiptionEmployeeCodeChanging(string value);
    partial void OnReceiptionEmployeeCodeChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnCarBrandNameChanging(string value);
    partial void OnCarBrandNameChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCarGradeNameChanging(string value);
    partial void OnCarGradeNameChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnManufacturingYearChanging(string value);
    partial void OnManufacturingYearChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnSalesPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesPlanDateChanged();
    partial void OnFirstRegistrationChanging(string value);
    partial void OnFirstRegistrationChanged();
    partial void OnNextInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextInspectionDateChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnRegistrationNumberTypeChanging(string value);
    partial void OnRegistrationNumberTypeChanged();
    partial void OnRegistrationNumberKanaChanging(string value);
    partial void OnRegistrationNumberKanaChanged();
    partial void OnRegistrationNumberPlateChanging(string value);
    partial void OnRegistrationNumberPlateChanged();
    partial void OnMakerShipmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMakerShipmentDateChanged();
    partial void OnRegistrationPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationPlanDateChanged();
    partial void OnRequestContentChanging(string value);
    partial void OnRequestContentChanged();
    partial void OnCarTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxChanged();
    partial void OnCarLiabilityInsuranceChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceChanged();
    partial void OnCarWeightTaxChanging(System.Nullable<decimal> value);
    partial void OnCarWeightTaxChanged();
    partial void OnFiscalStampCostChanging(System.Nullable<decimal> value);
    partial void OnFiscalStampCostChanged();
    partial void OnInspectionRegistCostChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistCostChanged();
    partial void OnParkingSpaceCostChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceCostChanged();
    partial void OnTradeInCostChanging(System.Nullable<decimal> value);
    partial void OnTradeInCostChanged();
    partial void OnReplacementFeeChanging(System.Nullable<decimal> value);
    partial void OnReplacementFeeChanged();
    partial void OnInspectionRegistFeeChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistFeeChanged();
    partial void OnParkingSpaceFeeChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceFeeChanged();
    partial void OnTradeInFeeChanging(System.Nullable<decimal> value);
    partial void OnTradeInFeeChanged();
    partial void OnPreparationFeeChanging(System.Nullable<decimal> value);
    partial void OnPreparationFeeChanged();
    partial void OnRecycleControlFeeChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeChanged();
    partial void OnRecycleControlFeeTradeInChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeTradeInChanged();
    partial void OnRequestNumberFeeChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberFeeChanged();
    partial void OnCarTaxUnexpiredAmountChanging(System.Nullable<decimal> value);
    partial void OnCarTaxUnexpiredAmountChanged();
    partial void OnCarLiabilityInsuranceUnexpiredAmountChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceUnexpiredAmountChanged();
    partial void OnLaborRateChanging(System.Nullable<decimal> value);
    partial void OnLaborRateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnEngineerTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnEngineerTotalAmountChanged();
    partial void OnPartsTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnPartsTotalAmountChanged();
    partial void OnSubTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnSubTotalAmountChanged();
    partial void OnTotalTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalTaxAmountChanged();
    partial void OnGrandTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnGrandTotalAmountChanged();
    partial void OnServiceTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnServiceTotalAmountChanged();
    partial void OnCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnCostTotalAmountChanged();
    partial void OnPaymentTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentTotalAmountChanged();
    partial void OnArrivalPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalPlanDateChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnInspectionExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionExpireDateChanged();
    partial void OnNumberPlateCostChanging(System.Nullable<decimal> value);
    partial void OnNumberPlateCostChanged();
    partial void OnTaxFreeFieldNameChanging(string value);
    partial void OnTaxFreeFieldNameChanged();
    partial void OnTaxFreeFieldValueChanging(System.Nullable<decimal> value);
    partial void OnTaxFreeFieldValueChanged();
    partial void OnUsVinChanging(string value);
    partial void OnUsVinChanged();
    partial void OnProcessSessionIdChanging(System.Nullable<System.Guid> value);
    partial void OnProcessSessionIdChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnKeepsCarFlagChanging(bool value);
    partial void OnKeepsCarFlagChanged();
    partial void OnOptionalInsuranceChanging(System.Nullable<decimal> value);
    partial void OnOptionalInsuranceChanged();
    partial void OnCarTaxMemoChanging(string value);
    partial void OnCarTaxMemoChanged();
    partial void OnCarLiabilityInsuranceMemoChanging(string value);
    partial void OnCarLiabilityInsuranceMemoChanged();
    partial void OnCarWeightTaxMemoChanging(string value);
    partial void OnCarWeightTaxMemoChanged();
    partial void OnNumberPlateCostMemoChanging(string value);
    partial void OnNumberPlateCostMemoChanged();
    partial void OnFiscalStampCostMemoChanging(string value);
    partial void OnFiscalStampCostMemoChanged();
    partial void OnOptionalInsuranceMemoChanging(string value);
    partial void OnOptionalInsuranceMemoChanged();
    partial void OnSubscriptionFeeChanging(System.Nullable<decimal> value);
    partial void OnSubscriptionFeeChanged();
    partial void OnSubscriptionFeeMemoChanging(string value);
    partial void OnSubscriptionFeeMemoChanged();
    partial void OnTaxableCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxableCostTotalAmountChanged();
    partial void OnTaxableFreeFieldValueChanging(System.Nullable<decimal> value);
    partial void OnTaxableFreeFieldValueChanged();
    partial void OnTaxableFreeFieldNameChanging(string value);
    partial void OnTaxableFreeFieldNameChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    #endregion
		
		public ServiceSalesHeader()
		{
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._ServiceSalesPayment = new EntitySet<ServiceSalesPayment>(new Action<ServiceSalesPayment>(this.attach_ServiceSalesPayment), new Action<ServiceSalesPayment>(this.detach_ServiceSalesPayment));
			this._Employee = default(EntityRef<Employee>);
			this._Customer = default(EntityRef<Customer>);
			this._Department = default(EntityRef<Department>);
			this._CarGrade = default(EntityRef<CarGrade>);
			this._c_MileageUnit = default(EntityRef<c_MileageUnit>);
			this._Campaign1 = default(EntityRef<Campaign>);
			this._Campaign2 = default(EntityRef<Campaign>);
			this._c_ServiceOrderStatus = default(EntityRef<c_ServiceOrderStatus>);
			this._FrontEmployee = default(EntityRef<Employee>);
			this._ReceiptionEmployee = default(EntityRef<Employee>);
			this._ProcessSessionControl = default(EntityRef<ProcessSessionControl>);
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarSlipNumber
		{
			get
			{
				return this._CarSlipNumber;
			}
			set
			{
				if ((this._CarSlipNumber != value))
				{
					this.OnCarSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._CarSlipNumber = value;
					this.SendPropertyChanged("CarSlipNumber");
					this.OnCarSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CarSalesOrderDate
		{
			get
			{
				return this._CarSalesOrderDate;
			}
			set
			{
				if ((this._CarSalesOrderDate != value))
				{
					this.OnCarSalesOrderDateChanging(value);
					this.SendPropertyChanging();
					this._CarSalesOrderDate = value;
					this.SendPropertyChanged("CarSalesOrderDate");
					this.OnCarSalesOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this.OnQuoteDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteDate = value;
					this.SendPropertyChanged("QuoteDate");
					this.OnQuoteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteExpireDate
		{
			get
			{
				return this._QuoteExpireDate;
			}
			set
			{
				if ((this._QuoteExpireDate != value))
				{
					this.OnQuoteExpireDateChanging(value);
					this.SendPropertyChanging();
					this._QuoteExpireDate = value;
					this.SendPropertyChanged("QuoteExpireDate");
					this.OnQuoteExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this.OnSalesOrderDateChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderDate = value;
					this.SendPropertyChanged("SalesOrderDate");
					this.OnSalesOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					if (this._c_ServiceOrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._ServiceOrderStatus = value;
					this.SendPropertyChanged("ServiceOrderStatus");
					this.OnServiceOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApprovalFlag
		{
			get
			{
				return this._ApprovalFlag;
			}
			set
			{
				if ((this._ApprovalFlag != value))
				{
					this.OnApprovalFlagChanging(value);
					this.SendPropertyChanging();
					this._ApprovalFlag = value;
					this.SendPropertyChanged("ApprovalFlag");
					this.OnApprovalFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode1", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode1
		{
			get
			{
				return this._CampaignCode1;
			}
			set
			{
				if ((this._CampaignCode1 != value))
				{
					if (this._Campaign1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCode1Changing(value);
					this.SendPropertyChanging();
					this._CampaignCode1 = value;
					this.SendPropertyChanged("CampaignCode1");
					this.OnCampaignCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode2
		{
			get
			{
				return this._CampaignCode2;
			}
			set
			{
				if ((this._CampaignCode2 != value))
				{
					if (this._Campaign2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCode2Changing(value);
					this.SendPropertyChanging();
					this._CampaignCode2 = value;
					this.SendPropertyChanged("CampaignCode2");
					this.OnCampaignCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkingStartDate
		{
			get
			{
				return this._WorkingStartDate;
			}
			set
			{
				if ((this._WorkingStartDate != value))
				{
					this.OnWorkingStartDateChanging(value);
					this.SendPropertyChanging();
					this._WorkingStartDate = value;
					this.SendPropertyChanged("WorkingStartDate");
					this.OnWorkingStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkingEndDate
		{
			get
			{
				return this._WorkingEndDate;
			}
			set
			{
				if ((this._WorkingEndDate != value))
				{
					this.OnWorkingEndDateChanging(value);
					this.SendPropertyChanging();
					this._WorkingEndDate = value;
					this.SendPropertyChanged("WorkingEndDate");
					this.OnWorkingEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarEmployeeCode
		{
			get
			{
				return this._CarEmployeeCode;
			}
			set
			{
				if ((this._CarEmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarEmployeeCode = value;
					this.SendPropertyChanged("CarEmployeeCode");
					this.OnCarEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FrontEmployeeCode
		{
			get
			{
				return this._FrontEmployeeCode;
			}
			set
			{
				if ((this._FrontEmployeeCode != value))
				{
					if (this._FrontEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFrontEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._FrontEmployeeCode = value;
					this.SendPropertyChanged("FrontEmployeeCode");
					this.OnFrontEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionEmployeeCode
		{
			get
			{
				return this._ReceiptionEmployeeCode;
			}
			set
			{
				if ((this._ReceiptionEmployeeCode != value))
				{
					if (this._ReceiptionEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptionEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptionEmployeeCode = value;
					this.SendPropertyChanged("ReceiptionEmployeeCode");
					this.OnReceiptionEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this.OnCarBrandNameChanging(value);
					this.SendPropertyChanging();
					this._CarBrandName = value;
					this.SendPropertyChanged("CarBrandName");
					this.OnCarBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this.OnCarGradeNameChanging(value);
					this.SendPropertyChanging();
					this._CarGradeName = value;
					this.SendPropertyChanged("CarGradeName");
					this.OnCarGradeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingYear", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ManufacturingYear
		{
			get
			{
				return this._ManufacturingYear;
			}
			set
			{
				if ((this._ManufacturingYear != value))
				{
					this.OnManufacturingYearChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingYear = value;
					this.SendPropertyChanged("ManufacturingYear");
					this.OnManufacturingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					if (this._c_MileageUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesPlanDate
		{
			get
			{
				return this._SalesPlanDate;
			}
			set
			{
				if ((this._SalesPlanDate != value))
				{
					this.OnSalesPlanDateChanging(value);
					this.SendPropertyChanging();
					this._SalesPlanDate = value;
					this.SendPropertyChanged("SalesPlanDate");
					this.OnSalesPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistration", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistration
		{
			get
			{
				return this._FirstRegistration;
			}
			set
			{
				if ((this._FirstRegistration != value))
				{
					this.OnFirstRegistrationChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistration = value;
					this.SendPropertyChanged("FirstRegistration");
					this.OnFirstRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextInspectionDate
		{
			get
			{
				return this._NextInspectionDate;
			}
			set
			{
				if ((this._NextInspectionDate != value))
				{
					this.OnNextInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._NextInspectionDate = value;
					this.SendPropertyChanged("NextInspectionDate");
					this.OnNextInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this.OnRegistrationNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberType = value;
					this.SendPropertyChanged("RegistrationNumberType");
					this.OnRegistrationNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this.OnRegistrationNumberKanaChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberKana = value;
					this.SendPropertyChanged("RegistrationNumberKana");
					this.OnRegistrationNumberKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this.OnRegistrationNumberPlateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberPlate = value;
					this.SendPropertyChanged("RegistrationNumberPlate");
					this.OnRegistrationNumberPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerShipmentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MakerShipmentDate
		{
			get
			{
				return this._MakerShipmentDate;
			}
			set
			{
				if ((this._MakerShipmentDate != value))
				{
					this.OnMakerShipmentDateChanging(value);
					this.SendPropertyChanging();
					this._MakerShipmentDate = value;
					this.SendPropertyChanged("MakerShipmentDate");
					this.OnMakerShipmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationPlanDate
		{
			get
			{
				return this._RegistrationPlanDate;
			}
			set
			{
				if ((this._RegistrationPlanDate != value))
				{
					this.OnRegistrationPlanDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationPlanDate = value;
					this.SendPropertyChanged("RegistrationPlanDate");
					this.OnRegistrationPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestContent", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestContent
		{
			get
			{
				return this._RequestContent;
			}
			set
			{
				if ((this._RequestContent != value))
				{
					this.OnRequestContentChanging(value);
					this.SendPropertyChanging();
					this._RequestContent = value;
					this.SendPropertyChanged("RequestContent");
					this.OnRequestContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTax
		{
			get
			{
				return this._CarTax;
			}
			set
			{
				if ((this._CarTax != value))
				{
					this.OnCarTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTax = value;
					this.SendPropertyChanged("CarTax");
					this.OnCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this.OnCarLiabilityInsuranceChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsurance = value;
					this.SendPropertyChanged("CarLiabilityInsurance");
					this.OnCarLiabilityInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarWeightTax
		{
			get
			{
				return this._CarWeightTax;
			}
			set
			{
				if ((this._CarWeightTax != value))
				{
					this.OnCarWeightTaxChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTax = value;
					this.SendPropertyChanged("CarWeightTax");
					this.OnCarWeightTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalStampCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> FiscalStampCost
		{
			get
			{
				return this._FiscalStampCost;
			}
			set
			{
				if ((this._FiscalStampCost != value))
				{
					this.OnFiscalStampCostChanging(value);
					this.SendPropertyChanging();
					this._FiscalStampCost = value;
					this.SendPropertyChanged("FiscalStampCost");
					this.OnFiscalStampCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistCost
		{
			get
			{
				return this._InspectionRegistCost;
			}
			set
			{
				if ((this._InspectionRegistCost != value))
				{
					this.OnInspectionRegistCostChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistCost = value;
					this.SendPropertyChanged("InspectionRegistCost");
					this.OnInspectionRegistCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceCost
		{
			get
			{
				return this._ParkingSpaceCost;
			}
			set
			{
				if ((this._ParkingSpaceCost != value))
				{
					this.OnParkingSpaceCostChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceCost = value;
					this.SendPropertyChanged("ParkingSpaceCost");
					this.OnParkingSpaceCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInCost
		{
			get
			{
				return this._TradeInCost;
			}
			set
			{
				if ((this._TradeInCost != value))
				{
					this.OnTradeInCostChanging(value);
					this.SendPropertyChanging();
					this._TradeInCost = value;
					this.SendPropertyChanged("TradeInCost");
					this.OnTradeInCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReplacementFee
		{
			get
			{
				return this._ReplacementFee;
			}
			set
			{
				if ((this._ReplacementFee != value))
				{
					this.OnReplacementFeeChanging(value);
					this.SendPropertyChanging();
					this._ReplacementFee = value;
					this.SendPropertyChanged("ReplacementFee");
					this.OnReplacementFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistFee
		{
			get
			{
				return this._InspectionRegistFee;
			}
			set
			{
				if ((this._InspectionRegistFee != value))
				{
					this.OnInspectionRegistFeeChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistFee = value;
					this.SendPropertyChanged("InspectionRegistFee");
					this.OnInspectionRegistFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceFee
		{
			get
			{
				return this._ParkingSpaceFee;
			}
			set
			{
				if ((this._ParkingSpaceFee != value))
				{
					this.OnParkingSpaceFeeChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceFee = value;
					this.SendPropertyChanged("ParkingSpaceFee");
					this.OnParkingSpaceFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInFee
		{
			get
			{
				return this._TradeInFee;
			}
			set
			{
				if ((this._TradeInFee != value))
				{
					this.OnTradeInFeeChanging(value);
					this.SendPropertyChanging();
					this._TradeInFee = value;
					this.SendPropertyChanged("TradeInFee");
					this.OnTradeInFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreparationFee
		{
			get
			{
				return this._PreparationFee;
			}
			set
			{
				if ((this._PreparationFee != value))
				{
					this.OnPreparationFeeChanging(value);
					this.SendPropertyChanging();
					this._PreparationFee = value;
					this.SendPropertyChanged("PreparationFee");
					this.OnPreparationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFee
		{
			get
			{
				return this._RecycleControlFee;
			}
			set
			{
				if ((this._RecycleControlFee != value))
				{
					this.OnRecycleControlFeeChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFee = value;
					this.SendPropertyChanged("RecycleControlFee");
					this.OnRecycleControlFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFeeTradeIn", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFeeTradeIn
		{
			get
			{
				return this._RecycleControlFeeTradeIn;
			}
			set
			{
				if ((this._RecycleControlFeeTradeIn != value))
				{
					this.OnRecycleControlFeeTradeInChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFeeTradeIn = value;
					this.SendPropertyChanged("RecycleControlFeeTradeIn");
					this.OnRecycleControlFeeTradeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberFee
		{
			get
			{
				return this._RequestNumberFee;
			}
			set
			{
				if ((this._RequestNumberFee != value))
				{
					this.OnRequestNumberFeeChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberFee = value;
					this.SendPropertyChanged("RequestNumberFee");
					this.OnRequestNumberFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxUnexpiredAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTaxUnexpiredAmount
		{
			get
			{
				return this._CarTaxUnexpiredAmount;
			}
			set
			{
				if ((this._CarTaxUnexpiredAmount != value))
				{
					this.OnCarTaxUnexpiredAmountChanging(value);
					this.SendPropertyChanging();
					this._CarTaxUnexpiredAmount = value;
					this.SendPropertyChanged("CarTaxUnexpiredAmount");
					this.OnCarTaxUnexpiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceUnexpiredAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsuranceUnexpiredAmount
		{
			get
			{
				return this._CarLiabilityInsuranceUnexpiredAmount;
			}
			set
			{
				if ((this._CarLiabilityInsuranceUnexpiredAmount != value))
				{
					this.OnCarLiabilityInsuranceUnexpiredAmountChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceUnexpiredAmount = value;
					this.SendPropertyChanged("CarLiabilityInsuranceUnexpiredAmount");
					this.OnCarLiabilityInsuranceUnexpiredAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborRate", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> LaborRate
		{
			get
			{
				return this._LaborRate;
			}
			set
			{
				if ((this._LaborRate != value))
				{
					this.OnLaborRateChanging(value);
					this.SendPropertyChanging();
					this._LaborRate = value;
					this.SendPropertyChanged("LaborRate");
					this.OnLaborRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(400)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineerTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> EngineerTotalAmount
		{
			get
			{
				return this._EngineerTotalAmount;
			}
			set
			{
				if ((this._EngineerTotalAmount != value))
				{
					this.OnEngineerTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._EngineerTotalAmount = value;
					this.SendPropertyChanged("EngineerTotalAmount");
					this.OnEngineerTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PartsTotalAmount
		{
			get
			{
				return this._PartsTotalAmount;
			}
			set
			{
				if ((this._PartsTotalAmount != value))
				{
					this.OnPartsTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._PartsTotalAmount = value;
					this.SendPropertyChanged("PartsTotalAmount");
					this.OnPartsTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SubTotalAmount
		{
			get
			{
				return this._SubTotalAmount;
			}
			set
			{
				if ((this._SubTotalAmount != value))
				{
					this.OnSubTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._SubTotalAmount = value;
					this.SendPropertyChanged("SubTotalAmount");
					this.OnSubTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this.OnTotalTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalTaxAmount = value;
					this.SendPropertyChanged("TotalTaxAmount");
					this.OnTotalTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this.OnGrandTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._GrandTotalAmount = value;
					this.SendPropertyChanged("GrandTotalAmount");
					this.OnGrandTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ServiceTotalAmount
		{
			get
			{
				return this._ServiceTotalAmount;
			}
			set
			{
				if ((this._ServiceTotalAmount != value))
				{
					this.OnServiceTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._ServiceTotalAmount = value;
					this.SendPropertyChanged("ServiceTotalAmount");
					this.OnServiceTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CostTotalAmount
		{
			get
			{
				return this._CostTotalAmount;
			}
			set
			{
				if ((this._CostTotalAmount != value))
				{
					this.OnCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._CostTotalAmount = value;
					this.SendPropertyChanged("CostTotalAmount");
					this.OnCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PaymentTotalAmount
		{
			get
			{
				return this._PaymentTotalAmount;
			}
			set
			{
				if ((this._PaymentTotalAmount != value))
				{
					this.OnPaymentTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentTotalAmount = value;
					this.SendPropertyChanged("PaymentTotalAmount");
					this.OnPaymentTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this.OnArrivalPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalPlanDate = value;
					this.SendPropertyChanged("ArrivalPlanDate");
					this.OnArrivalPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionExpireDate
		{
			get
			{
				return this._InspectionExpireDate;
			}
			set
			{
				if ((this._InspectionExpireDate != value))
				{
					this.OnInspectionExpireDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionExpireDate = value;
					this.SendPropertyChanged("InspectionExpireDate");
					this.OnInspectionExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPlateCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> NumberPlateCost
		{
			get
			{
				return this._NumberPlateCost;
			}
			set
			{
				if ((this._NumberPlateCost != value))
				{
					this.OnNumberPlateCostChanging(value);
					this.SendPropertyChanging();
					this._NumberPlateCost = value;
					this.SendPropertyChanged("NumberPlateCost");
					this.OnNumberPlateCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeFieldName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxFreeFieldName
		{
			get
			{
				return this._TaxFreeFieldName;
			}
			set
			{
				if ((this._TaxFreeFieldName != value))
				{
					this.OnTaxFreeFieldNameChanging(value);
					this.SendPropertyChanging();
					this._TaxFreeFieldName = value;
					this.SendPropertyChanged("TaxFreeFieldName");
					this.OnTaxFreeFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeFieldValue", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxFreeFieldValue
		{
			get
			{
				return this._TaxFreeFieldValue;
			}
			set
			{
				if ((this._TaxFreeFieldValue != value))
				{
					this.OnTaxFreeFieldValueChanging(value);
					this.SendPropertyChanging();
					this._TaxFreeFieldValue = value;
					this.SendPropertyChanged("TaxFreeFieldValue");
					this.OnTaxFreeFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsVin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsVin
		{
			get
			{
				return this._UsVin;
			}
			set
			{
				if ((this._UsVin != value))
				{
					this.OnUsVinChanging(value);
					this.SendPropertyChanging();
					this._UsVin = value;
					this.SendPropertyChanged("UsVin");
					this.OnUsVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessSessionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ProcessSessionId
		{
			get
			{
				return this._ProcessSessionId;
			}
			set
			{
				if ((this._ProcessSessionId != value))
				{
					if (this._ProcessSessionControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessSessionIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessSessionId = value;
					this.SendPropertyChanged("ProcessSessionId");
					this.OnProcessSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepsCarFlag", DbType="Bit NOT NULL")]
		public bool KeepsCarFlag
		{
			get
			{
				return this._KeepsCarFlag;
			}
			set
			{
				if ((this._KeepsCarFlag != value))
				{
					this.OnKeepsCarFlagChanging(value);
					this.SendPropertyChanging();
					this._KeepsCarFlag = value;
					this.SendPropertyChanged("KeepsCarFlag");
					this.OnKeepsCarFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsurance", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> OptionalInsurance
		{
			get
			{
				return this._VoluntaryInsurance;
			}
			set
			{
				if ((this._VoluntaryInsurance != value))
				{
					this.OnOptionalInsuranceChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsurance = value;
					this.SendPropertyChanged("OptionalInsurance");
					this.OnOptionalInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarTaxMemo
		{
			get
			{
				return this._CarTaxMemo;
			}
			set
			{
				if ((this._CarTaxMemo != value))
				{
					this.OnCarTaxMemoChanging(value);
					this.SendPropertyChanging();
					this._CarTaxMemo = value;
					this.SendPropertyChanged("CarTaxMemo");
					this.OnCarTaxMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarLiabilityInsuranceMemo
		{
			get
			{
				return this._CarLiabilityInsuranceMemo;
			}
			set
			{
				if ((this._CarLiabilityInsuranceMemo != value))
				{
					this.OnCarLiabilityInsuranceMemoChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceMemo = value;
					this.SendPropertyChanged("CarLiabilityInsuranceMemo");
					this.OnCarLiabilityInsuranceMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTaxMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarWeightTaxMemo
		{
			get
			{
				return this._CarWeightTaxMemo;
			}
			set
			{
				if ((this._CarWeightTaxMemo != value))
				{
					this.OnCarWeightTaxMemoChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTaxMemo = value;
					this.SendPropertyChanged("CarWeightTaxMemo");
					this.OnCarWeightTaxMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPlateCostMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NumberPlateCostMemo
		{
			get
			{
				return this._NumberPlateCostMemo;
			}
			set
			{
				if ((this._NumberPlateCostMemo != value))
				{
					this.OnNumberPlateCostMemoChanging(value);
					this.SendPropertyChanging();
					this._NumberPlateCostMemo = value;
					this.SendPropertyChanged("NumberPlateCostMemo");
					this.OnNumberPlateCostMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalStampCostMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FiscalStampCostMemo
		{
			get
			{
				return this._FiscalStampCostMemo;
			}
			set
			{
				if ((this._FiscalStampCostMemo != value))
				{
					this.OnFiscalStampCostMemoChanging(value);
					this.SendPropertyChanging();
					this._FiscalStampCostMemo = value;
					this.SendPropertyChanged("FiscalStampCostMemo");
					this.OnFiscalStampCostMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoluntaryInsuranceMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionalInsuranceMemo
		{
			get
			{
				return this._VoluntaryInsuranceMemo;
			}
			set
			{
				if ((this._VoluntaryInsuranceMemo != value))
				{
					this.OnOptionalInsuranceMemoChanging(value);
					this.SendPropertyChanging();
					this._VoluntaryInsuranceMemo = value;
					this.SendPropertyChanged("OptionalInsuranceMemo");
					this.OnOptionalInsuranceMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionFee", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> SubscriptionFee
		{
			get
			{
				return this._SubscriptionFee;
			}
			set
			{
				if ((this._SubscriptionFee != value))
				{
					this.OnSubscriptionFeeChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionFee = value;
					this.SendPropertyChanged("SubscriptionFee");
					this.OnSubscriptionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscriptionFeeMemo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SubscriptionFeeMemo
		{
			get
			{
				return this._SubscriptionFeeMemo;
			}
			set
			{
				if ((this._SubscriptionFeeMemo != value))
				{
					this.OnSubscriptionFeeMemoChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionFeeMemo = value;
					this.SendPropertyChanged("SubscriptionFeeMemo");
					this.OnSubscriptionFeeMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableCostTotalAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> TaxableCostTotalAmount
		{
			get
			{
				return this._TaxableCostTotalAmount;
			}
			set
			{
				if ((this._TaxableCostTotalAmount != value))
				{
					this.OnTaxableCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxableCostTotalAmount = value;
					this.SendPropertyChanged("TaxableCostTotalAmount");
					this.OnTaxableCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableFreeFieldValue", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> TaxableFreeFieldValue
		{
			get
			{
				return this._TaxableFreeFieldValue;
			}
			set
			{
				if ((this._TaxableFreeFieldValue != value))
				{
					this.OnTaxableFreeFieldValueChanging(value);
					this.SendPropertyChanging();
					this._TaxableFreeFieldValue = value;
					this.SendPropertyChanged("TaxableFreeFieldValue");
					this.OnTaxableFreeFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxableFreeFieldName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxableFreeFieldName
		{
			get
			{
				return this._TaxableFreeFieldName;
			}
			set
			{
				if ((this._TaxableFreeFieldName != value))
				{
					this.OnTaxableFreeFieldNameChanging(value);
					this.SendPropertyChanging();
					this._TaxableFreeFieldName = value;
					this.SendPropertyChanged("TaxableFreeFieldName");
					this.OnTaxableFreeFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceSalesHeader_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceSalesHeader_ServiceSalesPayment", Storage="_ServiceSalesPayment", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber")]
		public EntitySet<ServiceSalesPayment> ServiceSalesPayment
		{
			get
			{
				return this._ServiceSalesPayment;
			}
			set
			{
				this._ServiceSalesPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader", Storage="_Employee", ThisKey="CarEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee CarEmployee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._CarEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._CarEmployeeCode = default(string);
					}
					this.SendPropertyChanged("CarEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_ServiceSalesHeader", Storage="_Customer", ThisKey="CustomerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._CustomerCode = value.CustomerCode;
					}
					else
					{
						this._CustomerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ServiceSalesHeader", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_ServiceSalesHeader", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_MileageUnit_ServiceSalesHeader", Storage="_c_MileageUnit", ThisKey="MileageUnit", OtherKey="Code", IsForeignKey=true)]
		public c_MileageUnit c_MileageUnit
		{
			get
			{
				return this._c_MileageUnit.Entity;
			}
			set
			{
				c_MileageUnit previousValue = this._c_MileageUnit.Entity;
				if (((previousValue != value) 
							|| (this._c_MileageUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_MileageUnit.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._c_MileageUnit.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._MileageUnit = value.Code;
					}
					else
					{
						this._MileageUnit = default(string);
					}
					this.SendPropertyChanged("c_MileageUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_ServiceSalesHeader", Storage="_Campaign1", ThisKey="CampaignCode1", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign1
		{
			get
			{
				return this._Campaign1.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign1.Entity;
				if (((previousValue != value) 
							|| (this._Campaign1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign1.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._Campaign1.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._CampaignCode1 = value.CampaignCode;
					}
					else
					{
						this._CampaignCode1 = default(string);
					}
					this.SendPropertyChanged("Campaign1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_ServiceSalesHeader1", Storage="_Campaign2", ThisKey="CampaignCode2", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign2
		{
			get
			{
				return this._Campaign2.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign2.Entity;
				if (((previousValue != value) 
							|| (this._Campaign2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign2.Entity = null;
						previousValue.ServiceSalesHeader1.Remove(this);
					}
					this._Campaign2.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader1.Add(this);
						this._CampaignCode2 = value.CampaignCode;
					}
					else
					{
						this._CampaignCode2 = default(string);
					}
					this.SendPropertyChanged("Campaign2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceOrderStatus_ServiceSalesHeader", Storage="_c_ServiceOrderStatus", ThisKey="ServiceOrderStatus", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceOrderStatus c_ServiceOrderStatus
		{
			get
			{
				return this._c_ServiceOrderStatus.Entity;
			}
			set
			{
				c_ServiceOrderStatus previousValue = this._c_ServiceOrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceOrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceOrderStatus.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._c_ServiceOrderStatus.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._ServiceOrderStatus = value.Code;
					}
					else
					{
						this._ServiceOrderStatus = default(string);
					}
					this.SendPropertyChanged("c_ServiceOrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader1", Storage="_FrontEmployee", ThisKey="FrontEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee FrontEmployee
		{
			get
			{
				return this._FrontEmployee.Entity;
			}
			set
			{
				Employee previousValue = this._FrontEmployee.Entity;
				if (((previousValue != value) 
							|| (this._FrontEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FrontEmployee.Entity = null;
						previousValue.ServiceSalesHeader1.Remove(this);
					}
					this._FrontEmployee.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader1.Add(this);
						this._FrontEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._FrontEmployeeCode = default(string);
					}
					this.SendPropertyChanged("FrontEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesHeader2", Storage="_ReceiptionEmployee", ThisKey="ReceiptionEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee ReceiptionEmployee
		{
			get
			{
				return this._ReceiptionEmployee.Entity;
			}
			set
			{
				Employee previousValue = this._ReceiptionEmployee.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptionEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptionEmployee.Entity = null;
						previousValue.ServiceSalesHeader2.Remove(this);
					}
					this._ReceiptionEmployee.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader2.Add(this);
						this._ReceiptionEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._ReceiptionEmployeeCode = default(string);
					}
					this.SendPropertyChanged("ReceiptionEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessSessionControl_ServiceSalesHeader", Storage="_ProcessSessionControl", ThisKey="ProcessSessionId", OtherKey="ProcessSessionId", IsForeignKey=true)]
		public ProcessSessionControl ProcessSessionControl
		{
			get
			{
				return this._ProcessSessionControl.Entity;
			}
			set
			{
				ProcessSessionControl previousValue = this._ProcessSessionControl.Entity;
				if (((previousValue != value) 
							|| (this._ProcessSessionControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessSessionControl.Entity = null;
						previousValue.ServiceSalesHeader.Remove(this);
					}
					this._ProcessSessionControl.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesHeader.Add(this);
						this._ProcessSessionId = value.ProcessSessionId;
					}
					else
					{
						this._ProcessSessionId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ProcessSessionControl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceSalesHeader", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				if ((this._CustomerClaim.Entity != value))
				{
					this.SendPropertyChanging();
					this._CustomerClaim.Entity = value;
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceSalesHeader = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.ServiceSalesHeader = null;
		}
		
		private void attach_ServiceSalesPayment(ServiceSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceSalesHeader = this;
		}
		
		private void detach_ServiceSalesPayment(ServiceSalesPayment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceSalesHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSalesLine")]
	public partial class ServiceSalesLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private int _LineNumber;
		
		private string _ServiceWorkCode;
		
		private string _PartsNumber;
		
		private string _LineContents;
		
		private string _RequestComment;
		
		private string _WorkType;
		
		private System.Nullable<int> _LaborRate;
		
		private System.Nullable<decimal> _ManPower;
		
		private System.Nullable<decimal> _TechnicalFeeAmount;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Cost;
		
		private string _EmployeeCode;
		
		private string _SupplierCode;
		
		private string _CustomerClaimCode;
		
		private string _StockStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _ServiceType;
		
		private string _ServiceMenuCode;
		
		private string _SetMenuCode;
		
		private string _Classification1;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private System.Nullable<decimal> _UnitCost;
		
		private string _LineType;
		
		private string _ConsumptionTaxId;
		
		private System.Nullable<int> _Rate;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private System.Nullable<decimal> _OrderQuantity;
		
		private System.Nullable<decimal> _DisplayOrder;
		
		private string _OutputTargetFlag;
		
		private string _OutputFlag;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<ServiceWork> _ServiceWork;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntityRef<c_WorkType> _c_WorkType;
		
		private EntityRef<c_ServiceType> _c_ServiceType;
		
		private EntityRef<c_StockStatus> _c_StockStatus;
		
		private EntityRef<ServiceMenu> _ServiceMenu;
		
		private EntityRef<c_ServiceWorkClass1> _c_ServiceWorkClass1;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnServiceWorkCodeChanging(string value);
    partial void OnServiceWorkCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnLineContentsChanging(string value);
    partial void OnLineContentsChanged();
    partial void OnRequestCommentChanging(string value);
    partial void OnRequestCommentChanged();
    partial void OnWorkTypeChanging(string value);
    partial void OnWorkTypeChanged();
    partial void OnLaborRateChanging(System.Nullable<int> value);
    partial void OnLaborRateChanged();
    partial void OnManPowerChanging(System.Nullable<decimal> value);
    partial void OnManPowerChanged();
    partial void OnTechnicalFeeAmountChanging(System.Nullable<decimal> value);
    partial void OnTechnicalFeeAmountChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnStockStatusChanging(string value);
    partial void OnStockStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnServiceMenuCodeChanging(string value);
    partial void OnServiceMenuCodeChanged();
    partial void OnSetMenuCodeChanging(string value);
    partial void OnSetMenuCodeChanged();
    partial void OnClassification1Changing(string value);
    partial void OnClassification1Changed();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnLineTypeChanging(string value);
    partial void OnLineTypeChanged();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnProvisionQuantityChanging(System.Nullable<decimal> value);
    partial void OnProvisionQuantityChanged();
    partial void OnOrderQuantityChanging(System.Nullable<decimal> value);
    partial void OnOrderQuantityChanged();
    partial void OnDisplayOrderChanging(System.Nullable<decimal> value);
    partial void OnDisplayOrderChanged();
    partial void OnOutputTargetFlagChanging(string value);
    partial void OnOutputTargetFlagChanged();
    partial void OnOutputFlagChanging(string value);
    partial void OnOutputFlagChanged();
    #endregion
		
		public ServiceSalesLine()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._Employee = default(EntityRef<Employee>);
			this._Parts = default(EntityRef<Parts>);
			this._ServiceWork = default(EntityRef<ServiceWork>);
			this._Supplier = default(EntityRef<Supplier>);
			this._ServiceSalesHeader = default(EntityRef<ServiceSalesHeader>);
			this._c_WorkType = default(EntityRef<c_WorkType>);
			this._c_ServiceType = default(EntityRef<c_ServiceType>);
			this._c_StockStatus = default(EntityRef<c_StockStatus>);
			this._ServiceMenu = default(EntityRef<ServiceMenu>);
			this._c_ServiceWorkClass1 = default(EntityRef<c_ServiceWorkClass1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					if (this._ServiceSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					if (this._ServiceSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					if (this._ServiceWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceWorkCode = value;
					this.SendPropertyChanged("ServiceWorkCode");
					this.OnServiceWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents
		{
			get
			{
				return this._LineContents;
			}
			set
			{
				if ((this._LineContents != value))
				{
					this.OnLineContentsChanging(value);
					this.SendPropertyChanging();
					this._LineContents = value;
					this.SendPropertyChanged("LineContents");
					this.OnLineContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestComment", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestComment
		{
			get
			{
				return this._RequestComment;
			}
			set
			{
				if ((this._RequestComment != value))
				{
					this.OnRequestCommentChanging(value);
					this.SendPropertyChanging();
					this._RequestComment = value;
					this.SendPropertyChanged("RequestComment");
					this.OnRequestCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkType
		{
			get
			{
				return this._WorkType;
			}
			set
			{
				if ((this._WorkType != value))
				{
					if (this._c_WorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkType = value;
					this.SendPropertyChanged("WorkType");
					this.OnWorkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaborRate", DbType="Int")]
		public System.Nullable<int> LaborRate
		{
			get
			{
				return this._LaborRate;
			}
			set
			{
				if ((this._LaborRate != value))
				{
					this.OnLaborRateChanging(value);
					this.SendPropertyChanging();
					this._LaborRate = value;
					this.SendPropertyChanged("LaborRate");
					this.OnLaborRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManPower", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> ManPower
		{
			get
			{
				return this._ManPower;
			}
			set
			{
				if ((this._ManPower != value))
				{
					this.OnManPowerChanging(value);
					this.SendPropertyChanging();
					this._ManPower = value;
					this.SendPropertyChanged("ManPower");
					this.OnManPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalFeeAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TechnicalFeeAmount
		{
			get
			{
				return this._TechnicalFeeAmount;
			}
			set
			{
				if ((this._TechnicalFeeAmount != value))
				{
					this.OnTechnicalFeeAmountChanging(value);
					this.SendPropertyChanging();
					this._TechnicalFeeAmount = value;
					this.SendPropertyChanged("TechnicalFeeAmount");
					this.OnTechnicalFeeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StockStatus
		{
			get
			{
				return this._StockStatus;
			}
			set
			{
				if ((this._StockStatus != value))
				{
					if (this._c_StockStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockStatusChanging(value);
					this.SendPropertyChanging();
					this._StockStatus = value;
					this.SendPropertyChanged("StockStatus");
					this.OnStockStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					if (this._c_ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuCode
		{
			get
			{
				return this._ServiceMenuCode;
			}
			set
			{
				if ((this._ServiceMenuCode != value))
				{
					if (this._ServiceMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuCode = value;
					this.SendPropertyChanged("ServiceMenuCode");
					this.OnServiceMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetMenuCode", DbType="NVarChar(11)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SetMenuCode
		{
			get
			{
				return this._SetMenuCode;
			}
			set
			{
				if ((this._SetMenuCode != value))
				{
					this.OnSetMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._SetMenuCode = value;
					this.SendPropertyChanged("SetMenuCode");
					this.OnSetMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Classification1
		{
			get
			{
				return this._Classification1;
			}
			set
			{
				if ((this._Classification1 != value))
				{
					if (this._c_ServiceWorkClass1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassification1Changing(value);
					this.SendPropertyChanging();
					this._Classification1 = value;
					this.SendPropertyChanged("Classification1");
					this.OnClassification1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineType
		{
			get
			{
				return this._LineType;
			}
			set
			{
				if ((this._LineType != value))
				{
					this.OnLineTypeChanging(value);
					this.SendPropertyChanging();
					this._LineType = value;
					this.SendPropertyChanged("LineType");
					this.OnLineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="decimal(10, 2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this.OnProvisionQuantityChanging(value);
					this.SendPropertyChanging();
					this._ProvisionQuantity = value;
					this.SendPropertyChanged("ProvisionQuantity");
					this.OnProvisionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQuantity", DbType="decimal(10, 2)")]
		public System.Nullable<decimal> OrderQuantity
		{
			get
			{
				return this._OrderQuantity;
			}
			set
			{
				if ((this._OrderQuantity != value))
				{
					this.OnOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderQuantity = value;
					this.SendPropertyChanged("OrderQuantity");
					this.OnOrderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Decimal(4,1)")]
		public System.Nullable<decimal> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputTargetFlag", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OutputTargetFlag
		{
			get
			{
				return this._OutputTargetFlag;
			}
			set
			{
				if ((this._OutputTargetFlag != value))
				{
					this.OnOutputTargetFlagChanging(value);
					this.SendPropertyChanging();
					this._OutputTargetFlag = value;
					this.SendPropertyChanged("OutputTargetFlag");
					this.OnOutputTargetFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputFlag", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OutputFlag
		{
			get
			{
				return this._OutputFlag;
			}
			set
			{
				if ((this._OutputFlag != value))
				{
					this.OnOutputFlagChanging(value);
					this.SendPropertyChanging();
					this._OutputFlag = value;
					this.SendPropertyChanged("OutputFlag");
					this.OnOutputFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceSalesLine", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ServiceSalesLine", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_ServiceSalesLine", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceWork_ServiceSalesLine", Storage="_ServiceWork", ThisKey="ServiceWorkCode", OtherKey="ServiceWorkCode", IsForeignKey=true)]
		public ServiceWork ServiceWork
		{
			get
			{
				return this._ServiceWork.Entity;
			}
			set
			{
				ServiceWork previousValue = this._ServiceWork.Entity;
				if (((previousValue != value) 
							|| (this._ServiceWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceWork.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._ServiceWork.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._ServiceWorkCode = value.ServiceWorkCode;
					}
					else
					{
						this._ServiceWorkCode = default(string);
					}
					this.SendPropertyChanged("ServiceWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_ServiceSalesLine", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceSalesHeader_ServiceSalesLine", Storage="_ServiceSalesHeader", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber", IsForeignKey=true)]
		public ServiceSalesHeader ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader.Entity;
			}
			set
			{
				ServiceSalesHeader previousValue = this._ServiceSalesHeader.Entity;
				if (((previousValue != value) 
							|| (this._ServiceSalesHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceSalesHeader.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._ServiceSalesHeader.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._SlipNumber = value.SlipNumber;
						this._RevisionNumber = value.RevisionNumber;
					}
					else
					{
						this._SlipNumber = default(string);
						this._RevisionNumber = default(int);
					}
					this.SendPropertyChanged("ServiceSalesHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_WorkType_ServiceSalesLine", Storage="_c_WorkType", ThisKey="WorkType", OtherKey="Code", IsForeignKey=true)]
		public c_WorkType c_WorkType
		{
			get
			{
				return this._c_WorkType.Entity;
			}
			set
			{
				c_WorkType previousValue = this._c_WorkType.Entity;
				if (((previousValue != value) 
							|| (this._c_WorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_WorkType.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._c_WorkType.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._WorkType = value.Code;
					}
					else
					{
						this._WorkType = default(string);
					}
					this.SendPropertyChanged("c_WorkType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceType_ServiceSalesLine", Storage="_c_ServiceType", ThisKey="ServiceType", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceType c_ServiceType
		{
			get
			{
				return this._c_ServiceType.Entity;
			}
			set
			{
				c_ServiceType previousValue = this._c_ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceType.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._c_ServiceType.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._ServiceType = value.Code;
					}
					else
					{
						this._ServiceType = default(string);
					}
					this.SendPropertyChanged("c_ServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_StockStatus_ServiceSalesLine", Storage="_c_StockStatus", ThisKey="StockStatus", OtherKey="Code", IsForeignKey=true)]
		public c_StockStatus c_StockStatus
		{
			get
			{
				return this._c_StockStatus.Entity;
			}
			set
			{
				c_StockStatus previousValue = this._c_StockStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_StockStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_StockStatus.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._c_StockStatus.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._StockStatus = value.Code;
					}
					else
					{
						this._StockStatus = default(string);
					}
					this.SendPropertyChanged("c_StockStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_ServiceSalesLine", Storage="_ServiceMenu", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode", IsForeignKey=true)]
		public ServiceMenu ServiceMenu
		{
			get
			{
				return this._ServiceMenu.Entity;
			}
			set
			{
				ServiceMenu previousValue = this._ServiceMenu.Entity;
				if (((previousValue != value) 
							|| (this._ServiceMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceMenu.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._ServiceMenu.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._ServiceMenuCode = value.ServiceMenuCode;
					}
					else
					{
						this._ServiceMenuCode = default(string);
					}
					this.SendPropertyChanged("ServiceMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceWorkClass1_ServiceSalesLine", Storage="_c_ServiceWorkClass1", ThisKey="Classification1", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceWorkClass1 c_ServiceWorkClass1
		{
			get
			{
				return this._c_ServiceWorkClass1.Entity;
			}
			set
			{
				c_ServiceWorkClass1 previousValue = this._c_ServiceWorkClass1.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceWorkClass1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceWorkClass1.Entity = null;
						previousValue.ServiceSalesLine.Remove(this);
					}
					this._c_ServiceWorkClass1.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesLine.Add(this);
						this._Classification1 = value.Code;
					}
					else
					{
						this._Classification1 = default(string);
					}
					this.SendPropertyChanged("c_ServiceWorkClass1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceSalesPayment")]
	public partial class ServiceSalesPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private int _LineNumber;
		
		private string _CustomerClaimCode;
		
		private System.Nullable<System.DateTime> _PaymentPlanDate;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Memo;
		
		private string _DepositFlag;
		
		private string _AmountType;
		
		private EntityRef<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnPaymentPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentPlanDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDepositFlagChanging(string value);
    partial void OnDepositFlagChanged();
    partial void OnAmountTypeChanging(string value);
    partial void OnAmountTypeChanged();
    #endregion
		
		public ServiceSalesPayment()
		{
			this._ServiceSalesHeader = default(EntityRef<ServiceSalesHeader>);
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					if (this._ServiceSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					if (this._ServiceSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentPlanDate
		{
			get
			{
				return this._PaymentPlanDate;
			}
			set
			{
				if ((this._PaymentPlanDate != value))
				{
					this.OnPaymentPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanDate = value;
					this.SendPropertyChanged("PaymentPlanDate");
					this.OnPaymentPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositFlag
		{
			get
			{
				return this._DepositFlag;
			}
			set
			{
				if ((this._DepositFlag != value))
				{
					this.OnDepositFlagChanging(value);
					this.SendPropertyChanging();
					this._DepositFlag = value;
					this.SendPropertyChanged("DepositFlag");
					this.OnDepositFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountType", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AmountType
		{
			get
			{
				return this._AmountType;
			}
			set
			{
				if ((this._AmountType != value))
				{
					this.OnAmountTypeChanging(value);
					this.SendPropertyChanging();
					this._AmountType = value;
					this.SendPropertyChanged("AmountType");
					this.OnAmountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceSalesHeader_ServiceSalesPayment", Storage="_ServiceSalesHeader", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber", IsForeignKey=true)]
		public ServiceSalesHeader ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader.Entity;
			}
			set
			{
				ServiceSalesHeader previousValue = this._ServiceSalesHeader.Entity;
				if (((previousValue != value) 
							|| (this._ServiceSalesHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceSalesHeader.Entity = null;
						previousValue.ServiceSalesPayment.Remove(this);
					}
					this._ServiceSalesHeader.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesPayment.Add(this);
						this._SlipNumber = value.SlipNumber;
						this._RevisionNumber = value.RevisionNumber;
					}
					else
					{
						this._SlipNumber = default(string);
						this._RevisionNumber = default(int);
					}
					this.SendPropertyChanged("ServiceSalesHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceSalesPayment", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.ServiceSalesPayment.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.ServiceSalesPayment.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_WorkType")]
	public partial class c_WorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _ServiceMenuUse;
		
		private string _PartsUse;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnServiceMenuUseChanging(string value);
    partial void OnServiceMenuUseChanged();
    partial void OnPartsUseChanging(string value);
    partial void OnPartsUseChanged();
    #endregion
		
		public c_WorkType()
		{
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuUse", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuUse
		{
			get
			{
				return this._ServiceMenuUse;
			}
			set
			{
				if ((this._ServiceMenuUse != value))
				{
					this.OnServiceMenuUseChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuUse = value;
					this.SendPropertyChanged("ServiceMenuUse");
					this.OnServiceMenuUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsUse", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsUse
		{
			get
			{
				return this._PartsUse;
			}
			set
			{
				if ((this._PartsUse != value))
				{
					this.OnPartsUseChanging(value);
					this.SendPropertyChanging();
					this._PartsUse = value;
					this.SendPropertyChanged("PartsUse");
					this.OnPartsUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_WorkType_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="Code", OtherKey="WorkType")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_WorkType_SetMenuList", Storage="_SetMenuList", ThisKey="Code", OtherKey="WorkType")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_WorkType = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_WorkType = null;
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.c_WorkType = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.c_WorkType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ServiceType")]
	public partial class c_ServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ServiceType()
		{
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceType_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="Code", OtherKey="ServiceType")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceType_SetMenuList", Storage="_SetMenuList", ThisKey="Code", OtherKey="ServiceType")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceType = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceType = null;
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceType = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_StockStatus")]
	public partial class c_StockStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _StatusType;
		
		private EntitySet<ServiceSalesLine> _ServiceSalesLine;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnStatusTypeChanging(string value);
    partial void OnStatusTypeChanged();
    #endregion
		
		public c_StockStatus()
		{
			this._ServiceSalesLine = new EntitySet<ServiceSalesLine>(new Action<ServiceSalesLine>(this.attach_ServiceSalesLine), new Action<ServiceSalesLine>(this.detach_ServiceSalesLine));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusType", DbType="nvarchar(3)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StatusType
		{
			get
			{
				return this._StatusType;
			}
			set
			{
				if ((this._StatusType != value))
				{
					this.OnStatusTypeChanging(value);
					this.SendPropertyChanging();
					this._StatusType = value;
					this.SendPropertyChanged("StatusType");
					this.OnStatusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_StockStatus_ServiceSalesLine", Storage="_ServiceSalesLine", ThisKey="Code", OtherKey="StockStatus")]
		public EntitySet<ServiceSalesLine> ServiceSalesLine
		{
			get
			{
				return this._ServiceSalesLine;
			}
			set
			{
				this._ServiceSalesLine.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_StockStatus = this;
		}
		
		private void detach_ServiceSalesLine(ServiceSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.c_StockStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ServiceOrderStatus")]
	public partial class c_ServiceOrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ServiceOrderStatus()
		{
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceOrderStatus_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="Code", OtherKey="ServiceOrderStatus")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceOrderStatus = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_ServiceOrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private string _SubAccountName;
		
		private string _Notes;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _UsageType;
		
		private string _CreditFlag;
		
		private string _DebitFlag;
		
		private string _DepositFlag;
		
		private EntitySet<PaymentPlan> _PaymentPlan;
		
		private EntitySet<Journal> _Journal;
		
		private EntitySet<ReceiptPlan> _ReceiptPlan;
		
		private EntityRef<c_AccountUsageType> _c_AccountUsageType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnSubAccountNameChanging(string value);
    partial void OnSubAccountNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnUsageTypeChanging(string value);
    partial void OnUsageTypeChanged();
    partial void OnCreditFlagChanging(string value);
    partial void OnCreditFlagChanged();
    partial void OnDebitFlagChanging(string value);
    partial void OnDebitFlagChanged();
    partial void OnDepositFlagChanging(string value);
    partial void OnDepositFlagChanged();
    #endregion
		
		public Account()
		{
			this._PaymentPlan = new EntitySet<PaymentPlan>(new Action<PaymentPlan>(this.attach_PaymentPlan), new Action<PaymentPlan>(this.detach_PaymentPlan));
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			this._ReceiptPlan = new EntitySet<ReceiptPlan>(new Action<ReceiptPlan>(this.attach_ReceiptPlan), new Action<ReceiptPlan>(this.detach_ReceiptPlan));
			this._c_AccountUsageType = default(EntityRef<c_AccountUsageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAccountName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SubAccountName
		{
			get
			{
				return this._SubAccountName;
			}
			set
			{
				if ((this._SubAccountName != value))
				{
					this.OnSubAccountNameChanging(value);
					this.SendPropertyChanging();
					this._SubAccountName = value;
					this.SendPropertyChanged("SubAccountName");
					this.OnSubAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					if (this._c_AccountUsageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreditFlag
		{
			get
			{
				return this._CreditFlag;
			}
			set
			{
				if ((this._CreditFlag != value))
				{
					this.OnCreditFlagChanging(value);
					this.SendPropertyChanging();
					this._CreditFlag = value;
					this.SendPropertyChanged("CreditFlag");
					this.OnCreditFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DebitFlag
		{
			get
			{
				return this._DebitFlag;
			}
			set
			{
				if ((this._DebitFlag != value))
				{
					this.OnDebitFlagChanging(value);
					this.SendPropertyChanging();
					this._DebitFlag = value;
					this.SendPropertyChanged("DebitFlag");
					this.OnDebitFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositFlag
		{
			get
			{
				return this._DepositFlag;
			}
			set
			{
				if ((this._DepositFlag != value))
				{
					this.OnDepositFlagChanging(value);
					this.SendPropertyChanging();
					this._DepositFlag = value;
					this.SendPropertyChanged("DepositFlag");
					this.OnDepositFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PaymentPlan", Storage="_PaymentPlan", ThisKey="AccountCode", OtherKey="AccountCode")]
		public EntitySet<PaymentPlan> PaymentPlan
		{
			get
			{
				return this._PaymentPlan;
			}
			set
			{
				this._PaymentPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Journal", Storage="_Journal", ThisKey="AccountCode", OtherKey="AccountCode")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ReceiptPlan", Storage="_ReceiptPlan", ThisKey="AccountCode", OtherKey="AccountCode")]
		public EntitySet<ReceiptPlan> ReceiptPlan
		{
			get
			{
				return this._ReceiptPlan;
			}
			set
			{
				this._ReceiptPlan.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AccountUsageType_Account", Storage="_c_AccountUsageType", ThisKey="UsageType", OtherKey="Code", IsForeignKey=true)]
		public c_AccountUsageType c_AccountUsageType
		{
			get
			{
				return this._c_AccountUsageType.Entity;
			}
			set
			{
				c_AccountUsageType previousValue = this._c_AccountUsageType.Entity;
				if (((previousValue != value) 
							|| (this._c_AccountUsageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_AccountUsageType.Entity = null;
						previousValue.Account.Remove(this);
					}
					this._c_AccountUsageType.Entity = value;
					if ((value != null))
					{
						value.Account.Add(this);
						this._UsageType = value.Code;
					}
					else
					{
						this._UsageType = default(string);
					}
					this.SendPropertyChanged("c_AccountUsageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PaymentPlan(PaymentPlan entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ReceiptPlan(ReceiptPlan entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceRequestLine")]
	public partial class ServiceRequestLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ServiceRequestId;
		
		private int _LineNumber;
		
		private string _CarOptionCode;
		
		private string _OptionType;
		
		private System.Nullable<decimal> _Amount;
		
		private string _RequestComment;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CarOptionName;
		
		private System.Nullable<bool> _ClaimType;
		
		private EntityRef<CarOption> _CarOption;
		
		private EntityRef<ServiceRequest> _ServiceRequest;
		
		private EntityRef<c_OptionType> _c_OptionType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceRequestIdChanging(System.Guid value);
    partial void OnServiceRequestIdChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnCarOptionCodeChanging(string value);
    partial void OnCarOptionCodeChanged();
    partial void OnOptionTypeChanging(string value);
    partial void OnOptionTypeChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRequestCommentChanging(string value);
    partial void OnRequestCommentChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCarOptionNameChanging(string value);
    partial void OnCarOptionNameChanged();
    partial void OnClaimTypeChanging(System.Nullable<bool> value);
    partial void OnClaimTypeChanged();
    #endregion
		
		public ServiceRequestLine()
		{
			this._CarOption = default(EntityRef<CarOption>);
			this._ServiceRequest = default(EntityRef<ServiceRequest>);
			this._c_OptionType = default(EntityRef<c_OptionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRequestId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ServiceRequestId
		{
			get
			{
				return this._ServiceRequestId;
			}
			set
			{
				if ((this._ServiceRequestId != value))
				{
					if (this._ServiceRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceRequestIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceRequestId = value;
					this.SendPropertyChanged("ServiceRequestId");
					this.OnServiceRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					if (this._CarOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarOptionCodeChanging(value);
					this.SendPropertyChanging();
					this._CarOptionCode = value;
					this.SendPropertyChanged("CarOptionCode");
					this.OnCarOptionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionType
		{
			get
			{
				return this._OptionType;
			}
			set
			{
				if ((this._OptionType != value))
				{
					if (this._c_OptionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionTypeChanging(value);
					this.SendPropertyChanging();
					this._OptionType = value;
					this.SendPropertyChanged("OptionType");
					this.OnOptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestComment", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestComment
		{
			get
			{
				return this._RequestComment;
			}
			set
			{
				if ((this._RequestComment != value))
				{
					this.OnRequestCommentChanging(value);
					this.SendPropertyChanging();
					this._RequestComment = value;
					this.SendPropertyChanged("RequestComment");
					this.OnRequestCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionName
		{
			get
			{
				return this._CarOptionName;
			}
			set
			{
				if ((this._CarOptionName != value))
				{
					this.OnCarOptionNameChanging(value);
					this.SendPropertyChanging();
					this._CarOptionName = value;
					this.SendPropertyChanged("CarOptionName");
					this.OnCarOptionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="Bit")]
		public System.Nullable<bool> ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarOption_ServiceRequestLine", Storage="_CarOption", ThisKey="CarOptionCode", OtherKey="CarOptionCode", IsForeignKey=true)]
		public CarOption CarOption
		{
			get
			{
				return this._CarOption.Entity;
			}
			set
			{
				CarOption previousValue = this._CarOption.Entity;
				if (((previousValue != value) 
							|| (this._CarOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarOption.Entity = null;
						previousValue.ServiceRequestLine.Remove(this);
					}
					this._CarOption.Entity = value;
					if ((value != null))
					{
						value.ServiceRequestLine.Add(this);
						this._CarOptionCode = value.CarOptionCode;
					}
					else
					{
						this._CarOptionCode = default(string);
					}
					this.SendPropertyChanged("CarOption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceRequest_ServiceRequestLine", Storage="_ServiceRequest", ThisKey="ServiceRequestId", OtherKey="ServiceRequestId", IsForeignKey=true)]
		public ServiceRequest ServiceRequest
		{
			get
			{
				return this._ServiceRequest.Entity;
			}
			set
			{
				ServiceRequest previousValue = this._ServiceRequest.Entity;
				if (((previousValue != value) 
							|| (this._ServiceRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceRequest.Entity = null;
						previousValue.ServiceRequestLine.Remove(this);
					}
					this._ServiceRequest.Entity = value;
					if ((value != null))
					{
						value.ServiceRequestLine.Add(this);
						this._ServiceRequestId = value.ServiceRequestId;
					}
					else
					{
						this._ServiceRequestId = default(System.Guid);
					}
					this.SendPropertyChanged("ServiceRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OptionType_ServiceRequestLine", Storage="_c_OptionType", ThisKey="OptionType", OtherKey="Code", IsForeignKey=true)]
		public c_OptionType c_OptionType
		{
			get
			{
				return this._c_OptionType.Entity;
			}
			set
			{
				c_OptionType previousValue = this._c_OptionType.Entity;
				if (((previousValue != value) 
							|| (this._c_OptionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OptionType.Entity = null;
						previousValue.ServiceRequestLine.Remove(this);
					}
					this._c_OptionType.Entity = value;
					if ((value != null))
					{
						value.ServiceRequestLine.Add(this);
						this._OptionType = value.Code;
					}
					else
					{
						this._OptionType = default(string);
					}
					this.SendPropertyChanged("c_OptionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal")]
	public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JournalId;
		
		private string _JournalType;
		
		private string _DepartmentCode;
		
		private string _CustomerClaimCode;
		
		private string _SlipNumber;
		
		private System.DateTime _JournalDate;
		
		private string _AccountType;
		
		private string _AccountCode;
		
		private decimal _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Summary;
		
		private string _ReceiptPlanFlag;
		
		private string _TransferFlag;
		
		private string _OfficeCode;
		
		private string _CashAccountCode;
		
		private string _PaymentKindCode;
		
		private string _CreditReceiptPlanId;
		
		private string _TradeVin;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<c_JournalType> _c_JournalType;
		
		private EntityRef<c_AccountType> _c_AccountType;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<CashAccount> _CashAccount;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIdChanging(System.Guid value);
    partial void OnJournalIdChanged();
    partial void OnJournalTypeChanging(string value);
    partial void OnJournalTypeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnReceiptPlanFlagChanging(string value);
    partial void OnReceiptPlanFlagChanged();
    partial void OnTransferFlagChanging(string value);
    partial void OnTransferFlagChanged();
    partial void OnOfficeCodeChanging(string value);
    partial void OnOfficeCodeChanged();
    partial void OnCashAccountCodeChanging(string value);
    partial void OnCashAccountCodeChanged();
    partial void OnPaymentKindCodeChanging(string value);
    partial void OnPaymentKindCodeChanged();
    partial void OnCreditReceiptPlanIdChanging(string value);
    partial void OnCreditReceiptPlanIdChanged();
    partial void OnTradeVinChanging(string value);
    partial void OnTradeVinChanged();
    #endregion
		
		public Journal()
		{
			this._Department = default(EntityRef<Department>);
			this._c_JournalType = default(EntityRef<c_JournalType>);
			this._c_AccountType = default(EntityRef<c_AccountType>);
			this._Account = default(EntityRef<Account>);
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._Office = default(EntityRef<Office>);
			this._CashAccount = default(EntityRef<CashAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalType
		{
			get
			{
				return this._JournalType;
			}
			set
			{
				if ((this._JournalType != value))
				{
					if (this._c_JournalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalTypeChanging(value);
					this.SendPropertyChanging();
					this._JournalType = value;
					this.SendPropertyChanged("JournalType");
					this.OnJournalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					if (this._c_AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptPlanFlag
		{
			get
			{
				return this._ReceiptPlanFlag;
			}
			set
			{
				if ((this._ReceiptPlanFlag != value))
				{
					this.OnReceiptPlanFlagChanging(value);
					this.SendPropertyChanging();
					this._ReceiptPlanFlag = value;
					this.SendPropertyChanged("ReceiptPlanFlag");
					this.OnReceiptPlanFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransferFlag
		{
			get
			{
				return this._TransferFlag;
			}
			set
			{
				if ((this._TransferFlag != value))
				{
					this.OnTransferFlagChanging(value);
					this.SendPropertyChanging();
					this._TransferFlag = value;
					this.SendPropertyChanged("TransferFlag");
					this.OnTransferFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					if ((this._Office.HasLoadedOrAssignedValue || this._CashAccount.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._OfficeCode = value;
					this.SendPropertyChanged("OfficeCode");
					this.OnOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					if (this._CashAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCashAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._CashAccountCode = value;
					this.SendPropertyChanged("CashAccountCode");
					this.OnCashAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindCode
		{
			get
			{
				return this._PaymentKindCode;
			}
			set
			{
				if ((this._PaymentKindCode != value))
				{
					this.OnPaymentKindCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindCode = value;
					this.SendPropertyChanged("PaymentKindCode");
					this.OnPaymentKindCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditReceiptPlanId", DbType="NVarChar(36)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreditReceiptPlanId
		{
			get
			{
				return this._CreditReceiptPlanId;
			}
			set
			{
				if ((this._CreditReceiptPlanId != value))
				{
					this.OnCreditReceiptPlanIdChanging(value);
					this.SendPropertyChanging();
					this._CreditReceiptPlanId = value;
					this.SendPropertyChanged("CreditReceiptPlanId");
					this.OnCreditReceiptPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeVin", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeVin
		{
			get
			{
				return this._TradeVin;
			}
			set
			{
				if ((this._TradeVin != value))
				{
					this.OnTradeVinChanging(value);
					this.SendPropertyChanging();
					this._TradeVin = value;
					this.SendPropertyChanged("TradeVin");
					this.OnTradeVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Journal", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_JournalType_Journal", Storage="_c_JournalType", ThisKey="JournalType", OtherKey="Code", IsForeignKey=true)]
		public c_JournalType c_JournalType
		{
			get
			{
				return this._c_JournalType.Entity;
			}
			set
			{
				c_JournalType previousValue = this._c_JournalType.Entity;
				if (((previousValue != value) 
							|| (this._c_JournalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_JournalType.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._c_JournalType.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._JournalType = value.Code;
					}
					else
					{
						this._JournalType = default(string);
					}
					this.SendPropertyChanged("c_JournalType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AccountType_Journal", Storage="_c_AccountType", ThisKey="AccountType", OtherKey="Code", IsForeignKey=true)]
		public c_AccountType c_AccountType
		{
			get
			{
				return this._c_AccountType.Entity;
			}
			set
			{
				c_AccountType previousValue = this._c_AccountType.Entity;
				if (((previousValue != value) 
							|| (this._c_AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_AccountType.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._c_AccountType.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._AccountType = value.Code;
					}
					else
					{
						this._AccountType = default(string);
					}
					this.SendPropertyChanged("c_AccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Journal", Storage="_Account", ThisKey="AccountCode", OtherKey="AccountCode", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._AccountCode = value.AccountCode;
					}
					else
					{
						this._AccountCode = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_Journal", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_Journal", Storage="_Office", ThisKey="OfficeCode", OtherKey="OfficeCode", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._OfficeCode = value.OfficeCode;
					}
					else
					{
						this._OfficeCode = default(string);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashAccount_Journal", Storage="_CashAccount", ThisKey="OfficeCode,CashAccountCode", OtherKey="OfficeCode,CashAccountCode", IsForeignKey=true)]
		public CashAccount CashAccount
		{
			get
			{
				return this._CashAccount.Entity;
			}
			set
			{
				CashAccount previousValue = this._CashAccount.Entity;
				if (((previousValue != value) 
							|| (this._CashAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CashAccount.Entity = null;
						previousValue.Journal.Remove(this);
					}
					this._CashAccount.Entity = value;
					if ((value != null))
					{
						value.Journal.Add(this);
						this._OfficeCode = value.OfficeCode;
						this._CashAccountCode = value.CashAccountCode;
					}
					else
					{
						this._OfficeCode = default(string);
						this._CashAccountCode = default(string);
					}
					this.SendPropertyChanged("CashAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_AccountType")]
	public partial class c_AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _JournalCalcFlag;
		
		private string _CommonSelectFlag;
		
		private EntitySet<Journal> _Journal;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnJournalCalcFlagChanging(string value);
    partial void OnJournalCalcFlagChanged();
    partial void OnCommonSelectFlagChanging(string value);
    partial void OnCommonSelectFlagChanged();
    #endregion
		
		public c_AccountType()
		{
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCalcFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCalcFlag
		{
			get
			{
				return this._JournalCalcFlag;
			}
			set
			{
				if ((this._JournalCalcFlag != value))
				{
					this.OnJournalCalcFlagChanging(value);
					this.SendPropertyChanging();
					this._JournalCalcFlag = value;
					this.SendPropertyChanged("JournalCalcFlag");
					this.OnJournalCalcFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonSelectFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CommonSelectFlag
		{
			get
			{
				return this._CommonSelectFlag;
			}
			set
			{
				if ((this._CommonSelectFlag != value))
				{
					this.OnCommonSelectFlagChanging(value);
					this.SendPropertyChanging();
					this._CommonSelectFlag = value;
					this.SendPropertyChanged("CommonSelectFlag");
					this.OnCommonSelectFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AccountType_Journal", Storage="_Journal", ThisKey="Code", OtherKey="AccountType")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.c_AccountType = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.c_AccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_JournalType")]
	public partial class c_JournalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Journal> _Journal;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_JournalType()
		{
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_JournalType_Journal", Storage="_Journal", ThisKey="Code", OtherKey="JournalType")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.c_JournalType = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.c_JournalType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OwnershipChange")]
	public partial class c_OwnershipChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<ServiceRequest> _ServiceRequest;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OwnershipChange()
		{
			this._ServiceRequest = new EntitySet<ServiceRequest>(new Action<ServiceRequest>(this.attach_ServiceRequest), new Action<ServiceRequest>(this.detach_ServiceRequest));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OwnershipChange_ServiceRequest", Storage="_ServiceRequest", ThisKey="Code", OtherKey="OwnershipChange")]
		public EntitySet<ServiceRequest> ServiceRequest
		{
			get
			{
				return this._ServiceRequest;
			}
			set
			{
				this._ServiceRequest.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_OwnershipChange = this;
		}
		
		private void detach_ServiceRequest(ServiceRequest entity)
		{
			this.SendPropertyChanging();
			entity.c_OwnershipChange = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsStock")]
	public partial class PartsStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartsNumber;
		
		private string _LocationCode;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<Location> _Location;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnProvisionQuantityChanging(System.Nullable<decimal> value);
    partial void OnProvisionQuantityChanged();
    #endregion
		
		public PartsStock()
		{
			this._Parts = default(EntityRef<Parts>);
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="decimal(10, 2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this.OnProvisionQuantityChanging(value);
					this.SendPropertyChanging();
					this._ProvisionQuantity = value;
					this.SendPropertyChanged("ProvisionQuantity");
					this.OnProvisionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsStock", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.PartsStock.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.PartsStock.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsStock", Storage="_Location", ThisKey="LocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.PartsStock.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.PartsStock.Add(this);
						this._LocationCode = value.LocationCode;
					}
					else
					{
						this._LocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_LocationType")]
	public partial class c_LocationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Location> _Location;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_LocationType()
		{
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_LocationType_Location", Storage="_Location", ThisKey="Code", OtherKey="LocationType")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.c_LocationType = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.c_LocationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashBalance")]
	public partial class CashBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private System.DateTime _ClosedDate;
		
		private string _CloseFlag;
		
		private System.Nullable<int> _NumberOf10000;
		
		private System.Nullable<int> _NumberOf5000;
		
		private System.Nullable<int> _NumberOf2000;
		
		private System.Nullable<int> _NumberOf1000;
		
		private System.Nullable<int> _NumberOf500;
		
		private System.Nullable<int> _NumberOf100;
		
		private System.Nullable<int> _NumberOf50;
		
		private System.Nullable<int> _NumberOf10;
		
		private System.Nullable<int> _NumberOf5;
		
		private System.Nullable<int> _NumberOf1;
		
		private System.Nullable<decimal> _CheckAmount;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CashAccountCode;
		
		private EntityRef<Office> _Office;
		
		private EntityRef<CashAccount> _CashAccount;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeCodeChanging(string value);
    partial void OnOfficeCodeChanged();
    partial void OnClosedDateChanging(System.DateTime value);
    partial void OnClosedDateChanged();
    partial void OnCloseFlagChanging(string value);
    partial void OnCloseFlagChanged();
    partial void OnNumberOf10000Changing(System.Nullable<int> value);
    partial void OnNumberOf10000Changed();
    partial void OnNumberOf5000Changing(System.Nullable<int> value);
    partial void OnNumberOf5000Changed();
    partial void OnNumberOf2000Changing(System.Nullable<int> value);
    partial void OnNumberOf2000Changed();
    partial void OnNumberOf1000Changing(System.Nullable<int> value);
    partial void OnNumberOf1000Changed();
    partial void OnNumberOf500Changing(System.Nullable<int> value);
    partial void OnNumberOf500Changed();
    partial void OnNumberOf100Changing(System.Nullable<int> value);
    partial void OnNumberOf100Changed();
    partial void OnNumberOf50Changing(System.Nullable<int> value);
    partial void OnNumberOf50Changed();
    partial void OnNumberOf10Changing(System.Nullable<int> value);
    partial void OnNumberOf10Changed();
    partial void OnNumberOf5Changing(System.Nullable<int> value);
    partial void OnNumberOf5Changed();
    partial void OnNumberOf1Changing(System.Nullable<int> value);
    partial void OnNumberOf1Changed();
    partial void OnCheckAmountChanging(System.Nullable<decimal> value);
    partial void OnCheckAmountChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCashAccountCodeChanging(string value);
    partial void OnCashAccountCodeChanged();
    #endregion
		
		public CashBalance()
		{
			this._Office = default(EntityRef<Office>);
			this._CashAccount = default(EntityRef<CashAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if ((this._Office.HasLoadedOrAssignedValue || this._CashAccount.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("OfficeCode");
					this.OnOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseFlag", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseFlag
		{
			get
			{
				return this._CloseFlag;
			}
			set
			{
				if ((this._CloseFlag != value))
				{
					this.OnCloseFlagChanging(value);
					this.SendPropertyChanging();
					this._CloseFlag = value;
					this.SendPropertyChanged("CloseFlag");
					this.OnCloseFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10000", DbType="Int")]
		public System.Nullable<int> NumberOf10000
		{
			get
			{
				return this._NumberOf10000;
			}
			set
			{
				if ((this._NumberOf10000 != value))
				{
					this.OnNumberOf10000Changing(value);
					this.SendPropertyChanging();
					this._NumberOf10000 = value;
					this.SendPropertyChanged("NumberOf10000");
					this.OnNumberOf10000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5000", DbType="Int")]
		public System.Nullable<int> NumberOf5000
		{
			get
			{
				return this._NumberOf5000;
			}
			set
			{
				if ((this._NumberOf5000 != value))
				{
					this.OnNumberOf5000Changing(value);
					this.SendPropertyChanging();
					this._NumberOf5000 = value;
					this.SendPropertyChanged("NumberOf5000");
					this.OnNumberOf5000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf2000", DbType="Int")]
		public System.Nullable<int> NumberOf2000
		{
			get
			{
				return this._NumberOf2000;
			}
			set
			{
				if ((this._NumberOf2000 != value))
				{
					this.OnNumberOf2000Changing(value);
					this.SendPropertyChanging();
					this._NumberOf2000 = value;
					this.SendPropertyChanged("NumberOf2000");
					this.OnNumberOf2000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1000", DbType="Int")]
		public System.Nullable<int> NumberOf1000
		{
			get
			{
				return this._NumberOf1000;
			}
			set
			{
				if ((this._NumberOf1000 != value))
				{
					this.OnNumberOf1000Changing(value);
					this.SendPropertyChanging();
					this._NumberOf1000 = value;
					this.SendPropertyChanged("NumberOf1000");
					this.OnNumberOf1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf500", DbType="Int")]
		public System.Nullable<int> NumberOf500
		{
			get
			{
				return this._NumberOf500;
			}
			set
			{
				if ((this._NumberOf500 != value))
				{
					this.OnNumberOf500Changing(value);
					this.SendPropertyChanging();
					this._NumberOf500 = value;
					this.SendPropertyChanged("NumberOf500");
					this.OnNumberOf500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf100", DbType="Int")]
		public System.Nullable<int> NumberOf100
		{
			get
			{
				return this._NumberOf100;
			}
			set
			{
				if ((this._NumberOf100 != value))
				{
					this.OnNumberOf100Changing(value);
					this.SendPropertyChanging();
					this._NumberOf100 = value;
					this.SendPropertyChanged("NumberOf100");
					this.OnNumberOf100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf50", DbType="Int")]
		public System.Nullable<int> NumberOf50
		{
			get
			{
				return this._NumberOf50;
			}
			set
			{
				if ((this._NumberOf50 != value))
				{
					this.OnNumberOf50Changing(value);
					this.SendPropertyChanging();
					this._NumberOf50 = value;
					this.SendPropertyChanged("NumberOf50");
					this.OnNumberOf50Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10", DbType="Int")]
		public System.Nullable<int> NumberOf10
		{
			get
			{
				return this._NumberOf10;
			}
			set
			{
				if ((this._NumberOf10 != value))
				{
					this.OnNumberOf10Changing(value);
					this.SendPropertyChanging();
					this._NumberOf10 = value;
					this.SendPropertyChanged("NumberOf10");
					this.OnNumberOf10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5", DbType="Int")]
		public System.Nullable<int> NumberOf5
		{
			get
			{
				return this._NumberOf5;
			}
			set
			{
				if ((this._NumberOf5 != value))
				{
					this.OnNumberOf5Changing(value);
					this.SendPropertyChanging();
					this._NumberOf5 = value;
					this.SendPropertyChanged("NumberOf5");
					this.OnNumberOf5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1", DbType="Int")]
		public System.Nullable<int> NumberOf1
		{
			get
			{
				return this._NumberOf1;
			}
			set
			{
				if ((this._NumberOf1 != value))
				{
					this.OnNumberOf1Changing(value);
					this.SendPropertyChanging();
					this._NumberOf1 = value;
					this.SendPropertyChanged("NumberOf1");
					this.OnNumberOf1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CheckAmount
		{
			get
			{
				return this._CheckAmount;
			}
			set
			{
				if ((this._CheckAmount != value))
				{
					this.OnCheckAmountChanging(value);
					this.SendPropertyChanging();
					this._CheckAmount = value;
					this.SendPropertyChanged("CheckAmount");
					this.OnCheckAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(3)", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					if (this._CashAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCashAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._CashAccountCode = value;
					this.SendPropertyChanged("CashAccountCode");
					this.OnCashAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Office_CashBalance", Storage="_Office", ThisKey="OfficeCode", OtherKey="OfficeCode", IsForeignKey=true)]
		public Office Office
		{
			get
			{
				return this._Office.Entity;
			}
			set
			{
				Office previousValue = this._Office.Entity;
				if (((previousValue != value) 
							|| (this._Office.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Office.Entity = null;
						previousValue.CashBalance = null;
					}
					this._Office.Entity = value;
					if ((value != null))
					{
						value.CashBalance = this;
						this._DepartmentCode = value.OfficeCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Office");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashAccount_CashBalance", Storage="_CashAccount", ThisKey="OfficeCode,CashAccountCode", OtherKey="OfficeCode,CashAccountCode", IsForeignKey=true)]
		public CashAccount CashAccount
		{
			get
			{
				return this._CashAccount.Entity;
			}
			set
			{
				CashAccount previousValue = this._CashAccount.Entity;
				if (((previousValue != value) 
							|| (this._CashAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CashAccount.Entity = null;
						previousValue.CashBalance.Remove(this);
					}
					this._CashAccount.Entity = value;
					if ((value != null))
					{
						value.CashBalance.Add(this);
						this._DepartmentCode = value.OfficeCode;
						this._CashAccountCode = value.CashAccountCode;
					}
					else
					{
						this._DepartmentCode = default(string);
						this._CashAccountCode = default(string);
					}
					this.SendPropertyChanged("CashAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TransferId;
		
		private string _DepartureLocationCode;
		
		private System.DateTime _DepartureDate;
		
		private string _DepartureEmployeeCode;
		
		private string _ArrivalLocationCode;
		
		private System.DateTime _ArrivalPlanDate;
		
		private System.Nullable<System.DateTime> _ArrivalDate;
		
		private string _ArrivalEmployeeCode;
		
		private string _PartsNumber;
		
		private string _SalesCarId;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _TransferType;
		
		private string _SlipNumber;
		
		private EntityRef<Location> _DepartureLocation;
		
		private EntityRef<Location> _ArrivalLocation;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<SalesCar> _SalesCar;
		
		private EntityRef<Employee> _DepartureEmployee;
		
		private EntityRef<Employee> _ArrivalEmployee;
		
		private EntityRef<c_TransferType> _c_TransferType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransferNumberChanging(string value);
    partial void OnTransferNumberChanged();
    partial void OnDepartureLocationCodeChanging(string value);
    partial void OnDepartureLocationCodeChanged();
    partial void OnDepartureDateChanging(System.DateTime value);
    partial void OnDepartureDateChanged();
    partial void OnDepartureEmployeeCodeChanging(string value);
    partial void OnDepartureEmployeeCodeChanged();
    partial void OnArrivalLocationCodeChanging(string value);
    partial void OnArrivalLocationCodeChanged();
    partial void OnArrivalPlanDateChanging(System.DateTime value);
    partial void OnArrivalPlanDateChanged();
    partial void OnArrivalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalDateChanged();
    partial void OnArrivalEmployeeCodeChanging(string value);
    partial void OnArrivalEmployeeCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnTransferTypeChanging(string value);
    partial void OnTransferTypeChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    #endregion
		
		public Transfer()
		{
			this._DepartureLocation = default(EntityRef<Location>);
			this._ArrivalLocation = default(EntityRef<Location>);
			this._Parts = default(EntityRef<Parts>);
			this._SalesCar = default(EntityRef<SalesCar>);
			this._DepartureEmployee = default(EntityRef<Employee>);
			this._ArrivalEmployee = default(EntityRef<Employee>);
			this._c_TransferType = default(EntityRef<c_TransferType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransferNumber
		{
			get
			{
				return this._TransferId;
			}
			set
			{
				if ((this._TransferId != value))
				{
					this.OnTransferNumberChanging(value);
					this.SendPropertyChanging();
					this._TransferId = value;
					this.SendPropertyChanged("TransferNumber");
					this.OnTransferNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartureLocationCode
		{
			get
			{
				return this._DepartureLocationCode;
			}
			set
			{
				if ((this._DepartureLocationCode != value))
				{
					if (this._DepartureLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartureLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartureLocationCode = value;
					this.SendPropertyChanged("DepartureLocationCode");
					this.OnDepartureLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureDate", DbType="DateTime NOT NULL")]
		public System.DateTime DepartureDate
		{
			get
			{
				return this._DepartureDate;
			}
			set
			{
				if ((this._DepartureDate != value))
				{
					this.OnDepartureDateChanging(value);
					this.SendPropertyChanging();
					this._DepartureDate = value;
					this.SendPropertyChanged("DepartureDate");
					this.OnDepartureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureEmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartureEmployeeCode
		{
			get
			{
				return this._DepartureEmployeeCode;
			}
			set
			{
				if ((this._DepartureEmployeeCode != value))
				{
					if (this._DepartureEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartureEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartureEmployeeCode = value;
					this.SendPropertyChanged("DepartureEmployeeCode");
					this.OnDepartureEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrivalLocationCode
		{
			get
			{
				return this._ArrivalLocationCode;
			}
			set
			{
				if ((this._ArrivalLocationCode != value))
				{
					if (this._ArrivalLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrivalLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalLocationCode = value;
					this.SendPropertyChanged("ArrivalLocationCode");
					this.OnArrivalLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime NOT NULL")]
		public System.DateTime ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this.OnArrivalPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalPlanDate = value;
					this.SendPropertyChanged("ArrivalPlanDate");
					this.OnArrivalPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalDate
		{
			get
			{
				return this._ArrivalDate;
			}
			set
			{
				if ((this._ArrivalDate != value))
				{
					this.OnArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDate = value;
					this.SendPropertyChanged("ArrivalDate");
					this.OnArrivalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrivalEmployeeCode
		{
			get
			{
				return this._ArrivalEmployeeCode;
			}
			set
			{
				if ((this._ArrivalEmployeeCode != value))
				{
					if (this._ArrivalEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArrivalEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalEmployeeCode = value;
					this.SendPropertyChanged("ArrivalEmployeeCode");
					this.OnArrivalEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					if (this._SalesCar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarId = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferType", DbType="NVarChar(3)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TransferType
		{
			get
			{
				return this._TransferType;
			}
			set
			{
				if ((this._TransferType != value))
				{
					if (this._c_TransferType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransferTypeChanging(value);
					this.SendPropertyChanging();
					this._TransferType = value;
					this.SendPropertyChanged("TransferType");
					this.OnTransferTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Transfer", Storage="_DepartureLocation", ThisKey="DepartureLocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location DepartureLocation
		{
			get
			{
				return this._DepartureLocation.Entity;
			}
			set
			{
				Location previousValue = this._DepartureLocation.Entity;
				if (((previousValue != value) 
							|| (this._DepartureLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartureLocation.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._DepartureLocation.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._DepartureLocationCode = value.LocationCode;
					}
					else
					{
						this._DepartureLocationCode = default(string);
					}
					this.SendPropertyChanged("DepartureLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Transfer1", Storage="_ArrivalLocation", ThisKey="ArrivalLocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location ArrivalLocation
		{
			get
			{
				return this._ArrivalLocation.Entity;
			}
			set
			{
				Location previousValue = this._ArrivalLocation.Entity;
				if (((previousValue != value) 
							|| (this._ArrivalLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArrivalLocation.Entity = null;
						previousValue.Transfer1.Remove(this);
					}
					this._ArrivalLocation.Entity = value;
					if ((value != null))
					{
						value.Transfer1.Add(this);
						this._ArrivalLocationCode = value.LocationCode;
					}
					else
					{
						this._ArrivalLocationCode = default(string);
					}
					this.SendPropertyChanged("ArrivalLocation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_Transfer", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesCar_Transfer", Storage="_SalesCar", ThisKey="SalesCarNumber", OtherKey="SalesCarNumber", IsForeignKey=true)]
		public SalesCar SalesCar
		{
			get
			{
				return this._SalesCar.Entity;
			}
			set
			{
				SalesCar previousValue = this._SalesCar.Entity;
				if (((previousValue != value) 
							|| (this._SalesCar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesCar.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._SalesCar.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._SalesCarId = value.SalesCarNumber;
					}
					else
					{
						this._SalesCarId = default(string);
					}
					this.SendPropertyChanged("SalesCar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transfer", Storage="_DepartureEmployee", ThisKey="DepartureEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee DepartureEmployee
		{
			get
			{
				return this._DepartureEmployee.Entity;
			}
			set
			{
				Employee previousValue = this._DepartureEmployee.Entity;
				if (((previousValue != value) 
							|| (this._DepartureEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DepartureEmployee.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._DepartureEmployee.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._DepartureEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._DepartureEmployeeCode = default(string);
					}
					this.SendPropertyChanged("DepartureEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Transfer1", Storage="_ArrivalEmployee", ThisKey="ArrivalEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee ArrivalEmployee
		{
			get
			{
				return this._ArrivalEmployee.Entity;
			}
			set
			{
				Employee previousValue = this._ArrivalEmployee.Entity;
				if (((previousValue != value) 
							|| (this._ArrivalEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArrivalEmployee.Entity = null;
						previousValue.Transfer1.Remove(this);
					}
					this._ArrivalEmployee.Entity = value;
					if ((value != null))
					{
						value.Transfer1.Add(this);
						this._ArrivalEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._ArrivalEmployeeCode = default(string);
					}
					this.SendPropertyChanged("ArrivalEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TransferType_Transfer", Storage="_c_TransferType", ThisKey="TransferType", OtherKey="Code", IsForeignKey=true)]
		public c_TransferType c_TransferType
		{
			get
			{
				return this._c_TransferType.Entity;
			}
			set
			{
				c_TransferType previousValue = this._c_TransferType.Entity;
				if (((previousValue != value) 
							|| (this._c_TransferType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_TransferType.Entity = null;
						previousValue.Transfer.Remove(this);
					}
					this._c_TransferType.Entity = value;
					if ((value != null))
					{
						value.Transfer.Add(this);
						this._TransferType = value.Code;
					}
					else
					{
						this._TransferType = default(string);
					}
					this.SendPropertyChanged("c_TransferType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_TransferType")]
	public partial class c_TransferType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _EditNarrowFlag;
		
		private EntitySet<Transfer> _Transfer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnEditNarrowFlagChanging(string value);
    partial void OnEditNarrowFlagChanged();
    #endregion
		
		public c_TransferType()
		{
			this._Transfer = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfer), new Action<Transfer>(this.detach_Transfer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditNarrowFlag", DbType="nvarchar(2)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EditNarrowFlag
		{
			get
			{
				return this._EditNarrowFlag;
			}
			set
			{
				if ((this._EditNarrowFlag != value))
				{
					this.OnEditNarrowFlagChanging(value);
					this.SendPropertyChanging();
					this._EditNarrowFlag = value;
					this.SendPropertyChanged("EditNarrowFlag");
					this.OnEditNarrowFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_TransferType_Transfer", Storage="_Transfer", ThisKey="Code", OtherKey="TransferType")]
		public EntitySet<Transfer> Transfer
		{
			get
			{
				return this._Transfer;
			}
			set
			{
				this._Transfer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.c_TransferType = this;
		}
		
		private void detach_Transfer(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.c_TransferType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OrderType")]
	public partial class c_OrderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OrderType()
		{
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OrderType_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="Code", OtherKey="OrderType")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_OrderType = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_OrderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsPurchaseOrder")]
	public partial class PartsPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PurchaseOrderId;
		
		private string _ServiceSlipNumber;
		
		private string _SupplierCode;
		
		private string _SupplierPaymentCode;
		
		private string _EmployeeCode;
		
		private string _DepartmentCode;
		
		private string _WebOrderNumber;
		
		private System.Nullable<System.DateTime> _PurchaseOrderDate;
		
		private string _PurchaseOrderStatus;
		
		private string _PartsNumber;
		
		private string _OrderType;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _PaymentPlanDate;
		
		private string _Memo;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
		private EntityRef<c_OrderType> _c_OrderType;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<SupplierPayment> _SupplierPayment;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<c_PurchaseOrderStatus> _c_PurchaseOrderStatus;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnServiceSlipNumberChanging(string value);
    partial void OnServiceSlipNumberChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnSupplierPaymentCodeChanging(string value);
    partial void OnSupplierPaymentCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnWebOrderNumberChanging(string value);
    partial void OnWebOrderNumberChanged();
    partial void OnPurchaseOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseOrderDateChanged();
    partial void OnPurchaseOrderStatusChanging(string value);
    partial void OnPurchaseOrderStatusChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnArrivalPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalPlanDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnPaymentPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentPlanDateChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnRemainingQuantityChanging(System.Nullable<decimal> value);
    partial void OnRemainingQuantityChanged();
    #endregion
		
		public PartsPurchaseOrder()
		{
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			this._c_OrderType = default(EntityRef<c_OrderType>);
			this._Supplier = default(EntityRef<Supplier>);
			this._SupplierPayment = default(EntityRef<SupplierPayment>);
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._Parts = default(EntityRef<Parts>);
			this._c_PurchaseOrderStatus = default(EntityRef<c_PurchaseOrderStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderId;
			}
			set
			{
				if ((this._PurchaseOrderId != value))
				{
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderId = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceSlipNumber
		{
			get
			{
				return this._ServiceSlipNumber;
			}
			set
			{
				if ((this._ServiceSlipNumber != value))
				{
					this.OnServiceSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._ServiceSlipNumber = value;
					this.SendPropertyChanged("ServiceSlipNumber");
					this.OnServiceSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPaymentCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierPaymentCode
		{
			get
			{
				return this._SupplierPaymentCode;
			}
			set
			{
				if ((this._SupplierPaymentCode != value))
				{
					if (this._SupplierPayment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierPaymentCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierPaymentCode = value;
					this.SendPropertyChanged("SupplierPaymentCode");
					this.OnSupplierPaymentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this.OnWebOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._WebOrderNumber = value;
					this.SendPropertyChanged("WebOrderNumber");
					this.OnWebOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this.OnPurchaseOrderDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderDate = value;
					this.SendPropertyChanged("PurchaseOrderDate");
					this.OnPurchaseOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderStatus
		{
			get
			{
				return this._PurchaseOrderStatus;
			}
			set
			{
				if ((this._PurchaseOrderStatus != value))
				{
					if (this._c_PurchaseOrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderStatus = value;
					this.SendPropertyChanged("PurchaseOrderStatus");
					this.OnPurchaseOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					if (this._c_OrderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this.OnArrivalPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalPlanDate = value;
					this.SendPropertyChanged("ArrivalPlanDate");
					this.OnArrivalPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentPlanDate
		{
			get
			{
				return this._PaymentPlanDate;
			}
			set
			{
				if ((this._PaymentPlanDate != value))
				{
					this.OnPaymentPlanDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentPlanDate = value;
					this.SendPropertyChanged("PaymentPlanDate");
					this.OnPaymentPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this.OnRemainingQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingQuantity = value;
					this.SendPropertyChanged("RemainingQuantity");
					this.OnRemainingQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartsPurchaseOrder_PartsPurchase", Storage="_PartsPurchase", ThisKey="PurchaseOrderNumber", OtherKey="PurchaseOrderNumber")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_OrderType_PartsPurchaseOrder", Storage="_c_OrderType", ThisKey="OrderType", OtherKey="Code", IsForeignKey=true)]
		public c_OrderType c_OrderType
		{
			get
			{
				return this._c_OrderType.Entity;
			}
			set
			{
				c_OrderType previousValue = this._c_OrderType.Entity;
				if (((previousValue != value) 
							|| (this._c_OrderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_OrderType.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._c_OrderType.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._OrderType = value.Code;
					}
					else
					{
						this._OrderType = default(string);
					}
					this.SendPropertyChanged("c_OrderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PartsPurchaseOrder", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SupplierPayment_PartsPurchaseOrder", Storage="_SupplierPayment", ThisKey="SupplierPaymentCode", OtherKey="SupplierPaymentCode", IsForeignKey=true)]
		public SupplierPayment SupplierPayment
		{
			get
			{
				return this._SupplierPayment.Entity;
			}
			set
			{
				SupplierPayment previousValue = this._SupplierPayment.Entity;
				if (((previousValue != value) 
							|| (this._SupplierPayment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SupplierPayment.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._SupplierPayment.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._SupplierPaymentCode = value.SupplierPaymentCode;
					}
					else
					{
						this._SupplierPaymentCode = default(string);
					}
					this.SendPropertyChanged("SupplierPayment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsPurchaseOrder", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PartsPurchaseOrder", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsPurchaseOrder", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseOrderStatus_PartsPurchaseOrder", Storage="_c_PurchaseOrderStatus", ThisKey="PurchaseOrderStatus", OtherKey="Code", IsForeignKey=true)]
		public c_PurchaseOrderStatus c_PurchaseOrderStatus
		{
			get
			{
				return this._c_PurchaseOrderStatus.Entity;
			}
			set
			{
				c_PurchaseOrderStatus previousValue = this._c_PurchaseOrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_PurchaseOrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PurchaseOrderStatus.Entity = null;
						previousValue.PartsPurchaseOrder.Remove(this);
					}
					this._c_PurchaseOrderStatus.Entity = value;
					if ((value != null))
					{
						value.PartsPurchaseOrder.Add(this);
						this._PurchaseOrderStatus = value.Code;
					}
					else
					{
						this._PurchaseOrderStatus = default(string);
					}
					this.SendPropertyChanged("c_PurchaseOrderStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.PartsPurchaseOrder = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.PartsPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PurchaseOrderStatus")]
	public partial class c_PurchaseOrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<PartsPurchaseOrder> _PartsPurchaseOrder;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PurchaseOrderStatus()
		{
			this._PartsPurchaseOrder = new EntitySet<PartsPurchaseOrder>(new Action<PartsPurchaseOrder>(this.attach_PartsPurchaseOrder), new Action<PartsPurchaseOrder>(this.detach_PartsPurchaseOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseOrderStatus_PartsPurchaseOrder", Storage="_PartsPurchaseOrder", ThisKey="Code", OtherKey="PurchaseOrderStatus")]
		public EntitySet<PartsPurchaseOrder> PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder;
			}
			set
			{
				this._PartsPurchaseOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseOrderStatus = this;
		}
		
		private void detach_PartsPurchaseOrder(PartsPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseOrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsPurchase")]
	public partial class PartsPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PurchaseNumber;
		
		private string _PurchaseOrderNumber;
		
		private string _PurchaseType;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _SupplierCode;
		
		private string _EmployeeCode;
		
		private string _DepartmentCode;
		
		private string _LocationCode;
		
		private string _PartsNumber;
		
		private decimal _Price;
		
		private decimal _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _PurchasePlanDate;
		
		private string _PurchaseStatus;
		
		private decimal _Amount;
		
		private string _ReceiptNumber;
		
		private string _Memo;
		
		private string _ServiceSlipNumber;
		
		private int _RevisionNumber;
		
		private string _InvoiceNo;
		
		private string _MakerOrderNumber;
		
		private string _ChangePartsFlag;
		
		private string _OrderPartsNumber;
		
		private string _WebOrderNumber;
		
		private System.Nullable<System.DateTime> _LinkEntryCaptureDate;
		
		private EntityRef<c_PurchaseType> _c_PurchaseType;
		
		private EntityRef<PartsPurchaseOrder> _PartsPurchaseOrder;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<c_PurchaseStatus> _c_PurchaseStatus;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseNumberChanging(string value);
    partial void OnPurchaseNumberChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnPurchaseTypeChanging(string value);
    partial void OnPurchaseTypeChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnPurchasePlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchasePlanDateChanged();
    partial void OnPurchaseStatusChanging(string value);
    partial void OnPurchaseStatusChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnServiceSlipNumberChanging(string value);
    partial void OnServiceSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnMakerOrderNumberChanging(string value);
    partial void OnMakerOrderNumberChanged();
    partial void OnChangePartsFlagChanging(string value);
    partial void OnChangePartsFlagChanged();
    partial void OnOrderPartsNumberChanging(string value);
    partial void OnOrderPartsNumberChanged();
    partial void OnWebOrderNumberChanging(string value);
    partial void OnWebOrderNumberChanged();
    partial void OnLinkEntryCaptureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLinkEntryCaptureDateChanged();
    #endregion
		
		public PartsPurchase()
		{
			this._c_PurchaseType = default(EntityRef<c_PurchaseType>);
			this._PartsPurchaseOrder = default(EntityRef<PartsPurchaseOrder>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Department = default(EntityRef<Department>);
			this._Employee = default(EntityRef<Employee>);
			this._Location = default(EntityRef<Location>);
			this._Parts = default(EntityRef<Parts>);
			this._c_PurchaseStatus = default(EntityRef<c_PurchaseStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this.OnPurchaseNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNumber = value;
					this.SendPropertyChanged("PurchaseNumber");
					this.OnPurchaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					if (this._PartsPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderNumber = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					if (this._c_PurchaseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseType = value;
					this.SendPropertyChanged("PurchaseType");
					this.OnPurchaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchasePlanDate
		{
			get
			{
				return this._PurchasePlanDate;
			}
			set
			{
				if ((this._PurchasePlanDate != value))
				{
					this.OnPurchasePlanDateChanging(value);
					this.SendPropertyChanging();
					this._PurchasePlanDate = value;
					this.SendPropertyChanged("PurchasePlanDate");
					this.OnPurchasePlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					if (this._c_PurchaseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchaseStatus = value;
					this.SendPropertyChanged("PurchaseStatus");
					this.OnPurchaseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceSlipNumber
		{
			get
			{
				return this._ServiceSlipNumber;
			}
			set
			{
				if ((this._ServiceSlipNumber != value))
				{
					this.OnServiceSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._ServiceSlipNumber = value;
					this.SendPropertyChanged("ServiceSlipNumber");
					this.OnServiceSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this.OnMakerOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._MakerOrderNumber = value;
					this.SendPropertyChanged("MakerOrderNumber");
					this.OnMakerOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePartsFlag", DbType="nvarchar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangePartsFlag
		{
			get
			{
				return this._ChangePartsFlag;
			}
			set
			{
				if ((this._ChangePartsFlag != value))
				{
					this.OnChangePartsFlagChanging(value);
					this.SendPropertyChanging();
					this._ChangePartsFlag = value;
					this.SendPropertyChanged("ChangePartsFlag");
					this.OnChangePartsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPartsNumber", DbType="nvarchar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderPartsNumber
		{
			get
			{
				return this._OrderPartsNumber;
			}
			set
			{
				if ((this._OrderPartsNumber != value))
				{
					this.OnOrderPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderPartsNumber = value;
					this.SendPropertyChanged("OrderPartsNumber");
					this.OnOrderPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this.OnWebOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._WebOrderNumber = value;
					this.SendPropertyChanged("WebOrderNumber");
					this.OnWebOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkEntryCaptureDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LinkEntryCaptureDate
		{
			get
			{
				return this._LinkEntryCaptureDate;
			}
			set
			{
				if ((this._LinkEntryCaptureDate != value))
				{
					this.OnLinkEntryCaptureDateChanging(value);
					this.SendPropertyChanging();
					this._LinkEntryCaptureDate = value;
					this.SendPropertyChanged("LinkEntryCaptureDate");
					this.OnLinkEntryCaptureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseType_PartsPurchase", Storage="_c_PurchaseType", ThisKey="PurchaseType", OtherKey="Code", IsForeignKey=true)]
		public c_PurchaseType c_PurchaseType
		{
			get
			{
				return this._c_PurchaseType.Entity;
			}
			set
			{
				c_PurchaseType previousValue = this._c_PurchaseType.Entity;
				if (((previousValue != value) 
							|| (this._c_PurchaseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PurchaseType.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._c_PurchaseType.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._PurchaseType = value.Code;
					}
					else
					{
						this._PurchaseType = default(string);
					}
					this.SendPropertyChanged("c_PurchaseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PartsPurchaseOrder_PartsPurchase", Storage="_PartsPurchaseOrder", ThisKey="PurchaseOrderNumber", OtherKey="PurchaseOrderNumber", IsForeignKey=true)]
		public PartsPurchaseOrder PartsPurchaseOrder
		{
			get
			{
				return this._PartsPurchaseOrder.Entity;
			}
			set
			{
				PartsPurchaseOrder previousValue = this._PartsPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._PartsPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PartsPurchaseOrder.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._PartsPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._PurchaseOrderNumber = value.PurchaseOrderNumber;
					}
					else
					{
						this._PurchaseOrderNumber = default(string);
					}
					this.SendPropertyChanged("PartsPurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PartsPurchase", Storage="_Supplier", ThisKey="SupplierCode", OtherKey="SupplierCode", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._SupplierCode = value.SupplierCode;
					}
					else
					{
						this._SupplierCode = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_PartsPurchase", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_PartsPurchase", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_PartsPurchase", Storage="_Location", ThisKey="LocationCode", OtherKey="LocationCode", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._LocationCode = value.LocationCode;
					}
					else
					{
						this._LocationCode = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsPurchase", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseStatus_PartsPurchase", Storage="_c_PurchaseStatus", ThisKey="PurchaseStatus", OtherKey="Code", IsForeignKey=true)]
		public c_PurchaseStatus c_PurchaseStatus
		{
			get
			{
				return this._c_PurchaseStatus.Entity;
			}
			set
			{
				c_PurchaseStatus previousValue = this._c_PurchaseStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_PurchaseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_PurchaseStatus.Entity = null;
						previousValue.PartsPurchase.Remove(this);
					}
					this._c_PurchaseStatus.Entity = value;
					if ((value != null))
					{
						value.PartsPurchase.Add(this);
						this._PurchaseStatus = value.Code;
					}
					else
					{
						this._PurchaseStatus = default(string);
					}
					this.SendPropertyChanged("c_PurchaseStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_PurchaseType")]
	public partial class c_PurchaseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<PartsPurchase> _PartsPurchase;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_PurchaseType()
		{
			this._PartsPurchase = new EntitySet<PartsPurchase>(new Action<PartsPurchase>(this.attach_PartsPurchase), new Action<PartsPurchase>(this.detach_PartsPurchase));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_PurchaseType_PartsPurchase", Storage="_PartsPurchase", ThisKey="Code", OtherKey="PurchaseType")]
		public EntitySet<PartsPurchase> PartsPurchase
		{
			get
			{
				return this._PartsPurchase;
			}
			set
			{
				this._PartsPurchase.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseType = this;
		}
		
		private void detach_PartsPurchase(PartsPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_PurchaseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_DepositKind")]
	public partial class c_DepositKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Office> _Office;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_DepositKind()
		{
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DepositKind_Office", Storage="_Office", ThisKey="Code", OtherKey="DepositKind")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.c_DepositKind = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.c_DepositKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptPlan")]
	public partial class ReceiptPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ReceiptPlanId;
		
		private string _DepartmentCode;
		
		private string _CustomerClaimCode;
		
		private string _SlipNumber;
		
		private string _ReceiptType;
		
		private System.Nullable<System.DateTime> _ReceiptPlanDate;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _ReceivableBalance;
		
		private string _CompleteFlag;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _OccurredDepartmentCode;
		
		private string _AccountCode;
		
		private string _Summary;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private string _DepositFlag;
		
		private string _PaymentKindCode;
		
		private System.Nullable<decimal> _CommissionRate;
		
		private System.Nullable<decimal> _CommissionAmount;
		
		private string _CreditJournalId;
		
		private string _TradeVin;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Department> _ReceiptDepartment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptPlanIdChanging(System.Guid value);
    partial void OnReceiptPlanIdChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnReceiptTypeChanging(string value);
    partial void OnReceiptTypeChanged();
    partial void OnReceiptPlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptPlanDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnReceivableBalanceChanging(System.Nullable<decimal> value);
    partial void OnReceivableBalanceChanged();
    partial void OnCompleteFlagChanging(string value);
    partial void OnCompleteFlagChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnOccurredDepartmentCodeChanging(string value);
    partial void OnOccurredDepartmentCodeChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnJournalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJournalDateChanged();
    partial void OnDepositFlagChanging(string value);
    partial void OnDepositFlagChanged();
    partial void OnPaymentKindCodeChanging(string value);
    partial void OnPaymentKindCodeChanged();
    partial void OnCommissionRateChanging(System.Nullable<decimal> value);
    partial void OnCommissionRateChanged();
    partial void OnCommissionAmountChanging(System.Nullable<decimal> value);
    partial void OnCommissionAmountChanged();
    partial void OnCreditJournalIdChanging(string value);
    partial void OnCreditJournalIdChanged();
    partial void OnTradeVinChanging(string value);
    partial void OnTradeVinChanged();
    #endregion
		
		public ReceiptPlan()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			this._Department = default(EntityRef<Department>);
			this._Account = default(EntityRef<Account>);
			this._ReceiptDepartment = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ReceiptPlanId
		{
			get
			{
				return this._ReceiptPlanId;
			}
			set
			{
				if ((this._ReceiptPlanId != value))
				{
					this.OnReceiptPlanIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptPlanId = value;
					this.SendPropertyChanged("ReceiptPlanId");
					this.OnReceiptPlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._ReceiptDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this.OnReceiptTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptType = value;
					this.SendPropertyChanged("ReceiptType");
					this.OnReceiptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiptPlanDate
		{
			get
			{
				return this._ReceiptPlanDate;
			}
			set
			{
				if ((this._ReceiptPlanDate != value))
				{
					this.OnReceiptPlanDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptPlanDate = value;
					this.SendPropertyChanged("ReceiptPlanDate");
					this.OnReceiptPlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReceivableBalance
		{
			get
			{
				return this._ReceivableBalance;
			}
			set
			{
				if ((this._ReceivableBalance != value))
				{
					this.OnReceivableBalanceChanging(value);
					this.SendPropertyChanging();
					this._ReceivableBalance = value;
					this.SendPropertyChanged("ReceivableBalance");
					this.OnReceivableBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompleteFlag
		{
			get
			{
				return this._CompleteFlag;
			}
			set
			{
				if ((this._CompleteFlag != value))
				{
					this.OnCompleteFlagChanging(value);
					this.SendPropertyChanging();
					this._CompleteFlag = value;
					this.SendPropertyChanged("CompleteFlag");
					this.OnCompleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccurredDepartmentCode
		{
			get
			{
				return this._OccurredDepartmentCode;
			}
			set
			{
				if ((this._OccurredDepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOccurredDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._OccurredDepartmentCode = value;
					this.SendPropertyChanged("OccurredDepartmentCode");
					this.OnOccurredDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositFlag
		{
			get
			{
				return this._DepositFlag;
			}
			set
			{
				if ((this._DepositFlag != value))
				{
					this.OnDepositFlagChanging(value);
					this.SendPropertyChanging();
					this._DepositFlag = value;
					this.SendPropertyChanged("DepositFlag");
					this.OnDepositFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindCode
		{
			get
			{
				return this._PaymentKindCode;
			}
			set
			{
				if ((this._PaymentKindCode != value))
				{
					this.OnPaymentKindCodeChanging(value);
					this.SendPropertyChanging();
					this._PaymentKindCode = value;
					this.SendPropertyChanged("PaymentKindCode");
					this.OnPaymentKindCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRate", DbType="Decimal(8,5)")]
		public System.Nullable<decimal> CommissionRate
		{
			get
			{
				return this._CommissionRate;
			}
			set
			{
				if ((this._CommissionRate != value))
				{
					this.OnCommissionRateChanging(value);
					this.SendPropertyChanging();
					this._CommissionRate = value;
					this.SendPropertyChanged("CommissionRate");
					this.OnCommissionRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CommissionAmount
		{
			get
			{
				return this._CommissionAmount;
			}
			set
			{
				if ((this._CommissionAmount != value))
				{
					this.OnCommissionAmountChanging(value);
					this.SendPropertyChanging();
					this._CommissionAmount = value;
					this.SendPropertyChanged("CommissionAmount");
					this.OnCommissionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditJournalId", DbType="NVarChar(36)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreditJournalId
		{
			get
			{
				return this._CreditJournalId;
			}
			set
			{
				if ((this._CreditJournalId != value))
				{
					this.OnCreditJournalIdChanging(value);
					this.SendPropertyChanging();
					this._CreditJournalId = value;
					this.SendPropertyChanged("CreditJournalId");
					this.OnCreditJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeVin", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeVin
		{
			get
			{
				return this._TradeVin;
			}
			set
			{
				if ((this._TradeVin != value))
				{
					this.OnTradeVinChanging(value);
					this.SendPropertyChanging();
					this._TradeVin = value;
					this.SendPropertyChanged("TradeVin");
					this.OnTradeVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ReceiptPlan", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.ReceiptPlan.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.ReceiptPlan.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ReceiptPlan", Storage="_Department", ThisKey="OccurredDepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department OccurredDepartment
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.ReceiptPlan.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.ReceiptPlan.Add(this);
						this._OccurredDepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._OccurredDepartmentCode = default(string);
					}
					this.SendPropertyChanged("OccurredDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ReceiptPlan", Storage="_Account", ThisKey="AccountCode", OtherKey="AccountCode", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ReceiptPlan.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ReceiptPlan.Add(this);
						this._AccountCode = value.AccountCode;
					}
					else
					{
						this._AccountCode = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_ReceiptPlan1", Storage="_ReceiptDepartment", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department ReceiptDepartment
		{
			get
			{
				return this._ReceiptDepartment.Entity;
			}
			set
			{
				Department previousValue = this._ReceiptDepartment.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptDepartment.Entity = null;
						previousValue.ReceiptPlan1.Remove(this);
					}
					this._ReceiptDepartment.Entity = value;
					if ((value != null))
					{
						value.ReceiptPlan1.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("ReceiptDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ExpireType")]
	public partial class c_ExpireType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_ExpireType()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ExpireType_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="ExpireType")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_ExpireType = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_ExpireType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationCode;
		
		private string _ApplicationName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private EntitySet<ApplicationRole> _ApplicationRole;
		
		private EntitySet<MenuControl> _MenuControl;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Application()
		{
			this._ApplicationRole = new EntitySet<ApplicationRole>(new Action<ApplicationRole>(this.attach_ApplicationRole), new Action<ApplicationRole>(this.detach_ApplicationRole));
			this._MenuControl = new EntitySet<MenuControl>(new Action<MenuControl>(this.attach_MenuControl), new Action<MenuControl>(this.detach_MenuControl));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationRole", Storage="_ApplicationRole", ThisKey="ApplicationCode", OtherKey="ApplicationCode")]
		public EntitySet<ApplicationRole> ApplicationRole
		{
			get
			{
				return this._ApplicationRole;
			}
			set
			{
				this._ApplicationRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_MenuControl", Storage="_MenuControl", ThisKey="ApplicationCode", OtherKey="ApplicationCode")]
		public EntitySet<MenuControl> MenuControl
		{
			get
			{
				return this._MenuControl;
			}
			set
			{
				this._MenuControl.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationRole(ApplicationRole entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationRole(ApplicationRole entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_MenuControl(MenuControl entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_MenuControl(MenuControl entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_DocumentComplete")]
	public partial class c_DocumentComplete : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_DocumentComplete()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_DocumentComplete_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="DocumentComplete")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_DocumentComplete = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_DocumentComplete = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarSalesReport")]
	public partial class CarSalesReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private int _LineNumber;
		
		private string _ReportName;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CampaignCode;
		
		private EntityRef<CarSalesHeader> _CarSalesHeader;
		
		private EntityRef<Campaign> _Campaign;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnLineNumberChanging(int value);
    partial void OnLineNumberChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCampaignCodeChanging(string value);
    partial void OnCampaignCodeChanged();
    #endregion
		
		public CarSalesReport()
		{
			this._CarSalesHeader = default(EntityRef<CarSalesHeader>);
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					if (this._CarSalesHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this.OnLineNumberChanging(value);
					this.SendPropertyChanging();
					this._LineNumber = value;
					this.SendPropertyChanged("LineNumber");
					this.OnLineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCode", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CampaignCode
		{
			get
			{
				return this._CampaignCode;
			}
			set
			{
				if ((this._CampaignCode != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignCodeChanging(value);
					this.SendPropertyChanging();
					this._CampaignCode = value;
					this.SendPropertyChanged("CampaignCode");
					this.OnCampaignCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarSalesHeader_CarSalesReport", Storage="_CarSalesHeader", ThisKey="SlipNumber,RevisionNumber", OtherKey="SlipNumber,RevisionNumber", IsForeignKey=true)]
		public CarSalesHeader CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader.Entity;
			}
			set
			{
				CarSalesHeader previousValue = this._CarSalesHeader.Entity;
				if (((previousValue != value) 
							|| (this._CarSalesHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarSalesHeader.Entity = null;
						previousValue.CarSalesReport.Remove(this);
					}
					this._CarSalesHeader.Entity = value;
					if ((value != null))
					{
						value.CarSalesReport.Add(this);
						this._SlipNumber = value.SlipNumber;
						this._RevisionNumber = value.RevisionNumber;
					}
					else
					{
						this._SlipNumber = default(string);
						this._RevisionNumber = default(int);
					}
					this.SendPropertyChanged("CarSalesHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CarSalesReport", Storage="_Campaign", ThisKey="CampaignCode", OtherKey="CampaignCode", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CarSalesReport.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CarSalesReport.Add(this);
						this._CampaignCode = value.CampaignCode;
					}
					else
					{
						this._CampaignCode = default(string);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_InventoryStatus")]
	public partial class c_InventoryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<InventorySchedule> _InventorySchedule;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_InventoryStatus()
		{
			this._InventorySchedule = new EntitySet<InventorySchedule>(new Action<InventorySchedule>(this.attach_InventorySchedule), new Action<InventorySchedule>(this.detach_InventorySchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryStatus_InventorySchedule", Storage="_InventorySchedule", ThisKey="Code", OtherKey="InventoryStatus")]
		public EntitySet<InventorySchedule> InventorySchedule
		{
			get
			{
				return this._InventorySchedule;
			}
			set
			{
				this._InventorySchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryStatus = this;
		}
		
		private void detach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_InventoryType")]
	public partial class c_InventoryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Inventory> _Inventory;
		
		private EntitySet<InventoryStock> _InventoryStock;
		
		private EntitySet<InventorySchedule> _InventorySchedule;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_InventoryType()
		{
			this._Inventory = new EntitySet<Inventory>(new Action<Inventory>(this.attach_Inventory), new Action<Inventory>(this.detach_Inventory));
			this._InventoryStock = new EntitySet<InventoryStock>(new Action<InventoryStock>(this.attach_InventoryStock), new Action<InventoryStock>(this.detach_InventoryStock));
			this._InventorySchedule = new EntitySet<InventorySchedule>(new Action<InventorySchedule>(this.attach_InventorySchedule), new Action<InventorySchedule>(this.detach_InventorySchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_Inventory", Storage="_Inventory", ThisKey="Code", OtherKey="InventoryType")]
		public EntitySet<Inventory> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				this._Inventory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_InventoryStock", Storage="_InventoryStock", ThisKey="Code", OtherKey="InventoryType")]
		public EntitySet<InventoryStock> InventoryStock
		{
			get
			{
				return this._InventoryStock;
			}
			set
			{
				this._InventoryStock.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_InventorySchedule", Storage="_InventorySchedule", ThisKey="Code", OtherKey="InventoryType")]
		public EntitySet<InventorySchedule> InventorySchedule
		{
			get
			{
				return this._InventorySchedule;
			}
			set
			{
				this._InventorySchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = this;
		}
		
		private void detach_Inventory(Inventory entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = null;
		}
		
		private void attach_InventoryStock(InventoryStock entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = this;
		}
		
		private void detach_InventoryStock(InventoryStock entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = null;
		}
		
		private void attach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = this;
		}
		
		private void detach_InventorySchedule(InventorySchedule entity)
		{
			this.SendPropertyChanging();
			entity.c_InventoryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigurationSetting")]
	public partial class ConfigurationSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KeyName;
		
		private string _KeyCode;
		
		private string _DelFlag;
		
		private string _Description;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ConfigurationSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Value
		{
			get
			{
				return this._KeyCode;
			}
			set
			{
				if ((this._KeyCode != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._KeyCode = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarInventorySummary")]
	public partial class V_CarInventorySummary
	{
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _InventoryStatus;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private decimal _DifferentialQuantity;
		
		private string _DepartmentName;
		
		private string _OfficeCode;
		
		private string _CompanyCode;
		
		private string _InventoryStatusName;
		
		public V_CarInventorySummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this._InventoryStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferentialQuantity", DbType="Decimal(10,3) NOT NULL")]
		public decimal DifferentialQuantity
		{
			get
			{
				return this._DifferentialQuantity;
			}
			set
			{
				if ((this._DifferentialQuantity != value))
				{
					this._DifferentialQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatusName
		{
			get
			{
				return this._InventoryStatusName;
			}
			set
			{
				if ((this._InventoryStatusName != value))
				{
					this._InventoryStatusName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InventoryId;
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _LocationCode;
		
		private string _EmployeeCode;
		
		private string _InventoryType;
		
		private string _SalesCarId;
		
		private string _PartsNumber;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Summary;
		
		private EntityRef<c_InventoryType> _c_InventoryType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIdChanging(System.Guid value);
    partial void OnInventoryIdChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public Inventory()
		{
			this._c_InventoryType = default(EntityRef<c_InventoryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					if (this._c_InventoryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarId = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_Inventory", Storage="_c_InventoryType", ThisKey="InventoryType", OtherKey="Code", IsForeignKey=true)]
		public c_InventoryType c_InventoryType
		{
			get
			{
				return this._c_InventoryType.Entity;
			}
			set
			{
				c_InventoryType previousValue = this._c_InventoryType.Entity;
				if (((previousValue != value) 
							|| (this._c_InventoryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_InventoryType.Entity = null;
						previousValue.Inventory.Remove(this);
					}
					this._c_InventoryType.Entity = value;
					if ((value != null))
					{
						value.Inventory.Add(this);
						this._InventoryType = value.Code;
					}
					else
					{
						this._InventoryType = default(string);
					}
					this.SendPropertyChanged("c_InventoryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryStock")]
	public partial class InventoryStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InventoryId;
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _LocationCode;
		
		private string _EmployeeCode;
		
		private string _InventoryType;
		
		private string _SalesCarId;
		
		private string _PartsNumber;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Summary;
		
		private decimal ? _PhysicalQuantity;
		
		private string _Comment;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private string _WarehouseCode;
		
		private EntityRef<c_InventoryType> _c_InventoryType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIdChanging(System.Guid value);
    partial void OnInventoryIdChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPhysicalQuantityChanging(decimal ? value);
    partial void OnPhysicalQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnProvisionQuantityChanging(System.Nullable<decimal> value);
    partial void OnProvisionQuantityChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    #endregion
		
		public InventoryStock()
		{
			this._c_InventoryType = default(EntityRef<c_InventoryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					if (this._c_InventoryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarId = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalQuantity", DbType="decimal(10,3)", CanBeNull=true)]
		public decimal ? PhysicalQuantity
		{
			get
			{
				return this._PhysicalQuantity;
			}
			set
			{
				if ((this._PhysicalQuantity != value))
				{
					this.OnPhysicalQuantityChanging(value);
					this.SendPropertyChanging();
					this._PhysicalQuantity = value;
					this.SendPropertyChanged("PhysicalQuantity");
					this.OnPhysicalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="varchar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="decimal(10, 2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this.OnProvisionQuantityChanging(value);
					this.SendPropertyChanging();
					this._ProvisionQuantity = value;
					this.SendPropertyChanged("ProvisionQuantity");
					this.OnProvisionQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="nvarchar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_InventoryStock", Storage="_c_InventoryType", ThisKey="InventoryType", OtherKey="Code", IsForeignKey=true)]
		public c_InventoryType c_InventoryType
		{
			get
			{
				return this._c_InventoryType.Entity;
			}
			set
			{
				c_InventoryType previousValue = this._c_InventoryType.Entity;
				if (((previousValue != value) 
							|| (this._c_InventoryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_InventoryType.Entity = null;
						previousValue.InventoryStock.Remove(this);
					}
					this._c_InventoryType.Entity = value;
					if ((value != null))
					{
						value.InventoryStock.Add(this);
						this._InventoryType = value.Code;
					}
					else
					{
						this._InventoryType = default(string);
					}
					this.SendPropertyChanged("c_InventoryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventorySchedule")]
	public partial class InventorySchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _InventoryType;
		
		private string _InventoryStatus;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<c_InventoryStatus> _c_InventoryStatus;
		
		private EntityRef<c_InventoryType> _c_InventoryType;
		
		private EntityRef<Department> _Department;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InventorySchedule()
		{
			this._c_InventoryStatus = default(EntityRef<c_InventoryStatus>);
			this._c_InventoryType = default(EntityRef<c_InventoryType>);
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					if (this._c_InventoryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					if (this._c_InventoryStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryStatus_InventorySchedule", Storage="_c_InventoryStatus", ThisKey="InventoryStatus", OtherKey="Code", IsForeignKey=true)]
		public c_InventoryStatus c_InventoryStatus
		{
			get
			{
				return this._c_InventoryStatus.Entity;
			}
			set
			{
				c_InventoryStatus previousValue = this._c_InventoryStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_InventoryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_InventoryStatus.Entity = null;
						previousValue.InventorySchedule.Remove(this);
					}
					this._c_InventoryStatus.Entity = value;
					if ((value != null))
					{
						value.InventorySchedule.Add(this);
						this._InventoryStatus = value.Code;
					}
					else
					{
						this._InventoryStatus = default(string);
					}
					this.SendPropertyChanged("c_InventoryStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_InventoryType_InventorySchedule", Storage="_c_InventoryType", ThisKey="InventoryType", OtherKey="Code", IsForeignKey=true)]
		public c_InventoryType c_InventoryType
		{
			get
			{
				return this._c_InventoryType.Entity;
			}
			set
			{
				c_InventoryType previousValue = this._c_InventoryType.Entity;
				if (((previousValue != value) 
							|| (this._c_InventoryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_InventoryType.Entity = null;
						previousValue.InventorySchedule.Remove(this);
					}
					this._c_InventoryType.Entity = value;
					if ((value != null))
					{
						value.InventorySchedule.Add(this);
						this._InventoryType = value.Code;
					}
					else
					{
						this._InventoryType = default(string);
					}
					this.SendPropertyChanged("c_InventoryType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_InventorySchedule", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.InventorySchedule.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.InventorySchedule.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SetMenu")]
	public partial class SetMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SetMenuCode;
		
		private string _SetMenuName;
		
		private string _CompanyCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<SetMenuList> _SetMenuList;
		
		private EntityRef<Company> _Company;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetMenuCodeChanging(string value);
    partial void OnSetMenuCodeChanged();
    partial void OnSetMenuNameChanging(string value);
    partial void OnSetMenuNameChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public SetMenu()
		{
			this._SetMenuList = new EntitySet<SetMenuList>(new Action<SetMenuList>(this.attach_SetMenuList), new Action<SetMenuList>(this.detach_SetMenuList));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetMenuCode", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SetMenuCode
		{
			get
			{
				return this._SetMenuCode;
			}
			set
			{
				if ((this._SetMenuCode != value))
				{
					this.OnSetMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._SetMenuCode = value;
					this.SendPropertyChanged("SetMenuCode");
					this.OnSetMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetMenuName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SetMenuName
		{
			get
			{
				return this._SetMenuName;
			}
			set
			{
				if ((this._SetMenuName != value))
				{
					this.OnSetMenuNameChanging(value);
					this.SendPropertyChanging();
					this._SetMenuName = value;
					this.SendPropertyChanged("SetMenuName");
					this.OnSetMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SetMenu_SetMenuList", Storage="_SetMenuList", ThisKey="SetMenuCode", OtherKey="SetMenuCode")]
		public EntitySet<SetMenuList> SetMenuList
		{
			get
			{
				return this._SetMenuList;
			}
			set
			{
				this._SetMenuList.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_SetMenu", Storage="_Company", ThisKey="CompanyCode", OtherKey="CompanyCode", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.SetMenu.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.SetMenu.Add(this);
						this._CompanyCode = value.CompanyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.SetMenu = this;
		}
		
		private void detach_SetMenuList(SetMenuList entity)
		{
			this.SendPropertyChanging();
			entity.SetMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarInventoryInProcess")]
	public partial class V_CarInventoryInProcess
	{
		
		private string _DepartmentCode;
		
		private System.Nullable<System.DateTime> _InventoryMonth;
		
		private string _InventoryStatus;
		
		private string _SalesCarId;
		
		private string _CarGradeCode;
		
		private string _Vin;
		
		private string _CarStatus;
		
		private string _LocationCode;
		
		private System.Nullable<System.Guid> _InventoryId;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _DifferentialQuantity;
		
		private string _LocationName;
		
		private string _CarGradeName;
		
		private string _CarCode;
		
		private string _CarName;
		
		private string _CarBrandCode;
		
		private string _CarBrandName;
		
		private string _MakerCode;
		
		private string _MakerName;
		
		private string _CarStatusName;
		
		public V_CarInventoryInProcess()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime")]
		public System.Nullable<System.DateTime> InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this._InventoryStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarId", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarId;
			}
			set
			{
				if ((this._SalesCarId != value))
				{
					this._SalesCarId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this._CarGradeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatus
		{
			get
			{
				return this._CarStatus;
			}
			set
			{
				if ((this._CarStatus != value))
				{
					this._CarStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this._InventoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferentialQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> DifferentialQuantity
		{
			get
			{
				return this._DifferentialQuantity;
			}
			set
			{
				if ((this._DifferentialQuantity != value))
				{
					this._DifferentialQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this._CarCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					this._CarBrandCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this._MakerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatusName
		{
			get
			{
				return this._CarStatusName;
			}
			set
			{
				if ((this._CarStatusName != value))
				{
					this._CarStatusName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SetMenuList")]
	public partial class SetMenuList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SetMenuCode;
		
		private int _DetailsNumber;
		
		private string _ServiceType;
		
		private string _ServiceWorkCode;
		
		private string _ServiceMenuCode;
		
		private string _PartsNumber;
		
		private string _Comment;
		
		private string _WorkType;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _AutoSetAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<SetMenu> _SetMenu;
		
		private EntityRef<c_ServiceType> _c_ServiceType;
		
		private EntityRef<ServiceWork> _ServiceWork;
		
		private EntityRef<ServiceMenu> _ServiceMenu;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<c_WorkType> _c_WorkType;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetMenuCodeChanging(string value);
    partial void OnSetMenuCodeChanged();
    partial void OnDetailsNumberChanging(int value);
    partial void OnDetailsNumberChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnServiceWorkCodeChanging(string value);
    partial void OnServiceWorkCodeChanged();
    partial void OnServiceMenuCodeChanging(string value);
    partial void OnServiceMenuCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnWorkTypeChanging(string value);
    partial void OnWorkTypeChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnAutoSetAmountChanging(string value);
    partial void OnAutoSetAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public SetMenuList()
		{
			this._SetMenu = default(EntityRef<SetMenu>);
			this._c_ServiceType = default(EntityRef<c_ServiceType>);
			this._ServiceWork = default(EntityRef<ServiceWork>);
			this._ServiceMenu = default(EntityRef<ServiceMenu>);
			this._Parts = default(EntityRef<Parts>);
			this._c_WorkType = default(EntityRef<c_WorkType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetMenuCode", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SetMenuCode
		{
			get
			{
				return this._SetMenuCode;
			}
			set
			{
				if ((this._SetMenuCode != value))
				{
					if (this._SetMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._SetMenuCode = value;
					this.SendPropertyChanged("SetMenuCode");
					this.OnSetMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DetailsNumber
		{
			get
			{
				return this._DetailsNumber;
			}
			set
			{
				if ((this._DetailsNumber != value))
				{
					this.OnDetailsNumberChanging(value);
					this.SendPropertyChanging();
					this._DetailsNumber = value;
					this.SendPropertyChanged("DetailsNumber");
					this.OnDetailsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					if (this._c_ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NChar(11)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					if (this._ServiceWork.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceWorkCode = value;
					this.SendPropertyChanged("ServiceWorkCode");
					this.OnServiceWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceMenuCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceMenuCode
		{
			get
			{
				return this._ServiceMenuCode;
			}
			set
			{
				if ((this._ServiceMenuCode != value))
				{
					if (this._ServiceMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceMenuCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceMenuCode = value;
					this.SendPropertyChanged("ServiceMenuCode");
					this.OnServiceMenuCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkType
		{
			get
			{
				return this._WorkType;
			}
			set
			{
				if ((this._WorkType != value))
				{
					if (this._c_WorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkTypeChanging(value);
					this.SendPropertyChanging();
					this._WorkType = value;
					this.SendPropertyChanged("WorkType");
					this.OnWorkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoSetAmount", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AutoSetAmount
		{
			get
			{
				return this._AutoSetAmount;
			}
			set
			{
				if ((this._AutoSetAmount != value))
				{
					this.OnAutoSetAmountChanging(value);
					this.SendPropertyChanging();
					this._AutoSetAmount = value;
					this.SendPropertyChanged("AutoSetAmount");
					this.OnAutoSetAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SetMenu_SetMenuList", Storage="_SetMenu", ThisKey="SetMenuCode", OtherKey="SetMenuCode", IsForeignKey=true)]
		public SetMenu SetMenu
		{
			get
			{
				return this._SetMenu.Entity;
			}
			set
			{
				SetMenu previousValue = this._SetMenu.Entity;
				if (((previousValue != value) 
							|| (this._SetMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SetMenu.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._SetMenu.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._SetMenuCode = value.SetMenuCode;
					}
					else
					{
						this._SetMenuCode = default(string);
					}
					this.SendPropertyChanged("SetMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_ServiceType_SetMenuList", Storage="_c_ServiceType", ThisKey="ServiceType", OtherKey="Code", IsForeignKey=true)]
		public c_ServiceType c_ServiceType
		{
			get
			{
				return this._c_ServiceType.Entity;
			}
			set
			{
				c_ServiceType previousValue = this._c_ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._c_ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_ServiceType.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._c_ServiceType.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._ServiceType = value.Code;
					}
					else
					{
						this._ServiceType = default(string);
					}
					this.SendPropertyChanged("c_ServiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceWork_SetMenuList", Storage="_ServiceWork", ThisKey="ServiceWorkCode", OtherKey="ServiceWorkCode", IsForeignKey=true)]
		public ServiceWork ServiceWork
		{
			get
			{
				return this._ServiceWork.Entity;
			}
			set
			{
				ServiceWork previousValue = this._ServiceWork.Entity;
				if (((previousValue != value) 
							|| (this._ServiceWork.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceWork.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._ServiceWork.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._ServiceWorkCode = value.ServiceWorkCode;
					}
					else
					{
						this._ServiceWorkCode = default(string);
					}
					this.SendPropertyChanged("ServiceWork");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceMenu_SetMenuList", Storage="_ServiceMenu", ThisKey="ServiceMenuCode", OtherKey="ServiceMenuCode", IsForeignKey=true)]
		public ServiceMenu ServiceMenu
		{
			get
			{
				return this._ServiceMenu.Entity;
			}
			set
			{
				ServiceMenu previousValue = this._ServiceMenu.Entity;
				if (((previousValue != value) 
							|| (this._ServiceMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceMenu.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._ServiceMenu.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._ServiceMenuCode = value.ServiceMenuCode;
					}
					else
					{
						this._ServiceMenuCode = default(string);
					}
					this.SendPropertyChanged("ServiceMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_SetMenuList", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_WorkType_SetMenuList", Storage="_c_WorkType", ThisKey="WorkType", OtherKey="Code", IsForeignKey=true)]
		public c_WorkType c_WorkType
		{
			get
			{
				return this._c_WorkType.Entity;
			}
			set
			{
				c_WorkType previousValue = this._c_WorkType.Entity;
				if (((previousValue != value) 
							|| (this._c_WorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_WorkType.Entity = null;
						previousValue.SetMenuList.Remove(this);
					}
					this._c_WorkType.Entity = value;
					if ((value != null))
					{
						value.SetMenuList.Add(this);
						this._WorkType = value.Code;
					}
					else
					{
						this._WorkType = default(string);
					}
					this.SendPropertyChanged("c_WorkType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarAcquisitionTax")]
	public partial class CarAcquisitionTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarAcquisitionTaxId;
		
		private decimal _ElapsedYears;
		
		private decimal _RemainRate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployee;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarAcquisitionTaxIdChanging(System.Guid value);
    partial void OnCarAcquisitionTaxIdChanged();
    partial void OnElapsedYearsChanging(decimal value);
    partial void OnElapsedYearsChanged();
    partial void OnRemainRateChanging(decimal value);
    partial void OnRemainRateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CarAcquisitionTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarAcquisitionTaxId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarAcquisitionTaxId
		{
			get
			{
				return this._CarAcquisitionTaxId;
			}
			set
			{
				if ((this._CarAcquisitionTaxId != value))
				{
					this.OnCarAcquisitionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._CarAcquisitionTaxId = value;
					this.SendPropertyChanged("CarAcquisitionTaxId");
					this.OnCarAcquisitionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElapsedYears", DbType="Decimal(3,1) NOT NULL")]
		public decimal ElapsedYears
		{
			get
			{
				return this._ElapsedYears;
			}
			set
			{
				if ((this._ElapsedYears != value))
				{
					this.OnElapsedYearsChanging(value);
					this.SendPropertyChanging();
					this._ElapsedYears = value;
					this.SendPropertyChanged("ElapsedYears");
					this.OnElapsedYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainRate", DbType="Decimal(4,3) NOT NULL")]
		public decimal RemainRate
		{
			get
			{
				return this._RemainRate;
			}
			set
			{
				if ((this._RemainRate != value))
				{
					this.OnRemainRateChanging(value);
					this.SendPropertyChanging();
					this._RemainRate = value;
					this.SendPropertyChanged("RemainRate");
					this.OnRemainRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployee", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployee;
			}
			set
			{
				if ((this._LastUpdateEmployee != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployee = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarWeightTax")]
	public partial class CarWeightTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarWeightTaxId;
		
		private decimal _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployee;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private int _InspectionYear;
		
		private int _WeightFrom;
		
		private int _WeightTo;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarWeightTaxIdChanging(System.Guid value);
    partial void OnCarWeightTaxIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnInspectionYearChanging(int value);
    partial void OnInspectionYearChanged();
    partial void OnWeightFromChanging(int value);
    partial void OnWeightFromChanged();
    partial void OnWeightToChanging(int value);
    partial void OnWeightToChanged();
    #endregion
		
		public CarWeightTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTaxId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarWeightTaxId
		{
			get
			{
				return this._CarWeightTaxId;
			}
			set
			{
				if ((this._CarWeightTaxId != value))
				{
					this.OnCarWeightTaxIdChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTaxId = value;
					this.SendPropertyChanged("CarWeightTaxId");
					this.OnCarWeightTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployee", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployee;
			}
			set
			{
				if ((this._LastUpdateEmployee != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployee = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionYear", DbType="Int NOT NULL")]
		public int InspectionYear
		{
			get
			{
				return this._InspectionYear;
			}
			set
			{
				if ((this._InspectionYear != value))
				{
					this.OnInspectionYearChanging(value);
					this.SendPropertyChanging();
					this._InspectionYear = value;
					this.SendPropertyChanged("InspectionYear");
					this.OnInspectionYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightFrom", DbType="Int NOT NULL")]
		public int WeightFrom
		{
			get
			{
				return this._WeightFrom;
			}
			set
			{
				if ((this._WeightFrom != value))
				{
					this.OnWeightFromChanging(value);
					this.SendPropertyChanging();
					this._WeightFrom = value;
					this.SendPropertyChanged("WeightFrom");
					this.OnWeightFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightTo", DbType="Int NOT NULL")]
		public int WeightTo
		{
			get
			{
				return this._WeightTo;
			}
			set
			{
				if ((this._WeightTo != value))
				{
					this.OnWeightToChanging(value);
					this.SendPropertyChanging();
					this._WeightTo = value;
					this.SendPropertyChanged("WeightTo");
					this.OnWeightToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarLiabilityInsurance")]
	public partial class CarLiabilityInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarLiabilityInsuranceId;
		
		private string _CarLiabilityInsuranceName;
		
		private decimal _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployee;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _NewDefaultFlag;
		
		private string _UsedDefaultFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarLiabilityInsuranceIdChanging(System.Guid value);
    partial void OnCarLiabilityInsuranceIdChanged();
    partial void OnCarLiabilityInsuranceNameChanging(string value);
    partial void OnCarLiabilityInsuranceNameChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeChanging(string value);
    partial void OnLastUpdateEmployeeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnNewDefaultFlagChanging(string value);
    partial void OnNewDefaultFlagChanged();
    partial void OnUsedDefaultFlagChanging(string value);
    partial void OnUsedDefaultFlagChanged();
    #endregion
		
		public CarLiabilityInsurance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarLiabilityInsuranceId
		{
			get
			{
				return this._CarLiabilityInsuranceId;
			}
			set
			{
				if ((this._CarLiabilityInsuranceId != value))
				{
					this.OnCarLiabilityInsuranceIdChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceId = value;
					this.SendPropertyChanged("CarLiabilityInsuranceId");
					this.OnCarLiabilityInsuranceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsuranceName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarLiabilityInsuranceName
		{
			get
			{
				return this._CarLiabilityInsuranceName;
			}
			set
			{
				if ((this._CarLiabilityInsuranceName != value))
				{
					this.OnCarLiabilityInsuranceNameChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsuranceName = value;
					this.SendPropertyChanged("CarLiabilityInsuranceName");
					this.OnCarLiabilityInsuranceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployee", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployee
		{
			get
			{
				return this._LastUpdateEmployee;
			}
			set
			{
				if ((this._LastUpdateEmployee != value))
				{
					this.OnLastUpdateEmployeeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployee = value;
					this.SendPropertyChanged("LastUpdateEmployee");
					this.OnLastUpdateEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewDefaultFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewDefaultFlag
		{
			get
			{
				return this._NewDefaultFlag;
			}
			set
			{
				if ((this._NewDefaultFlag != value))
				{
					this.OnNewDefaultFlagChanging(value);
					this.SendPropertyChanging();
					this._NewDefaultFlag = value;
					this.SendPropertyChanged("NewDefaultFlag");
					this.OnNewDefaultFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDefaultFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsedDefaultFlag
		{
			get
			{
				return this._UsedDefaultFlag;
			}
			set
			{
				if ((this._UsedDefaultFlag != value))
				{
					this.OnUsedDefaultFlagChanging(value);
					this.SendPropertyChanging();
					this._UsedDefaultFlag = value;
					this.SendPropertyChanged("UsedDefaultFlag");
					this.OnUsedDefaultFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_VehicleType")]
	public partial class c_VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarGrade> _CarGrade;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_VehicleType()
		{
			this._CarGrade = new EntitySet<CarGrade>(new Action<CarGrade>(this.attach_CarGrade), new Action<CarGrade>(this.detach_CarGrade));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_VehicleType_CarGrade", Storage="_CarGrade", ThisKey="Code", OtherKey="VehicleType")]
		public EntitySet<CarGrade> CarGrade
		{
			get
			{
				return this._CarGrade;
			}
			set
			{
				this._CarGrade.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_VehicleType = this;
		}
		
		private void detach_CarGrade(CarGrade entity)
		{
			this.SendPropertyChanging();
			entity.c_VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarTax")]
	public partial class CarTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CarTaxId;
		
		private string _CarTaxName;
		
		private decimal _FromDisplacement;
		
		private decimal _ToDisplacement;
		
		private decimal _Amount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployee;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<int> _RegistMonth;
		
		private System.DateTime _FromAvailableDate;
		
		private System.DateTime _ToAvailableDate;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarTaxIdChanging(System.Guid value);
    partial void OnCarTaxIdChanged();
    partial void OnCarTaxNameChanging(string value);
    partial void OnCarTaxNameChanged();
    partial void OnFromDisplacementChanging(decimal value);
    partial void OnFromDisplacementChanged();
    partial void OnToDisplacementChanging(decimal value);
    partial void OnToDisplacementChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnRegistMonthChanging(System.Nullable<int> value);
    partial void OnRegistMonthChanged();
    partial void OnFromAvailableDateChanging(System.DateTime value);
    partial void OnFromAvailableDateChanged();
    partial void OnToAvailableDateChanging(System.DateTime value);
    partial void OnToAvailableDateChanged();
    #endregion
		
		public CarTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CarTaxId
		{
			get
			{
				return this._CarTaxId;
			}
			set
			{
				if ((this._CarTaxId != value))
				{
					this.OnCarTaxIdChanging(value);
					this.SendPropertyChanging();
					this._CarTaxId = value;
					this.SendPropertyChanged("CarTaxId");
					this.OnCarTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarTaxName
		{
			get
			{
				return this._CarTaxName;
			}
			set
			{
				if ((this._CarTaxName != value))
				{
					this.OnCarTaxNameChanging(value);
					this.SendPropertyChanging();
					this._CarTaxName = value;
					this.SendPropertyChanged("CarTaxName");
					this.OnCarTaxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDisplacement", DbType="Decimal(10,2) NOT NULL")]
		public decimal FromDisplacement
		{
			get
			{
				return this._FromDisplacement;
			}
			set
			{
				if ((this._FromDisplacement != value))
				{
					this.OnFromDisplacementChanging(value);
					this.SendPropertyChanging();
					this._FromDisplacement = value;
					this.SendPropertyChanged("FromDisplacement");
					this.OnFromDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDisplacement", DbType="Decimal(10,2) NOT NULL")]
		public decimal ToDisplacement
		{
			get
			{
				return this._ToDisplacement;
			}
			set
			{
				if ((this._ToDisplacement != value))
				{
					this.OnToDisplacementChanging(value);
					this.SendPropertyChanging();
					this._ToDisplacement = value;
					this.SendPropertyChanged("ToDisplacement");
					this.OnToDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployee", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployee;
			}
			set
			{
				if ((this._LastUpdateEmployee != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployee = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistMonth", DbType="Int")]
		public System.Nullable<int> RegistMonth
		{
			get
			{
				return this._RegistMonth;
			}
			set
			{
				if ((this._RegistMonth != value))
				{
					this.OnRegistMonthChanging(value);
					this.SendPropertyChanging();
					this._RegistMonth = value;
					this.SendPropertyChanged("RegistMonth");
					this.OnRegistMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAvailableDate", DbType="Date")]
		public System.DateTime FromAvailableDate
		{
			get
			{
				return this._FromAvailableDate;
			}
			set
			{
				if ((this._FromAvailableDate != value))
				{
					this.OnFromAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._FromAvailableDate = value;
					this.SendPropertyChanged("FromAvailableDate");
					this.OnFromAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAvailableDate", DbType="Date")]
		public System.DateTime ToAvailableDate
		{
			get
			{
				return this._ToAvailableDate;
			}
			set
			{
				if ((this._ToAvailableDate != value))
				{
					this.OnToAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._ToAvailableDate = value;
					this.SendPropertyChanged("ToAvailableDate");
					this.OnToAvailableDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarSummary")]
	public partial class V_CarSummary
	{
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _CompanyCode;
		
		private string _CompanyName;
		
		private string _OfficeCode;
		
		private string _OfficeName;
		
		private string _DepartmentName;
		
		private string _DepartmentCode;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private string _SalesOrderStatus;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private string _CustomerName;
		
		private string _EmployeeName;
		
		public V_CarSummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL")]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this._RevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlipDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this._SlipDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesOrderStatus
		{
			get
			{
				return this._SalesOrderStatus;
			}
			set
			{
				if ((this._SalesOrderStatus != value))
				{
					this._SalesOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this._GrandTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ServiceSummary")]
	public partial class V_ServiceSummary
	{
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _CompanyCode;
		
		private string _CompanyName;
		
		private string _OfficeCode;
		
		private string _OfficeName;
		
		private string _DepartmentName;
		
		private string _DepartmentCode;
		
		private System.Nullable<System.DateTime> _QuoteDate;
		
		private string _ServiceOrderStatus;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private string _CustomerName;
		
		private string _EmployeeName;
		
		public V_ServiceSummary()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL")]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this._RevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this._CompanyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this._QuoteDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					this._ServiceOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlipDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this._SlipDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this._GrandTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_SchemaInfo")]
	public partial class V_SchemaInfo
	{
		
		private string _TableName;
		
		private string _ColumnName;
		
		private object _JpName;
		
		private string _DataType;
		
		private string _MaximumLength;
		
		private int _IsPK;
		
		private int _IsNullable;
		
		private System.Nullable<int> _IsIdentity;
		
		private System.Nullable<byte> _NumericPrecision;
		
		private System.Nullable<int> _NumericScale;
		
		public V_SchemaInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(128)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JpName", DbType="Variant", UpdateCheck=UpdateCheck.Never)]
		public object JpName
		{
			get
			{
				return this._JpName;
			}
			set
			{
				if ((this._JpName != value))
				{
					this._JpName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(128)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this._DataType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumLength", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MaximumLength
		{
			get
			{
				return this._MaximumLength;
			}
			set
			{
				if ((this._MaximumLength != value))
				{
					this._MaximumLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPK", DbType="Int NOT NULL")]
		public int IsPK
		{
			get
			{
				return this._IsPK;
			}
			set
			{
				if ((this._IsPK != value))
				{
					this._IsPK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNullable", DbType="Int NOT NULL")]
		public int IsNullable
		{
			get
			{
				return this._IsNullable;
			}
			set
			{
				if ((this._IsNullable != value))
				{
					this._IsNullable = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIdentity", DbType="Int")]
		public System.Nullable<int> IsIdentity
		{
			get
			{
				return this._IsIdentity;
			}
			set
			{
				if ((this._IsIdentity != value))
				{
					this._IsIdentity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumericPrecision", DbType="TinyInt")]
		public System.Nullable<byte> NumericPrecision
		{
			get
			{
				return this._NumericPrecision;
			}
			set
			{
				if ((this._NumericPrecision != value))
				{
					this._NumericPrecision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumericScale", DbType="Int")]
		public System.Nullable<int> NumericScale
		{
			get
			{
				return this._NumericScale;
			}
			set
			{
				if ((this._NumericScale != value))
				{
					this._NumericScale = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CorporationType")]
	public partial class c_CorporationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CorporationType()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CorporationType_Customer", Storage="_Customer", ThisKey="Code", OtherKey="CorporationType")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CorporationType = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.c_CorporationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_RegistMonth")]
	public partial class c_RegistMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_RegistMonth()
		{
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_RegistMonth_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="Code", OtherKey="RegistMonth")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_RegistMonth = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_RegistMonth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Firm")]
	public partial class c_Firm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarPurchaseOrder> _CarPurchaseOrder;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Firm()
		{
			this._CarPurchaseOrder = new EntitySet<CarPurchaseOrder>(new Action<CarPurchaseOrder>(this.attach_CarPurchaseOrder), new Action<CarPurchaseOrder>(this.detach_CarPurchaseOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Firm_CarPurchaseOrder", Storage="_CarPurchaseOrder", ThisKey="Code", OtherKey="Firm")]
		public EntitySet<CarPurchaseOrder> CarPurchaseOrder
		{
			get
			{
				return this._CarPurchaseOrder;
			}
			set
			{
				this._CarPurchaseOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_Firm = this;
		}
		
		private void detach_CarPurchaseOrder(CarPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.c_Firm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_EraseRegist")]
	public partial class c_EraseRegist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<SalesCar> _SalesCar;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader1;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader2;
		
		private EntitySet<CarAppraisal> _CarAppraisal;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_EraseRegist()
		{
			this._SalesCar = new EntitySet<SalesCar>(new Action<SalesCar>(this.attach_SalesCar), new Action<SalesCar>(this.detach_SalesCar));
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._CarSalesHeader1 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader1), new Action<CarSalesHeader>(this.detach_CarSalesHeader1));
			this._CarSalesHeader2 = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader2), new Action<CarSalesHeader>(this.detach_CarSalesHeader2));
			this._CarAppraisal = new EntitySet<CarAppraisal>(new Action<CarAppraisal>(this.attach_CarAppraisal), new Action<CarAppraisal>(this.detach_CarAppraisal));
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_SalesCar", Storage="_SalesCar", ThisKey="Code", OtherKey="EraseRegist")]
		public EntitySet<SalesCar> SalesCar
		{
			get
			{
				return this._SalesCar;
			}
			set
			{
				this._SalesCar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="Code", OtherKey="TradeInEraseRegist1")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader1", Storage="_CarSalesHeader1", ThisKey="Code", OtherKey="TradeInEraseRegist2")]
		public EntitySet<CarSalesHeader> CarSalesHeader1
		{
			get
			{
				return this._CarSalesHeader1;
			}
			set
			{
				this._CarSalesHeader1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarSalesHeader2", Storage="_CarSalesHeader2", ThisKey="Code", OtherKey="TradeInEraseRegist3")]
		public EntitySet<CarSalesHeader> CarSalesHeader2
		{
			get
			{
				return this._CarSalesHeader2;
			}
			set
			{
				this._CarSalesHeader2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarAppraisal", Storage="_CarAppraisal", ThisKey="Code", OtherKey="EraseRegist")]
		public EntitySet<CarAppraisal> CarAppraisal
		{
			get
			{
				return this._CarAppraisal;
			}
			set
			{
				this._CarAppraisal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_EraseRegist_CarPurchase", Storage="_CarPurchase", ThisKey="Code", OtherKey="EraseRegist")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = this;
		}
		
		private void detach_SalesCar(SalesCar entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = null;
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = null;
		}
		
		private void attach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist1 = this;
		}
		
		private void detach_CarSalesHeader1(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist1 = null;
		}
		
		private void attach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist2 = this;
		}
		
		private void detach_CarSalesHeader2(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist2 = null;
		}
		
		private void attach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = this;
		}
		
		private void detach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = null;
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_EraseRegist = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_AccountUsageType")]
	public partial class c_AccountUsageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Account> _Account;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_AccountUsageType()
		{
			this._Account = new EntitySet<Account>(new Action<Account>(this.attach_Account), new Action<Account>(this.detach_Account));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_AccountUsageType_Account", Storage="_Account", ThisKey="Code", OtherKey="UsageType")]
		public EntitySet<Account> Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				this._Account.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Account(Account entity)
		{
			this.SendPropertyChanging();
			entity.c_AccountUsageType = this;
		}
		
		private void detach_Account(Account entity)
		{
			this.SendPropertyChanging();
			entity.c_AccountUsageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsAverageCost")]
	public partial class PartsAverageCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyCode;
		
		private System.DateTime _CloseMonth;
		
		private string _PartsNumber;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _CloseDateTime;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private string _DelFlag;
		
		private EntityRef<Parts> _Parts;
		
		private EntityRef<Company> _Company;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCloseMonthChanging(System.DateTime value);
    partial void OnCloseMonthChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCloseDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCloseDateTimeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public PartsAverageCost()
		{
			this._Parts = default(EntityRef<Parts>);
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					if (this._Parts.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseDateTime
		{
			get
			{
				return this._CloseDateTime;
			}
			set
			{
				if ((this._CloseDateTime != value))
				{
					this.OnCloseDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CloseDateTime = value;
					this.SendPropertyChanged("CloseDateTime");
					this.OnCloseDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Parts_PartsAverageCost", Storage="_Parts", ThisKey="PartsNumber", OtherKey="PartsNumber", IsForeignKey=true)]
		public Parts Parts
		{
			get
			{
				return this._Parts.Entity;
			}
			set
			{
				Parts previousValue = this._Parts.Entity;
				if (((previousValue != value) 
							|| (this._Parts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parts.Entity = null;
						previousValue.PartsAverageCost.Remove(this);
					}
					this._Parts.Entity = value;
					if ((value != null))
					{
						value.PartsAverageCost.Add(this);
						this._PartsNumber = value.PartsNumber;
					}
					else
					{
						this._PartsNumber = default(string);
					}
					this.SendPropertyChanged("Parts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_PartsAverageCost", Storage="_Company", ThisKey="CompanyCode", OtherKey="CompanyCode", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.PartsAverageCost = null;
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.PartsAverageCost = this;
						this._CompanyCode = value.CompanyCode;
					}
					else
					{
						this._CompanyCode = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashAccount")]
	public partial class CashAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OfficeCode;
		
		private string _CashAccountCode;
		
		private string _CashAccountName;
		
		private string _CashAccountNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _NonCloseTarget;
		
		private EntitySet<Journal> _Journal;
		
		private EntitySet<CashBalance> _CashBalance;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeCodeChanging(string value);
    partial void OnOfficeCodeChanged();
    partial void OnCashAccountCodeChanging(string value);
    partial void OnCashAccountCodeChanged();
    partial void OnCashAccountNameChanging(string value);
    partial void OnCashAccountNameChanged();
    partial void OnCashAccountNumberChanging(string value);
    partial void OnCashAccountNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnNonCloseTargetChanging(string value);
    partial void OnNonCloseTargetChanged();
    #endregion
		
		public CashAccount()
		{
			this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
			this._CashBalance = new EntitySet<CashBalance>(new Action<CashBalance>(this.attach_CashBalance), new Action<CashBalance>(this.detach_CashBalance));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this.OnOfficeCodeChanging(value);
					this.SendPropertyChanging();
					this._OfficeCode = value;
					this.SendPropertyChanged("OfficeCode");
					this.OnOfficeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this.OnCashAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._CashAccountCode = value;
					this.SendPropertyChanged("CashAccountCode");
					this.OnCashAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountName
		{
			get
			{
				return this._CashAccountName;
			}
			set
			{
				if ((this._CashAccountName != value))
				{
					this.OnCashAccountNameChanging(value);
					this.SendPropertyChanging();
					this._CashAccountName = value;
					this.SendPropertyChanged("CashAccountName");
					this.OnCashAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountNumber
		{
			get
			{
				return this._CashAccountNumber;
			}
			set
			{
				if ((this._CashAccountNumber != value))
				{
					this.OnCashAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._CashAccountNumber = value;
					this.SendPropertyChanged("CashAccountNumber");
					this.OnCashAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonCloseTarget", DbType="nvarchar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NonCloseTarget
		{
			get
			{
				return this._NonCloseTarget;
			}
			set
			{
				if ((this._NonCloseTarget != value))
				{
					this.OnNonCloseTargetChanging(value);
					this.SendPropertyChanging();
					this._NonCloseTarget = value;
					this.SendPropertyChanged("NonCloseTarget");
					this.OnNonCloseTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashAccount_Journal", Storage="_Journal", ThisKey="OfficeCode,CashAccountCode", OtherKey="OfficeCode,CashAccountCode")]
		public EntitySet<Journal> Journal
		{
			get
			{
				return this._Journal;
			}
			set
			{
				this._Journal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashAccount_CashBalance", Storage="_CashBalance", ThisKey="OfficeCode,CashAccountCode", OtherKey="OfficeCode,CashAccountCode")]
		public EntitySet<CashBalance> CashBalance
		{
			get
			{
				return this._CashBalance;
			}
			set
			{
				this._CashBalance.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.CashAccount = this;
		}
		
		private void detach_Journal(Journal entity)
		{
			this.SendPropertyChanging();
			entity.CashAccount = null;
		}
		
		private void attach_CashBalance(CashBalance entity)
		{
			this.SendPropertyChanging();
			entity.CashAccount = this;
		}
		
		private void detach_CashBalance(CashBalance entity)
		{
			this.SendPropertyChanging();
			entity.CashAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerUpdateLog")]
	public partial class CustomerUpdateLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CustomerUpdateLogId;
		
		private string _CustomerCode;
		
		private string _UpdateColumn;
		
		private string _UpdateValueFrom;
		
		private string _UpdateValueTo;
		
		private string _UpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerUpdateLogIdChanging(System.Guid value);
    partial void OnCustomerUpdateLogIdChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnUpdateColumnChanging(string value);
    partial void OnUpdateColumnChanged();
    partial void OnUpdateValueFromChanging(string value);
    partial void OnUpdateValueFromChanged();
    partial void OnUpdateValueToChanging(string value);
    partial void OnUpdateValueToChanged();
    partial void OnUpdateEmployeeCodeChanging(string value);
    partial void OnUpdateEmployeeCodeChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public CustomerUpdateLog()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerUpdateLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CustomerUpdateLogId
		{
			get
			{
				return this._CustomerUpdateLogId;
			}
			set
			{
				if ((this._CustomerUpdateLogId != value))
				{
					this.OnCustomerUpdateLogIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerUpdateLogId = value;
					this.SendPropertyChanged("CustomerUpdateLogId");
					this.OnCustomerUpdateLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateColumn", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UpdateColumn
		{
			get
			{
				return this._UpdateColumn;
			}
			set
			{
				if ((this._UpdateColumn != value))
				{
					this.OnUpdateColumnChanging(value);
					this.SendPropertyChanging();
					this._UpdateColumn = value;
					this.SendPropertyChanged("UpdateColumn");
					this.OnUpdateColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateValueFrom", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UpdateValueFrom
		{
			get
			{
				return this._UpdateValueFrom;
			}
			set
			{
				if ((this._UpdateValueFrom != value))
				{
					this.OnUpdateValueFromChanging(value);
					this.SendPropertyChanging();
					this._UpdateValueFrom = value;
					this.SendPropertyChanged("UpdateValueFrom");
					this.OnUpdateValueFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateValueTo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UpdateValueTo
		{
			get
			{
				return this._UpdateValueTo;
			}
			set
			{
				if ((this._UpdateValueTo != value))
				{
					this.OnUpdateValueToChanging(value);
					this.SendPropertyChanging();
					this._UpdateValueTo = value;
					this.SendPropertyChanged("UpdateValueTo");
					this.OnUpdateValueToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UpdateEmployeeCode
		{
			get
			{
				return this._UpdateEmployeeCode;
			}
			set
			{
				if ((this._UpdateEmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._UpdateEmployeeCode = value;
					this.SendPropertyChanged("UpdateEmployeeCode");
					this.OnUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerUpdateLog", Storage="_Customer", ThisKey="CustomerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerUpdateLog.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerUpdateLog.Add(this);
						this._CustomerCode = value.CustomerCode;
					}
					else
					{
						this._CustomerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CustomerUpdateLog", Storage="_Employee", ThisKey="UpdateEmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CustomerUpdateLog.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CustomerUpdateLog.Add(this);
						this._UpdateEmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._UpdateEmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ServiceReceiptionHistory")]
	public partial class V_ServiceReceiptionHistory
	{
		
		private string _CustomerCode;
		
		private string _SalesCarNumber;
		
		private string _SlipNumber;
		
		private System.Nullable<System.DateTime> _ReceiptionDate;
		
		private string _ReceiptionStatus;
		
		private string _ReceiptionType;
		
		private string _VisitOpportunity;
		
		private string _RequestDetail;
		
		private string _EmployeeName;
		
		public V_ServiceReceiptionHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiptionDate
		{
			get
			{
				return this._ReceiptionDate;
			}
			set
			{
				if ((this._ReceiptionDate != value))
				{
					this._ReceiptionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionStatus", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionStatus
		{
			get
			{
				return this._ReceiptionStatus;
			}
			set
			{
				if ((this._ReceiptionStatus != value))
				{
					this._ReceiptionStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptionType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionType
		{
			get
			{
				return this._ReceiptionType;
			}
			set
			{
				if ((this._ReceiptionType != value))
				{
					this._ReceiptionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitOpportunity", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string VisitOpportunity
		{
			get
			{
				return this._VisitOpportunity;
			}
			set
			{
				if ((this._VisitOpportunity != value))
				{
					this._VisitOpportunity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDetail", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestDetail
		{
			get
			{
				return this._RequestDetail;
			}
			set
			{
				if ((this._RequestDetail != value))
				{
					this._RequestDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarPurchaseType")]
	public partial class c_CarPurchaseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarPurchase> _CarPurchase;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarPurchaseType()
		{
			this._CarPurchase = new EntitySet<CarPurchase>(new Action<CarPurchase>(this.attach_CarPurchase), new Action<CarPurchase>(this.detach_CarPurchase));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CarPurchaseType_CarPurchase", Storage="_CarPurchase", ThisKey="Code", OtherKey="CarPurchaseType")]
		public EntitySet<CarPurchase> CarPurchase
		{
			get
			{
				return this._CarPurchase;
			}
			set
			{
				this._CarPurchase.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_CarPurchaseType = this;
		}
		
		private void detach_CarPurchase(CarPurchase entity)
		{
			this.SendPropertyChanging();
			entity.c_CarPurchaseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_ReceiptType")]
	public partial class c_ReceiptType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _DepositFilter;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDepositFilterChanging(string value);
    partial void OnDepositFilterChanged();
    #endregion
		
		public c_ReceiptType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositFilter", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepositFilter
		{
			get
			{
				return this._DepositFilter;
			}
			set
			{
				if ((this._DepositFilter != value))
				{
					this.OnDepositFilterChanging(value);
					this.SendPropertyChanging();
					this._DepositFilter = value;
					this.SendPropertyChanged("DepositFilter");
					this.OnDepositFilterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CreateEmployeeCode;
		
		private System.DateTime _CreateDate;
		
		private string _Uri;
		
		private string _Controller;
		
		private string _Action;
		
		private string _Message;
		
		private string _KeyData;
		
		private string _Stack;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnControllerChanging(string value);
    partial void OnControllerChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnKeyDataChanging(string value);
    partial void OnKeyDataChanged();
    partial void OnStackChanging(string value);
    partial void OnStackChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Controller", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Controller
		{
			get
			{
				return this._Controller;
			}
			set
			{
				if ((this._Controller != value))
				{
					this.OnControllerChanging(value);
					this.SendPropertyChanging();
					this._Controller = value;
					this.SendPropertyChanged("Controller");
					this.OnControllerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyData", DbType="NVarChar(MAX)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string KeyData
		{
			get
			{
				return this._KeyData;
			}
			set
			{
				if ((this._KeyData != value))
				{
					this.OnKeyDataChanging(value);
					this.SendPropertyChanging();
					this._KeyData = value;
					this.SendPropertyChanged("KeyData");
					this.OnKeyDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stack", DbType="NVarChar(MAX)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Stack
		{
			get
			{
				return this._Stack;
			}
			set
			{
				if ((this._Stack != value))
				{
					this.OnStackChanging(value);
					this.SendPropertyChanging();
					this._Stack = value;
					this.SendPropertyChanged("Stack");
					this.OnStackChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BankCode;
		
		private string _BankName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private string _DelFlag;
		
		private EntitySet<SupplierPayment> _SupplierPayment;
		
		private EntitySet<Branch> _Branch;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Bank()
		{
			this._SupplierPayment = new EntitySet<SupplierPayment>(new Action<SupplierPayment>(this.attach_SupplierPayment), new Action<SupplierPayment>(this.detach_SupplierPayment));
			this._Branch = new EntitySet<Branch>(new Action<Branch>(this.attach_Branch), new Action<Branch>(this.detach_Branch));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_SupplierPayment", Storage="_SupplierPayment", ThisKey="BankCode", OtherKey="BankCode")]
		public EntitySet<SupplierPayment> SupplierPayment
		{
			get
			{
				return this._SupplierPayment;
			}
			set
			{
				this._SupplierPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Branch", Storage="_Branch", ThisKey="BankCode", OtherKey="BankCode")]
		public EntitySet<Branch> Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				this._Branch.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
		
		private void attach_Branch(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Bank = this;
		}
		
		private void detach_Branch(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Bank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BranchCode;
		
		private string _BankCode;
		
		private string _BranchName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private string _DelFlag;
		
		private EntitySet<SupplierPayment> _SupplierPayment;
		
		private EntityRef<Bank> _Bank;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBankCodeChanging(string value);
    partial void OnBankCodeChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Branch()
		{
			this._SupplierPayment = new EntitySet<SupplierPayment>(new Action<SupplierPayment>(this.attach_SupplierPayment), new Action<SupplierPayment>(this.detach_SupplierPayment));
			this._Bank = default(EntityRef<Bank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCode", DbType="NVarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BankCode
		{
			get
			{
				return this._BankCode;
			}
			set
			{
				if ((this._BankCode != value))
				{
					if (this._Bank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCode = value;
					this.SendPropertyChanged("BankCode");
					this.OnBankCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_SupplierPayment", Storage="_SupplierPayment", ThisKey="BranchCode,BankCode", OtherKey="BranchCode,BankCode")]
		public EntitySet<SupplierPayment> SupplierPayment
		{
			get
			{
				return this._SupplierPayment;
			}
			set
			{
				this._SupplierPayment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bank_Branch", Storage="_Bank", ThisKey="BankCode", OtherKey="BankCode", IsForeignKey=true)]
		public Bank Bank
		{
			get
			{
				return this._Bank.Entity;
			}
			set
			{
				Bank previousValue = this._Bank.Entity;
				if (((previousValue != value) 
							|| (this._Bank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bank.Entity = null;
						previousValue.Branch.Remove(this);
					}
					this._Bank.Entity = value;
					if ((value != null))
					{
						value.Branch.Add(this);
						this._BankCode = value.BankCode;
					}
					else
					{
						this._BankCode = default(string);
					}
					this.SendPropertyChanged("Bank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_SupplierPayment(SupplierPayment entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Fuel")]
	public partial class c_Fuel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CarAppraisal> _CarAppraisal;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Fuel()
		{
			this._CarAppraisal = new EntitySet<CarAppraisal>(new Action<CarAppraisal>(this.attach_CarAppraisal), new Action<CarAppraisal>(this.detach_CarAppraisal));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_Fuel_CarAppraisal", Storage="_CarAppraisal", ThisKey="Code", OtherKey="Fuel")]
		public EntitySet<CarAppraisal> CarAppraisal
		{
			get
			{
				return this._CarAppraisal;
			}
			set
			{
				this._CarAppraisal.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.c_Fuel = this;
		}
		
		private void detach_CarAppraisal(CarAppraisal entity)
		{
			this.SendPropertyChanging();
			entity.c_Fuel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarPurchaseList")]
	public partial class V_CarPurchaseList
	{
		
		private string _RecordType;
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _PurchasePlanDate;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private string _MakerName;
		
		private string _CarName;
		
		private string _EmployeeCode;
		
		private string _EmployeeName;
		
		private string _PurchaseStatus;
		
		private string _PurchaseStatusName;
		
		private string _Vin;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _NewUsedType;
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		public V_CarPurchaseList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordType", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecordType
		{
			get
			{
				return this._RecordType;
			}
			set
			{
				if ((this._RecordType != value))
				{
					this._RecordType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchasePlanDate
		{
			get
			{
				return this._PurchasePlanDate;
			}
			set
			{
				if ((this._PurchasePlanDate != value))
				{
					this._PurchasePlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlipDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this._SlipDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this._EmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					this._PurchaseStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatusName", DbType="VarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatusName
		{
			get
			{
				return this._PurchaseStatusName;
			}
			set
			{
				if ((this._PurchaseStatusName != value))
				{
					this._PurchaseStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_BusinessType")]
	public partial class c_BusinessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<Department> _Department;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_BusinessType()
		{
			this._Department = new EntitySet<Department>(new Action<Department>(this.attach_Department), new Action<Department>(this.detach_Department));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_BusinessType_Department", Storage="_Department", ThisKey="Code", OtherKey="BusinessType")]
		public EntitySet<Department> Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				this._Department.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.c_BusinessType = this;
		}
		
		private void detach_Department(Department entity)
		{
			this.SendPropertyChanging();
			entity.c_BusinessType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarAvailableColor")]
	public partial class CarAvailableColor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CarGradeCode;
		
		private string _CarColorCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<CarColor> _CarColor;
		
		private EntityRef<CarGrade> _CarGrade;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnCarColorCodeChanging(string value);
    partial void OnCarColorCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CarAvailableColor()
		{
			this._CarColor = default(EntityRef<CarColor>);
			this._CarGrade = default(EntityRef<CarGrade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					if (this._CarGrade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarColorCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarColorCode
		{
			get
			{
				return this._CarColorCode;
			}
			set
			{
				if ((this._CarColorCode != value))
				{
					if (this._CarColor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarColorCodeChanging(value);
					this.SendPropertyChanging();
					this._CarColorCode = value;
					this.SendPropertyChanged("CarColorCode");
					this.OnCarColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarColor_CarAvailableColor", Storage="_CarColor", ThisKey="CarColorCode", OtherKey="CarColorCode", IsForeignKey=true)]
		public CarColor CarColor
		{
			get
			{
				return this._CarColor.Entity;
			}
			set
			{
				CarColor previousValue = this._CarColor.Entity;
				if (((previousValue != value) 
							|| (this._CarColor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarColor.Entity = null;
						previousValue.CarAvailableColor.Remove(this);
					}
					this._CarColor.Entity = value;
					if ((value != null))
					{
						value.CarAvailableColor.Add(this);
						this._CarColorCode = value.CarColorCode;
					}
					else
					{
						this._CarColorCode = default(string);
					}
					this.SendPropertyChanged("CarColor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CarGrade_CarAvailableColor", Storage="_CarGrade", ThisKey="CarGradeCode", OtherKey="CarGradeCode", IsForeignKey=true)]
		public CarGrade CarGrade
		{
			get
			{
				return this._CarGrade.Entity;
			}
			set
			{
				CarGrade previousValue = this._CarGrade.Entity;
				if (((previousValue != value) 
							|| (this._CarGrade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CarGrade.Entity = null;
						previousValue.CarAvailableColor.Remove(this);
					}
					this._CarGrade.Entity = value;
					if ((value != null))
					{
						value.CarAvailableColor.Add(this);
						this._CarGradeCode = value.CarGradeCode;
					}
					else
					{
						this._CarGradeCode = default(string);
					}
					this.SendPropertyChanged("CarGrade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_OwnershipChangeType")]
	public partial class c_OwnershipChangeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_OwnershipChangeType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AkakuroReason")]
	public partial class AkakuroReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private string _BusinessName;
		
		private string _Reason;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnBusinessNameChanging(string value);
    partial void OnBusinessNameChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public AkakuroReason()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BusinessName
		{
			get
			{
				return this._BusinessName;
			}
			set
			{
				if ((this._BusinessName != value))
				{
					this.OnBusinessNameChanging(value);
					this.SendPropertyChanging();
					this._BusinessName = value;
					this.SendPropertyChanged("BusinessName");
					this.OnBusinessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(1024)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerDM")]
	public partial class CustomerDM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerCode;
		
		private string _CorporationType;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _FirstNameKana;
		
		private string _LastNameKana;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber;
		
		private string _FaxNumber;
		
		private string _Memo;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Customer> _Customer;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCorporationTypeChanging(string value);
    partial void OnCorporationTypeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameKanaChanging(string value);
    partial void OnFirstNameKanaChanged();
    partial void OnLastNameKanaChanging(string value);
    partial void OnLastNameKanaChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnPrefectureChanging(string value);
    partial void OnPrefectureChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnTelNumberChanging(string value);
    partial void OnTelNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CustomerDM()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorporationType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CorporationType
		{
			get
			{
				return this._CorporationType;
			}
			set
			{
				if ((this._CorporationType != value))
				{
					this.OnCorporationTypeChanging(value);
					this.SendPropertyChanging();
					this._CorporationType = value;
					this.SendPropertyChanged("CorporationType");
					this.OnCorporationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstNameKana
		{
			get
			{
				return this._FirstNameKana;
			}
			set
			{
				if ((this._FirstNameKana != value))
				{
					this.OnFirstNameKanaChanging(value);
					this.SendPropertyChanging();
					this._FirstNameKana = value;
					this.SendPropertyChanged("FirstNameKana");
					this.OnFirstNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastNameKana
		{
			get
			{
				return this._LastNameKana;
			}
			set
			{
				if ((this._LastNameKana != value))
				{
					this.OnLastNameKanaChanging(value);
					this.SendPropertyChanging();
					this._LastNameKana = value;
					this.SendPropertyChanged("LastNameKana");
					this.OnLastNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this.OnPrefectureChanging(value);
					this.SendPropertyChanging();
					this._Prefecture = value;
					this.SendPropertyChanged("Prefecture");
					this.OnPrefectureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this.OnTelNumberChanging(value);
					this.SendPropertyChanging();
					this._TelNumber = value;
					this.SendPropertyChanged("TelNumber");
					this.OnTelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CustomerDM", Storage="_Customer", ThisKey="CustomerCode", OtherKey="CustomerCode", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CustomerDM = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CustomerDM = this;
						this._CustomerCode = value.CustomerCode;
					}
					else
					{
						this._CustomerCode = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrintPdfHistory")]
	public partial class PrintPdfHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PdfId;
		
		private string _SlipNumber;
		
		private string _DocName;
		
		private string _FileName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPdfIdChanging(System.Guid value);
    partial void OnPdfIdChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public PrintPdfHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PdfId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PdfId
		{
			get
			{
				return this._PdfId;
			}
			set
			{
				if ((this._PdfId != value))
				{
					this.OnPdfIdChanging(value);
					this.SendPropertyChanging();
					this._PdfId = value;
					this.SendPropertyChanged("PdfId");
					this.OnPdfIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessSessionControl")]
	public partial class ProcessSessionControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProcessSessionId;
		
		private string _TableName;
		
		private string _EmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
		private EntitySet<ServiceSalesHeader> _ServiceSalesHeader;
		
		private EntityRef<Employee> _Employee;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessSessionIdChanging(System.Guid value);
    partial void OnProcessSessionIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public ProcessSessionControl()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			this._ServiceSalesHeader = new EntitySet<ServiceSalesHeader>(new Action<ServiceSalesHeader>(this.attach_ServiceSalesHeader), new Action<ServiceSalesHeader>(this.detach_ServiceSalesHeader));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessSessionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProcessSessionId
		{
			get
			{
				return this._ProcessSessionId;
			}
			set
			{
				if ((this._ProcessSessionId != value))
				{
					this.OnProcessSessionIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessSessionId = value;
					this.SendPropertyChanged("ProcessSessionId");
					this.OnProcessSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessSessionControl_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="ProcessSessionId", OtherKey="ProcessSessionId")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessSessionControl_ServiceSalesHeader", Storage="_ServiceSalesHeader", ThisKey="ProcessSessionId", OtherKey="ProcessSessionId")]
		public EntitySet<ServiceSalesHeader> ServiceSalesHeader
		{
			get
			{
				return this._ServiceSalesHeader;
			}
			set
			{
				this._ServiceSalesHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ProcessSessionControl", Storage="_Employee", ThisKey="EmployeeCode", OtherKey="EmployeeCode", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ProcessSessionControl.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ProcessSessionControl.Add(this);
						this._EmployeeCode = value.EmployeeCode;
					}
					else
					{
						this._EmployeeCode = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ProcessSessionControl = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ProcessSessionControl = null;
		}
		
		private void attach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ProcessSessionControl = this;
		}
		
		private void detach_ServiceSalesHeader(ServiceSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.ProcessSessionControl = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConsumptionTax")]
	public partial class ConsumptionTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ConsumptionTaxId;
		
		private System.DateTime _FromAvailableDate;
		
		private System.DateTime _ToAvailableDate;
		
		private int _Rate;
		
		private string _RateName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsumptionTaxIdChanging(string value);
    partial void OnConsumptionTaxIdChanged();
    partial void OnFromAvailableDateChanging(System.DateTime value);
    partial void OnFromAvailableDateChanged();
    partial void OnToAvailableDateChanging(System.DateTime value);
    partial void OnToAvailableDateChanged();
    partial void OnRateChanging(int value);
    partial void OnRateChanged();
    partial void OnRateNameChanging(string value);
    partial void OnRateNameChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ConsumptionTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumptionTaxId", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConsumptionTaxId
		{
			get
			{
				return this._ConsumptionTaxId;
			}
			set
			{
				if ((this._ConsumptionTaxId != value))
				{
					this.OnConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._ConsumptionTaxId = value;
					this.SendPropertyChanged("ConsumptionTaxId");
					this.OnConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAvailableDate", DbType="date")]
		public System.DateTime FromAvailableDate
		{
			get
			{
				return this._FromAvailableDate;
			}
			set
			{
				if ((this._FromAvailableDate != value))
				{
					this.OnFromAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._FromAvailableDate = value;
					this.SendPropertyChanged("FromAvailableDate");
					this.OnFromAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAvailableDate", DbType="date")]
		public System.DateTime ToAvailableDate
		{
			get
			{
				return this._ToAvailableDate;
			}
			set
			{
				if ((this._ToAvailableDate != value))
				{
					this.OnToAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._ToAvailableDate = value;
					this.SendPropertyChanged("ToAvailableDate");
					this.OnToAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="smallint")]
		public int Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateName", DbType="NVarChar(50)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RateName
		{
			get
			{
				return this._RateName;
			}
			set
			{
				if ((this._RateName != value))
				{
					this.OnRateNameChanging(value);
					this.SendPropertyChanging();
					this._RateName = value;
					this.SendPropertyChanged("RateName");
					this.OnRateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)", CanBeNull=false, UpdateCheck=UpdateCheck.WhenChanged)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="datetime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WV_CarMaster")]
	public partial class WV_CarMaster
	{
		
		private string _MakerCode;
		
		private string _MakerName;
		
		private string _CarBrandCode;
		
		private string _CarBrandName;
		
		private string _CarCode;
		
		private string _CarName;
		
		private string _CarGradeCode;
		
		private string _CarGradeName;
		
		private string _MakerDelFlag;
		
		private string _BrandDelFlag;
		
		private string _CarDelFlag;
		
		private string _GradeDelFlag;
		
		public WV_CarMaster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this._MakerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					this._CarBrandCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this._CarCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this._CarGradeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerDelFlag
		{
			get
			{
				return this._MakerDelFlag;
			}
			set
			{
				if ((this._MakerDelFlag != value))
				{
					this._MakerDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandDelFlag
		{
			get
			{
				return this._BrandDelFlag;
			}
			set
			{
				if ((this._BrandDelFlag != value))
				{
					this._BrandDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarDelFlag
		{
			get
			{
				return this._CarDelFlag;
			}
			set
			{
				if ((this._CarDelFlag != value))
				{
					this._CarDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string GradeDelFlag
		{
			get
			{
				return this._GradeDelFlag;
			}
			set
			{
				if ((this._GradeDelFlag != value))
				{
					this._GradeDelFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Needed")]
	public partial class c_Needed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Needed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CarStockDataType")]
	public partial class c_CarStockDataType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CarStockDataType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CloseMonthControl")]
	public partial class CloseMonthControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CloseMonth;
		
		private string _CloseStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<c_CloseStatus> _c_CloseStatus;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCloseMonthChanging(string value);
    partial void OnCloseMonthChanged();
    partial void OnCloseStatusChanging(string value);
    partial void OnCloseStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CloseMonthControl()
		{
			this._c_CloseStatus = default(EntityRef<c_CloseStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseStatus", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseStatus
		{
			get
			{
				return this._CloseStatus;
			}
			set
			{
				if ((this._CloseStatus != value))
				{
					if (this._c_CloseStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCloseStatusChanging(value);
					this.SendPropertyChanging();
					this._CloseStatus = value;
					this.SendPropertyChanged("CloseStatus");
					this.OnCloseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CloseStatus_CloseMonthControl", Storage="_c_CloseStatus", ThisKey="CloseStatus", OtherKey="Code", IsForeignKey=true)]
		public c_CloseStatus c_CloseStatus
		{
			get
			{
				return this._c_CloseStatus.Entity;
			}
			set
			{
				c_CloseStatus previousValue = this._c_CloseStatus.Entity;
				if (((previousValue != value) 
							|| (this._c_CloseStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._c_CloseStatus.Entity = null;
						previousValue.CloseMonthControl.Remove(this);
					}
					this._c_CloseStatus.Entity = value;
					if ((value != null))
					{
						value.CloseMonthControl.Add(this);
						this._CloseStatus = value.Code;
					}
					else
					{
						this._CloseStatus = default(string);
					}
					this.SendPropertyChanged("c_CloseStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CloseType")]
	public partial class c_CloseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CloseType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Month")]
	public partial class c_Month : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Month()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_Year")]
	public partial class c_Year : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_Year()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsPurchaseHistory")]
	public partial class PartsPurchaseHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PurchaseNumber;
		
		private string _PurchaseOrderNumber;
		
		private string _PurchaseType;
		
		private System.Nullable<System.DateTime> _PurchasePlanDate;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _PurchaseStatus;
		
		private string _SupplierCode;
		
		private string _EmployeeCode;
		
		private string _DepartmentCode;
		
		private string _LocationCode;
		
		private string _PartsNumber;
		
		private decimal _Price;
		
		private System.Nullable<decimal> _Quantity;
		
		private decimal _Amount;
		
		private string _ReceiptNumber;
		
		private string _Memo;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _ServiceSlipNumber;
		
		private int _RevisionNumber;
		
		private string _InvoiceNo;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseNumberChanging(string value);
    partial void OnPurchaseNumberChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnPurchaseTypeChanging(string value);
    partial void OnPurchaseTypeChanged();
    partial void OnPurchasePlanDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchasePlanDateChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnPurchaseStatusChanging(string value);
    partial void OnPurchaseStatusChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnServiceSlipNumberChanging(string value);
    partial void OnServiceSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    #endregion
		
		public PartsPurchaseHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this.OnPurchaseNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNumber = value;
					this.SendPropertyChanged("PurchaseNumber");
					this.OnPurchaseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderNumber = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					this.OnPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseType = value;
					this.SendPropertyChanged("PurchaseType");
					this.OnPurchaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchasePlanDate
		{
			get
			{
				return this._PurchasePlanDate;
			}
			set
			{
				if ((this._PurchasePlanDate != value))
				{
					this.OnPurchasePlanDateChanging(value);
					this.SendPropertyChanging();
					this._PurchasePlanDate = value;
					this.SendPropertyChanged("PurchasePlanDate");
					this.OnPurchasePlanDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					this.OnPurchaseStatusChanging(value);
					this.SendPropertyChanging();
					this._PurchaseStatus = value;
					this.SendPropertyChanged("PurchaseStatus");
					this.OnPurchaseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceSlipNumber
		{
			get
			{
				return this._ServiceSlipNumber;
			}
			set
			{
				if ((this._ServiceSlipNumber != value))
				{
					this.OnServiceSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._ServiceSlipNumber = value;
					this.SendPropertyChanged("ServiceSlipNumber");
					this.OnServiceSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsDiscountRate")]
	public partial class PartsDiscountRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DiscountCode;
		
		private short _SoRate;
		
		private short _EoRate;
		
		private short _Warranty;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountCodeChanging(string value);
    partial void OnDiscountCodeChanged();
    partial void OnSoRateChanging(short value);
    partial void OnSoRateChanged();
    partial void OnEoRateChanging(short value);
    partial void OnEoRateChanged();
    partial void OnWarrantyChanging(short value);
    partial void OnWarrantyChanged();
    #endregion
		
		public PartsDiscountRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DiscountCode
		{
			get
			{
				return this._DiscountCode;
			}
			set
			{
				if ((this._DiscountCode != value))
				{
					this.OnDiscountCodeChanging(value);
					this.SendPropertyChanging();
					this._DiscountCode = value;
					this.SendPropertyChanged("DiscountCode");
					this.OnDiscountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoRate", DbType="SmallInt NOT NULL")]
		public short SoRate
		{
			get
			{
				return this._SoRate;
			}
			set
			{
				if ((this._SoRate != value))
				{
					this.OnSoRateChanging(value);
					this.SendPropertyChanging();
					this._SoRate = value;
					this.SendPropertyChanged("SoRate");
					this.OnSoRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EoRate", DbType="SmallInt NOT NULL")]
		public short EoRate
		{
			get
			{
				return this._EoRate;
			}
			set
			{
				if ((this._EoRate != value))
				{
					this.OnEoRateChanging(value);
					this.SendPropertyChanging();
					this._EoRate = value;
					this.SendPropertyChanged("EoRate");
					this.OnEoRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="SmallInt NOT NULL")]
		public short Warranty
		{
			get
			{
				return this._Warranty;
			}
			set
			{
				if ((this._Warranty != value))
				{
					this.OnWarrantyChanging(value);
					this.SendPropertyChanging();
					this._Warranty = value;
					this.SendPropertyChanged("Warranty");
					this.OnWarrantyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CodeName")]
	public partial class c_CodeName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryCode;
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private string _UseLiseBoxName;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryCodeChanging(string value);
    partial void OnCategoryCodeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnUseLiseBoxNameChanging(string value);
    partial void OnUseLiseBoxNameChanged();
    #endregion
		
		public c_CodeName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this.OnCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._CategoryCode = value;
					this.SendPropertyChanged("CategoryCode");
					this.OnCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseLiseBoxName", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UseLiseBoxName
		{
			get
			{
				return this._UseLiseBoxName;
			}
			set
			{
				if ((this._UseLiseBoxName != value))
				{
					this.OnUseLiseBoxNameChanging(value);
					this.SendPropertyChanging();
					this._UseLiseBoxName = value;
					this.SendPropertyChanged("UseLiseBoxName");
					this.OnUseLiseBoxNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarPurchaseDownload")]
	public partial class V_CarPurchaseDownload
	{
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _CarPurchaseName;
		
		private string _PurchaseStatus;
		
		private string _PurchaseLocationCode;
		
		private string _SalesCarNumber;
		
		private string _LocationName;
		
		private string _DepartmentName;
		
		private string _Name;
		
		private string _Vin;
		
		private string _MakerName;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private string _SupplierName;
		
		private decimal _VehiclePrice;
		
		private decimal _VehicleTax;
		
		private decimal _VehicleAmount;
		
		private decimal _AuctionFeePrice;
		
		private decimal _AuctionFeeTax;
		
		private decimal _AuctionFeeAmount;
		
		private decimal _RecyclePrice;
		
		private decimal _CarTaxAppropriatePrice;
		
		private decimal _CarTaxAppropriateTax;
		
		private decimal _CarTaxAppropriateAmount;
		
		private decimal _Amount;
		
		private decimal _TaxAmount;
		
		private decimal _TotalAmount;
		
		private string _EmployeeName;
		
		private string _CreateEmployeeName;
		
		public V_CarPurchaseDownload()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseName
		{
			get
			{
				return this._CarPurchaseName;
			}
			set
			{
				if ((this._CarPurchaseName != value))
				{
					this._CarPurchaseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					this._PurchaseStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationCode
		{
			get
			{
				return this._PurchaseLocationCode;
			}
			set
			{
				if ((this._PurchaseLocationCode != value))
				{
					this._PurchaseLocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal VehiclePrice
		{
			get
			{
				return this._VehiclePrice;
			}
			set
			{
				if ((this._VehiclePrice != value))
				{
					this._VehiclePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTax", DbType="Decimal(10,0) NOT NULL")]
		public decimal VehicleTax
		{
			get
			{
				return this._VehicleTax;
			}
			set
			{
				if ((this._VehicleTax != value))
				{
					this._VehicleTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal VehicleAmount
		{
			get
			{
				return this._VehicleAmount;
			}
			set
			{
				if ((this._VehicleAmount != value))
				{
					this._VehicleAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeePrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal AuctionFeePrice
		{
			get
			{
				return this._AuctionFeePrice;
			}
			set
			{
				if ((this._AuctionFeePrice != value))
				{
					this._AuctionFeePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeeTax", DbType="Decimal(10,0) NOT NULL")]
		public decimal AuctionFeeTax
		{
			get
			{
				return this._AuctionFeeTax;
			}
			set
			{
				if ((this._AuctionFeeTax != value))
				{
					this._AuctionFeeTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionFeeAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal AuctionFeeAmount
		{
			get
			{
				return this._AuctionFeeAmount;
			}
			set
			{
				if ((this._AuctionFeeAmount != value))
				{
					this._AuctionFeeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecyclePrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal RecyclePrice
		{
			get
			{
				return this._RecyclePrice;
			}
			set
			{
				if ((this._RecyclePrice != value))
				{
					this._RecyclePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriatePrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal CarTaxAppropriatePrice
		{
			get
			{
				return this._CarTaxAppropriatePrice;
			}
			set
			{
				if ((this._CarTaxAppropriatePrice != value))
				{
					this._CarTaxAppropriatePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriateTax", DbType="Decimal(10,0) NOT NULL")]
		public decimal CarTaxAppropriateTax
		{
			get
			{
				return this._CarTaxAppropriateTax;
			}
			set
			{
				if ((this._CarTaxAppropriateTax != value))
				{
					this._CarTaxAppropriateTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTaxAppropriateAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal CarTaxAppropriateAmount
		{
			get
			{
				return this._CarTaxAppropriateAmount;
			}
			set
			{
				if ((this._CarTaxAppropriateAmount != value))
				{
					this._CarTaxAppropriateAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this._TaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeName
		{
			get
			{
				return this._CreateEmployeeName;
			}
			set
			{
				if ((this._CreateEmployeeName != value))
				{
					this._CreateEmployeeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarSalesDownload")]
	public partial class V_CarSalesDownload
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _NewUsedType;
		
		private string _Name;
		
		private string _SlipNumber;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _CustomerName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _EmployeeName;
		
		private decimal _SalesPrice;
		
		private System.Nullable<decimal> _SalesPriceIncTax;
		
		private System.Nullable<decimal> _ShopOptionAmount;
		
		private System.Nullable<decimal> _ShopOptionAmountIncTax;
		
		private decimal _MakerOptionAmount;
		
		private System.Nullable<decimal> _MakerOptionAmountIncTax;
		
		private decimal _AAAmount;
		
		private decimal _AAAmountIncTax;
		
		private decimal _SalesCostTotalAmount;
		
		private System.Nullable<decimal> _SalesCostTotalAmountIncTax;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _DiscountAmountIncTax;
		
		private decimal _OtherCostTotalAmount;
		
		private decimal _TaxFreeTotalAmount;
		
		private decimal _CarLiabilityInsurance;
		
		private decimal _RecycleDeposit;
		
		private decimal _GrandTotalAmount;
		
		private System.Nullable<decimal> _TradeInTotalAmountExcTax;
		
		private decimal _TradeInTotalAmount;
		
		private decimal _TradeInUnexpiredCarTaxTotalAmount;
		
		private decimal _TradeInRemainDebtTotalAmount;
		
		private decimal _TradeInAppropriationTotalAmount;
		
		private string _CarName;
		
		private string _CarBrandName;
		
		private string _BrandStoreCode;
		
		private string _CustomerType;
		
		public V_CarSalesDownload()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0) NOT NULL")]
		public decimal SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this._SalesPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPriceIncTax", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> SalesPriceIncTax
		{
			get
			{
				return this._SalesPriceIncTax;
			}
			set
			{
				if ((this._SalesPriceIncTax != value))
				{
					this._SalesPriceIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ShopOptionAmount
		{
			get
			{
				return this._ShopOptionAmount;
			}
			set
			{
				if ((this._ShopOptionAmount != value))
				{
					this._ShopOptionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmountIncTax", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ShopOptionAmountIncTax
		{
			get
			{
				return this._ShopOptionAmountIncTax;
			}
			set
			{
				if ((this._ShopOptionAmountIncTax != value))
				{
					this._ShopOptionAmountIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal MakerOptionAmount
		{
			get
			{
				return this._MakerOptionAmount;
			}
			set
			{
				if ((this._MakerOptionAmount != value))
				{
					this._MakerOptionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionAmountIncTax", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> MakerOptionAmountIncTax
		{
			get
			{
				return this._MakerOptionAmountIncTax;
			}
			set
			{
				if ((this._MakerOptionAmountIncTax != value))
				{
					this._MakerOptionAmountIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAmount", DbType="Decimal(38,0) NOT NULL")]
		public decimal AAAmount
		{
			get
			{
				return this._AAAmount;
			}
			set
			{
				if ((this._AAAmount != value))
				{
					this._AAAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAmountIncTax", DbType="Decimal(38,0) NOT NULL")]
		public decimal AAAmountIncTax
		{
			get
			{
				return this._AAAmountIncTax;
			}
			set
			{
				if ((this._AAAmountIncTax != value))
				{
					this._AAAmountIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal SalesCostTotalAmount
		{
			get
			{
				return this._SalesCostTotalAmount;
			}
			set
			{
				if ((this._SalesCostTotalAmount != value))
				{
					this._SalesCostTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmountIncTax", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> SalesCostTotalAmountIncTax
		{
			get
			{
				return this._SalesCostTotalAmountIncTax;
			}
			set
			{
				if ((this._SalesCostTotalAmountIncTax != value))
				{
					this._SalesCostTotalAmountIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmountIncTax", DbType="Decimal(13,0)")]
		public System.Nullable<decimal> DiscountAmountIncTax
		{
			get
			{
				return this._DiscountAmountIncTax;
			}
			set
			{
				if ((this._DiscountAmountIncTax != value))
				{
					this._DiscountAmountIncTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCostTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal OtherCostTotalAmount
		{
			get
			{
				return this._OtherCostTotalAmount;
			}
			set
			{
				if ((this._OtherCostTotalAmount != value))
				{
					this._OtherCostTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TaxFreeTotalAmount
		{
			get
			{
				return this._TaxFreeTotalAmount;
			}
			set
			{
				if ((this._TaxFreeTotalAmount != value))
				{
					this._TaxFreeTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0) NOT NULL")]
		public decimal CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this._CarLiabilityInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0) NOT NULL")]
		public decimal RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this._RecycleDeposit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this._GrandTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTotalAmountExcTax", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> TradeInTotalAmountExcTax
		{
			get
			{
				return this._TradeInTotalAmountExcTax;
			}
			set
			{
				if ((this._TradeInTotalAmountExcTax != value))
				{
					this._TradeInTotalAmountExcTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TradeInTotalAmount
		{
			get
			{
				return this._TradeInTotalAmount;
			}
			set
			{
				if ((this._TradeInTotalAmount != value))
				{
					this._TradeInTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTaxTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TradeInUnexpiredCarTaxTotalAmount
		{
			get
			{
				return this._TradeInUnexpiredCarTaxTotalAmount;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTaxTotalAmount != value))
				{
					this._TradeInUnexpiredCarTaxTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebtTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TradeInRemainDebtTotalAmount
		{
			get
			{
				return this._TradeInRemainDebtTotalAmount;
			}
			set
			{
				if ((this._TradeInRemainDebtTotalAmount != value))
				{
					this._TradeInRemainDebtTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriationTotalAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal TradeInAppropriationTotalAmount
		{
			get
			{
				return this._TradeInAppropriationTotalAmount;
			}
			set
			{
				if ((this._TradeInAppropriationTotalAmount != value))
				{
					this._TradeInAppropriationTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this._BrandStoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this._CustomerType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_OfficeSalesDownload")]
	public partial class V_OfficeSalesDownload
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _AccountClassCode;
		
		private string _AccountClassName;
		
		private string _BrandStoreCode;
		
		private System.Nullable<decimal> _ServiceAmount;
		
		private System.Nullable<decimal> _ServiceTaxAmount;
		
		private System.Nullable<decimal> _ServiceTotalAmount;
		
		private System.Nullable<decimal> _PartsAmount;
		
		private System.Nullable<decimal> _PartsTaxAmount;
		
		private System.Nullable<decimal> _PartsTotalAmount;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<decimal> _TotalTaxAmount;
		
		private System.Nullable<decimal> _TotalTotalAmount;
		
		private System.Nullable<decimal> _ServiceCost;
		
		private System.Nullable<decimal> _PartsCost;
		
		private System.Nullable<decimal> _Total;
		
		public V_OfficeSalesDownload()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountClassCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountClassCode
		{
			get
			{
				return this._AccountClassCode;
			}
			set
			{
				if ((this._AccountClassCode != value))
				{
					this._AccountClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountClassName", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountClassName
		{
			get
			{
				return this._AccountClassName;
			}
			set
			{
				if ((this._AccountClassName != value))
				{
					this._AccountClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this._BrandStoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ServiceAmount
		{
			get
			{
				return this._ServiceAmount;
			}
			set
			{
				if ((this._ServiceAmount != value))
				{
					this._ServiceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTaxAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ServiceTaxAmount
		{
			get
			{
				return this._ServiceTaxAmount;
			}
			set
			{
				if ((this._ServiceTaxAmount != value))
				{
					this._ServiceTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTotalAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ServiceTotalAmount
		{
			get
			{
				return this._ServiceTotalAmount;
			}
			set
			{
				if ((this._ServiceTotalAmount != value))
				{
					this._ServiceTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> PartsAmount
		{
			get
			{
				return this._PartsAmount;
			}
			set
			{
				if ((this._PartsAmount != value))
				{
					this._PartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTaxAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> PartsTaxAmount
		{
			get
			{
				return this._PartsTaxAmount;
			}
			set
			{
				if ((this._PartsTaxAmount != value))
				{
					this._PartsTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTotalAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> PartsTotalAmount
		{
			get
			{
				return this._PartsTotalAmount;
			}
			set
			{
				if ((this._PartsTotalAmount != value))
				{
					this._PartsTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this._TotalTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTotalAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TotalTotalAmount
		{
			get
			{
				return this._TotalTotalAmount;
			}
			set
			{
				if ((this._TotalTotalAmount != value))
				{
					this._TotalTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCost", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ServiceCost
		{
			get
			{
				return this._ServiceCost;
			}
			set
			{
				if ((this._ServiceCost != value))
				{
					this._ServiceCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsCost", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> PartsCost
		{
			get
			{
				return this._PartsCost;
			}
			set
			{
				if ((this._PartsCost != value))
				{
					this._PartsCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceiptTransDownload")]
	public partial class V_ReceiptTransDownload
	{
		
		private System.DateTime _JournalDate;
		
		private string _Name;
		
		private string _OfficeId;
		
		private string _OfficeCode;
		
		private string _OfficeName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _SlipNumber;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _CustomerClaimType;
		
		private string _AccountType;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private decimal _Amount;
		
		private string _Summary;
		
		public V_ReceiptTransDownload()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					this._OfficeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimType", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimType
		{
			get
			{
				return this._CustomerClaimType;
			}
			set
			{
				if ((this._CustomerClaimType != value))
				{
					this._CustomerClaimType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this._AccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ServiceSalesDownload")]
	public partial class V_ServiceSalesDownload
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _ServiceId;
		
		private string _WorkType;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _BrandStoreCode;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _AccountClassCode;
		
		private System.Nullable<short> _rate;
		
		private decimal _ServiceAmount;
		
		private decimal _ServiceTaxAmount;
		
		private System.Nullable<decimal> _ServiceTotalAmount;
		
		private decimal _PartsAmount;
		
		private decimal _PartsTaxAmount;
		
		private System.Nullable<decimal> _PartsTotalAmount;
		
		private decimal _TotalAmount;
		
		private decimal _TotalTaxAmount;
		
		private System.Nullable<decimal> _TotalTotalAmount;
		
		private decimal _ServiceCost;
		
		private decimal _PartsCost;
		
		private decimal _Total;
		
		public V_ServiceSalesDownload()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					this._ServiceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkType", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkType
		{
			get
			{
				return this._WorkType;
			}
			set
			{
				if ((this._WorkType != value))
				{
					this._WorkType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this._BrandStoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountClassCode", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountClassCode
		{
			get
			{
				return this._AccountClassCode;
			}
			set
			{
				if ((this._AccountClassCode != value))
				{
					this._AccountClassCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="SmallInt")]
		public System.Nullable<short> rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this._rate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAmount", DbType="Decimal(13,0) NOT NULL")]
		public decimal ServiceAmount
		{
			get
			{
				return this._ServiceAmount;
			}
			set
			{
				if ((this._ServiceAmount != value))
				{
					this._ServiceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTaxAmount", DbType="Decimal(12,0) NOT NULL")]
		public decimal ServiceTaxAmount
		{
			get
			{
				return this._ServiceTaxAmount;
			}
			set
			{
				if ((this._ServiceTaxAmount != value))
				{
					this._ServiceTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTotalAmount", DbType="Decimal(14,0)")]
		public System.Nullable<decimal> ServiceTotalAmount
		{
			get
			{
				return this._ServiceTotalAmount;
			}
			set
			{
				if ((this._ServiceTotalAmount != value))
				{
					this._ServiceTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsAmount", DbType="Decimal(13,0) NOT NULL")]
		public decimal PartsAmount
		{
			get
			{
				return this._PartsAmount;
			}
			set
			{
				if ((this._PartsAmount != value))
				{
					this._PartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTaxAmount", DbType="Decimal(12,0) NOT NULL")]
		public decimal PartsTaxAmount
		{
			get
			{
				return this._PartsTaxAmount;
			}
			set
			{
				if ((this._PartsTaxAmount != value))
				{
					this._PartsTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTotalAmount", DbType="Decimal(14,0)")]
		public System.Nullable<decimal> PartsTotalAmount
		{
			get
			{
				return this._PartsTotalAmount;
			}
			set
			{
				if ((this._PartsTotalAmount != value))
				{
					this._PartsTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(13,0) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTaxAmount", DbType="Decimal(12,0) NOT NULL")]
		public decimal TotalTaxAmount
		{
			get
			{
				return this._TotalTaxAmount;
			}
			set
			{
				if ((this._TotalTaxAmount != value))
				{
					this._TotalTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTotalAmount", DbType="Decimal(14,0)")]
		public System.Nullable<decimal> TotalTotalAmount
		{
			get
			{
				return this._TotalTotalAmount;
			}
			set
			{
				if ((this._TotalTotalAmount != value))
				{
					this._TotalTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCost", DbType="Decimal(10,0) NOT NULL")]
		public decimal ServiceCost
		{
			get
			{
				return this._ServiceCost;
			}
			set
			{
				if ((this._ServiceCost != value))
				{
					this._ServiceCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsCost", DbType="Decimal(10,0) NOT NULL")]
		public decimal PartsCost
		{
			get
			{
				return this._PartsCost;
			}
			set
			{
				if ((this._PartsCost != value))
				{
					this._PartsCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,0) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarSalesJournalReport")]
	public partial class V_CarSalesJournalReport
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _NewUsedType;
		
		private string _DepartmentCode;
		
		private string _BrandStoreCode;
		
		private string _JournalCode;
		
		private string _Mark;
		
		private string _SalesDate2;
		
		private string _DrDepartmentCode;
		
		private string _DrAccountCode;
		
		private string _DrAccountSub;
		
		private System.Nullable<decimal> _DrAmount;
		
		private System.Nullable<decimal> _DrTaxAmount;
		
		private string _Flag1;
		
		private string _DrTaxType;
		
		private string _CrDepartmentCode;
		
		private string _CrAccountCode;
		
		private string _CrAccountSub;
		
		private System.Nullable<decimal> _CrAmount;
		
		private System.Nullable<decimal> _CrTaxAmount;
		
		private string _Flag2;
		
		private string _CrTaxType;
		
		private string _Description;
		
		public V_CarSalesJournalReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this._BrandStoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate2", DbType="VarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesDate2
		{
			get
			{
				return this._SalesDate2;
			}
			set
			{
				if ((this._SalesDate2 != value))
				{
					this._SalesDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrDepartmentCode
		{
			get
			{
				return this._DrDepartmentCode;
			}
			set
			{
				if ((this._DrDepartmentCode != value))
				{
					this._DrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountCode
		{
			get
			{
				return this._DrAccountCode;
			}
			set
			{
				if ((this._DrAccountCode != value))
				{
					this._DrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountSub", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountSub
		{
			get
			{
				return this._DrAccountSub;
			}
			set
			{
				if ((this._DrAccountSub != value))
				{
					this._DrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAmount", DbType="Decimal(21,0)")]
		public System.Nullable<decimal> DrAmount
		{
			get
			{
				return this._DrAmount;
			}
			set
			{
				if ((this._DrAmount != value))
				{
					this._DrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxAmount", DbType="Decimal(14,0)")]
		public System.Nullable<decimal> DrTaxAmount
		{
			get
			{
				return this._DrTaxAmount;
			}
			set
			{
				if ((this._DrTaxAmount != value))
				{
					this._DrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag1", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxType", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrTaxType
		{
			get
			{
				return this._DrTaxType;
			}
			set
			{
				if ((this._DrTaxType != value))
				{
					this._DrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrDepartmentCode
		{
			get
			{
				return this._CrDepartmentCode;
			}
			set
			{
				if ((this._CrDepartmentCode != value))
				{
					this._CrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountCode
		{
			get
			{
				return this._CrAccountCode;
			}
			set
			{
				if ((this._CrAccountCode != value))
				{
					this._CrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountSub", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountSub
		{
			get
			{
				return this._CrAccountSub;
			}
			set
			{
				if ((this._CrAccountSub != value))
				{
					this._CrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAmount", DbType="Decimal(14,0)")]
		public System.Nullable<decimal> CrAmount
		{
			get
			{
				return this._CrAmount;
			}
			set
			{
				if ((this._CrAmount != value))
				{
					this._CrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxAmount", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> CrTaxAmount
		{
			get
			{
				return this._CrTaxAmount;
			}
			set
			{
				if ((this._CrTaxAmount != value))
				{
					this._CrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag2", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Flag2
		{
			get
			{
				return this._Flag2;
			}
			set
			{
				if ((this._Flag2 != value))
				{
					this._Flag2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxType", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrTaxType
		{
			get
			{
				return this._CrTaxType;
			}
			set
			{
				if ((this._CrTaxType != value))
				{
					this._CrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(84)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceiptLoanJournalReport")]
	public partial class V_ReceiptLoanJournalReport
	{
		
		private System.DateTime _JournalDate;
		
		private string _JournalCode;
		
		private string _Mark;
		
		private string _JournalDate2;
		
		private string _DrDepartmentCode;
		
		private string _DrAccountCode;
		
		private string _DrAccountSub;
		
		private System.Nullable<decimal> _DrAmount;
		
		private int _DrTaxAmount;
		
		private int _Flag1;
		
		private int _DrTaxType;
		
		private string _CrDepartmentCode;
		
		private string _CrAccountCode;
		
		private string _CrAccountSub;
		
		private System.Nullable<decimal> _CrAmount;
		
		private int _CrTaxAmount;
		
		private int _Flag2;
		
		private int _CrTaxType;
		
		private string _Description;
		
		public V_ReceiptLoanJournalReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate2", DbType="VarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalDate2
		{
			get
			{
				return this._JournalDate2;
			}
			set
			{
				if ((this._JournalDate2 != value))
				{
					this._JournalDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrDepartmentCode
		{
			get
			{
				return this._DrDepartmentCode;
			}
			set
			{
				if ((this._DrDepartmentCode != value))
				{
					this._DrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountCode
		{
			get
			{
				return this._DrAccountCode;
			}
			set
			{
				if ((this._DrAccountCode != value))
				{
					this._DrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountSub", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountSub
		{
			get
			{
				return this._DrAccountSub;
			}
			set
			{
				if ((this._DrAccountSub != value))
				{
					this._DrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAmount", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> DrAmount
		{
			get
			{
				return this._DrAmount;
			}
			set
			{
				if ((this._DrAmount != value))
				{
					this._DrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxAmount", DbType="Int NOT NULL")]
		public int DrTaxAmount
		{
			get
			{
				return this._DrTaxAmount;
			}
			set
			{
				if ((this._DrTaxAmount != value))
				{
					this._DrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag1", DbType="Int NOT NULL")]
		public int Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxType", DbType="Int NOT NULL")]
		public int DrTaxType
		{
			get
			{
				return this._DrTaxType;
			}
			set
			{
				if ((this._DrTaxType != value))
				{
					this._DrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrDepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrDepartmentCode
		{
			get
			{
				return this._CrDepartmentCode;
			}
			set
			{
				if ((this._CrDepartmentCode != value))
				{
					this._CrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountCode", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountCode
		{
			get
			{
				return this._CrAccountCode;
			}
			set
			{
				if ((this._CrAccountCode != value))
				{
					this._CrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountSub", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountSub
		{
			get
			{
				return this._CrAccountSub;
			}
			set
			{
				if ((this._CrAccountSub != value))
				{
					this._CrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAmount", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> CrAmount
		{
			get
			{
				return this._CrAmount;
			}
			set
			{
				if ((this._CrAmount != value))
				{
					this._CrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxAmount", DbType="Int NOT NULL")]
		public int CrTaxAmount
		{
			get
			{
				return this._CrTaxAmount;
			}
			set
			{
				if ((this._CrTaxAmount != value))
				{
					this._CrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag2", DbType="Int NOT NULL")]
		public int Flag2
		{
			get
			{
				return this._Flag2;
			}
			set
			{
				if ((this._Flag2 != value))
				{
					this._Flag2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxType", DbType="Int NOT NULL")]
		public int CrTaxType
		{
			get
			{
				return this._CrTaxType;
			}
			set
			{
				if ((this._CrTaxType != value))
				{
					this._CrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceiptTransferJournalReport")]
	public partial class V_ReceiptTransferJournalReport
	{
		
		private System.DateTime _JournalDate;
		
		private string _OfficeCode;
		
		private string _OfficeId;
		
		private string _DepartmentCode;
		
		private string _JournalCode;
		
		private string _Mark;
		
		private string _JournalDate2;
		
		private string _DrDepartmentCode;
		
		private string _DrAccountCode;
		
		private System.Nullable<int> _DrAccountSub;
		
		private System.Nullable<decimal> _DrAmount;
		
		private int _DrTaxAmount;
		
		private int _Flag1;
		
		private int _DrTaxType;
		
		private string _CrDepartmentCode;
		
		private string _CrAccountCode;
		
		private string _CrAccountSub;
		
		private System.Nullable<decimal> _CrAmount;
		
		private int _CrTaxAmount;
		
		private int _Flag2;
		
		private int _CrTaxType;
		
		private string _Description;
		
		public V_ReceiptTransferJournalReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					this._OfficeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate2", DbType="VarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalDate2
		{
			get
			{
				return this._JournalDate2;
			}
			set
			{
				if ((this._JournalDate2 != value))
				{
					this._JournalDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrDepartmentCode
		{
			get
			{
				return this._DrDepartmentCode;
			}
			set
			{
				if ((this._DrDepartmentCode != value))
				{
					this._DrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountCode
		{
			get
			{
				return this._DrAccountCode;
			}
			set
			{
				if ((this._DrAccountCode != value))
				{
					this._DrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountSub", DbType="Int")]
		public System.Nullable<int> DrAccountSub
		{
			get
			{
				return this._DrAccountSub;
			}
			set
			{
				if ((this._DrAccountSub != value))
				{
					this._DrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAmount", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> DrAmount
		{
			get
			{
				return this._DrAmount;
			}
			set
			{
				if ((this._DrAmount != value))
				{
					this._DrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxAmount", DbType="Int NOT NULL")]
		public int DrTaxAmount
		{
			get
			{
				return this._DrTaxAmount;
			}
			set
			{
				if ((this._DrTaxAmount != value))
				{
					this._DrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag1", DbType="Int NOT NULL")]
		public int Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxType", DbType="Int NOT NULL")]
		public int DrTaxType
		{
			get
			{
				return this._DrTaxType;
			}
			set
			{
				if ((this._DrTaxType != value))
				{
					this._DrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrDepartmentCode
		{
			get
			{
				return this._CrDepartmentCode;
			}
			set
			{
				if ((this._CrDepartmentCode != value))
				{
					this._CrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountCode", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountCode
		{
			get
			{
				return this._CrAccountCode;
			}
			set
			{
				if ((this._CrAccountCode != value))
				{
					this._CrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountSub", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountSub
		{
			get
			{
				return this._CrAccountSub;
			}
			set
			{
				if ((this._CrAccountSub != value))
				{
					this._CrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAmount", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> CrAmount
		{
			get
			{
				return this._CrAmount;
			}
			set
			{
				if ((this._CrAmount != value))
				{
					this._CrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxAmount", DbType="Int NOT NULL")]
		public int CrTaxAmount
		{
			get
			{
				return this._CrTaxAmount;
			}
			set
			{
				if ((this._CrTaxAmount != value))
				{
					this._CrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag2", DbType="Int NOT NULL")]
		public int Flag2
		{
			get
			{
				return this._Flag2;
			}
			set
			{
				if ((this._Flag2 != value))
				{
					this._Flag2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxType", DbType="Int NOT NULL")]
		public int CrTaxType
		{
			get
			{
				return this._CrTaxType;
			}
			set
			{
				if ((this._CrTaxType != value))
				{
					this._CrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(69)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_UsedCarAutoAuctionJournalReport")]
	public partial class V_UsedCarAutoAuctionJournalReport
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _JournalCode;
		
		private string _DepartmentCode;
		
		private string _Mark;
		
		private string _SalesDate2;
		
		private string _DrDepartmentCode;
		
		private string _DrAccountCode;
		
		private string _DrAccountSub;
		
		private System.Nullable<decimal> _DrAmount;
		
		private System.Nullable<decimal> _DrTaxAmount;
		
		private string _Flag1;
		
		private string _DrTaxType;
		
		private string _CrDepartmentCode;
		
		private string _CrAccountCode;
		
		private string _CrAccountSub;
		
		private System.Nullable<decimal> _CrAmount;
		
		private System.Nullable<decimal> _CrTaxAmount;
		
		private string _Flag2;
		
		private string _CrTaxType;
		
		private string _Description;
		
		public V_UsedCarAutoAuctionJournalReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate2", DbType="VarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesDate2
		{
			get
			{
				return this._SalesDate2;
			}
			set
			{
				if ((this._SalesDate2 != value))
				{
					this._SalesDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrDepartmentCode
		{
			get
			{
				return this._DrDepartmentCode;
			}
			set
			{
				if ((this._DrDepartmentCode != value))
				{
					this._DrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountCode
		{
			get
			{
				return this._DrAccountCode;
			}
			set
			{
				if ((this._DrAccountCode != value))
				{
					this._DrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountSub", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountSub
		{
			get
			{
				return this._DrAccountSub;
			}
			set
			{
				if ((this._DrAccountSub != value))
				{
					this._DrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAmount", DbType="Decimal(17,0)")]
		public System.Nullable<decimal> DrAmount
		{
			get
			{
				return this._DrAmount;
			}
			set
			{
				if ((this._DrAmount != value))
				{
					this._DrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxAmount", DbType="Decimal(13,0)")]
		public System.Nullable<decimal> DrTaxAmount
		{
			get
			{
				return this._DrTaxAmount;
			}
			set
			{
				if ((this._DrTaxAmount != value))
				{
					this._DrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag1", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxType", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrTaxType
		{
			get
			{
				return this._DrTaxType;
			}
			set
			{
				if ((this._DrTaxType != value))
				{
					this._DrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrDepartmentCode
		{
			get
			{
				return this._CrDepartmentCode;
			}
			set
			{
				if ((this._CrDepartmentCode != value))
				{
					this._CrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountCode
		{
			get
			{
				return this._CrAccountCode;
			}
			set
			{
				if ((this._CrAccountCode != value))
				{
					this._CrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountSub", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountSub
		{
			get
			{
				return this._CrAccountSub;
			}
			set
			{
				if ((this._CrAccountSub != value))
				{
					this._CrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAmount", DbType="Decimal(11,0)")]
		public System.Nullable<decimal> CrAmount
		{
			get
			{
				return this._CrAmount;
			}
			set
			{
				if ((this._CrAmount != value))
				{
					this._CrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CrTaxAmount
		{
			get
			{
				return this._CrTaxAmount;
			}
			set
			{
				if ((this._CrTaxAmount != value))
				{
					this._CrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag2", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Flag2
		{
			get
			{
				return this._Flag2;
			}
			set
			{
				if ((this._Flag2 != value))
				{
					this._Flag2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxType", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrTaxType
		{
			get
			{
				return this._CrTaxType;
			}
			set
			{
				if ((this._CrTaxType != value))
				{
					this._CrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(123)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_PettyCashJournalReport")]
	public partial class V_PettyCashJournalReport
	{
		
		private string _OfficeCode;
		
		private string _OfficeId;
		
		private string _CashAccountCode;
		
		private string _JournalCode;
		
		private string _SlipNumber;
		
		private System.Nullable<short> _CarSalesRate;
		
		private System.Nullable<short> _ServiceSalesRate;
		
		private System.DateTime _JournalDate;
		
		private System.Nullable<short> _JournalRate;
		
		private string _Mark;
		
		private string _JournalDate2;
		
		private string _DrDepartmentCode;
		
		private string _DrAccountCode;
		
		private string _DrAccountSub;
		
		private decimal _DrAmount;
		
		private decimal _DrCalcAmount;
		
		private decimal _DrTaxAmount;
		
		private int _Flag1;
		
		private int _DrTaxType;
		
		private string _CrDepartmentCode;
		
		private string _CrAccountCode;
		
		private string _CrAccountSub;
		
		private decimal _CrAmount;
		
		private decimal _CrCalcAmount;
		
		private decimal _CrTaxAmount;
		
		private int _Flag2;
		
		private int _CrTaxType;
		
		private string _Description;
		
		public V_PettyCashJournalReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					this._OfficeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this._CashAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalCode
		{
			get
			{
				return this._JournalCode;
			}
			set
			{
				if ((this._JournalCode != value))
				{
					this._JournalCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSalesRate", DbType="SmallInt")]
		public System.Nullable<short> CarSalesRate
		{
			get
			{
				return this._CarSalesRate;
			}
			set
			{
				if ((this._CarSalesRate != value))
				{
					this._CarSalesRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSalesRate", DbType="SmallInt")]
		public System.Nullable<short> ServiceSalesRate
		{
			get
			{
				return this._ServiceSalesRate;
			}
			set
			{
				if ((this._ServiceSalesRate != value))
				{
					this._ServiceSalesRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalRate", DbType="SmallInt")]
		public System.Nullable<short> JournalRate
		{
			get
			{
				return this._JournalRate;
			}
			set
			{
				if ((this._JournalRate != value))
				{
					this._JournalRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate2", DbType="VarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalDate2
		{
			get
			{
				return this._JournalDate2;
			}
			set
			{
				if ((this._JournalDate2 != value))
				{
					this._JournalDate2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrDepartmentCode
		{
			get
			{
				return this._DrDepartmentCode;
			}
			set
			{
				if ((this._DrDepartmentCode != value))
				{
					this._DrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountCode
		{
			get
			{
				return this._DrAccountCode;
			}
			set
			{
				if ((this._DrAccountCode != value))
				{
					this._DrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAccountSub", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DrAccountSub
		{
			get
			{
				return this._DrAccountSub;
			}
			set
			{
				if ((this._DrAccountSub != value))
				{
					this._DrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal DrAmount
		{
			get
			{
				return this._DrAmount;
			}
			set
			{
				if ((this._DrAmount != value))
				{
					this._DrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrCalcAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal DrCalcAmount
		{
			get
			{
				return this._DrCalcAmount;
			}
			set
			{
				if ((this._DrCalcAmount != value))
				{
					this._DrCalcAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal DrTaxAmount
		{
			get
			{
				return this._DrTaxAmount;
			}
			set
			{
				if ((this._DrTaxAmount != value))
				{
					this._DrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag1", DbType="Int NOT NULL")]
		public int Flag1
		{
			get
			{
				return this._Flag1;
			}
			set
			{
				if ((this._Flag1 != value))
				{
					this._Flag1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrTaxType", DbType="Int NOT NULL")]
		public int DrTaxType
		{
			get
			{
				return this._DrTaxType;
			}
			set
			{
				if ((this._DrTaxType != value))
				{
					this._DrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrDepartmentCode
		{
			get
			{
				return this._CrDepartmentCode;
			}
			set
			{
				if ((this._CrDepartmentCode != value))
				{
					this._CrDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountCode
		{
			get
			{
				return this._CrAccountCode;
			}
			set
			{
				if ((this._CrAccountCode != value))
				{
					this._CrAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAccountSub", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CrAccountSub
		{
			get
			{
				return this._CrAccountSub;
			}
			set
			{
				if ((this._CrAccountSub != value))
				{
					this._CrAccountSub = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal CrAmount
		{
			get
			{
				return this._CrAmount;
			}
			set
			{
				if ((this._CrAmount != value))
				{
					this._CrAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrCalcAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal CrCalcAmount
		{
			get
			{
				return this._CrCalcAmount;
			}
			set
			{
				if ((this._CrCalcAmount != value))
				{
					this._CrCalcAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxAmount", DbType="Decimal(10,0) NOT NULL")]
		public decimal CrTaxAmount
		{
			get
			{
				return this._CrTaxAmount;
			}
			set
			{
				if ((this._CrTaxAmount != value))
				{
					this._CrTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag2", DbType="Int NOT NULL")]
		public int Flag2
		{
			get
			{
				return this._Flag2;
			}
			set
			{
				if ((this._Flag2 != value))
				{
					this._Flag2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrTaxType", DbType="Int NOT NULL")]
		public int CrTaxType
		{
			get
			{
				return this._CrTaxType;
			}
			set
			{
				if ((this._CrTaxType != value))
				{
					this._CrTaxType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(69)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_SalesResult")]
	public partial class V_SalesResult
	{
		
		private string _ServiceSlipNumber;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _CustomerNameKana;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _CarSlipNumber;
		
		private System.Nullable<int> _CarRevisionNumber;
		
		private System.Nullable<System.DateTime> _CarSalesDate;
		
		private System.Nullable<int> _ServiceRevisionNumber;
		
		private System.Nullable<System.DateTime> _ServiceSalesDate;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private string _ModelName;
		
		private string _MorterViecleOfficialCode;
		
		public V_SalesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceSlipNumber
		{
			get
			{
				return this._ServiceSlipNumber;
			}
			set
			{
				if ((this._ServiceSlipNumber != value))
				{
					this._ServiceSlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNameKana", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerNameKana
		{
			get
			{
				return this._CustomerNameKana;
			}
			set
			{
				if ((this._CustomerNameKana != value))
				{
					this._CustomerNameKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarSlipNumber
		{
			get
			{
				return this._CarSlipNumber;
			}
			set
			{
				if ((this._CarSlipNumber != value))
				{
					this._CarSlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarRevisionNumber", DbType="Int")]
		public System.Nullable<int> CarRevisionNumber
		{
			get
			{
				return this._CarRevisionNumber;
			}
			set
			{
				if ((this._CarRevisionNumber != value))
				{
					this._CarRevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarSalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CarSalesDate
		{
			get
			{
				return this._CarSalesDate;
			}
			set
			{
				if ((this._CarSalesDate != value))
				{
					this._CarSalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceRevisionNumber", DbType="Int")]
		public System.Nullable<int> ServiceRevisionNumber
		{
			get
			{
				return this._ServiceRevisionNumber;
			}
			set
			{
				if ((this._ServiceRevisionNumber != value))
				{
					this._ServiceRevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ServiceSalesDate
		{
			get
			{
				return this._ServiceSalesDate;
			}
			set
			{
				if ((this._ServiceSalesDate != value))
				{
					this._ServiceSalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this._RegistrationNumberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this._RegistrationNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this._RegistrationNumberPlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this._MorterViecleOfficialCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackGroundDemoCar")]
	public partial class BackGroundDemoCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DemoCarId;
		
		private string _SlipNumber;
		
		private string _CarPurchaseOrderNumber;
		
		private string _ProcType;
		
		private System.Nullable<System.DateTime> _ProcDate;
		
		private string _LocationCode;
		
		private string _OwnerCode;
		
		private string _UserCode;
		
		private string _CarStatus;
		
		private string _SalesCarNumber;
		
		private string _NewSalesCarNumber;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _InspectGuidFlag;
		
		private string _InspectGuidMemo;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDemoCarIdChanging(System.Guid value);
    partial void OnDemoCarIdChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnCarPurchaseOrderNumberChanging(string value);
    partial void OnCarPurchaseOrderNumberChanged();
    partial void OnProcTypeChanging(string value);
    partial void OnProcTypeChanged();
    partial void OnProcDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcDateChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnCarStatusChanging(string value);
    partial void OnCarStatusChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnNewSalesCarNumberChanging(string value);
    partial void OnNewSalesCarNumberChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnInspectGuidFlagChanging(string value);
    partial void OnInspectGuidFlagChanged();
    partial void OnInspectGuidMemoChanging(string value);
    partial void OnInspectGuidMemoChanged();
    #endregion
		
		public BackGroundDemoCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemoCarId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DemoCarId
		{
			get
			{
				return this._DemoCarId;
			}
			set
			{
				if ((this._DemoCarId != value))
				{
					this.OnDemoCarIdChanging(value);
					this.SendPropertyChanging();
					this._DemoCarId = value;
					this.SendPropertyChanged("DemoCarId");
					this.OnDemoCarIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseOrderNumber
		{
			get
			{
				return this._CarPurchaseOrderNumber;
			}
			set
			{
				if ((this._CarPurchaseOrderNumber != value))
				{
					this.OnCarPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseOrderNumber = value;
					this.SendPropertyChanged("CarPurchaseOrderNumber");
					this.OnCarPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcType", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ProcType
		{
			get
			{
				return this._ProcType;
			}
			set
			{
				if ((this._ProcType != value))
				{
					this.OnProcTypeChanging(value);
					this.SendPropertyChanging();
					this._ProcType = value;
					this.SendPropertyChanged("ProcType");
					this.OnProcTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcDate
		{
			get
			{
				return this._ProcDate;
			}
			set
			{
				if ((this._ProcDate != value))
				{
					this.OnProcDateChanging(value);
					this.SendPropertyChanging();
					this._ProcDate = value;
					this.SendPropertyChanged("ProcDate");
					this.OnProcDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatus
		{
			get
			{
				return this._CarStatus;
			}
			set
			{
				if ((this._CarStatus != value))
				{
					this.OnCarStatusChanging(value);
					this.SendPropertyChanging();
					this._CarStatus = value;
					this.SendPropertyChanged("CarStatus");
					this.OnCarStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewSalesCarNumber", DbType="NChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewSalesCarNumber
		{
			get
			{
				return this._NewSalesCarNumber;
			}
			set
			{
				if ((this._NewSalesCarNumber != value))
				{
					this.OnNewSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._NewSalesCarNumber = value;
					this.SendPropertyChanged("NewSalesCarNumber");
					this.OnNewSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidFlag
		{
			get
			{
				return this._InspectGuidFlag;
			}
			set
			{
				if ((this._InspectGuidFlag != value))
				{
					this.OnInspectGuidFlagChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidFlag = value;
					this.SendPropertyChanged("InspectGuidFlag");
					this.OnInspectGuidFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidMemo
		{
			get
			{
				return this._InspectGuidMemo;
			}
			set
			{
				if ((this._InspectGuidMemo != value))
				{
					this.OnInspectGuidMemoChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidMemo = value;
					this.SendPropertyChanged("InspectGuidMemo");
					this.OnInspectGuidMemoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_LocationListForCarUsage")]
	public partial class V_LocationListForCarUsage
	{
		
		private string _LocationCode;
		
		private string _LocationName;
		
		public V_LocationListForCarUsage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_PartsWipStock")]
	public partial class V_PartsWipStock
	{
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _SlipNumber;
		
		private int _LineNumber;
		
		private string _ServiceOrderStatus;
		
		private string _Name;
		
		private string _EmployeeName;
		
		private string _EmployeeName2;
		
		private string _CustomerName;
		
		private string _CarName;
		
		private string _Vin;
		
		private string _ServiceType1;
		
		private string _StockStatus;
		
		private System.Nullable<System.DateTime> _PurchaseOrderDate;
		
		private System.Nullable<System.DateTime> _PPArrivalPlanDate;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _PartsNumber;
		
		private string _ServiceType2;
		
		private decimal _Price;
		
		private decimal _Quantity;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _SupplierName;
		
		private string _LineContents;
		
		private System.Nullable<decimal> _OutOrderCost;
		
		private System.Nullable<System.DateTime> _CloseMonth;
		
		private string _DepartmentCode;
		
		private string _DelFlag;
		
		private string _PartsNameJp;
		
		private string _ServiceType;
		
		public V_PartsWipStock()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this._LineNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="VarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					this._ServiceOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName2", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName2
		{
			get
			{
				return this._EmployeeName2;
			}
			set
			{
				if ((this._EmployeeName2 != value))
				{
					this._EmployeeName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType1", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType1
		{
			get
			{
				return this._ServiceType1;
			}
			set
			{
				if ((this._ServiceType1 != value))
				{
					this._ServiceType1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockStatus", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StockStatus
		{
			get
			{
				return this._StockStatus;
			}
			set
			{
				if ((this._StockStatus != value))
				{
					this._StockStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this._PurchaseOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PPArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PPArrivalPlanDate
		{
			get
			{
				return this._PPArrivalPlanDate;
			}
			set
			{
				if ((this._PPArrivalPlanDate != value))
				{
					this._PPArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType2", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType2
		{
			get
			{
				return this._ServiceType2;
			}
			set
			{
				if ((this._ServiceType2 != value))
				{
					this._ServiceType2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(21,2)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents
		{
			get
			{
				return this._LineContents;
			}
			set
			{
				if ((this._LineContents != value))
				{
					this._LineContents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOrderCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OutOrderCost
		{
			get
			{
				return this._OutOrderCost;
			}
			set
			{
				if ((this._OutOrderCost != value))
				{
					this._OutOrderCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this._CloseMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this._ServiceType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryParts_Shikakari")]
	public partial class InventoryParts_Shikakari
	{
		
		private System.DateTime _InventoryMonth;
		
		private string _DepartmentCode;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _SlipNumber;
		
		private int _LineNumber;
		
		private string _ServiceOrderStatus;
		
		private string _ServiceOrderStatusName;
		
		private string _ServiceWorkCode;
		
		private string _ServiceWorksName;
		
		private string _FrontEmployeeName;
		
		private string _MekaEmployeeName;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _CarName;
		
		private string _Vin;
		
		private string _ServiceType;
		
		private string _ServiceTypeName;
		
		private string _StockTypeName;
		
		private System.Nullable<System.DateTime> _PurchaseOrderDate;
		
		private System.Nullable<System.DateTime> _PartsArravalPlanDate;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _PartsNumber;
		
		private string _LineContents1;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Amount;
		
		private string _SupplierName;
		
		private string _LineContents2;
		
		private System.Nullable<decimal> _Cost;
		
		public InventoryParts_Shikakari()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="Date NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="Date")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineNumber", DbType="Int NOT NULL")]
		public int LineNumber
		{
			get
			{
				return this._LineNumber;
			}
			set
			{
				if ((this._LineNumber != value))
				{
					this._LineNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					this._ServiceOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatusName
		{
			get
			{
				return this._ServiceOrderStatusName;
			}
			set
			{
				if ((this._ServiceOrderStatusName != value))
				{
					this._ServiceOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					this._ServiceWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorksName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorksName
		{
			get
			{
				return this._ServiceWorksName;
			}
			set
			{
				if ((this._ServiceWorksName != value))
				{
					this._ServiceWorksName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FrontEmployeeName
		{
			get
			{
				return this._FrontEmployeeName;
			}
			set
			{
				if ((this._FrontEmployeeName != value))
				{
					this._FrontEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MekaEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MekaEmployeeName
		{
			get
			{
				return this._MekaEmployeeName;
			}
			set
			{
				if ((this._MekaEmployeeName != value))
				{
					this._MekaEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this._ServiceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeName", DbType="VarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceTypeName
		{
			get
			{
				return this._ServiceTypeName;
			}
			set
			{
				if ((this._ServiceTypeName != value))
				{
					this._ServiceTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockTypeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StockTypeName
		{
			get
			{
				return this._StockTypeName;
			}
			set
			{
				if ((this._StockTypeName != value))
				{
					this._StockTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate", DbType="Date")]
		public System.Nullable<System.DateTime> PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this._PurchaseOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsArravalPlanDate", DbType="Date")]
		public System.Nullable<System.DateTime> PartsArravalPlanDate
		{
			get
			{
				return this._PartsArravalPlanDate;
			}
			set
			{
				if ((this._PartsArravalPlanDate != value))
				{
					this._PartsArravalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents1
		{
			get
			{
				return this._LineContents1;
			}
			set
			{
				if ((this._LineContents1 != value))
				{
					this._LineContents1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(21,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents2
		{
			get
			{
				return this._LineContents2;
			}
			set
			{
				if ((this._LineContents2 != value))
				{
					this._LineContents2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryMonthControlParts")]
	public partial class InventoryMonthControlParts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryMonth;
		
		private string _InventoryStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryMonthChanging(string value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InventoryMonthControlParts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CarMaster")]
	public partial class V_CarMaster
	{
		
		private string _MakerCode;
		
		private string _MakerName;
		
		private string _CarBrandCode;
		
		private string _CarBrandName;
		
		private string _CarCode;
		
		private string _CarName;
		
		private string _CarGradeCode;
		
		private string _CarGradeName;
		
		private string _MakerDelFlag;
		
		private string _BrandDelFlag;
		
		private string _CarDelFlag;
		
		private string _GradeDelFlag;
		
		private string _PrivateFlag;
		
		public V_CarMaster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this._MakerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandCode
		{
			get
			{
				return this._CarBrandCode;
			}
			set
			{
				if ((this._CarBrandCode != value))
				{
					this._CarBrandCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarCode
		{
			get
			{
				return this._CarCode;
			}
			set
			{
				if ((this._CarCode != value))
				{
					this._CarCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this._CarGradeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerDelFlag
		{
			get
			{
				return this._MakerDelFlag;
			}
			set
			{
				if ((this._MakerDelFlag != value))
				{
					this._MakerDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandDelFlag
		{
			get
			{
				return this._BrandDelFlag;
			}
			set
			{
				if ((this._BrandDelFlag != value))
				{
					this._BrandDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarDelFlag
		{
			get
			{
				return this._CarDelFlag;
			}
			set
			{
				if ((this._CarDelFlag != value))
				{
					this._CarDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeDelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string GradeDelFlag
		{
			get
			{
				return this._GradeDelFlag;
			}
			set
			{
				if ((this._GradeDelFlag != value))
				{
					this._GradeDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivateFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrivateFlag
		{
			get
			{
				return this._PrivateFlag;
			}
			set
			{
				if ((this._PrivateFlag != value))
				{
					this._PrivateFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_RevenueResult")]
	public partial class V_RevenueResult
	{
		
		private string _ST;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _SlipNumber;
		
		private string _DepartmentCode;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _Desc1;
		
		private string _Desc2;
		
		private string _Desc3;
		
		private string _SalesStatus;
		
		private string _SalesStatusName;
		
		private string _ServiceStatus;
		
		private string _ServiceStatusName;
		
		private System.Nullable<decimal> _ReceivableBalance;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private System.Nullable<decimal> _ReceiptAmount;
		
		public V_RevenueResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ST
		{
			get
			{
				return this._ST;
			}
			set
			{
				if ((this._ST != value))
				{
					this._ST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Desc1
		{
			get
			{
				return this._Desc1;
			}
			set
			{
				if ((this._Desc1 != value))
				{
					this._Desc1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Desc2
		{
			get
			{
				return this._Desc2;
			}
			set
			{
				if ((this._Desc2 != value))
				{
					this._Desc2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc3", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Desc3
		{
			get
			{
				return this._Desc3;
			}
			set
			{
				if ((this._Desc3 != value))
				{
					this._Desc3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStatus", DbType="VarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesStatus
		{
			get
			{
				return this._SalesStatus;
			}
			set
			{
				if ((this._SalesStatus != value))
				{
					this._SalesStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesStatusName
		{
			get
			{
				return this._SalesStatusName;
			}
			set
			{
				if ((this._SalesStatusName != value))
				{
					this._SalesStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceStatus", DbType="VarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceStatus
		{
			get
			{
				return this._ServiceStatus;
			}
			set
			{
				if ((this._ServiceStatus != value))
				{
					this._ServiceStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceStatusName
		{
			get
			{
				return this._ServiceStatusName;
			}
			set
			{
				if ((this._ServiceStatusName != value))
				{
					this._ServiceStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableBalance", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> ReceivableBalance
		{
			get
			{
				return this._ReceivableBalance;
			}
			set
			{
				if ((this._ReceivableBalance != value))
				{
					this._ReceivableBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReceiptAmount
		{
			get
			{
				return this._ReceiptAmount;
			}
			set
			{
				if ((this._ReceiptAmount != value))
				{
					this._ReceiptAmount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceiptPlanList")]
	public partial class V_ReceiptPlanList
	{
		
		private System.Guid _ReceiptPlanId;
		
		private string _SlipNumber;
		
		private System.Nullable<System.DateTime> _ReceiptPlanDate;
		
		private string _Code;
		
		private string _Name;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _ReceivableBalance;
		
		private string _CompleteFlag;
		
		private string _OccurredDepartmentCode;
		
		private string _ReceiptType;
		
		public V_ReceiptPlanList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReceiptPlanId
		{
			get
			{
				return this._ReceiptPlanId;
			}
			set
			{
				if ((this._ReceiptPlanId != value))
				{
					this._ReceiptPlanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiptPlanDate
		{
			get
			{
				return this._ReceiptPlanDate;
			}
			set
			{
				if ((this._ReceiptPlanDate != value))
				{
					this._ReceiptPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReceivableBalance
		{
			get
			{
				return this._ReceivableBalance;
			}
			set
			{
				if ((this._ReceivableBalance != value))
				{
					this._ReceivableBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompleteFlag
		{
			get
			{
				return this._CompleteFlag;
			}
			set
			{
				if ((this._CompleteFlag != value))
				{
					this._CompleteFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredDepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccurredDepartmentCode
		{
			get
			{
				return this._OccurredDepartmentCode;
			}
			set
			{
				if ((this._OccurredDepartmentCode != value))
				{
					this._OccurredDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this._ReceiptType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceiptList")]
	public partial class V_ReceiptList
	{
		
		private string _JournalType;
		
		private string _JournalName;
		
		private string _OfficeCode;
		
		private string _OfficeName;
		
		private System.DateTime _JournalDate;
		
		private string _AccountType;
		
		private string _Name;
		
		private string _SlipNumber;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private string _Summary;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private decimal _Amount;
		
		public V_ReceiptList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalType
		{
			get
			{
				return this._JournalType;
			}
			set
			{
				if ((this._JournalType != value))
				{
					this._JournalType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string JournalName
		{
			get
			{
				return this._JournalName;
			}
			set
			{
				if ((this._JournalName != value))
				{
					this._JournalName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this._AccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ALL_SalesOrderList")]
	public partial class V_ALL_SalesOrderList
	{
		
		private string _ST;
		
		private string _STD;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _SlipNumber;
		
		private string _DepartmentCode;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _CustomerNameKana;
		
		private string _Desc1;
		
		private string _desc2;
		
		private string _SalesStatus;
		
		private string _SalesStatusName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		public V_ALL_SalesOrderList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ST
		{
			get
			{
				return this._ST;
			}
			set
			{
				if ((this._ST != value))
				{
					this._ST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STD", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string STD
		{
			get
			{
				return this._STD;
			}
			set
			{
				if ((this._STD != value))
				{
					this._STD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNameKana", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerNameKana
		{
			get
			{
				return this._CustomerNameKana;
			}
			set
			{
				if ((this._CustomerNameKana != value))
				{
					this._CustomerNameKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc1", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Desc1
		{
			get
			{
				return this._Desc1;
			}
			set
			{
				if ((this._Desc1 != value))
				{
					this._Desc1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desc2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string desc2
		{
			get
			{
				return this._desc2;
			}
			set
			{
				if ((this._desc2 != value))
				{
					this._desc2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStatus", DbType="VarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesStatus
		{
			get
			{
				return this._SalesStatus;
			}
			set
			{
				if ((this._SalesStatus != value))
				{
					this._SalesStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesStatusName
		{
			get
			{
				return this._SalesStatusName;
			}
			set
			{
				if ((this._SalesStatusName != value))
				{
					this._SalesStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ServiceSalesClaimCode")]
	public partial class V_ServiceSalesClaimCode
	{
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _CustomerClaimCode;
		
		public V_ServiceSalesClaimCode()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL")]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this._RevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class V_ReceiptResultList
	{
		
		private string _ST;
		
		private string _SlipNumber;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private string _AccountType;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private System.Nullable<decimal> _Amount;
		
		public V_ReceiptResultList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ST
		{
			get
			{
				return this._ST;
			}
			set
			{
				if ((this._ST != value))
				{
					this._ST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this._ReceiptDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this._AccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class T_CashJournalOutput
	{
		
		private System.Nullable<System.DateTime> _Lastdate;
		
		private string _OfficeCode;
		
		private string _CashAccountCode;
		
		private string _OfficeName;
		
		private string _CashAccountName;
		
		private decimal _LastMonthBalance;
		
		private decimal _ThisMonthJournal;
		
		private decimal _ThisMonthPayment;
		
		private decimal _ThisMonthBalance;
		
		public T_CashJournalOutput()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastdate")]
		public System.Nullable<System.DateTime> Lastdate
		{
			get
			{
				return this._Lastdate;
			}
			set
			{
				if ((this._Lastdate != value))
				{
					this._Lastdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this._CashAccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountName", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountName
		{
			get
			{
				return this._CashAccountName;
			}
			set
			{
				if ((this._CashAccountName != value))
				{
					this._CashAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMonthBalance")]
		public decimal LastMonthBalance
		{
			get
			{
				return this._LastMonthBalance;
			}
			set
			{
				if ((this._LastMonthBalance != value))
				{
					this._LastMonthBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisMonthJournal")]
		public decimal ThisMonthJournal
		{
			get
			{
				return this._ThisMonthJournal;
			}
			set
			{
				if ((this._ThisMonthJournal != value))
				{
					this._ThisMonthJournal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisMonthPayment")]
		public decimal ThisMonthPayment
		{
			get
			{
				return this._ThisMonthPayment;
			}
			set
			{
				if ((this._ThisMonthPayment != value))
				{
					this._ThisMonthPayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisMonthBalance")]
		public decimal ThisMonthBalance
		{
			get
			{
				return this._ThisMonthBalance;
			}
			set
			{
				if ((this._ThisMonthBalance != value))
				{
					this._ThisMonthBalance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModificationControl")]
	public partial class ModificationControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _SlipType;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnSlipTypeChanging(string value);
    partial void OnSlipTypeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    #endregion
		
		public ModificationControl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipType", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipType
		{
			get
			{
				return this._SlipType;
			}
			set
			{
				if ((this._SlipType != value))
				{
					this.OnSlipTypeChanging(value);
					this.SendPropertyChanging();
					this._SlipType = value;
					this.SendPropertyChanged("SlipType");
					this.OnSlipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModifiedReason")]
	public partial class ModifiedReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SlipNumber;
		
		private int _RevisionNumber;
		
		private string _SlipType;
		
		private string _Reason;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnSlipTypeChanging(string value);
    partial void OnSlipTypeChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ModifiedReason()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipType", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipType
		{
			get
			{
				return this._SlipType;
			}
			set
			{
				if ((this._SlipType != value))
				{
					this.OnSlipTypeChanging(value);
					this.SendPropertyChanging();
					this._SlipType = value;
					this.SendPropertyChanged("SlipType");
					this.OnSlipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(1024)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class T_CashBalanceSheet
	{
		
		private System.Nullable<int> _NumberOf10000;
		
		private System.Nullable<int> _NumberOf5000;
		
		private System.Nullable<int> _NumberOf2000;
		
		private System.Nullable<int> _NumberOf1000;
		
		private System.Nullable<int> _NumberOf500;
		
		private System.Nullable<int> _NumberOf100;
		
		private System.Nullable<int> _NumberOf50;
		
		private System.Nullable<int> _NumberOf10;
		
		private System.Nullable<int> _NumberOf5;
		
		private System.Nullable<int> _NumberOf1;
		
		private string _ClosedStatus;
		
		private System.Nullable<decimal> _CheckAmount;
		
		public T_CashBalanceSheet()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10000")]
		public System.Nullable<int> NumberOf10000
		{
			get
			{
				return this._NumberOf10000;
			}
			set
			{
				if ((this._NumberOf10000 != value))
				{
					this._NumberOf10000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5000")]
		public System.Nullable<int> NumberOf5000
		{
			get
			{
				return this._NumberOf5000;
			}
			set
			{
				if ((this._NumberOf5000 != value))
				{
					this._NumberOf5000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf2000")]
		public System.Nullable<int> NumberOf2000
		{
			get
			{
				return this._NumberOf2000;
			}
			set
			{
				if ((this._NumberOf2000 != value))
				{
					this._NumberOf2000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1000")]
		public System.Nullable<int> NumberOf1000
		{
			get
			{
				return this._NumberOf1000;
			}
			set
			{
				if ((this._NumberOf1000 != value))
				{
					this._NumberOf1000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf500")]
		public System.Nullable<int> NumberOf500
		{
			get
			{
				return this._NumberOf500;
			}
			set
			{
				if ((this._NumberOf500 != value))
				{
					this._NumberOf500 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf100")]
		public System.Nullable<int> NumberOf100
		{
			get
			{
				return this._NumberOf100;
			}
			set
			{
				if ((this._NumberOf100 != value))
				{
					this._NumberOf100 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf50")]
		public System.Nullable<int> NumberOf50
		{
			get
			{
				return this._NumberOf50;
			}
			set
			{
				if ((this._NumberOf50 != value))
				{
					this._NumberOf50 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10")]
		public System.Nullable<int> NumberOf10
		{
			get
			{
				return this._NumberOf10;
			}
			set
			{
				if ((this._NumberOf10 != value))
				{
					this._NumberOf10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5")]
		public System.Nullable<int> NumberOf5
		{
			get
			{
				return this._NumberOf5;
			}
			set
			{
				if ((this._NumberOf5 != value))
				{
					this._NumberOf5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1")]
		public System.Nullable<int> NumberOf1
		{
			get
			{
				return this._NumberOf1;
			}
			set
			{
				if ((this._NumberOf1 != value))
				{
					this._NumberOf1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedStatus")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ClosedStatus
		{
			get
			{
				return this._ClosedStatus;
			}
			set
			{
				if ((this._ClosedStatus != value))
				{
					this._ClosedStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAmount")]
		public System.Nullable<decimal> CheckAmount
		{
			get
			{
				return this._CheckAmount;
			}
			set
			{
				if ((this._CheckAmount != value))
				{
					this._CheckAmount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CloseMonthControlCarStock")]
	public partial class CloseMonthControlCarStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CloseMonth;
		
		private string _CloseStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCloseMonthChanging(string value);
    partial void OnCloseMonthChanged();
    partial void OnCloseStatusChanging(string value);
    partial void OnCloseStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CloseMonthControlCarStock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseStatus", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseStatus
		{
			get
			{
				return this._CloseStatus;
			}
			set
			{
				if ((this._CloseStatus != value))
				{
					this.OnCloseStatusChanging(value);
					this.SendPropertyChanging();
					this._CloseStatus = value;
					this.SendPropertyChanged("CloseStatus");
					this.OnCloseStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.c_CloseStatus")]
	public partial class c_CloseStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _DelFlag;
		
		private EntitySet<CloseMonthControl> _CloseMonthControl;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public c_CloseStatus()
		{
			this._CloseMonthControl = new EntitySet<CloseMonthControl>(new Action<CloseMonthControl>(this.attach_CloseMonthControl), new Action<CloseMonthControl>(this.detach_CloseMonthControl));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="c_CloseStatus_CloseMonthControl", Storage="_CloseMonthControl", ThisKey="Code", OtherKey="CloseStatus")]
		public EntitySet<CloseMonthControl> CloseMonthControl
		{
			get
			{
				return this._CloseMonthControl;
			}
			set
			{
				this._CloseMonthControl.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CloseMonthControl(CloseMonthControl entity)
		{
			this.SendPropertyChanging();
			entity.c_CloseStatus = this;
		}
		
		private void detach_CloseMonthControl(CloseMonthControl entity)
		{
			this.SendPropertyChanging();
			entity.c_CloseStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsInventoryWorkingDate")]
	public partial class PartsInventoryWorkingDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _InventoryWorkingDate;
		
		private System.Nullable<System.DateTime> _InventoryMonth;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryWorkingDateChanging(System.DateTime value);
    partial void OnInventoryWorkingDateChanged();
    partial void OnInventoryMonthChanging(System.Nullable<System.DateTime> value);
    partial void OnInventoryMonthChanged();
    #endregion
		
		public PartsInventoryWorkingDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryWorkingDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InventoryWorkingDate
		{
			get
			{
				return this._InventoryWorkingDate;
			}
			set
			{
				if ((this._InventoryWorkingDate != value))
				{
					this.OnInventoryWorkingDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryWorkingDate = value;
					this.SendPropertyChanged("InventoryWorkingDate");
					this.OnInventoryWorkingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime")]
		public System.Nullable<System.DateTime> InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryMonthControlPartsBalance")]
	public partial class InventoryMonthControlPartsBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryMonth;
		
		private string _InventoryStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryMonthChanging(string value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InventoryMonthControlPartsBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReceivableManagement")]
	public partial class V_ReceivableManagement
	{
		
		private System.DateTime _InventoryMonth;
		
		private string _SlipType;
		
		private string _SlipNumber;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _Code;
		
		private string _Name;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _AtoAmount;
		
		private System.Nullable<decimal> _MaeAmount;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private string _SlipTypeName;
		
		public V_ReceivableManagement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="Date NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipType", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipType
		{
			get
			{
				return this._SlipType;
			}
			set
			{
				if ((this._SlipType != value))
				{
					this._SlipType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="Date")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AtoAmount
		{
			get
			{
				return this._AtoAmount;
			}
			set
			{
				if ((this._AtoAmount != value))
				{
					this._AtoAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaeAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MaeAmount
		{
			get
			{
				return this._MaeAmount;
			}
			set
			{
				if ((this._MaeAmount != value))
				{
					this._MaeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this._BalanceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipTypeName
		{
			get
			{
				return this._SlipTypeName;
			}
			set
			{
				if ((this._SlipTypeName != value))
				{
					this._SlipTypeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CustomerDataList")]
	public partial class V_CustomerDataList
	{
		
		private string _DmFlag;
		
		private string _DmMemo;
		
		private string _InspectGuidFlag;
		
		private string _InspectGuidMemo;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _TelNumber;
		
		private bool _AddressReconfirm;
		
		private string _CDPostCode;
		
		private string _CDPrefecture;
		
		private string _CDCity;
		
		private string _CDAddress1;
		
		private string _CDAddress2;
		
		private string _CDTelNumber;
		
		private string _SalesCarNumber;
		
		private string _MorterViecleOfficialCode;
		
		private string _Vin;
		
		private string _MakerName;
		
		private string _CarName;
		
		private string _FirstRegistrationYear;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private System.Nullable<System.DateTime> _NextInspectionDate;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _EmployeeCode;
		
		private string _EmployeeName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _ServiceDepartmentCode;
		
		private string _ServiceDepartmentName;
		
		private string _ServiceEmployeeCode;
		
		private string _ServiceEmployeeName;
		
		private System.Nullable<System.DateTime> _ServiceSalesDate;
		
		private System.Nullable<System.DateTime> _FirstRegistrationDate;
		
		private string _DepartmentCode2;
		
		private string _DepartmentName2;
		
		private string _CarEmployeeCode;
		
		private string _CarEmployeeName;
		
		private string _ServiceDepartmentCode2;
		
		private string _ServiceDepartmentName2;
		
		private string _ServiceEmployeeCode2;
		
		private string _ServiceEmployeeName2;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private string _CustomerKind;
		
		private System.Nullable<int> _CarWeight;
		
		private string _DmFlagName;
		
		private string _InspectGuidFlagName;
		
		private string _CustomerKindName;
		
		private string _CustomerAddressReconfirmName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DmDelFlag;
		
		private string _MobileNumber;
		
		private string _UserCode;
		
		private string _MailAddress;
		
		private string _MobileMailAddress;
		
		private string _CarGradeName;
		
		private string _LocationName;
		
		private string _SalesOrderStatusName;
		
		private string _ServiceDepartmentName3;
		
		public V_CustomerDataList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmFlag
		{
			get
			{
				return this._DmFlag;
			}
			set
			{
				if ((this._DmFlag != value))
				{
					this._DmFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmMemo
		{
			get
			{
				return this._DmMemo;
			}
			set
			{
				if ((this._DmMemo != value))
				{
					this._DmMemo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidFlag
		{
			get
			{
				return this._InspectGuidFlag;
			}
			set
			{
				if ((this._InspectGuidFlag != value))
				{
					this._InspectGuidFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidMemo
		{
			get
			{
				return this._InspectGuidMemo;
			}
			set
			{
				if ((this._InspectGuidMemo != value))
				{
					this._InspectGuidMemo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this._Prefecture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this._TelNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressReconfirm", DbType="Bit NOT NULL")]
		public bool AddressReconfirm
		{
			get
			{
				return this._AddressReconfirm;
			}
			set
			{
				if ((this._AddressReconfirm != value))
				{
					this._AddressReconfirm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDPostCode
		{
			get
			{
				return this._CDPostCode;
			}
			set
			{
				if ((this._CDPostCode != value))
				{
					this._CDPostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDPrefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDPrefecture
		{
			get
			{
				return this._CDPrefecture;
			}
			set
			{
				if ((this._CDPrefecture != value))
				{
					this._CDPrefecture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDCity", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDCity
		{
			get
			{
				return this._CDCity;
			}
			set
			{
				if ((this._CDCity != value))
				{
					this._CDCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDAddress1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDAddress1
		{
			get
			{
				return this._CDAddress1;
			}
			set
			{
				if ((this._CDAddress1 != value))
				{
					this._CDAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDAddress2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDAddress2
		{
			get
			{
				return this._CDAddress2;
			}
			set
			{
				if ((this._CDAddress2 != value))
				{
					this._CDAddress2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDTelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CDTelNumber
		{
			get
			{
				return this._CDTelNumber;
			}
			set
			{
				if ((this._CDTelNumber != value))
				{
					this._CDTelNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this._MorterViecleOfficialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationYear", DbType="NVarChar(9)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistrationYear
		{
			get
			{
				return this._FirstRegistrationYear;
			}
			set
			{
				if ((this._FirstRegistrationYear != value))
				{
					this._FirstRegistrationYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this._RegistrationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextInspectionDate
		{
			get
			{
				return this._NextInspectionDate;
			}
			set
			{
				if ((this._NextInspectionDate != value))
				{
					this._NextInspectionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this._ExpireDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this._EmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentCode
		{
			get
			{
				return this._ServiceDepartmentCode;
			}
			set
			{
				if ((this._ServiceDepartmentCode != value))
				{
					this._ServiceDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentName
		{
			get
			{
				return this._ServiceDepartmentName;
			}
			set
			{
				if ((this._ServiceDepartmentName != value))
				{
					this._ServiceDepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptionEmployeeCode
		{
			get
			{
				return this._ServiceEmployeeCode;
			}
			set
			{
				if ((this._ServiceEmployeeCode != value))
				{
					this._ServiceEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceEmployeeName
		{
			get
			{
				return this._ServiceEmployeeName;
			}
			set
			{
				if ((this._ServiceEmployeeName != value))
				{
					this._ServiceEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceSalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ServiceSalesDate;
			}
			set
			{
				if ((this._ServiceSalesDate != value))
				{
					this._ServiceSalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstRegistrationDate
		{
			get
			{
				return this._FirstRegistrationDate;
			}
			set
			{
				if ((this._FirstRegistrationDate != value))
				{
					this._FirstRegistrationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode2
		{
			get
			{
				return this._DepartmentCode2;
			}
			set
			{
				if ((this._DepartmentCode2 != value))
				{
					this._DepartmentCode2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName2
		{
			get
			{
				return this._DepartmentName2;
			}
			set
			{
				if ((this._DepartmentName2 != value))
				{
					this._DepartmentName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarEmployeeCode", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarEmployeeCode
		{
			get
			{
				return this._CarEmployeeCode;
			}
			set
			{
				if ((this._CarEmployeeCode != value))
				{
					this._CarEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarEmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarEmployeeName
		{
			get
			{
				return this._CarEmployeeName;
			}
			set
			{
				if ((this._CarEmployeeName != value))
				{
					this._CarEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentCode2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentCode2
		{
			get
			{
				return this._ServiceDepartmentCode2;
			}
			set
			{
				if ((this._ServiceDepartmentCode2 != value))
				{
					this._ServiceDepartmentCode2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentName2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentName2
		{
			get
			{
				return this._ServiceDepartmentName2;
			}
			set
			{
				if ((this._ServiceDepartmentName2 != value))
				{
					this._ServiceDepartmentName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeCode2", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceEmployeeCode2
		{
			get
			{
				return this._ServiceEmployeeCode2;
			}
			set
			{
				if ((this._ServiceEmployeeCode2 != value))
				{
					this._ServiceEmployeeCode2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceEmployeeName2", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceEmployeeName2
		{
			get
			{
				return this._ServiceEmployeeName2;
			}
			set
			{
				if ((this._ServiceEmployeeName2 != value))
				{
					this._ServiceEmployeeName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this._RegistrationNumberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this._RegistrationNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this._RegistrationNumberPlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerKind", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerKind
		{
			get
			{
				return this._CustomerKind;
			}
			set
			{
				if ((this._CustomerKind != value))
				{
					this._CustomerKind = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeight", DbType="int")]
		public System.Nullable<int> CarWeight
		{
			get
			{
				return this._CarWeight;
			}
			set
			{
				if ((this._CarWeight != value))
				{
					this._CarWeight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmFlagName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmFlagName
		{
			get
			{
				return this._DmFlagName;
			}
			set
			{
				if ((this._DmFlagName != value))
				{
					this._DmFlagName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidFlagName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidFlagName
		{
			get
			{
				return this._InspectGuidFlagName;
			}
			set
			{
				if ((this._InspectGuidFlagName != value))
				{
					this._InspectGuidFlagName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerKindName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerKindName
		{
			get
			{
				return this._CustomerKindName;
			}
			set
			{
				if ((this._CustomerKindName != value))
				{
					this._CustomerKindName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddressReconfirmName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerAddressReconfirmName
		{
			get
			{
				return this._CustomerAddressReconfirmName;
			}
			set
			{
				if ((this._CustomerAddressReconfirmName != value))
				{
					this._CustomerAddressReconfirmName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmDelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DmDelFlag
		{
			get
			{
				return this._DmDelFlag;
			}
			set
			{
				if ((this._DmDelFlag != value))
				{
					this._DmDelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this._MailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileMailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileMailAddress
		{
			get
			{
				return this._MobileMailAddress;
			}
			set
			{
				if ((this._MobileMailAddress != value))
				{
					this._MobileMailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderStatusName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesOrderStatusName
		{
			get
			{
				return this._SalesOrderStatusName;
			}
			set
			{
				if ((this._SalesOrderStatusName != value))
				{
					this._SalesOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDepartmentName3", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceDepartmentName3
		{
			get
			{
				return this._ServiceDepartmentName3;
			}
			set
			{
				if ((this._ServiceDepartmentName3 != value))
				{
					this._ServiceDepartmentName3 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountsReceivable")]
	public partial class AccountsReceivable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CloseMonth;
		
		private string _SlipNumber;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _CustomerClaimType;
		
		private string _CustomerClaimTypeName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<decimal> _CarriedBalance;
		
		private System.Nullable<decimal> _PresentMonth;
		
		private System.Nullable<decimal> _Expendes;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<decimal> _Payment;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _ChargesPayment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCloseMonthChanging(System.DateTime value);
    partial void OnCloseMonthChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnCustomerClaimNameChanging(string value);
    partial void OnCustomerClaimNameChanged();
    partial void OnCustomerClaimTypeChanging(string value);
    partial void OnCustomerClaimTypeChanged();
    partial void OnCustomerClaimTypeNameChanging(string value);
    partial void OnCustomerClaimTypeNameChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnCarriedBalanceChanging(System.Nullable<decimal> value);
    partial void OnCarriedBalanceChanged();
    partial void OnPresentMonthChanging(System.Nullable<decimal> value);
    partial void OnPresentMonthChanged();
    partial void OnExpendesChanging(System.Nullable<decimal> value);
    partial void OnExpendesChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnPaymentChanging(System.Nullable<decimal> value);
    partial void OnPaymentChanged();
    partial void OnBalanceAmountChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnChargesPaymentChanging(System.Nullable<decimal> value);
    partial void OnChargesPaymentChanged();
    #endregion
		
		public AccountsReceivable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this.OnCustomerClaimNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimName = value;
					this.SendPropertyChanged("CustomerClaimName");
					this.OnCustomerClaimNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimType
		{
			get
			{
				return this._CustomerClaimType;
			}
			set
			{
				if ((this._CustomerClaimType != value))
				{
					this.OnCustomerClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimType = value;
					this.SendPropertyChanged("CustomerClaimType");
					this.OnCustomerClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimTypeName
		{
			get
			{
				return this._CustomerClaimTypeName;
			}
			set
			{
				if ((this._CustomerClaimTypeName != value))
				{
					this.OnCustomerClaimTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimTypeName = value;
					this.SendPropertyChanged("CustomerClaimTypeName");
					this.OnCustomerClaimTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarriedBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarriedBalance
		{
			get
			{
				return this._CarriedBalance;
			}
			set
			{
				if ((this._CarriedBalance != value))
				{
					this.OnCarriedBalanceChanging(value);
					this.SendPropertyChanging();
					this._CarriedBalance = value;
					this.SendPropertyChanged("CarriedBalance");
					this.OnCarriedBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentMonth", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PresentMonth
		{
			get
			{
				return this._PresentMonth;
			}
			set
			{
				if ((this._PresentMonth != value))
				{
					this.OnPresentMonthChanging(value);
					this.SendPropertyChanging();
					this._PresentMonth = value;
					this.SendPropertyChanged("PresentMonth");
					this.OnPresentMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expendes", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Expendes
		{
			get
			{
				return this._Expendes;
			}
			set
			{
				if ((this._Expendes != value))
				{
					this.OnExpendesChanging(value);
					this.SendPropertyChanging();
					this._Expendes = value;
					this.SendPropertyChanged("Expendes");
					this.OnExpendesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargesPayment", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ChargesPayment
		{
			get
			{
				return this._ChargesPayment;
			}
			set
			{
				if ((this._ChargesPayment != value))
				{
					this.OnChargesPaymentChanging(value);
					this.SendPropertyChanging();
					this._ChargesPayment = value;
					this.SendPropertyChanged("ChargesPayment");
					this.OnChargesPaymentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetCarOptionMaster_Result
	{
		
		private string _MakerCode;
		
		private string _MakerName;
		
		private string _CarOptionCode;
		
		private string _CarOptionName;
		
		private string _OptionType;
		
		private string _CarName;
		
		private string _RequiredFlag;
		
		private string _DelFlag;
		
		public GetCarOptionMaster_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this._MakerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					this._CarOptionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionName
		{
			get
			{
				return this._CarOptionName;
			}
			set
			{
				if ((this._CarOptionName != value))
				{
					this._CarOptionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionType", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionType
		{
			get
			{
				return this._OptionType;
			}
			set
			{
				if ((this._OptionType != value))
				{
					this._OptionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequiredFlag
		{
			get
			{
				return this._RequiredFlag;
			}
			set
			{
				if ((this._RequiredFlag != value))
				{
					this._RequiredFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetPartsPurchase_Result
	{
		
		private string _PurchaseNumber;
		
		private string _PurchaseOrderNumber;
		
		private System.Nullable<System.DateTime> _PurchaseOrderDate;
		
		private string _SlipNumber;
		
		private string _PurchaseTypeName;
		
		private string _CustomerName;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private System.Nullable<decimal> _RemaininQuantity;
		
		private System.Nullable<decimal> _PurchaseQuantity;
		
		private System.Nullable<decimal> _PurchasePlanQuantity;
		
		private string _OrderTypeName;
		
		private System.Nullable<System.DateTime> _PurchasePlanDate;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _WebOrderNumber;
		
		private string _MakerOrderNumber;
		
		private string _InvoiceNo;
		
		private string _DepartmentName;
		
		private string _EmployeeName;
		
		private string _SupplierName;
		
		private System.Nullable<decimal> _PurchaseOrderQuantity;
		
		private System.Nullable<System.DateTime> _LinkEntryCaptureDate;
		
		public GetPartsPurchase_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this._PurchaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate")]
		public System.Nullable<System.DateTime> PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this._PurchaseOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseTypeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseTypeName
		{
			get
			{
				return this._PurchaseTypeName;
			}
			set
			{
				if ((this._PurchaseTypeName != value))
				{
					this._PurchaseTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemaininQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemaininQuantity;
			}
			set
			{
				if ((this._RemaininQuantity != value))
				{
					this._RemaininQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchaseQuantity
		{
			get
			{
				return this._PurchaseQuantity;
			}
			set
			{
				if ((this._PurchaseQuantity != value))
				{
					this._PurchaseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchasePlanQuantity
		{
			get
			{
				return this._PurchasePlanQuantity;
			}
			set
			{
				if ((this._PurchasePlanQuantity != value))
				{
					this._PurchasePlanQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderTypeName
		{
			get
			{
				return this._OrderTypeName;
			}
			set
			{
				if ((this._OrderTypeName != value))
				{
					this._OrderTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchasePlanDate
		{
			get
			{
				return this._PurchasePlanDate;
			}
			set
			{
				if ((this._PurchasePlanDate != value))
				{
					this._PurchasePlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this._WebOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this._MakerOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchaseOrderQuantity
		{
			get
			{
				return this._PurchaseOrderQuantity;
			}
			set
			{
				if ((this._PurchaseOrderQuantity != value))
				{
					this._PurchaseOrderQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkEntryCaptureDate", DbType="datetime")]
		public System.Nullable<System.DateTime> LinkEntryCaptureDate
		{
			get
			{
				return this._LinkEntryCaptureDate;
			}
			set
			{
				if ((this._LinkEntryCaptureDate != value))
				{
					this._LinkEntryCaptureDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetPartsPurchaseList_Result
	{
		
		private string _PurchaseOrderNumber;
		
		private string _InvoiceNo;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private System.Nullable<decimal> _PurchaseQuantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private string _MakerOrderNumber;
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _PurchaseType;
		
		private string _Memo;
		
		private string _ReceiptNumber;
		
		private string _PurchaseNumber;
		
		private string _SlipNumber;
		
		private string _ChangePartsFlag;
		
		private string _WebOrderNumber;
		
		public GetPartsPurchaseList_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this._RemainingQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchaseQuantity
		{
			get
			{
				return this._PurchaseQuantity;
			}
			set
			{
				if ((this._PurchaseQuantity != value))
				{
					this._PurchaseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this._MakerOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					this._PurchaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this._ReceiptNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this._PurchaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePartsFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangePartsFlag
		{
			get
			{
				return this._ChangePartsFlag;
			}
			set
			{
				if ((this._ChangePartsFlag != value))
				{
					this._ChangePartsFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this._WebOrderNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceivableDetail")]
	public partial class ReceivableDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.Guid> _ReceivableCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _SlipNumber;
		
		private string _CustomerClaimCode;
		
		private string _DepartmentCode;
		
		private System.Nullable<char> _SlipType;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _MaeAmount;
		
		private System.Nullable<decimal> _AtoAmount;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _TotalBalanceAmount;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceivableCodeChanging(System.Nullable<System.Guid> value);
    partial void OnReceivableCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnSlipTypeChanging(System.Nullable<char> value);
    partial void OnSlipTypeChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnMaeAmountChanging(System.Nullable<decimal> value);
    partial void OnMaeAmountChanged();
    partial void OnAtoAmountChanging(System.Nullable<decimal> value);
    partial void OnAtoAmountChanged();
    partial void OnBalanceAmountChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnTotalBalanceAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalBalanceAmountChanged();
    #endregion
		
		public ReceivableDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableCode", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ReceivableCode
		{
			get
			{
				return this._ReceivableCode;
			}
			set
			{
				if ((this._ReceivableCode != value))
				{
					this.OnReceivableCodeChanging(value);
					this.SendPropertyChanging();
					this._ReceivableCode = value;
					this.SendPropertyChanged("ReceivableCode");
					this.OnReceivableCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipType", DbType="Char(1)")]
		public System.Nullable<char> SlipType
		{
			get
			{
				return this._SlipType;
			}
			set
			{
				if ((this._SlipType != value))
				{
					this.OnSlipTypeChanging(value);
					this.SendPropertyChanging();
					this._SlipType = value;
					this.SendPropertyChanged("SlipType");
					this.OnSlipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="Date")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaeAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MaeAmount
		{
			get
			{
				return this._MaeAmount;
			}
			set
			{
				if ((this._MaeAmount != value))
				{
					this.OnMaeAmountChanging(value);
					this.SendPropertyChanging();
					this._MaeAmount = value;
					this.SendPropertyChanged("MaeAmount");
					this.OnMaeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtoAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AtoAmount
		{
			get
			{
				return this._AtoAmount;
			}
			set
			{
				if ((this._AtoAmount != value))
				{
					this.OnAtoAmountChanging(value);
					this.SendPropertyChanging();
					this._AtoAmount = value;
					this.SendPropertyChanged("AtoAmount");
					this.OnAtoAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBalanceAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalBalanceAmount
		{
			get
			{
				return this._TotalBalanceAmount;
			}
			set
			{
				if ((this._TotalBalanceAmount != value))
				{
					this.OnTotalBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalBalanceAmount = value;
					this.SendPropertyChanged("TotalBalanceAmount");
					this.OnTotalBalanceAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetSummaryReceiptPlan_Result
	{
		
		private string _ReceiptPlanId;
		
		private string _OfficeCode;
		
		private string _DepartmentCode;
		
		private string _OccurredDepartmentCode;
		
		private string _CustomerClaimCode;
		
		private string _SlipNumber;
		
		private string _ReceiptType;
		
		private System.Nullable<System.DateTime> _ReceiptPlanDate;
		
		private string _AccountCode;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _ReceivableBalance;
		
		private string _Summary;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private string _PaymentKindCode;
		
		private System.Nullable<decimal> _CommissionRate;
		
		private System.Nullable<decimal> _CommissionAmount;
		
		private string _CreditJournalId;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _SalesPlanDate;
		
		private string _accountUsageType;
		
		private string _CustomerClaimName;
		
		private string _OfficeName;
		
		public GetSummaryReceiptPlan_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanId", DbType="nvarchar(36)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptPlanId
		{
			get
			{
				return this._ReceiptPlanId;
			}
			set
			{
				if ((this._ReceiptPlanId != value))
				{
					this._ReceiptPlanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredDepartmentCode", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccurredDepartmentCode
		{
			get
			{
				return this._OccurredDepartmentCode;
			}
			set
			{
				if ((this._OccurredDepartmentCode != value))
				{
					this._OccurredDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this._ReceiptType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptPlanDate", DbType="datetime")]
		public System.Nullable<System.DateTime> ReceiptPlanDate
		{
			get
			{
				return this._ReceiptPlanDate;
			}
			set
			{
				if ((this._ReceiptPlanDate != value))
				{
					this._ReceiptPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableBalance", DbType="decimal(10,0)")]
		public System.Nullable<decimal> ReceivableBalance
		{
			get
			{
				return this._ReceivableBalance;
			}
			set
			{
				if ((this._ReceivableBalance != value))
				{
					this._ReceivableBalance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="datetime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentKindCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PaymentKindCode
		{
			get
			{
				return this._PaymentKindCode;
			}
			set
			{
				if ((this._PaymentKindCode != value))
				{
					this._PaymentKindCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionRate", DbType="decimal(8,5)")]
		public System.Nullable<decimal> CommissionRate
		{
			get
			{
				return this._CommissionRate;
			}
			set
			{
				if ((this._CommissionRate != value))
				{
					this._CommissionRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionAmount", DbType="decimal(10,0)")]
		public System.Nullable<decimal> CommissionAmount
		{
			get
			{
				return this._CommissionAmount;
			}
			set
			{
				if ((this._CommissionAmount != value))
				{
					this._CommissionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditJournalId", DbType="nvarchar(36)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreditJournalId
		{
			get
			{
				return this._CreditJournalId;
			}
			set
			{
				if ((this._CreditJournalId != value))
				{
					this._CreditJournalId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="datetime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPlanDate", DbType="datetime")]
		public System.Nullable<System.DateTime> SalesPlanDate
		{
			get
			{
				return this._SalesPlanDate;
			}
			set
			{
				if ((this._SalesPlanDate != value))
				{
					this._SalesPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountUsageType", DbType="varchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string accountUsageType
		{
			get
			{
				return this._accountUsageType;
			}
			set
			{
				if ((this._accountUsageType != value))
				{
					this._accountUsageType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeName", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeName
		{
			get
			{
				return this._OfficeName;
			}
			set
			{
				if ((this._OfficeName != value))
				{
					this._OfficeName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warehouse")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
		private string _DepartmentCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntitySet<Location> _Location;
		
		private EntitySet<PartsLocation> _PartsLocation;
		
		private EntitySet<DepartmentWarehouse> _DepartmentWarehouse;
		
		private EntitySet<InventoryScheduleParts> _InventoryScheduleParts;
		
		private EntityRef<Department> _Department;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Warehouse()
		{
			this._Location = new EntitySet<Location>(new Action<Location>(this.attach_Location), new Action<Location>(this.detach_Location));
			this._PartsLocation = new EntitySet<PartsLocation>(new Action<PartsLocation>(this.attach_PartsLocation), new Action<PartsLocation>(this.detach_PartsLocation));
			this._DepartmentWarehouse = new EntitySet<DepartmentWarehouse>(new Action<DepartmentWarehouse>(this.attach_DepartmentWarehouse), new Action<DepartmentWarehouse>(this.detach_DepartmentWarehouse));
			this._InventoryScheduleParts = new EntitySet<InventoryScheduleParts>(new Action<InventoryScheduleParts>(this.attach_InventoryScheduleParts), new Action<InventoryScheduleParts>(this.detach_InventoryScheduleParts));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Location", Storage="_Location", ThisKey="WarehouseCode", OtherKey="WarehouseCode")]
		public EntitySet<Location> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_PartsLocation", Storage="_PartsLocation", ThisKey="WarehouseCode", OtherKey="WarehouseCode")]
		public EntitySet<PartsLocation> PartsLocation
		{
			get
			{
				return this._PartsLocation;
			}
			set
			{
				this._PartsLocation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DepartmentWarehouse", Storage="_DepartmentWarehouse", ThisKey="WarehouseCode", OtherKey="WarehouseCode")]
		public EntitySet<DepartmentWarehouse> DepartmentWarehouse
		{
			get
			{
				return this._DepartmentWarehouse;
			}
			set
			{
				this._DepartmentWarehouse.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_InventoryScheduleParts", Storage="_InventoryScheduleParts", ThisKey="WarehouseCode", OtherKey="WarehouseCode")]
		public EntitySet<InventoryScheduleParts> InventoryScheduleParts
		{
			get
			{
				return this._InventoryScheduleParts;
			}
			set
			{
				this._InventoryScheduleParts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Warehouse", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Warehouse.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Warehouse.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_Location(Location entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void attach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_PartsLocation(PartsLocation entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void attach_DepartmentWarehouse(DepartmentWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_DepartmentWarehouse(DepartmentWarehouse entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
		
		private void attach_InventoryScheduleParts(InventoryScheduleParts entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_InventoryScheduleParts(InventoryScheduleParts entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentWarehouse")]
	public partial class DepartmentWarehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private string _WarehouseCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public DepartmentWarehouse()
		{
			this._Department = default(EntityRef<Department>);
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_DepartmentWarehouse", Storage="_Department", ThisKey="DepartmentCode", OtherKey="DepartmentCode", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.DepartmentWarehouse.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.DepartmentWarehouse.Add(this);
						this._DepartmentCode = value.DepartmentCode;
					}
					else
					{
						this._DepartmentCode = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_DepartmentWarehouse", Storage="_Warehouse", ThisKey="WarehouseCode", OtherKey="WarehouseCode", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.DepartmentWarehouse.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.DepartmentWarehouse.Add(this);
						this._WarehouseCode = value.WarehouseCode;
					}
					else
					{
						this._WarehouseCode = default(string);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsBalance")]
	public partial class PartsBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CloseMonth;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private System.Nullable<decimal> _PreCost;
		
		private System.Nullable<decimal> _PreQuantity;
		
		private System.Nullable<decimal> _PreAmount;
		
		private System.Nullable<decimal> _PurchaseQuantity;
		
		private System.Nullable<decimal> _PurchaseAmount;
		
		private System.Nullable<decimal> _TransferArrivalQuantity;
		
		private System.Nullable<decimal> _TransferArrivalAmount;
		
		private System.Nullable<decimal> _ShipQuantity;
		
		private System.Nullable<decimal> _ShipAmount;
		
		private System.Nullable<decimal> _TransferDepartureQuantity;
		
		private System.Nullable<decimal> _TransferDepartureAmount;
		
		private System.Nullable<decimal> _DifferenceQuantity;
		
		private System.Nullable<decimal> _DifferenceAmount;
		
		private System.Nullable<decimal> _UnitPriceDifference;
		
		private System.Nullable<decimal> _PostCost;
		
		private System.Nullable<decimal> _PostQuantity;
		
		private System.Nullable<decimal> _PostAmount;
		
		private System.Nullable<decimal> _InProcessQuantity;
		
		private System.Nullable<decimal> _InProcessAmount;
		
		private System.Nullable<decimal> _PurchaseOrderPrice;
		
		private System.Nullable<System.DateTime> _CalculatedDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _CalculatedQuantity;
		
		private System.Nullable<decimal> _CalculatedAmount;
		
		private System.Nullable<decimal> _ReservationQuantity;
		
		private System.Nullable<decimal> _ReservationAmount;
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCloseMonthChanging(System.DateTime value);
    partial void OnCloseMonthChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPartsNameJpChanging(string value);
    partial void OnPartsNameJpChanged();
    partial void OnPreCostChanging(System.Nullable<decimal> value);
    partial void OnPreCostChanged();
    partial void OnPreQuantityChanging(System.Nullable<decimal> value);
    partial void OnPreQuantityChanged();
    partial void OnPreAmountChanging(System.Nullable<decimal> value);
    partial void OnPreAmountChanged();
    partial void OnPurchaseQuantityChanging(System.Nullable<decimal> value);
    partial void OnPurchaseQuantityChanged();
    partial void OnPurchaseAmountChanging(System.Nullable<decimal> value);
    partial void OnPurchaseAmountChanged();
    partial void OnTransferArrivalQuantityChanging(System.Nullable<decimal> value);
    partial void OnTransferArrivalQuantityChanged();
    partial void OnTransferArrivalAmountChanging(System.Nullable<decimal> value);
    partial void OnTransferArrivalAmountChanged();
    partial void OnShipQuantityChanging(System.Nullable<decimal> value);
    partial void OnShipQuantityChanged();
    partial void OnShipAmountChanging(System.Nullable<decimal> value);
    partial void OnShipAmountChanged();
    partial void OnTransferDepartureQuantityChanging(System.Nullable<decimal> value);
    partial void OnTransferDepartureQuantityChanged();
    partial void OnTransferDepartureAmountChanging(System.Nullable<decimal> value);
    partial void OnTransferDepartureAmountChanged();
    partial void OnDifferenceQuantityChanging(System.Nullable<decimal> value);
    partial void OnDifferenceQuantityChanged();
    partial void OnDifferenceAmountChanging(System.Nullable<decimal> value);
    partial void OnDifferenceAmountChanged();
    partial void OnUnitPriceDifferenceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceDifferenceChanged();
    partial void OnPostCostChanging(System.Nullable<decimal> value);
    partial void OnPostCostChanged();
    partial void OnPostQuantityChanging(System.Nullable<decimal> value);
    partial void OnPostQuantityChanged();
    partial void OnPostAmountChanging(System.Nullable<decimal> value);
    partial void OnPostAmountChanged();
    partial void OnInProcessQuantityChanging(System.Nullable<decimal> value);
    partial void OnInProcessQuantityChanged();
    partial void OnInProcessAmountChanging(System.Nullable<decimal> value);
    partial void OnInProcessAmountChanged();
    partial void OnPurchaseOrderPriceChanging(System.Nullable<decimal> value);
    partial void OnPurchaseOrderPriceChanged();
    partial void OnCalculatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCalculatedDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnCalculatedQuantityChanging(System.Nullable<decimal> value);
    partial void OnCalculatedQuantityChanged();
    partial void OnCalculatedAmountChanging(System.Nullable<decimal> value);
    partial void OnCalculatedAmountChanged();
    partial void OnReservationQuantityChanging(System.Nullable<decimal> value);
    partial void OnReservationQuantityChanged();
    partial void OnReservationAmountChanging(System.Nullable<decimal> value);
    partial void OnReservationAmountChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    #endregion
		
		public PartsBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this.OnPartsNameJpChanging(value);
					this.SendPropertyChanging();
					this._PartsNameJp = value;
					this.SendPropertyChanged("PartsNameJp");
					this.OnPartsNameJpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreCost
		{
			get
			{
				return this._PreCost;
			}
			set
			{
				if ((this._PreCost != value))
				{
					this.OnPreCostChanging(value);
					this.SendPropertyChanging();
					this._PreCost = value;
					this.SendPropertyChanged("PreCost");
					this.OnPreCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PreQuantity
		{
			get
			{
				return this._PreQuantity;
			}
			set
			{
				if ((this._PreQuantity != value))
				{
					this.OnPreQuantityChanging(value);
					this.SendPropertyChanging();
					this._PreQuantity = value;
					this.SendPropertyChanged("PreQuantity");
					this.OnPreQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreAmount
		{
			get
			{
				return this._PreAmount;
			}
			set
			{
				if ((this._PreAmount != value))
				{
					this.OnPreAmountChanging(value);
					this.SendPropertyChanging();
					this._PreAmount = value;
					this.SendPropertyChanged("PreAmount");
					this.OnPreAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PurchaseQuantity
		{
			get
			{
				return this._PurchaseQuantity;
			}
			set
			{
				if ((this._PurchaseQuantity != value))
				{
					this.OnPurchaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._PurchaseQuantity = value;
					this.SendPropertyChanged("PurchaseQuantity");
					this.OnPurchaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PurchaseAmount
		{
			get
			{
				return this._PurchaseAmount;
			}
			set
			{
				if ((this._PurchaseAmount != value))
				{
					this.OnPurchaseAmountChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAmount = value;
					this.SendPropertyChanged("PurchaseAmount");
					this.OnPurchaseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferArrivalQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> TransferArrivalQuantity
		{
			get
			{
				return this._TransferArrivalQuantity;
			}
			set
			{
				if ((this._TransferArrivalQuantity != value))
				{
					this.OnTransferArrivalQuantityChanging(value);
					this.SendPropertyChanging();
					this._TransferArrivalQuantity = value;
					this.SendPropertyChanged("TransferArrivalQuantity");
					this.OnTransferArrivalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferArrivalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TransferArrivalAmount
		{
			get
			{
				return this._TransferArrivalAmount;
			}
			set
			{
				if ((this._TransferArrivalAmount != value))
				{
					this.OnTransferArrivalAmountChanging(value);
					this.SendPropertyChanging();
					this._TransferArrivalAmount = value;
					this.SendPropertyChanged("TransferArrivalAmount");
					this.OnTransferArrivalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> ShipQuantity
		{
			get
			{
				return this._ShipQuantity;
			}
			set
			{
				if ((this._ShipQuantity != value))
				{
					this.OnShipQuantityChanging(value);
					this.SendPropertyChanging();
					this._ShipQuantity = value;
					this.SendPropertyChanged("ShipQuantity");
					this.OnShipQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ShipAmount
		{
			get
			{
				return this._ShipAmount;
			}
			set
			{
				if ((this._ShipAmount != value))
				{
					this.OnShipAmountChanging(value);
					this.SendPropertyChanging();
					this._ShipAmount = value;
					this.SendPropertyChanged("ShipAmount");
					this.OnShipAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDepartureQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> TransferDepartureQuantity
		{
			get
			{
				return this._TransferDepartureQuantity;
			}
			set
			{
				if ((this._TransferDepartureQuantity != value))
				{
					this.OnTransferDepartureQuantityChanging(value);
					this.SendPropertyChanging();
					this._TransferDepartureQuantity = value;
					this.SendPropertyChanged("TransferDepartureQuantity");
					this.OnTransferDepartureQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDepartureAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TransferDepartureAmount
		{
			get
			{
				return this._TransferDepartureAmount;
			}
			set
			{
				if ((this._TransferDepartureAmount != value))
				{
					this.OnTransferDepartureAmountChanging(value);
					this.SendPropertyChanging();
					this._TransferDepartureAmount = value;
					this.SendPropertyChanged("TransferDepartureAmount");
					this.OnTransferDepartureAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferenceQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> DifferenceQuantity
		{
			get
			{
				return this._DifferenceQuantity;
			}
			set
			{
				if ((this._DifferenceQuantity != value))
				{
					this.OnDifferenceQuantityChanging(value);
					this.SendPropertyChanging();
					this._DifferenceQuantity = value;
					this.SendPropertyChanged("DifferenceQuantity");
					this.OnDifferenceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifferenceAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DifferenceAmount
		{
			get
			{
				return this._DifferenceAmount;
			}
			set
			{
				if ((this._DifferenceAmount != value))
				{
					this.OnDifferenceAmountChanging(value);
					this.SendPropertyChanging();
					this._DifferenceAmount = value;
					this.SendPropertyChanged("DifferenceAmount");
					this.OnDifferenceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPriceDifference", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> UnitPriceDifference
		{
			get
			{
				return this._UnitPriceDifference;
			}
			set
			{
				if ((this._UnitPriceDifference != value))
				{
					this.OnUnitPriceDifferenceChanging(value);
					this.SendPropertyChanging();
					this._UnitPriceDifference = value;
					this.SendPropertyChanged("UnitPriceDifference");
					this.OnUnitPriceDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PostCost
		{
			get
			{
				return this._PostCost;
			}
			set
			{
				if ((this._PostCost != value))
				{
					this.OnPostCostChanging(value);
					this.SendPropertyChanging();
					this._PostCost = value;
					this.SendPropertyChanged("PostCost");
					this.OnPostCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PostQuantity
		{
			get
			{
				return this._PostQuantity;
			}
			set
			{
				if ((this._PostQuantity != value))
				{
					this.OnPostQuantityChanging(value);
					this.SendPropertyChanging();
					this._PostQuantity = value;
					this.SendPropertyChanged("PostQuantity");
					this.OnPostQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PostAmount
		{
			get
			{
				return this._PostAmount;
			}
			set
			{
				if ((this._PostAmount != value))
				{
					this.OnPostAmountChanging(value);
					this.SendPropertyChanging();
					this._PostAmount = value;
					this.SendPropertyChanged("PostAmount");
					this.OnPostAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InProcessQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> InProcessQuantity
		{
			get
			{
				return this._InProcessQuantity;
			}
			set
			{
				if ((this._InProcessQuantity != value))
				{
					this.OnInProcessQuantityChanging(value);
					this.SendPropertyChanging();
					this._InProcessQuantity = value;
					this.SendPropertyChanged("InProcessQuantity");
					this.OnInProcessQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InProcessAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InProcessAmount
		{
			get
			{
				return this._InProcessAmount;
			}
			set
			{
				if ((this._InProcessAmount != value))
				{
					this.OnInProcessAmountChanging(value);
					this.SendPropertyChanging();
					this._InProcessAmount = value;
					this.SendPropertyChanged("InProcessAmount");
					this.OnInProcessAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PurchaseOrderPrice
		{
			get
			{
				return this._PurchaseOrderPrice;
			}
			set
			{
				if ((this._PurchaseOrderPrice != value))
				{
					this.OnPurchaseOrderPriceChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderPrice = value;
					this.SendPropertyChanged("PurchaseOrderPrice");
					this.OnPurchaseOrderPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CalculatedDate
		{
			get
			{
				return this._CalculatedDate;
			}
			set
			{
				if ((this._CalculatedDate != value))
				{
					this.OnCalculatedDateChanging(value);
					this.SendPropertyChanging();
					this._CalculatedDate = value;
					this.SendPropertyChanged("CalculatedDate");
					this.OnCalculatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> CalculatedQuantity
		{
			get
			{
				return this._CalculatedQuantity;
			}
			set
			{
				if ((this._CalculatedQuantity != value))
				{
					this.OnCalculatedQuantityChanging(value);
					this.SendPropertyChanging();
					this._CalculatedQuantity = value;
					this.SendPropertyChanged("CalculatedQuantity");
					this.OnCalculatedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CalculatedAmount
		{
			get
			{
				return this._CalculatedAmount;
			}
			set
			{
				if ((this._CalculatedAmount != value))
				{
					this.OnCalculatedAmountChanging(value);
					this.SendPropertyChanging();
					this._CalculatedAmount = value;
					this.SendPropertyChanged("CalculatedAmount");
					this.OnCalculatedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ReservationQuantity
		{
			get
			{
				return this._ReservationQuantity;
			}
			set
			{
				if ((this._ReservationQuantity != value))
				{
					this.OnReservationQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReservationQuantity = value;
					this.SendPropertyChanged("ReservationQuantity");
					this.OnReservationQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReservationAmount
		{
			get
			{
				return this._ReservationAmount;
			}
			set
			{
				if ((this._ReservationAmount != value))
				{
					this.OnReservationAmountChanging(value);
					this.SendPropertyChanging();
					this._ReservationAmount = value;
					this.SendPropertyChanged("ReservationAmount");
					this.OnReservationAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryScheduleParts")]
	public partial class InventoryScheduleParts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _InventoryType;
		
		private string _InventoryStatus;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _WarehouseCode;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    #endregion
		
		public InventoryScheduleParts()
		{
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_InventoryScheduleParts", Storage="_Warehouse", ThisKey="WarehouseCode", OtherKey="WarehouseCode", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.InventoryScheduleParts.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.InventoryScheduleParts.Add(this);
						this._WarehouseCode = value.WarehouseCode;
					}
					else
					{
						this._WarehouseCode = default(string);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetCreditJournal_Result
	{
		
		private string _SlipTypeName;
		
		private string _SlipNumber;
		
		private string _StatusName;
		
		private string _OccurredDepartmentCode;
		
		private string _DepartmentName;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _JournalDate;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CompleteFlagName;
		
		private string _Summary;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		public GetCreditJournal_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipTypeName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipTypeName
		{
			get
			{
				return this._SlipTypeName;
			}
			set
			{
				if ((this._SlipTypeName != value))
				{
					this._SlipTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="varchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccurredDepartmentCode", DbType="nvarchar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccurredDepartmentCode
		{
			get
			{
				return this._OccurredDepartmentCode;
			}
			set
			{
				if ((this._OccurredDepartmentCode != value))
				{
					this._OccurredDepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="datetime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="datetime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="datetime")]
		public System.Nullable<System.DateTime> JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="nvarchar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompleteFlagName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompleteFlagName
		{
			get
			{
				return this._CompleteFlagName;
			}
			set
			{
				if ((this._CompleteFlagName != value))
				{
					this._CompleteFlagName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountsReceivableCar")]
	public partial class AccountsReceivableCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _CloseMonth;
		
		private string _SlipNumber;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<decimal> _CarriedBalance;
		
		private System.Nullable<decimal> _PresentMonth;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private System.Nullable<decimal> _CustomerBalance;
		
		private System.Nullable<decimal> _TradeBalance;
		
		private System.Nullable<decimal> _RemainDebtBalance;
		
		private System.Nullable<decimal> _BalanceAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCloseMonthChanging(System.DateTime value);
    partial void OnCloseMonthChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnCarriedBalanceChanging(System.Nullable<decimal> value);
    partial void OnCarriedBalanceChanged();
    partial void OnPresentMonthChanging(System.Nullable<decimal> value);
    partial void OnPresentMonthChanged();
    partial void OnPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountChanged();
    partial void OnCustomerBalanceChanging(System.Nullable<decimal> value);
    partial void OnCustomerBalanceChanged();
    partial void OnTradeBalanceChanging(System.Nullable<decimal> value);
    partial void OnTradeBalanceChanged();
    partial void OnRemainDebtBalanceChanging(System.Nullable<decimal> value);
    partial void OnRemainDebtBalanceChanged();
    partial void OnBalanceAmountChanging(System.Nullable<decimal> value);
    partial void OnBalanceAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public AccountsReceivableCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CloseMonth
		{
			get
			{
				return this._CloseMonth;
			}
			set
			{
				if ((this._CloseMonth != value))
				{
					this.OnCloseMonthChanging(value);
					this.SendPropertyChanging();
					this._CloseMonth = value;
					this.SendPropertyChanged("CloseMonth");
					this.OnCloseMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarriedBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarriedBalance
		{
			get
			{
				return this._CarriedBalance;
			}
			set
			{
				if ((this._CarriedBalance != value))
				{
					this.OnCarriedBalanceChanging(value);
					this.SendPropertyChanging();
					this._CarriedBalance = value;
					this.SendPropertyChanged("CarriedBalance");
					this.OnCarriedBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentMonth", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PresentMonth
		{
			get
			{
				return this._PresentMonth;
			}
			set
			{
				if ((this._PresentMonth != value))
				{
					this.OnPresentMonthChanging(value);
					this.SendPropertyChanging();
					this._PresentMonth = value;
					this.SendPropertyChanged("PresentMonth");
					this.OnPresentMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CustomerBalance
		{
			get
			{
				return this._CustomerBalance;
			}
			set
			{
				if ((this._CustomerBalance != value))
				{
					this.OnCustomerBalanceChanging(value);
					this.SendPropertyChanging();
					this._CustomerBalance = value;
					this.SendPropertyChanged("CustomerBalance");
					this.OnCustomerBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeBalance
		{
			get
			{
				return this._TradeBalance;
			}
			set
			{
				if ((this._TradeBalance != value))
				{
					this.OnTradeBalanceChanging(value);
					this.SendPropertyChanging();
					this._TradeBalance = value;
					this.SendPropertyChanged("TradeBalance");
					this.OnTradeBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainDebtBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RemainDebtBalance
		{
			get
			{
				return this._RemainDebtBalance;
			}
			set
			{
				if ((this._RemainDebtBalance != value))
				{
					this.OnRemainDebtBalanceChanging(value);
					this.SendPropertyChanging();
					this._RemainDebtBalance = value;
					this.SendPropertyChanged("RemainDebtBalance");
					this.OnRemainDebtBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class T_CarPurChaseSalesDetail
	{
		
		private string _SalesCarNumber;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _MakerName;
		
		private string _BrandStoreCode;
		
		private string _NewUsedType;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _CarName;
		
		private string _CarGradeCode;
		
		private string _Vin;
		
		private string _PurchaseLocationCode;
		
		private string _ArrivalLocationCode;
		
		private string _CarPurchaseType;
		
		private string _SupplierCode;
		
		private decimal _Amount;
		
		private string _SlipNumber;
		
		private string _DepartmentCode;
		
		private string _SalesType;
		
		private string _CustomerCode;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _ShopOptionAmount;
		
		private System.Nullable<decimal> _SalesCostTotalAmount;
		
		private System.Nullable<decimal> _SalesTotalAmount;
		
		private string _AreaCode;
		
		private string _CustomerType;
		
		private string _CancelFlag;
		
		private System.Nullable<decimal> _RecyclePrice;
		
		private System.Nullable<decimal> _MakerOptionAmount;
		
		private string _CarUsage;
		
		private System.Nullable<decimal> _RecycleAmount;
		
		private string _CompanyRegistrationFlag;
		
		private string _LocationCode;
		
		private string _NewUsedTypeName;
		
		private string _PurchaseLocationName;
		
		private string _ArrivalLocationName;
		
		private string _CarPurchaseTypeName;
		
		private string _SupplierName;
		
		private string _DepartmentName;
		
		private string _CustomerName;
		
		private System.Nullable<decimal> _CancelAmount;
		
		private System.Nullable<decimal> _CancelTaxAmount;
		
		private System.Nullable<decimal> _CancelTotalAmount;
		
		private System.Nullable<decimal> _FinancialAmount;
		
		private System.Nullable<decimal> _CancelFinancialAmount;
		
		public T_CarPurChaseSalesDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStoreCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStoreCode
		{
			get
			{
				return this._BrandStoreCode;
			}
			set
			{
				if ((this._BrandStoreCode != value))
				{
					this._BrandStoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this._CarGradeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationCode
		{
			get
			{
				return this._PurchaseLocationCode;
			}
			set
			{
				if ((this._PurchaseLocationCode != value))
				{
					this._PurchaseLocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalLocationCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrivalLocationCode
		{
			get
			{
				return this._ArrivalLocationCode;
			}
			set
			{
				if ((this._ArrivalLocationCode != value))
				{
					this._ArrivalLocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseType")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseType
		{
			get
			{
				return this._CarPurchaseType;
			}
			set
			{
				if ((this._CarPurchaseType != value))
				{
					this._CarPurchaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesType")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesType
		{
			get
			{
				return this._SalesType;
			}
			set
			{
				if ((this._SalesType != value))
				{
					this._SalesType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this._SalesPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmount")]
		public System.Nullable<decimal> ShopOptionAmount
		{
			get
			{
				return this._ShopOptionAmount;
			}
			set
			{
				if ((this._ShopOptionAmount != value))
				{
					this._ShopOptionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmount")]
		public System.Nullable<decimal> SalesCostTotalAmount
		{
			get
			{
				return this._SalesCostTotalAmount;
			}
			set
			{
				if ((this._SalesCostTotalAmount != value))
				{
					this._SalesCostTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTotalAmount")]
		public System.Nullable<decimal> SalesTotalAmount
		{
			get
			{
				return this._SalesTotalAmount;
			}
			set
			{
				if ((this._SalesTotalAmount != value))
				{
					this._SalesTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaCode")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AreaCode
		{
			get
			{
				return this._AreaCode;
			}
			set
			{
				if ((this._AreaCode != value))
				{
					this._AreaCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this._CustomerType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFlag")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CancelFlag
		{
			get
			{
				return this._CancelFlag;
			}
			set
			{
				if ((this._CancelFlag != value))
				{
					this._CancelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecyclePrice")]
		public System.Nullable<decimal> RecyclePrice
		{
			get
			{
				return this._RecyclePrice;
			}
			set
			{
				if ((this._RecyclePrice != value))
				{
					this._RecyclePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionAmount")]
		public System.Nullable<decimal> MakerOptionAmount
		{
			get
			{
				return this._MakerOptionAmount;
			}
			set
			{
				if ((this._MakerOptionAmount != value))
				{
					this._MakerOptionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarUsage", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarUsage
		{
			get
			{
				return this._CarUsage;
			}
			set
			{
				if ((this._CarUsage != value))
				{
					this._CarUsage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleAmount")]
		public System.Nullable<decimal> RecycleAmount
		{
			get
			{
				return this._RecycleAmount;
			}
			set
			{
				if ((this._RecycleAmount != value))
				{
					this._RecycleAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyRegistrationFlag")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyRegistrationFlag
		{
			get
			{
				return this._CompanyRegistrationFlag;
			}
			set
			{
				if ((this._CompanyRegistrationFlag != value))
				{
					this._CompanyRegistrationFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="nvarchar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedTypeName", DbType="varchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedTypeName
		{
			get
			{
				return this._NewUsedTypeName;
			}
			set
			{
				if ((this._NewUsedTypeName != value))
				{
					this._NewUsedTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationName
		{
			get
			{
				return this._PurchaseLocationName;
			}
			set
			{
				if ((this._PurchaseLocationName != value))
				{
					this._PurchaseLocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalLocationName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ArrivalLocationName
		{
			get
			{
				return this._ArrivalLocationName;
			}
			set
			{
				if ((this._ArrivalLocationName != value))
				{
					this._ArrivalLocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseTypeName", DbType="varchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseTypeName
		{
			get
			{
				return this._CarPurchaseTypeName;
			}
			set
			{
				if ((this._CarPurchaseTypeName != value))
				{
					this._CarPurchaseTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="nvarchar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="nvarchar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> CancelAmount
		{
			get
			{
				return this._CancelAmount;
			}
			set
			{
				if ((this._CancelAmount != value))
				{
					this._CancelAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelTaxAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> CancelTaxAmount
		{
			get
			{
				return this._CancelTaxAmount;
			}
			set
			{
				if ((this._CancelTaxAmount != value))
				{
					this._CancelTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelTotalAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> CancelTotalAmount
		{
			get
			{
				return this._CancelTotalAmount;
			}
			set
			{
				if ((this._CancelTotalAmount != value))
				{
					this._CancelTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> FinancialAmount
		{
			get
			{
				return this._FinancialAmount;
			}
			set
			{
				if ((this._FinancialAmount != value))
				{
					this._FinancialAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelFinancialAmount", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> CancelFinancialAmount
		{
			get
			{
				return this._CancelFinancialAmount;
			}
			set
			{
				if ((this._CancelFinancialAmount != value))
				{
					this._CancelFinancialAmount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetServiceRequestList_Result
	{
		
		private string _DepartmentName;
		
		private string _EmployeeName;
		
		private string _OriginalSlipNumber;
		
		private string _CustomerName;
		
		private string _CarName;
		
		private string _Vin;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private System.Nullable<System.DateTime> _DeliveryRequirement;
		
		private string _Memo;
		
		private string _DepartmentCode;
		
		public GetServiceRequestList_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OriginalSlipNumber
		{
			get
			{
				return this._OriginalSlipNumber;
			}
			set
			{
				if ((this._OriginalSlipNumber != value))
				{
					this._OriginalSlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryRequirement", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryRequirement
		{
			get
			{
				return this._DeliveryRequirement;
			}
			set
			{
				if ((this._DeliveryRequirement != value))
				{
					this._DeliveryRequirement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetCarSalesList_Result
	{
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private System.Nullable<int> _Jul_Cnt;
		
		private System.Nullable<int> _Aug_Cnt;
		
		private System.Nullable<int> _Sep_Cnt;
		
		private System.Nullable<int> _Oct_Cnt;
		
		private System.Nullable<int> _Nov_Cnt;
		
		private System.Nullable<int> _Dec_Cnt;
		
		private System.Nullable<int> _Jan_Cnt;
		
		private System.Nullable<int> _Feb_Cnt;
		
		private System.Nullable<int> _Mar_Cnt;
		
		private System.Nullable<int> _Apr_Cnt;
		
		private System.Nullable<int> _May_Cnt;
		
		private System.Nullable<int> _Jun_Cnt;
		
		public GetCarSalesList_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jul_Cnt", DbType="Int")]
		public System.Nullable<int> Jul_Cnt
		{
			get
			{
				return this._Jul_Cnt;
			}
			set
			{
				if ((this._Jul_Cnt != value))
				{
					this._Jul_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aug_Cnt", DbType="Int")]
		public System.Nullable<int> Aug_Cnt
		{
			get
			{
				return this._Aug_Cnt;
			}
			set
			{
				if ((this._Aug_Cnt != value))
				{
					this._Aug_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sep_Cnt", DbType="Int")]
		public System.Nullable<int> Sep_Cnt
		{
			get
			{
				return this._Sep_Cnt;
			}
			set
			{
				if ((this._Sep_Cnt != value))
				{
					this._Sep_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oct_Cnt", DbType="Int")]
		public System.Nullable<int> Oct_Cnt
		{
			get
			{
				return this._Oct_Cnt;
			}
			set
			{
				if ((this._Oct_Cnt != value))
				{
					this._Oct_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nov_Cnt", DbType="Int")]
		public System.Nullable<int> Nov_Cnt
		{
			get
			{
				return this._Nov_Cnt;
			}
			set
			{
				if ((this._Nov_Cnt != value))
				{
					this._Nov_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dec_Cnt", DbType="Int")]
		public System.Nullable<int> Dec_Cnt
		{
			get
			{
				return this._Dec_Cnt;
			}
			set
			{
				if ((this._Dec_Cnt != value))
				{
					this._Dec_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jan_Cnt", DbType="Int")]
		public System.Nullable<int> Jan_Cnt
		{
			get
			{
				return this._Jan_Cnt;
			}
			set
			{
				if ((this._Jan_Cnt != value))
				{
					this._Jan_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feb_Cnt", DbType="Int")]
		public System.Nullable<int> Feb_Cnt
		{
			get
			{
				return this._Feb_Cnt;
			}
			set
			{
				if ((this._Feb_Cnt != value))
				{
					this._Feb_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mar_Cnt", DbType="Int")]
		public System.Nullable<int> Mar_Cnt
		{
			get
			{
				return this._Mar_Cnt;
			}
			set
			{
				if ((this._Mar_Cnt != value))
				{
					this._Mar_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apr_Cnt", DbType="Int")]
		public System.Nullable<int> Apr_Cnt
		{
			get
			{
				return this._Apr_Cnt;
			}
			set
			{
				if ((this._Apr_Cnt != value))
				{
					this._Apr_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_May_Cnt", DbType="Int")]
		public System.Nullable<int> May_Cnt
		{
			get
			{
				return this._May_Cnt;
			}
			set
			{
				if ((this._May_Cnt != value))
				{
					this._May_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jun_Cnt", DbType="Int")]
		public System.Nullable<int> Jun_Cnt
		{
			get
			{
				return this._Jun_Cnt;
			}
			set
			{
				if ((this._Jun_Cnt != value))
				{
					this._Jun_Cnt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class GetCarSalesEmployeeList_Result
	{
		
		private string _EmployeeNumber;
		
		private string _EmployeeCode;
		
		private string _EmployeeName;
		
		private System.Nullable<int> _Jul_Cnt;
		
		private System.Nullable<int> _Aug_Cnt;
		
		private System.Nullable<int> _Sep_Cnt;
		
		private System.Nullable<int> _Oct_Cnt;
		
		private System.Nullable<int> _Nov_Cnt;
		
		private System.Nullable<int> _Dec_Cnt;
		
		private System.Nullable<int> _Jan_Cnt;
		
		private System.Nullable<int> _Feb_Cnt;
		
		private System.Nullable<int> _Mar_Cnt;
		
		private System.Nullable<int> _Apr_Cnt;
		
		private System.Nullable<int> _May_Cnt;
		
		private System.Nullable<int> _Jun_Cnt;
		
		public GetCarSalesEmployeeList_Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this._EmployeeNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this._EmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jul_Cnt", DbType="Int")]
		public System.Nullable<int> Jul_Cnt
		{
			get
			{
				return this._Jul_Cnt;
			}
			set
			{
				if ((this._Jul_Cnt != value))
				{
					this._Jul_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aug_Cnt", DbType="Int")]
		public System.Nullable<int> Aug_Cnt
		{
			get
			{
				return this._Aug_Cnt;
			}
			set
			{
				if ((this._Aug_Cnt != value))
				{
					this._Aug_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sep_Cnt", DbType="Int")]
		public System.Nullable<int> Sep_Cnt
		{
			get
			{
				return this._Sep_Cnt;
			}
			set
			{
				if ((this._Sep_Cnt != value))
				{
					this._Sep_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oct_Cnt", DbType="Int")]
		public System.Nullable<int> Oct_Cnt
		{
			get
			{
				return this._Oct_Cnt;
			}
			set
			{
				if ((this._Oct_Cnt != value))
				{
					this._Oct_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nov_Cnt", DbType="Int")]
		public System.Nullable<int> Nov_Cnt
		{
			get
			{
				return this._Nov_Cnt;
			}
			set
			{
				if ((this._Nov_Cnt != value))
				{
					this._Nov_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dec_Cnt", DbType="Int")]
		public System.Nullable<int> Dec_Cnt
		{
			get
			{
				return this._Dec_Cnt;
			}
			set
			{
				if ((this._Dec_Cnt != value))
				{
					this._Dec_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jan_Cnt", DbType="Int")]
		public System.Nullable<int> Jan_Cnt
		{
			get
			{
				return this._Jan_Cnt;
			}
			set
			{
				if ((this._Jan_Cnt != value))
				{
					this._Jan_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feb_Cnt", DbType="Int")]
		public System.Nullable<int> Feb_Cnt
		{
			get
			{
				return this._Feb_Cnt;
			}
			set
			{
				if ((this._Feb_Cnt != value))
				{
					this._Feb_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mar_Cnt", DbType="Int")]
		public System.Nullable<int> Mar_Cnt
		{
			get
			{
				return this._Mar_Cnt;
			}
			set
			{
				if ((this._Mar_Cnt != value))
				{
					this._Mar_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apr_Cnt", DbType="Int")]
		public System.Nullable<int> Apr_Cnt
		{
			get
			{
				return this._Apr_Cnt;
			}
			set
			{
				if ((this._Apr_Cnt != value))
				{
					this._Apr_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_May_Cnt", DbType="Int")]
		public System.Nullable<int> May_Cnt
		{
			get
			{
				return this._May_Cnt;
			}
			set
			{
				if ((this._May_Cnt != value))
				{
					this._May_Cnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jun_Cnt", DbType="Int")]
		public System.Nullable<int> Jun_Cnt
		{
			get
			{
				return this._Jun_Cnt;
			}
			set
			{
				if ((this._Jun_Cnt != value))
				{
					this._Jun_Cnt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryMonthControlCar")]
	public partial class InventoryMonthControlCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InventoryMonth;
		
		private string _InventoryStatus;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryMonthChanging(string value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InventoryMonthControlCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryScheduleCar")]
	public partial class InventoryScheduleCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DepartmentCode;
		
		private string _WarehouseCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _InventoryStatus;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnInventoryStatusChanging(string value);
    partial void OnInventoryStatusChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InventoryScheduleCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryStatus
		{
			get
			{
				return this._InventoryStatus;
			}
			set
			{
				if ((this._InventoryStatus != value))
				{
					this.OnInventoryStatusChanging(value);
					this.SendPropertyChanging();
					this._InventoryStatus = value;
					this.SendPropertyChanged("InventoryStatus");
					this.OnInventoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventoryStockCar")]
	public partial class InventoryStockCar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InventoryId;
		
		private string _DepartmentCode;
		
		private System.DateTime _InventoryMonth;
		
		private string _LocationCode;
		
		private string _EmployeeCode;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _NewUsedType;
		
		private string _CarUsage;
		
		private System.Nullable<decimal> _Quantity;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _Summary;
		
		private System.Nullable<decimal> _PhysicalQuantity;
		
		private string _Comment;
		
		private string _WarehouseCode;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryIdChanging(System.Guid value);
    partial void OnInventoryIdChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnInventoryMonthChanging(System.DateTime value);
    partial void OnInventoryMonthChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnNewUsedTypeChanging(string value);
    partial void OnNewUsedTypeChanged();
    partial void OnCarUsageChanging(string value);
    partial void OnCarUsageChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPhysicalQuantityChanging(System.Nullable<decimal> value);
    partial void OnPhysicalQuantityChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnWarehouseCodeChanging(string value);
    partial void OnWarehouseCodeChanged();
    #endregion
		
		public InventoryStockCar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InventoryId
		{
			get
			{
				return this._InventoryId;
			}
			set
			{
				if ((this._InventoryId != value))
				{
					this.OnInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._InventoryId = value;
					this.SendPropertyChanged("InventoryId");
					this.OnInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this.OnInventoryMonthChanging(value);
					this.SendPropertyChanging();
					this._InventoryMonth = value;
					this.SendPropertyChanged("InventoryMonth");
					this.OnInventoryMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this.OnNewUsedTypeChanging(value);
					this.SendPropertyChanging();
					this._NewUsedType = value;
					this.SendPropertyChanged("NewUsedType");
					this.OnNewUsedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarUsage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarUsage
		{
			get
			{
				return this._CarUsage;
			}
			set
			{
				if ((this._CarUsage != value))
				{
					this.OnCarUsageChanging(value);
					this.SendPropertyChanging();
					this._CarUsage = value;
					this.SendPropertyChanged("CarUsage");
					this.OnCarUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PhysicalQuantity
		{
			get
			{
				return this._PhysicalQuantity;
			}
			set
			{
				if ((this._PhysicalQuantity != value))
				{
					this.OnPhysicalQuantityChanging(value);
					this.SendPropertyChanging();
					this._PhysicalQuantity = value;
					this.SendPropertyChanged("PhysicalQuantity");
					this.OnPhysicalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this.OnWarehouseCodeChanging(value);
					this.SendPropertyChanging();
					this._WarehouseCode = value;
					this.SendPropertyChanged("WarehouseCode");
					this.OnWarehouseCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.W_JournalChange")]
	public partial class W_JournalChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _JournalId;
		
		private string _SlipNumber_old;
		
		private string _SlipNumber_new;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.Guid _JournalChangeId;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIdChanging(System.Guid value);
    partial void OnJournalIdChanged();
    partial void OnSlipNumber_oldChanging(string value);
    partial void OnSlipNumber_oldChanged();
    partial void OnSlipNumber_newChanging(string value);
    partial void OnSlipNumber_newChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnJournalChangeIdChanging(System.Guid value);
    partial void OnJournalChangeIdChanged();
    #endregion
		
		public W_JournalChange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid JournalId
		{
			get
			{
				return this._JournalId;
			}
			set
			{
				if ((this._JournalId != value))
				{
					this.OnJournalIdChanging(value);
					this.SendPropertyChanging();
					this._JournalId = value;
					this.SendPropertyChanged("JournalId");
					this.OnJournalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber_old", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber_old
		{
			get
			{
				return this._SlipNumber_old;
			}
			set
			{
				if ((this._SlipNumber_old != value))
				{
					this.OnSlipNumber_oldChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber_old = value;
					this.SendPropertyChanged("SlipNumber_old");
					this.OnSlipNumber_oldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber_new", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber_new
		{
			get
			{
				return this._SlipNumber_new;
			}
			set
			{
				if ((this._SlipNumber_new != value))
				{
					this.OnSlipNumber_newChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber_new = value;
					this.SendPropertyChanged("SlipNumber_new");
					this.OnSlipNumber_newChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalChangeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid JournalChangeId
		{
			get
			{
				return this._JournalChangeId;
			}
			set
			{
				if ((this._JournalChangeId != value))
				{
					this.OnJournalChangeIdChanging(value);
					this.SendPropertyChanging();
					this._JournalChangeId = value;
					this.SendPropertyChanged("JournalChangeId");
					this.OnJournalChangeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsMovingAverageCost")]
	public partial class PartsMovingAverageCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyCode;
		
		private string _PartsNumber;
		
		private System.Nullable<decimal> _Price;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public PartsMovingAverageCost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarFixedAssets")]
	public partial class CarFixedAssets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private System.Nullable<int> _UsefulLives;
		
		private System.Nullable<System.DateTime> _AcquisitionDate;
		
		private System.Nullable<System.DateTime> _LossDate;
		
		private System.Nullable<decimal> _AcquisitionPrice;
		
		private System.Nullable<decimal> _UndepreciatedBalance;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnUsefulLivesChanging(System.Nullable<int> value);
    partial void OnUsefulLivesChanged();
    partial void OnAcquisitionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcquisitionDateChanged();
    partial void OnLossDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLossDateChanged();
    partial void OnAcquisitionPriceChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionPriceChanged();
    partial void OnUndepreciatedBalanceChanging(System.Nullable<decimal> value);
    partial void OnUndepreciatedBalanceChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public CarFixedAssets()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulLives", DbType="Int")]
		public System.Nullable<int> UsefulLives
		{
			get
			{
				return this._UsefulLives;
			}
			set
			{
				if ((this._UsefulLives != value))
				{
					this.OnUsefulLivesChanging(value);
					this.SendPropertyChanging();
					this._UsefulLives = value;
					this.SendPropertyChanged("UsefulLives");
					this.OnUsefulLivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcquisitionDate
		{
			get
			{
				return this._AcquisitionDate;
			}
			set
			{
				if ((this._AcquisitionDate != value))
				{
					this.OnAcquisitionDateChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionDate = value;
					this.SendPropertyChanged("AcquisitionDate");
					this.OnAcquisitionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LossDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LossDate
		{
			get
			{
				return this._LossDate;
			}
			set
			{
				if ((this._LossDate != value))
				{
					this.OnLossDateChanging(value);
					this.SendPropertyChanging();
					this._LossDate = value;
					this.SendPropertyChanged("LossDate");
					this.OnLossDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AcquisitionPrice
		{
			get
			{
				return this._AcquisitionPrice;
			}
			set
			{
				if ((this._AcquisitionPrice != value))
				{
					this.OnAcquisitionPriceChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionPrice = value;
					this.SendPropertyChanged("AcquisitionPrice");
					this.OnAcquisitionPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndepreciatedBalance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> UndepreciatedBalance
		{
			get
			{
				return this._UndepreciatedBalance;
			}
			set
			{
				if ((this._UndepreciatedBalance != value))
				{
					this.OnUndepreciatedBalanceChanging(value);
					this.SendPropertyChanging();
					this._UndepreciatedBalance = value;
					this.SendPropertyChanged("UndepreciatedBalance");
					this.OnUndepreciatedBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepreciationRate")]
	public partial class DepreciationRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsefulLives;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<decimal> _RevisedRate;
		
		private System.Nullable<decimal> _SecurityRatio;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsefulLivesChanging(int value);
    partial void OnUsefulLivesChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnRevisedRateChanging(System.Nullable<decimal> value);
    partial void OnRevisedRateChanged();
    partial void OnSecurityRatioChanging(System.Nullable<decimal> value);
    partial void OnSecurityRatioChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public DepreciationRate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulLives", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UsefulLives
		{
			get
			{
				return this._UsefulLives;
			}
			set
			{
				if ((this._UsefulLives != value))
				{
					this.OnUsefulLivesChanging(value);
					this.SendPropertyChanging();
					this._UsefulLives = value;
					this.SendPropertyChanged("UsefulLives");
					this.OnUsefulLivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisedRate", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> RevisedRate
		{
			get
			{
				return this._RevisedRate;
			}
			set
			{
				if ((this._RevisedRate != value))
				{
					this.OnRevisedRateChanging(value);
					this.SendPropertyChanging();
					this._RevisedRate = value;
					this.SendPropertyChanged("RevisedRate");
					this.OnRevisedRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRatio", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> SecurityRatio
		{
			get
			{
				return this._SecurityRatio;
			}
			set
			{
				if ((this._SecurityRatio != value))
				{
					this.OnSecurityRatioChanging(value);
					this.SendPropertyChanging();
					this._SecurityRatio = value;
					this.SendPropertyChanged("SecurityRatio");
					this.OnSecurityRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CarStock")]
	public partial class CarStock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _ProcessDate;
		
		private string _SalesCarNumber;
		
		private string _BrandStore;
		
		private string _NewUsedType;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private string _CarName;
		
		private string _CarGradeCode;
		
		private string _Vin;
		
		private string _PurchaseLocationCode;
		
		private string _CarPurchaseType;
		
		private string _SupplierCode;
		
		private System.Nullable<decimal> _BeginningInventory;
		
		private System.Nullable<decimal> _MonthPurchase;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _SlipNumber;
		
		private string _SalesType;
		
		private string _CustomerCode;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _ShopOptionAmount;
		
		private System.Nullable<decimal> _SalesCostTotalAmount;
		
		private System.Nullable<decimal> _SalesTotalAmount;
		
		private System.Nullable<decimal> _SalesCostAmount;
		
		private System.Nullable<decimal> _SalesProfits;
		
		private System.Nullable<decimal> _ReductionTotal;
		
		private System.Nullable<decimal> _SelfRegistration;
		
		private System.Nullable<decimal> _OtherDealer;
		
		private System.Nullable<decimal> _DemoCar;
		
		private System.Nullable<decimal> _TemporaryCar;
		
		private System.Nullable<decimal> _EndInventory;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _RecycleAmount;
		
		private System.Nullable<decimal> _OtherAccount;
		
		private System.Nullable<decimal> _RentalCar;
		
		private System.Nullable<decimal> _BusinessCar;
		
		private System.Nullable<decimal> _PRCar;
		
		private string _LocationCode;
		
		private System.Nullable<decimal> _CancelPurchase;
		
		private string _CarPurchaseTypeName;
		
		private string _MakerName;
		
		private string _PurchaseLocationName;
		
		private string _InventoryLocationName;
		
		private string _SupplierName;
		
		private string _SalesDepartmentCode;
		
		private string _SalesDepartmentName;
		
		private string _NewUsedTypeName;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _SelfRegistrationPurchaseDate;
		
		private string _CustomerTypeName;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessDateChanging(System.DateTime value);
    partial void OnProcessDateChanged();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnBrandStoreChanging(string value);
    partial void OnBrandStoreChanged();
    partial void OnNewUsedTypeChanging(string value);
    partial void OnNewUsedTypeChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    partial void OnCarNameChanging(string value);
    partial void OnCarNameChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnPurchaseLocationCodeChanging(string value);
    partial void OnPurchaseLocationCodeChanged();
    partial void OnCarPurchaseTypeChanging(string value);
    partial void OnCarPurchaseTypeChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnBeginningInventoryChanging(System.Nullable<decimal> value);
    partial void OnBeginningInventoryChanged();
    partial void OnMonthPurchaseChanging(System.Nullable<decimal> value);
    partial void OnMonthPurchaseChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnSalesTypeChanging(string value);
    partial void OnSalesTypeChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnShopOptionAmountChanging(System.Nullable<decimal> value);
    partial void OnShopOptionAmountChanged();
    partial void OnSalesCostTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesCostTotalAmountChanged();
    partial void OnSalesTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesTotalAmountChanged();
    partial void OnSalesCostAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesCostAmountChanged();
    partial void OnSalesProfitsChanging(System.Nullable<decimal> value);
    partial void OnSalesProfitsChanged();
    partial void OnReductionTotalChanging(System.Nullable<decimal> value);
    partial void OnReductionTotalChanged();
    partial void OnSelfRegistrationChanging(System.Nullable<decimal> value);
    partial void OnSelfRegistrationChanged();
    partial void OnOtherDealerChanging(System.Nullable<decimal> value);
    partial void OnOtherDealerChanged();
    partial void OnDemoCarChanging(System.Nullable<decimal> value);
    partial void OnDemoCarChanged();
    partial void OnTemporaryCarChanging(System.Nullable<decimal> value);
    partial void OnTemporaryCarChanged();
    partial void OnEndInventoryChanging(System.Nullable<decimal> value);
    partial void OnEndInventoryChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnRecycleAmountChanging(System.Nullable<decimal> value);
    partial void OnRecycleAmountChanged();
    partial void OnOtherAccountChanging(System.Nullable<decimal> value);
    partial void OnOtherAccountChanged();
    partial void OnRentalCarChanging(System.Nullable<decimal> value);
    partial void OnRentalCarChanged();
    partial void OnBusinessCarChanging(System.Nullable<decimal> value);
    partial void OnBusinessCarChanged();
    partial void OnPRCarChanging(System.Nullable<decimal> value);
    partial void OnPRCarChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnCancelPurchaseChanging(System.Nullable<decimal> value);
    partial void OnCancelPurchaseChanged();
    partial void OnCarPurchaseTypeNameChanging(string value);
    partial void OnCarPurchaseTypeNameChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnPurchaseLocationNameChanging(string value);
    partial void OnPurchaseLocationNameChanged();
    partial void OnInventoryLocationNameChanging(string value);
    partial void OnInventoryLocationNameChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSalesDepartmentCodeChanging(string value);
    partial void OnSalesDepartmentCodeChanged();
    partial void OnSalesDepartmentNameChanging(string value);
    partial void OnSalesDepartmentNameChanged();
    partial void OnNewUsedTypeNameChanging(string value);
    partial void OnNewUsedTypeNameChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnSelfRegistrationPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSelfRegistrationPurchaseDateChanged();
    partial void OnCustomerTypeNameChanging(string value);
    partial void OnCustomerTypeNameChanged();
    #endregion
		
		public CarStock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandStore", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BrandStore
		{
			get
			{
				return this._BrandStore;
			}
			set
			{
				if ((this._BrandStore != value))
				{
					this.OnBrandStoreChanging(value);
					this.SendPropertyChanging();
					this._BrandStore = value;
					this.SendPropertyChanged("BrandStore");
					this.OnBrandStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this.OnNewUsedTypeChanging(value);
					this.SendPropertyChanging();
					this._NewUsedType = value;
					this.SendPropertyChanged("NewUsedType");
					this.OnNewUsedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this.OnCarNameChanging(value);
					this.SendPropertyChanging();
					this._CarName = value;
					this.SendPropertyChanged("CarName");
					this.OnCarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationCode
		{
			get
			{
				return this._PurchaseLocationCode;
			}
			set
			{
				if ((this._PurchaseLocationCode != value))
				{
					this.OnPurchaseLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseLocationCode = value;
					this.SendPropertyChanged("PurchaseLocationCode");
					this.OnPurchaseLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseType
		{
			get
			{
				return this._CarPurchaseType;
			}
			set
			{
				if ((this._CarPurchaseType != value))
				{
					this.OnCarPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseType = value;
					this.SendPropertyChanged("CarPurchaseType");
					this.OnCarPurchaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginningInventory", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BeginningInventory
		{
			get
			{
				return this._BeginningInventory;
			}
			set
			{
				if ((this._BeginningInventory != value))
				{
					this.OnBeginningInventoryChanging(value);
					this.SendPropertyChanging();
					this._BeginningInventory = value;
					this.SendPropertyChanged("BeginningInventory");
					this.OnBeginningInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthPurchase", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MonthPurchase
		{
			get
			{
				return this._MonthPurchase;
			}
			set
			{
				if ((this._MonthPurchase != value))
				{
					this.OnMonthPurchaseChanging(value);
					this.SendPropertyChanging();
					this._MonthPurchase = value;
					this.SendPropertyChanged("MonthPurchase");
					this.OnMonthPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesType
		{
			get
			{
				return this._SalesType;
			}
			set
			{
				if ((this._SalesType != value))
				{
					this.OnSalesTypeChanging(value);
					this.SendPropertyChanging();
					this._SalesType = value;
					this.SendPropertyChanged("SalesType");
					this.OnSalesTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ShopOptionAmount
		{
			get
			{
				return this._ShopOptionAmount;
			}
			set
			{
				if ((this._ShopOptionAmount != value))
				{
					this.OnShopOptionAmountChanging(value);
					this.SendPropertyChanging();
					this._ShopOptionAmount = value;
					this.SendPropertyChanged("ShopOptionAmount");
					this.OnShopOptionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesCostTotalAmount
		{
			get
			{
				return this._SalesCostTotalAmount;
			}
			set
			{
				if ((this._SalesCostTotalAmount != value))
				{
					this.OnSalesCostTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesCostTotalAmount = value;
					this.SendPropertyChanged("SalesCostTotalAmount");
					this.OnSalesCostTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesTotalAmount
		{
			get
			{
				return this._SalesTotalAmount;
			}
			set
			{
				if ((this._SalesTotalAmount != value))
				{
					this.OnSalesTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesTotalAmount = value;
					this.SendPropertyChanged("SalesTotalAmount");
					this.OnSalesTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesCostAmount
		{
			get
			{
				return this._SalesCostAmount;
			}
			set
			{
				if ((this._SalesCostAmount != value))
				{
					this.OnSalesCostAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesCostAmount = value;
					this.SendPropertyChanged("SalesCostAmount");
					this.OnSalesCostAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesProfits", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesProfits
		{
			get
			{
				return this._SalesProfits;
			}
			set
			{
				if ((this._SalesProfits != value))
				{
					this.OnSalesProfitsChanging(value);
					this.SendPropertyChanging();
					this._SalesProfits = value;
					this.SendPropertyChanged("SalesProfits");
					this.OnSalesProfitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReductionTotal", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ReductionTotal
		{
			get
			{
				return this._ReductionTotal;
			}
			set
			{
				if ((this._ReductionTotal != value))
				{
					this.OnReductionTotalChanging(value);
					this.SendPropertyChanging();
					this._ReductionTotal = value;
					this.SendPropertyChanged("ReductionTotal");
					this.OnReductionTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelfRegistration", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SelfRegistration
		{
			get
			{
				return this._SelfRegistration;
			}
			set
			{
				if ((this._SelfRegistration != value))
				{
					this.OnSelfRegistrationChanging(value);
					this.SendPropertyChanging();
					this._SelfRegistration = value;
					this.SendPropertyChanged("SelfRegistration");
					this.OnSelfRegistrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherDealer", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OtherDealer
		{
			get
			{
				return this._OtherDealer;
			}
			set
			{
				if ((this._OtherDealer != value))
				{
					this.OnOtherDealerChanging(value);
					this.SendPropertyChanging();
					this._OtherDealer = value;
					this.SendPropertyChanged("OtherDealer");
					this.OnOtherDealerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemoCar", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DemoCar
		{
			get
			{
				return this._DemoCar;
			}
			set
			{
				if ((this._DemoCar != value))
				{
					this.OnDemoCarChanging(value);
					this.SendPropertyChanging();
					this._DemoCar = value;
					this.SendPropertyChanged("DemoCar");
					this.OnDemoCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemporaryCar", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TemporaryCar
		{
			get
			{
				return this._TemporaryCar;
			}
			set
			{
				if ((this._TemporaryCar != value))
				{
					this.OnTemporaryCarChanging(value);
					this.SendPropertyChanging();
					this._TemporaryCar = value;
					this.SendPropertyChanged("TemporaryCar");
					this.OnTemporaryCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndInventory", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> EndInventory
		{
			get
			{
				return this._EndInventory;
			}
			set
			{
				if ((this._EndInventory != value))
				{
					this.OnEndInventoryChanging(value);
					this.SendPropertyChanging();
					this._EndInventory = value;
					this.SendPropertyChanged("EndInventory");
					this.OnEndInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleAmount
		{
			get
			{
				return this._RecycleAmount;
			}
			set
			{
				if ((this._RecycleAmount != value))
				{
					this.OnRecycleAmountChanging(value);
					this.SendPropertyChanging();
					this._RecycleAmount = value;
					this.SendPropertyChanged("RecycleAmount");
					this.OnRecycleAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherAccount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OtherAccount
		{
			get
			{
				return this._OtherAccount;
			}
			set
			{
				if ((this._OtherAccount != value))
				{
					this.OnOtherAccountChanging(value);
					this.SendPropertyChanging();
					this._OtherAccount = value;
					this.SendPropertyChanged("OtherAccount");
					this.OnOtherAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalCar", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RentalCar
		{
			get
			{
				return this._RentalCar;
			}
			set
			{
				if ((this._RentalCar != value))
				{
					this.OnRentalCarChanging(value);
					this.SendPropertyChanging();
					this._RentalCar = value;
					this.SendPropertyChanged("RentalCar");
					this.OnRentalCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessCar", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> BusinessCar
		{
			get
			{
				return this._BusinessCar;
			}
			set
			{
				if ((this._BusinessCar != value))
				{
					this.OnBusinessCarChanging(value);
					this.SendPropertyChanging();
					this._BusinessCar = value;
					this.SendPropertyChanged("BusinessCar");
					this.OnBusinessCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRCar", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PRCar
		{
			get
			{
				return this._PRCar;
			}
			set
			{
				if ((this._PRCar != value))
				{
					this.OnPRCarChanging(value);
					this.SendPropertyChanging();
					this._PRCar = value;
					this.SendPropertyChanged("PRCar");
					this.OnPRCarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelPurchase", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CancelPurchase
		{
			get
			{
				return this._CancelPurchase;
			}
			set
			{
				if ((this._CancelPurchase != value))
				{
					this.OnCancelPurchaseChanging(value);
					this.SendPropertyChanging();
					this._CancelPurchase = value;
					this.SendPropertyChanged("CancelPurchase");
					this.OnCancelPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPurchaseTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarPurchaseTypeName
		{
			get
			{
				return this._CarPurchaseTypeName;
			}
			set
			{
				if ((this._CarPurchaseTypeName != value))
				{
					this.OnCarPurchaseTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CarPurchaseTypeName = value;
					this.SendPropertyChanged("CarPurchaseTypeName");
					this.OnCarPurchaseTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseLocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseLocationName
		{
			get
			{
				return this._PurchaseLocationName;
			}
			set
			{
				if ((this._PurchaseLocationName != value))
				{
					this.OnPurchaseLocationNameChanging(value);
					this.SendPropertyChanging();
					this._PurchaseLocationName = value;
					this.SendPropertyChanged("PurchaseLocationName");
					this.OnPurchaseLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryLocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InventoryLocationName
		{
			get
			{
				return this._InventoryLocationName;
			}
			set
			{
				if ((this._InventoryLocationName != value))
				{
					this.OnInventoryLocationNameChanging(value);
					this.SendPropertyChanging();
					this._InventoryLocationName = value;
					this.SendPropertyChanged("InventoryLocationName");
					this.OnInventoryLocationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesDepartmentCode
		{
			get
			{
				return this._SalesDepartmentCode;
			}
			set
			{
				if ((this._SalesDepartmentCode != value))
				{
					this.OnSalesDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._SalesDepartmentCode = value;
					this.SendPropertyChanged("SalesDepartmentCode");
					this.OnSalesDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesDepartmentName
		{
			get
			{
				return this._SalesDepartmentName;
			}
			set
			{
				if ((this._SalesDepartmentName != value))
				{
					this.OnSalesDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._SalesDepartmentName = value;
					this.SendPropertyChanged("SalesDepartmentName");
					this.OnSalesDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedTypeName
		{
			get
			{
				return this._NewUsedTypeName;
			}
			set
			{
				if ((this._NewUsedTypeName != value))
				{
					this.OnNewUsedTypeNameChanging(value);
					this.SendPropertyChanging();
					this._NewUsedTypeName = value;
					this.SendPropertyChanged("NewUsedTypeName");
					this.OnNewUsedTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelfRegistrationPurchaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SelfRegistrationPurchaseDate
		{
			get
			{
				return this._SelfRegistrationPurchaseDate;
			}
			set
			{
				if ((this._SelfRegistrationPurchaseDate != value))
				{
					this.OnSelfRegistrationPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._SelfRegistrationPurchaseDate = value;
					this.SendPropertyChanged("SelfRegistrationPurchaseDate");
					this.OnSelfRegistrationPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeName", DbType="nvarchar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerTypeName
		{
			get
			{
				return this._CustomerTypeName;
			}
			set
			{
				if ((this._CustomerTypeName != value))
				{
					this.OnCustomerTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeName = value;
					this.SendPropertyChanged("CustomerTypeName");
					this.OnCustomerTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalesCarHistory")]
	public partial class SalesCarHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SalesCarNumber;
		
		private int _RevisionNumber;
		
		private string _CarGradeCode;
		
		private string _NewUsedType;
		
		private string _ColorType;
		
		private string _ExteriorColorCode;
		
		private string _ExteriorColorName;
		
		private string _ChangeColor;
		
		private string _InteriorColorCode;
		
		private string _InteriorColorName;
		
		private string _ManufacturingYear;
		
		private string _CarStatus;
		
		private string _LocationCode;
		
		private string _OwnerCode;
		
		private string _Steering;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private string _FirstRegistrationYear;
		
		private string _CarClassification;
		
		private string _Usage;
		
		private string _UsageType;
		
		private string _Figure;
		
		private string _MakerName;
		
		private System.Nullable<int> _Capacity;
		
		private System.Nullable<int> _MaximumLoadingWeight;
		
		private System.Nullable<int> _CarWeight;
		
		private System.Nullable<int> _TotalCarWeight;
		
		private string _Vin;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _FFAxileWeight;
		
		private System.Nullable<int> _FRAxileWeight;
		
		private System.Nullable<int> _RFAxileWeight;
		
		private System.Nullable<int> _RRAxileWeight;
		
		private string _ModelName;
		
		private string _EngineType;
		
		private System.Nullable<decimal> _Displacement;
		
		private string _Fuel;
		
		private string _ModelSpecificateNumber;
		
		private string _ClassificationTypeNumber;
		
		private string _PossesorName;
		
		private string _PossesorAddress;
		
		private string _UserName;
		
		private string _UserAddress;
		
		private string _PrincipalPlace;
		
		private string _ExpireType;
		
		private System.Nullable<System.DateTime> _ExpireDate;
		
		private System.Nullable<decimal> _Mileage;
		
		private string _MileageUnit;
		
		private string _Memo;
		
		private string _DocumentComplete;
		
		private string _DocumentRemarks;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _InspectionDate;
		
		private System.Nullable<System.DateTime> _NextInspectionDate;
		
		private string _UsVin;
		
		private string _MakerWarranty;
		
		private string _RecordingNote;
		
		private System.Nullable<System.DateTime> _ProductionDate;
		
		private string _ReparationRecord;
		
		private string _Oil;
		
		private string _Tire;
		
		private string _KeyCode;
		
		private string _AudioCode;
		
		private string _Import;
		
		private string _Guarantee;
		
		private string _Instructions;
		
		private string _Recycle;
		
		private string _RecycleTicket;
		
		private string _CouponPresence;
		
		private string _Light;
		
		private string _Aw;
		
		private string _Aero;
		
		private string _Sr;
		
		private string _Cd;
		
		private string _Md;
		
		private string _NaviType;
		
		private string _NaviEquipment;
		
		private string _NaviDashboard;
		
		private string _SeatColor;
		
		private string _SeatType;
		
		private string _Memo1;
		
		private string _Memo2;
		
		private string _Memo3;
		
		private string _Memo4;
		
		private string _Memo5;
		
		private string _Memo6;
		
		private string _Memo7;
		
		private string _Memo8;
		
		private string _Memo9;
		
		private string _Memo10;
		
		private string _DeclarationType;
		
		private string _AcquisitionReason;
		
		private string _TaxationTypeCarTax;
		
		private string _TaxationTypeAcquisitionTax;
		
		private System.Nullable<decimal> _CarTax;
		
		private System.Nullable<decimal> _CarWeightTax;
		
		private System.Nullable<decimal> _CarLiabilityInsurance;
		
		private System.Nullable<decimal> _AcquisitionTax;
		
		private System.Nullable<decimal> _RecycleDeposit;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _EraseRegist;
		
		private string _UserCode;
		
		private string _ApprovedCarNumber;
		
		private System.Nullable<System.DateTime> _ApprovedCarWarrantyDateFrom;
		
		private System.Nullable<System.DateTime> _ApprovedCarWarrantyDateTo;
		
		private string _Finance;
		
		private string _OwnershipChangeType;
		
		private System.Nullable<System.DateTime> _OwnershipChangeDate;
		
		private string _OwnershipChangeMemo;
		
		private string _InspectGuidFlag;
		
		private string _InspectGuidMemo;
		
		private string _CarUsage;
		
		private System.Nullable<System.DateTime> _FirstRegistrationDate;
		
		private string _CompanyRegistrationFlag;
		
		private System.Nullable<bool> _ConfirmDriverLicense;
		
		private System.Nullable<bool> _ConfirmCertificationSeal;
		
		private string _ConfirmOther;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesCarNumberChanging(string value);
    partial void OnSalesCarNumberChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnCarGradeCodeChanging(string value);
    partial void OnCarGradeCodeChanged();
    partial void OnNewUsedTypeChanging(string value);
    partial void OnNewUsedTypeChanged();
    partial void OnColorTypeChanging(string value);
    partial void OnColorTypeChanged();
    partial void OnExteriorColorCodeChanging(string value);
    partial void OnExteriorColorCodeChanged();
    partial void OnExteriorColorNameChanging(string value);
    partial void OnExteriorColorNameChanged();
    partial void OnChangeColorChanging(string value);
    partial void OnChangeColorChanged();
    partial void OnInteriorColorCodeChanging(string value);
    partial void OnInteriorColorCodeChanged();
    partial void OnInteriorColorNameChanging(string value);
    partial void OnInteriorColorNameChanged();
    partial void OnManufacturingYearChanging(string value);
    partial void OnManufacturingYearChanged();
    partial void OnCarStatusChanging(string value);
    partial void OnCarStatusChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnOwnerCodeChanging(string value);
    partial void OnOwnerCodeChanged();
    partial void OnSteeringChanging(string value);
    partial void OnSteeringChanged();
    partial void OnSalesPriceChanging(System.Nullable<decimal> value);
    partial void OnSalesPriceChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnMorterViecleOfficialCodeChanging(string value);
    partial void OnMorterViecleOfficialCodeChanged();
    partial void OnRegistrationNumberTypeChanging(string value);
    partial void OnRegistrationNumberTypeChanged();
    partial void OnRegistrationNumberKanaChanging(string value);
    partial void OnRegistrationNumberKanaChanged();
    partial void OnRegistrationNumberPlateChanging(string value);
    partial void OnRegistrationNumberPlateChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnFirstRegistrationYearChanging(string value);
    partial void OnFirstRegistrationYearChanged();
    partial void OnCarClassificationChanging(string value);
    partial void OnCarClassificationChanged();
    partial void OnUsageChanging(string value);
    partial void OnUsageChanged();
    partial void OnUsageTypeChanging(string value);
    partial void OnUsageTypeChanged();
    partial void OnFigureChanging(string value);
    partial void OnFigureChanged();
    partial void OnMakerNameChanging(string value);
    partial void OnMakerNameChanged();
    partial void OnCapacityChanging(System.Nullable<int> value);
    partial void OnCapacityChanged();
    partial void OnMaximumLoadingWeightChanging(System.Nullable<int> value);
    partial void OnMaximumLoadingWeightChanged();
    partial void OnCarWeightChanging(System.Nullable<int> value);
    partial void OnCarWeightChanged();
    partial void OnTotalCarWeightChanging(System.Nullable<int> value);
    partial void OnTotalCarWeightChanged();
    partial void OnVinChanging(string value);
    partial void OnVinChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnFFAxileWeightChanging(System.Nullable<int> value);
    partial void OnFFAxileWeightChanged();
    partial void OnFRAxileWeightChanging(System.Nullable<int> value);
    partial void OnFRAxileWeightChanged();
    partial void OnRFAxileWeightChanging(System.Nullable<int> value);
    partial void OnRFAxileWeightChanged();
    partial void OnRRAxileWeightChanging(System.Nullable<int> value);
    partial void OnRRAxileWeightChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnDisplacementChanging(System.Nullable<decimal> value);
    partial void OnDisplacementChanged();
    partial void OnFuelChanging(string value);
    partial void OnFuelChanged();
    partial void OnModelSpecificateNumberChanging(string value);
    partial void OnModelSpecificateNumberChanged();
    partial void OnClassificationTypeNumberChanging(string value);
    partial void OnClassificationTypeNumberChanged();
    partial void OnPossesorNameChanging(string value);
    partial void OnPossesorNameChanged();
    partial void OnPossesorAddressChanging(string value);
    partial void OnPossesorAddressChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnPrincipalPlaceChanging(string value);
    partial void OnPrincipalPlaceChanged();
    partial void OnExpireTypeChanging(string value);
    partial void OnExpireTypeChanged();
    partial void OnExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireDateChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnMileageUnitChanging(string value);
    partial void OnMileageUnitChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDocumentCompleteChanging(string value);
    partial void OnDocumentCompleteChanged();
    partial void OnDocumentRemarksChanging(string value);
    partial void OnDocumentRemarksChanged();
    partial void OnSalesDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSalesDateChanged();
    partial void OnInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInspectionDateChanged();
    partial void OnNextInspectionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNextInspectionDateChanged();
    partial void OnUsVinChanging(string value);
    partial void OnUsVinChanged();
    partial void OnMakerWarrantyChanging(string value);
    partial void OnMakerWarrantyChanged();
    partial void OnRecordingNoteChanging(string value);
    partial void OnRecordingNoteChanged();
    partial void OnProductionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductionDateChanged();
    partial void OnReparationRecordChanging(string value);
    partial void OnReparationRecordChanged();
    partial void OnOilChanging(string value);
    partial void OnOilChanged();
    partial void OnTireChanging(string value);
    partial void OnTireChanged();
    partial void OnKeyCodeChanging(string value);
    partial void OnKeyCodeChanged();
    partial void OnAudioCodeChanging(string value);
    partial void OnAudioCodeChanged();
    partial void OnImportChanging(string value);
    partial void OnImportChanged();
    partial void OnGuaranteeChanging(string value);
    partial void OnGuaranteeChanged();
    partial void OnInstructionsChanging(string value);
    partial void OnInstructionsChanged();
    partial void OnRecycleChanging(string value);
    partial void OnRecycleChanged();
    partial void OnRecycleTicketChanging(string value);
    partial void OnRecycleTicketChanged();
    partial void OnCouponPresenceChanging(string value);
    partial void OnCouponPresenceChanged();
    partial void OnLightChanging(string value);
    partial void OnLightChanged();
    partial void OnAwChanging(string value);
    partial void OnAwChanged();
    partial void OnAeroChanging(string value);
    partial void OnAeroChanged();
    partial void OnSrChanging(string value);
    partial void OnSrChanged();
    partial void OnCdChanging(string value);
    partial void OnCdChanged();
    partial void OnMdChanging(string value);
    partial void OnMdChanged();
    partial void OnNaviTypeChanging(string value);
    partial void OnNaviTypeChanged();
    partial void OnNaviEquipmentChanging(string value);
    partial void OnNaviEquipmentChanged();
    partial void OnNaviDashboardChanging(string value);
    partial void OnNaviDashboardChanged();
    partial void OnSeatColorChanging(string value);
    partial void OnSeatColorChanged();
    partial void OnSeatTypeChanging(string value);
    partial void OnSeatTypeChanged();
    partial void OnMemo1Changing(string value);
    partial void OnMemo1Changed();
    partial void OnMemo2Changing(string value);
    partial void OnMemo2Changed();
    partial void OnMemo3Changing(string value);
    partial void OnMemo3Changed();
    partial void OnMemo4Changing(string value);
    partial void OnMemo4Changed();
    partial void OnMemo5Changing(string value);
    partial void OnMemo5Changed();
    partial void OnMemo6Changing(string value);
    partial void OnMemo6Changed();
    partial void OnMemo7Changing(string value);
    partial void OnMemo7Changed();
    partial void OnMemo8Changing(string value);
    partial void OnMemo8Changed();
    partial void OnMemo9Changing(string value);
    partial void OnMemo9Changed();
    partial void OnMemo10Changing(string value);
    partial void OnMemo10Changed();
    partial void OnDeclarationTypeChanging(string value);
    partial void OnDeclarationTypeChanged();
    partial void OnAcquisitionReasonChanging(string value);
    partial void OnAcquisitionReasonChanged();
    partial void OnTaxationTypeCarTaxChanging(string value);
    partial void OnTaxationTypeCarTaxChanged();
    partial void OnTaxationTypeAcquisitionTaxChanging(string value);
    partial void OnTaxationTypeAcquisitionTaxChanged();
    partial void OnCarTaxChanging(System.Nullable<decimal> value);
    partial void OnCarTaxChanged();
    partial void OnCarWeightTaxChanging(System.Nullable<decimal> value);
    partial void OnCarWeightTaxChanged();
    partial void OnCarLiabilityInsuranceChanging(System.Nullable<decimal> value);
    partial void OnCarLiabilityInsuranceChanged();
    partial void OnAcquisitionTaxChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionTaxChanged();
    partial void OnRecycleDepositChanging(System.Nullable<decimal> value);
    partial void OnRecycleDepositChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnEraseRegistChanging(string value);
    partial void OnEraseRegistChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnApprovedCarNumberChanging(string value);
    partial void OnApprovedCarNumberChanged();
    partial void OnApprovedCarWarrantyDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedCarWarrantyDateFromChanged();
    partial void OnApprovedCarWarrantyDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedCarWarrantyDateToChanged();
    partial void OnFinanceChanging(string value);
    partial void OnFinanceChanged();
    partial void OnOwnershipChangeTypeChanging(string value);
    partial void OnOwnershipChangeTypeChanged();
    partial void OnOwnershipChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOwnershipChangeDateChanged();
    partial void OnOwnershipChangeMemoChanging(string value);
    partial void OnOwnershipChangeMemoChanged();
    partial void OnInspectGuidFlagChanging(string value);
    partial void OnInspectGuidFlagChanged();
    partial void OnInspectGuidMemoChanging(string value);
    partial void OnInspectGuidMemoChanged();
    partial void OnCarUsageChanging(string value);
    partial void OnCarUsageChanged();
    partial void OnFirstRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRegistrationDateChanged();
    partial void OnCompanyRegistrationFlagChanging(string value);
    partial void OnCompanyRegistrationFlagChanged();
    partial void OnConfirmDriverLicenseChanging(System.Nullable<bool> value);
    partial void OnConfirmDriverLicenseChanged();
    partial void OnConfirmCertificationSealChanging(System.Nullable<bool> value);
    partial void OnConfirmCertificationSealChanged();
    partial void OnConfirmOtherChanging(string value);
    partial void OnConfirmOtherChanged();
    #endregion
		
		public SalesCarHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this.OnSalesCarNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesCarNumber = value;
					this.SendPropertyChanged("SalesCarNumber");
					this.OnSalesCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this.OnCarGradeCodeChanging(value);
					this.SendPropertyChanging();
					this._CarGradeCode = value;
					this.SendPropertyChanged("CarGradeCode");
					this.OnCarGradeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this.OnNewUsedTypeChanging(value);
					this.SendPropertyChanging();
					this._NewUsedType = value;
					this.SendPropertyChanged("NewUsedType");
					this.OnNewUsedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColorType
		{
			get
			{
				return this._ColorType;
			}
			set
			{
				if ((this._ColorType != value))
				{
					this.OnColorTypeChanging(value);
					this.SendPropertyChanging();
					this._ColorType = value;
					this.SendPropertyChanged("ColorType");
					this.OnColorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorCode
		{
			get
			{
				return this._ExteriorColorCode;
			}
			set
			{
				if ((this._ExteriorColorCode != value))
				{
					this.OnExteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorCode = value;
					this.SendPropertyChanged("ExteriorColorCode");
					this.OnExteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this.OnExteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._ExteriorColorName = value;
					this.SendPropertyChanged("ExteriorColorName");
					this.OnExteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeColor", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangeColor
		{
			get
			{
				return this._ChangeColor;
			}
			set
			{
				if ((this._ChangeColor != value))
				{
					this.OnChangeColorChanging(value);
					this.SendPropertyChanging();
					this._ChangeColor = value;
					this.SendPropertyChanged("ChangeColor");
					this.OnChangeColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorCode
		{
			get
			{
				return this._InteriorColorCode;
			}
			set
			{
				if ((this._InteriorColorCode != value))
				{
					this.OnInteriorColorCodeChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorCode = value;
					this.SendPropertyChanged("InteriorColorCode");
					this.OnInteriorColorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InteriorColorName
		{
			get
			{
				return this._InteriorColorName;
			}
			set
			{
				if ((this._InteriorColorName != value))
				{
					this.OnInteriorColorNameChanging(value);
					this.SendPropertyChanging();
					this._InteriorColorName = value;
					this.SendPropertyChanged("InteriorColorName");
					this.OnInteriorColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingYear", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ManufacturingYear
		{
			get
			{
				return this._ManufacturingYear;
			}
			set
			{
				if ((this._ManufacturingYear != value))
				{
					this.OnManufacturingYearChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingYear = value;
					this.SendPropertyChanged("ManufacturingYear");
					this.OnManufacturingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatus
		{
			get
			{
				return this._CarStatus;
			}
			set
			{
				if ((this._CarStatus != value))
				{
					this.OnCarStatusChanging(value);
					this.SendPropertyChanging();
					this._CarStatus = value;
					this.SendPropertyChanged("CarStatus");
					this.OnCarStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnerCode
		{
			get
			{
				return this._OwnerCode;
			}
			set
			{
				if ((this._OwnerCode != value))
				{
					this.OnOwnerCodeChanging(value);
					this.SendPropertyChanging();
					this._OwnerCode = value;
					this.SendPropertyChanged("OwnerCode");
					this.OnOwnerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steering", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Steering
		{
			get
			{
				return this._Steering;
			}
			set
			{
				if ((this._Steering != value))
				{
					this.OnSteeringChanging(value);
					this.SendPropertyChanging();
					this._Steering = value;
					this.SendPropertyChanged("Steering");
					this.OnSteeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this.OnSalesPriceChanging(value);
					this.SendPropertyChanging();
					this._SalesPrice = value;
					this.SendPropertyChanged("SalesPrice");
					this.OnSalesPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this.OnMorterViecleOfficialCodeChanging(value);
					this.SendPropertyChanging();
					this._MorterViecleOfficialCode = value;
					this.SendPropertyChanged("MorterViecleOfficialCode");
					this.OnMorterViecleOfficialCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this.OnRegistrationNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberType = value;
					this.SendPropertyChanged("RegistrationNumberType");
					this.OnRegistrationNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this.OnRegistrationNumberKanaChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberKana = value;
					this.SendPropertyChanged("RegistrationNumberKana");
					this.OnRegistrationNumberKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this.OnRegistrationNumberPlateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationNumberPlate = value;
					this.SendPropertyChanged("RegistrationNumberPlate");
					this.OnRegistrationNumberPlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationYear", DbType="NVarChar(9)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FirstRegistrationYear
		{
			get
			{
				return this._FirstRegistrationYear;
			}
			set
			{
				if ((this._FirstRegistrationYear != value))
				{
					this.OnFirstRegistrationYearChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationYear = value;
					this.SendPropertyChanged("FirstRegistrationYear");
					this.OnFirstRegistrationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarClassification", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarClassification
		{
			get
			{
				return this._CarClassification;
			}
			set
			{
				if ((this._CarClassification != value))
				{
					this.OnCarClassificationChanging(value);
					this.SendPropertyChanging();
					this._CarClassification = value;
					this.SendPropertyChanged("CarClassification");
					this.OnCarClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Usage
		{
			get
			{
				return this._Usage;
			}
			set
			{
				if ((this._Usage != value))
				{
					this.OnUsageChanging(value);
					this.SendPropertyChanging();
					this._Usage = value;
					this.SendPropertyChanged("Usage");
					this.OnUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsageType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsageType
		{
			get
			{
				return this._UsageType;
			}
			set
			{
				if ((this._UsageType != value))
				{
					this.OnUsageTypeChanging(value);
					this.SendPropertyChanging();
					this._UsageType = value;
					this.SendPropertyChanged("UsageType");
					this.OnUsageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Figure", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Figure
		{
			get
			{
				return this._Figure;
			}
			set
			{
				if ((this._Figure != value))
				{
					this.OnFigureChanging(value);
					this.SendPropertyChanging();
					this._Figure = value;
					this.SendPropertyChanged("Figure");
					this.OnFigureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this.OnMakerNameChanging(value);
					this.SendPropertyChanging();
					this._MakerName = value;
					this.SendPropertyChanged("MakerName");
					this.OnMakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int")]
		public System.Nullable<int> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumLoadingWeight", DbType="Int")]
		public System.Nullable<int> MaximumLoadingWeight
		{
			get
			{
				return this._MaximumLoadingWeight;
			}
			set
			{
				if ((this._MaximumLoadingWeight != value))
				{
					this.OnMaximumLoadingWeightChanging(value);
					this.SendPropertyChanging();
					this._MaximumLoadingWeight = value;
					this.SendPropertyChanged("MaximumLoadingWeight");
					this.OnMaximumLoadingWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeight", DbType="Int")]
		public System.Nullable<int> CarWeight
		{
			get
			{
				return this._CarWeight;
			}
			set
			{
				if ((this._CarWeight != value))
				{
					this.OnCarWeightChanging(value);
					this.SendPropertyChanging();
					this._CarWeight = value;
					this.SendPropertyChanged("CarWeight");
					this.OnCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCarWeight", DbType="Int")]
		public System.Nullable<int> TotalCarWeight
		{
			get
			{
				return this._TotalCarWeight;
			}
			set
			{
				if ((this._TotalCarWeight != value))
				{
					this.OnTotalCarWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalCarWeight = value;
					this.SendPropertyChanged("TotalCarWeight");
					this.OnTotalCarWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this.OnVinChanging(value);
					this.SendPropertyChanging();
					this._Vin = value;
					this.SendPropertyChanged("Vin");
					this.OnVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFAxileWeight", DbType="Int")]
		public System.Nullable<int> FFAxileWeight
		{
			get
			{
				return this._FFAxileWeight;
			}
			set
			{
				if ((this._FFAxileWeight != value))
				{
					this.OnFFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FFAxileWeight = value;
					this.SendPropertyChanged("FFAxileWeight");
					this.OnFFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRAxileWeight", DbType="Int")]
		public System.Nullable<int> FRAxileWeight
		{
			get
			{
				return this._FRAxileWeight;
			}
			set
			{
				if ((this._FRAxileWeight != value))
				{
					this.OnFRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._FRAxileWeight = value;
					this.SendPropertyChanged("FRAxileWeight");
					this.OnFRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFAxileWeight", DbType="Int")]
		public System.Nullable<int> RFAxileWeight
		{
			get
			{
				return this._RFAxileWeight;
			}
			set
			{
				if ((this._RFAxileWeight != value))
				{
					this.OnRFAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RFAxileWeight = value;
					this.SendPropertyChanged("RFAxileWeight");
					this.OnRFAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRAxileWeight", DbType="Int")]
		public System.Nullable<int> RRAxileWeight
		{
			get
			{
				return this._RRAxileWeight;
			}
			set
			{
				if ((this._RRAxileWeight != value))
				{
					this.OnRRAxileWeightChanging(value);
					this.SendPropertyChanging();
					this._RRAxileWeight = value;
					this.SendPropertyChanged("RRAxileWeight");
					this.OnRRAxileWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displacement", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Displacement
		{
			get
			{
				return this._Displacement;
			}
			set
			{
				if ((this._Displacement != value))
				{
					this.OnDisplacementChanging(value);
					this.SendPropertyChanging();
					this._Displacement = value;
					this.SendPropertyChanged("Displacement");
					this.OnDisplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fuel", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Fuel
		{
			get
			{
				return this._Fuel;
			}
			set
			{
				if ((this._Fuel != value))
				{
					this.OnFuelChanging(value);
					this.SendPropertyChanging();
					this._Fuel = value;
					this.SendPropertyChanged("Fuel");
					this.OnFuelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelSpecificateNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelSpecificateNumber
		{
			get
			{
				return this._ModelSpecificateNumber;
			}
			set
			{
				if ((this._ModelSpecificateNumber != value))
				{
					this.OnModelSpecificateNumberChanging(value);
					this.SendPropertyChanging();
					this._ModelSpecificateNumber = value;
					this.SendPropertyChanged("ModelSpecificateNumber");
					this.OnModelSpecificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassificationTypeNumber", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ClassificationTypeNumber
		{
			get
			{
				return this._ClassificationTypeNumber;
			}
			set
			{
				if ((this._ClassificationTypeNumber != value))
				{
					this.OnClassificationTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ClassificationTypeNumber = value;
					this.SendPropertyChanged("ClassificationTypeNumber");
					this.OnClassificationTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorName
		{
			get
			{
				return this._PossesorName;
			}
			set
			{
				if ((this._PossesorName != value))
				{
					this.OnPossesorNameChanging(value);
					this.SendPropertyChanging();
					this._PossesorName = value;
					this.SendPropertyChanged("PossesorName");
					this.OnPossesorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorAddress
		{
			get
			{
				return this._PossesorAddress;
			}
			set
			{
				if ((this._PossesorAddress != value))
				{
					this.OnPossesorAddressChanging(value);
					this.SendPropertyChanging();
					this._PossesorAddress = value;
					this.SendPropertyChanged("PossesorAddress");
					this.OnPossesorAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPlace", DbType="NVarChar(300)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PrincipalPlace
		{
			get
			{
				return this._PrincipalPlace;
			}
			set
			{
				if ((this._PrincipalPlace != value))
				{
					this.OnPrincipalPlaceChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPlace = value;
					this.SendPropertyChanged("PrincipalPlace");
					this.OnPrincipalPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExpireType
		{
			get
			{
				return this._ExpireType;
			}
			set
			{
				if ((this._ExpireType != value))
				{
					this.OnExpireTypeChanging(value);
					this.SendPropertyChanging();
					this._ExpireType = value;
					this.SendPropertyChanged("ExpireType");
					this.OnExpireTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpireDate
		{
			get
			{
				return this._ExpireDate;
			}
			set
			{
				if ((this._ExpireDate != value))
				{
					this.OnExpireDateChanging(value);
					this.SendPropertyChanging();
					this._ExpireDate = value;
					this.SendPropertyChanged("ExpireDate");
					this.OnExpireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MileageUnit", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MileageUnit
		{
			get
			{
				return this._MileageUnit;
			}
			set
			{
				if ((this._MileageUnit != value))
				{
					this.OnMileageUnitChanging(value);
					this.SendPropertyChanging();
					this._MileageUnit = value;
					this.SendPropertyChanged("MileageUnit");
					this.OnMileageUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentComplete", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentComplete
		{
			get
			{
				return this._DocumentComplete;
			}
			set
			{
				if ((this._DocumentComplete != value))
				{
					this.OnDocumentCompleteChanging(value);
					this.SendPropertyChanging();
					this._DocumentComplete = value;
					this.SendPropertyChanged("DocumentComplete");
					this.OnDocumentCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentRemarks", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentRemarks
		{
			get
			{
				return this._DocumentRemarks;
			}
			set
			{
				if ((this._DocumentRemarks != value))
				{
					this.OnDocumentRemarksChanging(value);
					this.SendPropertyChanging();
					this._DocumentRemarks = value;
					this.SendPropertyChanged("DocumentRemarks");
					this.OnDocumentRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InspectionDate
		{
			get
			{
				return this._InspectionDate;
			}
			set
			{
				if ((this._InspectionDate != value))
				{
					this.OnInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._InspectionDate = value;
					this.SendPropertyChanged("InspectionDate");
					this.OnInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextInspectionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextInspectionDate
		{
			get
			{
				return this._NextInspectionDate;
			}
			set
			{
				if ((this._NextInspectionDate != value))
				{
					this.OnNextInspectionDateChanging(value);
					this.SendPropertyChanging();
					this._NextInspectionDate = value;
					this.SendPropertyChanged("NextInspectionDate");
					this.OnNextInspectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsVin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UsVin
		{
			get
			{
				return this._UsVin;
			}
			set
			{
				if ((this._UsVin != value))
				{
					this.OnUsVinChanging(value);
					this.SendPropertyChanging();
					this._UsVin = value;
					this.SendPropertyChanged("UsVin");
					this.OnUsVinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerWarranty", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerWarranty
		{
			get
			{
				return this._MakerWarranty;
			}
			set
			{
				if ((this._MakerWarranty != value))
				{
					this.OnMakerWarrantyChanging(value);
					this.SendPropertyChanging();
					this._MakerWarranty = value;
					this.SendPropertyChanged("MakerWarranty");
					this.OnMakerWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordingNote", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecordingNote
		{
			get
			{
				return this._RecordingNote;
			}
			set
			{
				if ((this._RecordingNote != value))
				{
					this.OnRecordingNoteChanging(value);
					this.SendPropertyChanging();
					this._RecordingNote = value;
					this.SendPropertyChanged("RecordingNote");
					this.OnRecordingNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductionDate
		{
			get
			{
				return this._ProductionDate;
			}
			set
			{
				if ((this._ProductionDate != value))
				{
					this.OnProductionDateChanging(value);
					this.SendPropertyChanging();
					this._ProductionDate = value;
					this.SendPropertyChanged("ProductionDate");
					this.OnProductionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReparationRecord", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReparationRecord
		{
			get
			{
				return this._ReparationRecord;
			}
			set
			{
				if ((this._ReparationRecord != value))
				{
					this.OnReparationRecordChanging(value);
					this.SendPropertyChanging();
					this._ReparationRecord = value;
					this.SendPropertyChanged("ReparationRecord");
					this.OnReparationRecordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oil", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Oil
		{
			get
			{
				return this._Oil;
			}
			set
			{
				if ((this._Oil != value))
				{
					this.OnOilChanging(value);
					this.SendPropertyChanging();
					this._Oil = value;
					this.SendPropertyChanged("Oil");
					this.OnOilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tire", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Tire
		{
			get
			{
				return this._Tire;
			}
			set
			{
				if ((this._Tire != value))
				{
					this.OnTireChanging(value);
					this.SendPropertyChanging();
					this._Tire = value;
					this.SendPropertyChanged("Tire");
					this.OnTireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string KeyCode
		{
			get
			{
				return this._KeyCode;
			}
			set
			{
				if ((this._KeyCode != value))
				{
					this.OnKeyCodeChanging(value);
					this.SendPropertyChanging();
					this._KeyCode = value;
					this.SendPropertyChanged("KeyCode");
					this.OnKeyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AudioCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AudioCode
		{
			get
			{
				return this._AudioCode;
			}
			set
			{
				if ((this._AudioCode != value))
				{
					this.OnAudioCodeChanging(value);
					this.SendPropertyChanging();
					this._AudioCode = value;
					this.SendPropertyChanged("AudioCode");
					this.OnAudioCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Import", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Import
		{
			get
			{
				return this._Import;
			}
			set
			{
				if ((this._Import != value))
				{
					this.OnImportChanging(value);
					this.SendPropertyChanging();
					this._Import = value;
					this.SendPropertyChanged("Import");
					this.OnImportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guarantee", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Guarantee
		{
			get
			{
				return this._Guarantee;
			}
			set
			{
				if ((this._Guarantee != value))
				{
					this.OnGuaranteeChanging(value);
					this.SendPropertyChanging();
					this._Guarantee = value;
					this.SendPropertyChanged("Guarantee");
					this.OnGuaranteeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recycle", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Recycle
		{
			get
			{
				return this._Recycle;
			}
			set
			{
				if ((this._Recycle != value))
				{
					this.OnRecycleChanging(value);
					this.SendPropertyChanging();
					this._Recycle = value;
					this.SendPropertyChanged("Recycle");
					this.OnRecycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleTicket", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RecycleTicket
		{
			get
			{
				return this._RecycleTicket;
			}
			set
			{
				if ((this._RecycleTicket != value))
				{
					this.OnRecycleTicketChanging(value);
					this.SendPropertyChanging();
					this._RecycleTicket = value;
					this.SendPropertyChanged("RecycleTicket");
					this.OnRecycleTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponPresence", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CouponPresence
		{
			get
			{
				return this._CouponPresence;
			}
			set
			{
				if ((this._CouponPresence != value))
				{
					this.OnCouponPresenceChanging(value);
					this.SendPropertyChanging();
					this._CouponPresence = value;
					this.SendPropertyChanged("CouponPresence");
					this.OnCouponPresenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aw", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aw
		{
			get
			{
				return this._Aw;
			}
			set
			{
				if ((this._Aw != value))
				{
					this.OnAwChanging(value);
					this.SendPropertyChanging();
					this._Aw = value;
					this.SendPropertyChanged("Aw");
					this.OnAwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aero", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Aero
		{
			get
			{
				return this._Aero;
			}
			set
			{
				if ((this._Aero != value))
				{
					this.OnAeroChanging(value);
					this.SendPropertyChanging();
					this._Aero = value;
					this.SendPropertyChanged("Aero");
					this.OnAeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sr", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Sr
		{
			get
			{
				return this._Sr;
			}
			set
			{
				if ((this._Sr != value))
				{
					this.OnSrChanging(value);
					this.SendPropertyChanging();
					this._Sr = value;
					this.SendPropertyChanged("Sr");
					this.OnSrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cd", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Cd
		{
			get
			{
				return this._Cd;
			}
			set
			{
				if ((this._Cd != value))
				{
					this.OnCdChanging(value);
					this.SendPropertyChanging();
					this._Cd = value;
					this.SendPropertyChanged("Cd");
					this.OnCdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Md
		{
			get
			{
				return this._Md;
			}
			set
			{
				if ((this._Md != value))
				{
					this.OnMdChanging(value);
					this.SendPropertyChanging();
					this._Md = value;
					this.SendPropertyChanged("Md");
					this.OnMdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviType
		{
			get
			{
				return this._NaviType;
			}
			set
			{
				if ((this._NaviType != value))
				{
					this.OnNaviTypeChanging(value);
					this.SendPropertyChanging();
					this._NaviType = value;
					this.SendPropertyChanged("NaviType");
					this.OnNaviTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviEquipment", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviEquipment
		{
			get
			{
				return this._NaviEquipment;
			}
			set
			{
				if ((this._NaviEquipment != value))
				{
					this.OnNaviEquipmentChanging(value);
					this.SendPropertyChanging();
					this._NaviEquipment = value;
					this.SendPropertyChanged("NaviEquipment");
					this.OnNaviEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaviDashboard", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NaviDashboard
		{
			get
			{
				return this._NaviDashboard;
			}
			set
			{
				if ((this._NaviDashboard != value))
				{
					this.OnNaviDashboardChanging(value);
					this.SendPropertyChanging();
					this._NaviDashboard = value;
					this.SendPropertyChanged("NaviDashboard");
					this.OnNaviDashboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatColor", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatColor
		{
			get
			{
				return this._SeatColor;
			}
			set
			{
				if ((this._SeatColor != value))
				{
					this.OnSeatColorChanging(value);
					this.SendPropertyChanging();
					this._SeatColor = value;
					this.SendPropertyChanged("SeatColor");
					this.OnSeatColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeatType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SeatType
		{
			get
			{
				return this._SeatType;
			}
			set
			{
				if ((this._SeatType != value))
				{
					this.OnSeatTypeChanging(value);
					this.SendPropertyChanging();
					this._SeatType = value;
					this.SendPropertyChanged("SeatType");
					this.OnSeatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo1
		{
			get
			{
				return this._Memo1;
			}
			set
			{
				if ((this._Memo1 != value))
				{
					this.OnMemo1Changing(value);
					this.SendPropertyChanging();
					this._Memo1 = value;
					this.SendPropertyChanged("Memo1");
					this.OnMemo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo2
		{
			get
			{
				return this._Memo2;
			}
			set
			{
				if ((this._Memo2 != value))
				{
					this.OnMemo2Changing(value);
					this.SendPropertyChanging();
					this._Memo2 = value;
					this.SendPropertyChanged("Memo2");
					this.OnMemo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo3", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo3
		{
			get
			{
				return this._Memo3;
			}
			set
			{
				if ((this._Memo3 != value))
				{
					this.OnMemo3Changing(value);
					this.SendPropertyChanging();
					this._Memo3 = value;
					this.SendPropertyChanged("Memo3");
					this.OnMemo3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo4", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo4
		{
			get
			{
				return this._Memo4;
			}
			set
			{
				if ((this._Memo4 != value))
				{
					this.OnMemo4Changing(value);
					this.SendPropertyChanging();
					this._Memo4 = value;
					this.SendPropertyChanged("Memo4");
					this.OnMemo4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo5", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo5
		{
			get
			{
				return this._Memo5;
			}
			set
			{
				if ((this._Memo5 != value))
				{
					this.OnMemo5Changing(value);
					this.SendPropertyChanging();
					this._Memo5 = value;
					this.SendPropertyChanged("Memo5");
					this.OnMemo5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo6", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo6
		{
			get
			{
				return this._Memo6;
			}
			set
			{
				if ((this._Memo6 != value))
				{
					this.OnMemo6Changing(value);
					this.SendPropertyChanging();
					this._Memo6 = value;
					this.SendPropertyChanged("Memo6");
					this.OnMemo6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo7", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo7
		{
			get
			{
				return this._Memo7;
			}
			set
			{
				if ((this._Memo7 != value))
				{
					this.OnMemo7Changing(value);
					this.SendPropertyChanging();
					this._Memo7 = value;
					this.SendPropertyChanged("Memo7");
					this.OnMemo7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo8", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo8
		{
			get
			{
				return this._Memo8;
			}
			set
			{
				if ((this._Memo8 != value))
				{
					this.OnMemo8Changing(value);
					this.SendPropertyChanging();
					this._Memo8 = value;
					this.SendPropertyChanged("Memo8");
					this.OnMemo8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo9", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo9
		{
			get
			{
				return this._Memo9;
			}
			set
			{
				if ((this._Memo9 != value))
				{
					this.OnMemo9Changing(value);
					this.SendPropertyChanging();
					this._Memo9 = value;
					this.SendPropertyChanged("Memo9");
					this.OnMemo9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo10", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo10
		{
			get
			{
				return this._Memo10;
			}
			set
			{
				if ((this._Memo10 != value))
				{
					this.OnMemo10Changing(value);
					this.SendPropertyChanging();
					this._Memo10 = value;
					this.SendPropertyChanged("Memo10");
					this.OnMemo10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclarationType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DeclarationType
		{
			get
			{
				return this._DeclarationType;
			}
			set
			{
				if ((this._DeclarationType != value))
				{
					this.OnDeclarationTypeChanging(value);
					this.SendPropertyChanging();
					this._DeclarationType = value;
					this.SendPropertyChanged("DeclarationType");
					this.OnDeclarationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionReason", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AcquisitionReason
		{
			get
			{
				return this._AcquisitionReason;
			}
			set
			{
				if ((this._AcquisitionReason != value))
				{
					this.OnAcquisitionReasonChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionReason = value;
					this.SendPropertyChanged("AcquisitionReason");
					this.OnAcquisitionReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationTypeCarTax", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxationTypeCarTax
		{
			get
			{
				return this._TaxationTypeCarTax;
			}
			set
			{
				if ((this._TaxationTypeCarTax != value))
				{
					this.OnTaxationTypeCarTaxChanging(value);
					this.SendPropertyChanging();
					this._TaxationTypeCarTax = value;
					this.SendPropertyChanged("TaxationTypeCarTax");
					this.OnTaxationTypeCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxationTypeAcquisitionTax", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TaxationTypeAcquisitionTax
		{
			get
			{
				return this._TaxationTypeAcquisitionTax;
			}
			set
			{
				if ((this._TaxationTypeAcquisitionTax != value))
				{
					this.OnTaxationTypeAcquisitionTaxChanging(value);
					this.SendPropertyChanging();
					this._TaxationTypeAcquisitionTax = value;
					this.SendPropertyChanged("TaxationTypeAcquisitionTax");
					this.OnTaxationTypeAcquisitionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarTax
		{
			get
			{
				return this._CarTax;
			}
			set
			{
				if ((this._CarTax != value))
				{
					this.OnCarTaxChanging(value);
					this.SendPropertyChanging();
					this._CarTax = value;
					this.SendPropertyChanged("CarTax");
					this.OnCarTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarWeightTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarWeightTax
		{
			get
			{
				return this._CarWeightTax;
			}
			set
			{
				if ((this._CarWeightTax != value))
				{
					this.OnCarWeightTaxChanging(value);
					this.SendPropertyChanging();
					this._CarWeightTax = value;
					this.SendPropertyChanged("CarWeightTax");
					this.OnCarWeightTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this.OnCarLiabilityInsuranceChanging(value);
					this.SendPropertyChanging();
					this._CarLiabilityInsurance = value;
					this.SendPropertyChanged("CarLiabilityInsurance");
					this.OnCarLiabilityInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AcquisitionTax
		{
			get
			{
				return this._AcquisitionTax;
			}
			set
			{
				if ((this._AcquisitionTax != value))
				{
					this.OnAcquisitionTaxChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionTax = value;
					this.SendPropertyChanged("AcquisitionTax");
					this.OnAcquisitionTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this.OnRecycleDepositChanging(value);
					this.SendPropertyChanging();
					this._RecycleDeposit = value;
					this.SendPropertyChanged("RecycleDeposit");
					this.OnRecycleDepositChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EraseRegist", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EraseRegist
		{
			get
			{
				return this._EraseRegist;
			}
			set
			{
				if ((this._EraseRegist != value))
				{
					this.OnEraseRegistChanging(value);
					this.SendPropertyChanging();
					this._EraseRegist = value;
					this.SendPropertyChanged("EraseRegist");
					this.OnEraseRegistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ApprovedCarNumber
		{
			get
			{
				return this._ApprovedCarNumber;
			}
			set
			{
				if ((this._ApprovedCarNumber != value))
				{
					this.OnApprovedCarNumberChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarNumber = value;
					this.SendPropertyChanged("ApprovedCarNumber");
					this.OnApprovedCarNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarWarrantyDateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedCarWarrantyDateFrom
		{
			get
			{
				return this._ApprovedCarWarrantyDateFrom;
			}
			set
			{
				if ((this._ApprovedCarWarrantyDateFrom != value))
				{
					this.OnApprovedCarWarrantyDateFromChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarWarrantyDateFrom = value;
					this.SendPropertyChanged("ApprovedCarWarrantyDateFrom");
					this.OnApprovedCarWarrantyDateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedCarWarrantyDateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedCarWarrantyDateTo
		{
			get
			{
				return this._ApprovedCarWarrantyDateTo;
			}
			set
			{
				if ((this._ApprovedCarWarrantyDateTo != value))
				{
					this.OnApprovedCarWarrantyDateToChanging(value);
					this.SendPropertyChanging();
					this._ApprovedCarWarrantyDateTo = value;
					this.SendPropertyChanged("ApprovedCarWarrantyDateTo");
					this.OnApprovedCarWarrantyDateToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finance", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Finance
		{
			get
			{
				return this._Finance;
			}
			set
			{
				if ((this._Finance != value))
				{
					this.OnFinanceChanging(value);
					this.SendPropertyChanging();
					this._Finance = value;
					this.SendPropertyChanged("Finance");
					this.OnFinanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipChangeType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnershipChangeType
		{
			get
			{
				return this._OwnershipChangeType;
			}
			set
			{
				if ((this._OwnershipChangeType != value))
				{
					this.OnOwnershipChangeTypeChanging(value);
					this.SendPropertyChanging();
					this._OwnershipChangeType = value;
					this.SendPropertyChanged("OwnershipChangeType");
					this.OnOwnershipChangeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OwnershipChangeDate
		{
			get
			{
				return this._OwnershipChangeDate;
			}
			set
			{
				if ((this._OwnershipChangeDate != value))
				{
					this.OnOwnershipChangeDateChanging(value);
					this.SendPropertyChanging();
					this._OwnershipChangeDate = value;
					this.SendPropertyChanged("OwnershipChangeDate");
					this.OnOwnershipChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipChangeMemo", DbType="NVarChar(1024)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OwnershipChangeMemo
		{
			get
			{
				return this._OwnershipChangeMemo;
			}
			set
			{
				if ((this._OwnershipChangeMemo != value))
				{
					this.OnOwnershipChangeMemoChanging(value);
					this.SendPropertyChanging();
					this._OwnershipChangeMemo = value;
					this.SendPropertyChanged("OwnershipChangeMemo");
					this.OnOwnershipChangeMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidFlag", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidFlag
		{
			get
			{
				return this._InspectGuidFlag;
			}
			set
			{
				if ((this._InspectGuidFlag != value))
				{
					this.OnInspectGuidFlagChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidFlag = value;
					this.SendPropertyChanged("InspectGuidFlag");
					this.OnInspectGuidFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectGuidMemo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InspectGuidMemo
		{
			get
			{
				return this._InspectGuidMemo;
			}
			set
			{
				if ((this._InspectGuidMemo != value))
				{
					this.OnInspectGuidMemoChanging(value);
					this.SendPropertyChanging();
					this._InspectGuidMemo = value;
					this.SendPropertyChanged("InspectGuidMemo");
					this.OnInspectGuidMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarUsage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarUsage
		{
			get
			{
				return this._CarUsage;
			}
			set
			{
				if ((this._CarUsage != value))
				{
					this.OnCarUsageChanging(value);
					this.SendPropertyChanging();
					this._CarUsage = value;
					this.SendPropertyChanged("CarUsage");
					this.OnCarUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstRegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstRegistrationDate
		{
			get
			{
				return this._FirstRegistrationDate;
			}
			set
			{
				if ((this._FirstRegistrationDate != value))
				{
					this.OnFirstRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._FirstRegistrationDate = value;
					this.SendPropertyChanged("FirstRegistrationDate");
					this.OnFirstRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyRegistrationFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyRegistrationFlag
		{
			get
			{
				return this._CompanyRegistrationFlag;
			}
			set
			{
				if ((this._CompanyRegistrationFlag != value))
				{
					this.OnCompanyRegistrationFlagChanging(value);
					this.SendPropertyChanging();
					this._CompanyRegistrationFlag = value;
					this.SendPropertyChanged("CompanyRegistrationFlag");
					this.OnCompanyRegistrationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDriverLicense", DbType="Bit")]
		public System.Nullable<bool> ConfirmDriverLicense
		{
			get
			{
				return this._ConfirmDriverLicense;
			}
			set
			{
				if ((this._ConfirmDriverLicense != value))
				{
					this.OnConfirmDriverLicenseChanging(value);
					this.SendPropertyChanging();
					this._ConfirmDriverLicense = value;
					this.SendPropertyChanged("ConfirmDriverLicense");
					this.OnConfirmDriverLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmCertificationSeal", DbType="Bit")]
		public System.Nullable<bool> ConfirmCertificationSeal
		{
			get
			{
				return this._ConfirmCertificationSeal;
			}
			set
			{
				if ((this._ConfirmCertificationSeal != value))
				{
					this.OnConfirmCertificationSealChanging(value);
					this.SendPropertyChanging();
					this._ConfirmCertificationSeal = value;
					this.SendPropertyChanged("ConfirmCertificationSeal");
					this.OnConfirmCertificationSealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmOther", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConfirmOther
		{
			get
			{
				return this._ConfirmOther;
			}
			set
			{
				if ((this._ConfirmOther != value))
				{
					this.OnConfirmOtherChanging(value);
					this.SendPropertyChanging();
					this._ConfirmOther = value;
					this.SendPropertyChanged("ConfirmOther");
					this.OnConfirmOtherChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logo")]
	public partial class Logo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LogoName;
		
		private string _FilePath;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogoNameChanging(string value);
    partial void OnLogoNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public Logo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LogoName
		{
			get
			{
				return this._LogoName;
			}
			set
			{
				if ((this._LogoName != value))
				{
					this.OnLogoNameChanging(value);
					this.SendPropertyChanging();
					this._LogoName = value;
					this.SendPropertyChanged("LogoName");
					this.OnLogoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentList")]
	public partial class DocumentList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CategoryCode;
		
		private string _DocumentCode;
		
		private string _DocumentName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryCodeChanging(string value);
    partial void OnCategoryCodeChanged();
    partial void OnDocumentCodeChanging(string value);
    partial void OnDocumentCodeChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public DocumentList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this.OnCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._CategoryCode = value;
					this.SendPropertyChanged("CategoryCode");
					this.OnCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentCode
		{
			get
			{
				return this._DocumentCode;
			}
			set
			{
				if ((this._DocumentCode != value))
				{
					this.OnDocumentCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentCode = value;
					this.SendPropertyChanged("DocumentCode");
					this.OnDocumentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceWorkCustomerClaim")]
	public partial class ServiceWorkCustomerClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ServiceWorkCode;
		
		private string _MakerCode;
		
		private string _CustomerClaimCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private EntityRef<CustomerClaim> _CustomerClaim;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceWorkCodeChanging(string value);
    partial void OnServiceWorkCodeChanged();
    partial void OnMakerCodeChanging(string value);
    partial void OnMakerCodeChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ServiceWorkCustomerClaim()
		{
			this._CustomerClaim = default(EntityRef<CustomerClaim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					this.OnServiceWorkCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceWorkCode = value;
					this.SendPropertyChanged("ServiceWorkCode");
					this.OnServiceWorkCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this.OnMakerCodeChanging(value);
					this.SendPropertyChanging();
					this._MakerCode = value;
					this.SendPropertyChanged("MakerCode");
					this.OnMakerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					if (this._CustomerClaim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerClaim_ServiceWorkCustomerClaim", Storage="_CustomerClaim", ThisKey="CustomerClaimCode", OtherKey="CustomerClaimCode", IsForeignKey=true)]
		public CustomerClaim CustomerClaim
		{
			get
			{
				return this._CustomerClaim.Entity;
			}
			set
			{
				CustomerClaim previousValue = this._CustomerClaim.Entity;
				if (((previousValue != value) 
							|| (this._CustomerClaim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerClaim.Entity = null;
						previousValue.ServiceWorkCustomerClaim.Remove(this);
					}
					this._CustomerClaim.Entity = value;
					if ((value != null))
					{
						value.ServiceWorkCustomerClaim.Add(this);
						this._CustomerClaimCode = value.CustomerClaimCode;
					}
					else
					{
						this._CustomerClaimCode = default(string);
					}
					this.SendPropertyChanged("CustomerClaim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PartsMovingAverageCostHistory")]
	public partial class PartsMovingAverageCostHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HistoryId;
		
		private string _CompanyCode;
		
		private string _PartsNumber;
		
		private System.Nullable<decimal> _PreCost;
		
		private System.Nullable<decimal> _StockQuantity;
		
		private System.Nullable<decimal> _ChangeCost;
		
		private System.Nullable<decimal> _ChangeQuantity;
		
		private System.Nullable<decimal> _PostCost;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIdChanging(System.Guid value);
    partial void OnHistoryIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnPartsNumberChanging(string value);
    partial void OnPartsNumberChanged();
    partial void OnPreCostChanging(System.Nullable<decimal> value);
    partial void OnPreCostChanged();
    partial void OnStockQuantityChanging(System.Nullable<decimal> value);
    partial void OnStockQuantityChanged();
    partial void OnChangeCostChanging(System.Nullable<decimal> value);
    partial void OnChangeCostChanged();
    partial void OnChangeQuantityChanging(System.Nullable<decimal> value);
    partial void OnChangeQuantityChanged();
    partial void OnPostCostChanging(System.Nullable<decimal> value);
    partial void OnPostCostChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public PartsMovingAverageCostHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HistoryId
		{
			get
			{
				return this._HistoryId;
			}
			set
			{
				if ((this._HistoryId != value))
				{
					this.OnHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryId = value;
					this.SendPropertyChanged("HistoryId");
					this.OnHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this.OnPartsNumberChanging(value);
					this.SendPropertyChanging();
					this._PartsNumber = value;
					this.SendPropertyChanged("PartsNumber");
					this.OnPartsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreCost
		{
			get
			{
				return this._PreCost;
			}
			set
			{
				if ((this._PreCost != value))
				{
					this.OnPreCostChanging(value);
					this.SendPropertyChanging();
					this._PreCost = value;
					this.SendPropertyChanged("PreCost");
					this.OnPreCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> StockQuantity
		{
			get
			{
				return this._StockQuantity;
			}
			set
			{
				if ((this._StockQuantity != value))
				{
					this.OnStockQuantityChanging(value);
					this.SendPropertyChanging();
					this._StockQuantity = value;
					this.SendPropertyChanged("StockQuantity");
					this.OnStockQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ChangeCost
		{
			get
			{
				return this._ChangeCost;
			}
			set
			{
				if ((this._ChangeCost != value))
				{
					this.OnChangeCostChanging(value);
					this.SendPropertyChanging();
					this._ChangeCost = value;
					this.SendPropertyChanged("ChangeCost");
					this.OnChangeCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ChangeQuantity
		{
			get
			{
				return this._ChangeQuantity;
			}
			set
			{
				if ((this._ChangeQuantity != value))
				{
					this.OnChangeQuantityChanging(value);
					this.SendPropertyChanging();
					this._ChangeQuantity = value;
					this.SendPropertyChanged("ChangeQuantity");
					this.OnChangeQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PostCost
		{
			get
			{
				return this._PostCost;
			}
			set
			{
				if ((this._PostCost != value))
				{
					this.OnPostCostChanging(value);
					this.SendPropertyChanging();
					this._PostCost = value;
					this.SendPropertyChanged("PostCost");
					this.OnPostCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeHistory")]
	public partial class EmployeeHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeCode;
		
		private int _RevisionNumber;
		
		private string _EmployeeNumber;
		
		private string _EmployeeName;
		
		private string _EmployeeNameKana;
		
		private string _DepartmentCode;
		
		private string _SecurityRoleCode;
		
		private string _MobileNumber;
		
		private string _MobileMailAddress;
		
		private string _MailAddress;
		
		private string _EmployeeType;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<System.DateTime> _LastLoginDateTime;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _DepartmentCode1;
		
		private string _DepartmentCode2;
		
		private string _DepartmentCode3;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeCodeChanging(string value);
    partial void OnEmployeeCodeChanged();
    partial void OnRevisionNumberChanging(int value);
    partial void OnRevisionNumberChanged();
    partial void OnEmployeeNumberChanging(string value);
    partial void OnEmployeeNumberChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnEmployeeNameKanaChanging(string value);
    partial void OnEmployeeNameKanaChanged();
    partial void OnDepartmentCodeChanging(string value);
    partial void OnDepartmentCodeChanged();
    partial void OnSecurityRoleCodeChanging(string value);
    partial void OnSecurityRoleCodeChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnMobileMailAddressChanging(string value);
    partial void OnMobileMailAddressChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    partial void OnEmployeeTypeChanging(string value);
    partial void OnEmployeeTypeChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnLastLoginDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateTimeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnDepartmentCode1Changing(string value);
    partial void OnDepartmentCode1Changed();
    partial void OnDepartmentCode2Changing(string value);
    partial void OnDepartmentCode2Changed();
    partial void OnDepartmentCode3Changing(string value);
    partial void OnDepartmentCode3Changed();
    #endregion
		
		public EmployeeHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this.OnEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeCode = value;
					this.SendPropertyChanged("EmployeeCode");
					this.OnEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeNumber
		{
			get
			{
				return this._EmployeeNumber;
			}
			set
			{
				if ((this._EmployeeNumber != value))
				{
					this.OnEmployeeNumberChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumber = value;
					this.SendPropertyChanged("EmployeeNumber");
					this.OnEmployeeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNameKana", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeNameKana
		{
			get
			{
				return this._EmployeeNameKana;
			}
			set
			{
				if ((this._EmployeeNameKana != value))
				{
					this.OnEmployeeNameKanaChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNameKana = value;
					this.SendPropertyChanged("EmployeeNameKana");
					this.OnEmployeeNameKanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this.OnDepartmentCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentCode = value;
					this.SendPropertyChanged("DepartmentCode");
					this.OnDepartmentCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityRoleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SecurityRoleCode
		{
			get
			{
				return this._SecurityRoleCode;
			}
			set
			{
				if ((this._SecurityRoleCode != value))
				{
					this.OnSecurityRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._SecurityRoleCode = value;
					this.SendPropertyChanged("SecurityRoleCode");
					this.OnSecurityRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileMailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileMailAddress
		{
			get
			{
				return this._MobileMailAddress;
			}
			set
			{
				if ((this._MobileMailAddress != value))
				{
					this.OnMobileMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MobileMailAddress = value;
					this.SendPropertyChanged("MobileMailAddress");
					this.OnMobileMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeType
		{
			get
			{
				return this._EmployeeType;
			}
			set
			{
				if ((this._EmployeeType != value))
				{
					this.OnEmployeeTypeChanging(value);
					this.SendPropertyChanging();
					this._EmployeeType = value;
					this.SendPropertyChanged("EmployeeType");
					this.OnEmployeeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDateTime
		{
			get
			{
				return this._LastLoginDateTime;
			}
			set
			{
				if ((this._LastLoginDateTime != value))
				{
					this.OnLastLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDateTime = value;
					this.SendPropertyChanged("LastLoginDateTime");
					this.OnLastLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode1", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode1
		{
			get
			{
				return this._DepartmentCode1;
			}
			set
			{
				if ((this._DepartmentCode1 != value))
				{
					this.OnDepartmentCode1Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode1 = value;
					this.SendPropertyChanged("DepartmentCode1");
					this.OnDepartmentCode1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode2", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode2
		{
			get
			{
				return this._DepartmentCode2;
			}
			set
			{
				if ((this._DepartmentCode2 != value))
				{
					this.OnDepartmentCode2Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode2 = value;
					this.SendPropertyChanged("DepartmentCode2");
					this.OnDepartmentCode2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode3", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode3
		{
			get
			{
				return this._DepartmentCode3;
			}
			set
			{
				if ((this._DepartmentCode3 != value))
				{
					this.OnDepartmentCode3Changing(value);
					this.SendPropertyChanging();
					this._DepartmentCode3 = value;
					this.SendPropertyChanged("DepartmentCode3");
					this.OnDepartmentCode3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EPDiscountTax")]
	public partial class EPDiscountTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EPDiscountTaxId;
		
		private System.DateTime _FromAvailableDate;
		
		private System.DateTime _ToAvailableDate;
		
		private System.Nullable<int> _Rate;
		
		private string _RateName;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEPDiscountTaxIdChanging(string value);
    partial void OnEPDiscountTaxIdChanged();
    partial void OnFromAvailableDateChanging(System.DateTime value);
    partial void OnFromAvailableDateChanged();
    partial void OnToAvailableDateChanging(System.DateTime value);
    partial void OnToAvailableDateChanged();
    partial void OnRateChanging(System.Nullable<int> value);
    partial void OnRateChanged();
    partial void OnRateNameChanging(string value);
    partial void OnRateNameChanged();
    partial void OnDisplayOrderChanging(System.Nullable<int> value);
    partial void OnDisplayOrderChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public EPDiscountTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPDiscountTaxId", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EPDiscountTaxId
		{
			get
			{
				return this._EPDiscountTaxId;
			}
			set
			{
				if ((this._EPDiscountTaxId != value))
				{
					this.OnEPDiscountTaxIdChanging(value);
					this.SendPropertyChanging();
					this._EPDiscountTaxId = value;
					this.SendPropertyChanged("EPDiscountTaxId");
					this.OnEPDiscountTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromAvailableDate", DbType="Date NOT NULL")]
		public System.DateTime FromAvailableDate
		{
			get
			{
				return this._FromAvailableDate;
			}
			set
			{
				if ((this._FromAvailableDate != value))
				{
					this.OnFromAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._FromAvailableDate = value;
					this.SendPropertyChanged("FromAvailableDate");
					this.OnFromAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToAvailableDate", DbType="Date NOT NULL")]
		public System.DateTime ToAvailableDate
		{
			get
			{
				return this._ToAvailableDate;
			}
			set
			{
				if ((this._ToAvailableDate != value))
				{
					this.OnToAvailableDateChanging(value);
					this.SendPropertyChanging();
					this._ToAvailableDate = value;
					this.SendPropertyChanged("ToAvailableDate");
					this.OnToAvailableDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Int")]
		public System.Nullable<int> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RateName
		{
			get
			{
				return this._RateName;
			}
			set
			{
				if ((this._RateName != value))
				{
					this.OnRateNameChanging(value);
					this.SendPropertyChanging();
					this._RateName = value;
					this.SendPropertyChanged("RateName");
					this.OnRateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountByAmountType")]
	public partial class AccountByAmountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AmountType;
		
		private string _AccountCode;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAmountTypeChanging(string value);
    partial void OnAmountTypeChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public AccountByAmountType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AmountType
		{
			get
			{
				return this._AmountType;
			}
			set
			{
				if ((this._AmountType != value))
				{
					this.OnAmountTypeChanging(value);
					this.SendPropertyChanging();
					this._AmountType = value;
					this.SendPropertyChanged("AmountType");
					this.OnAmountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CostArea")]
	public partial class CostArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CostAreaCode;
		
		private string _CostAreaName;
		
		private System.Nullable<decimal> _RequestNumberCost;
		
		private System.Nullable<decimal> _ParkingSpaceFee;
		
		private System.Nullable<decimal> _InspectionRegistFee;
		
		private System.Nullable<decimal> _TradeInFee;
		
		private System.Nullable<decimal> _PreparationFee;
		
		private System.Nullable<decimal> _AppraisalFee;
		
		private System.Nullable<decimal> _RecycleControlFee;
		
		private System.Nullable<decimal> _RequestNumberFee;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private System.Nullable<decimal> _ParkingSpaceCost;
		
		private System.Nullable<decimal> _NumberPlateCost;
		
		private System.Nullable<decimal> _FarRegistFee;
		
		private System.Nullable<decimal> _TradeInMaintenanceFee;
		
		private System.Nullable<decimal> _InheritedInsuranceFee;
		
		private System.Nullable<decimal> _OutJurisdictionRegistFeeWithTax;
		
		private EntitySet<CarSalesHeader> _CarSalesHeader;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostAreaCodeChanging(string value);
    partial void OnCostAreaCodeChanged();
    partial void OnCostAreaNameChanging(string value);
    partial void OnCostAreaNameChanged();
    partial void OnRequestNumberCostChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberCostChanged();
    partial void OnParkingSpaceFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceFeeWithTaxChanged();
    partial void OnInspectionRegistFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnInspectionRegistFeeWithTaxChanged();
    partial void OnTradeInFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnTradeInFeeWithTaxChanged();
    partial void OnPreparationFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnPreparationFeeWithTaxChanged();
    partial void OnAppraisalFeeChanging(System.Nullable<decimal> value);
    partial void OnAppraisalFeeChanged();
    partial void OnRecycleControlFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnRecycleControlFeeWithTaxChanged();
    partial void OnRequestNumberFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnRequestNumberFeeWithTaxChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    partial void OnParkingSpaceCostChanging(System.Nullable<decimal> value);
    partial void OnParkingSpaceCostChanged();
    partial void OnNumberPlateCostChanging(System.Nullable<decimal> value);
    partial void OnNumberPlateCostChanged();
    partial void OnFarRegistFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnFarRegistFeeWithTaxChanged();
    partial void OnTradeInMaintenanceFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnTradeInMaintenanceFeeWithTaxChanged();
    partial void OnInheritedInsuranceFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnInheritedInsuranceFeeWithTaxChanged();
    partial void OnOutJurisdictionRegistFeeWithTaxChanging(System.Nullable<decimal> value);
    partial void OnOutJurisdictionRegistFeeWithTaxChanged();
    #endregion
		
		public CostArea()
		{
			this._CarSalesHeader = new EntitySet<CarSalesHeader>(new Action<CarSalesHeader>(this.attach_CarSalesHeader), new Action<CarSalesHeader>(this.detach_CarSalesHeader));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAreaCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CostAreaCode
		{
			get
			{
				return this._CostAreaCode;
			}
			set
			{
				if ((this._CostAreaCode != value))
				{
					this.OnCostAreaCodeChanging(value);
					this.SendPropertyChanging();
					this._CostAreaCode = value;
					this.SendPropertyChanged("CostAreaCode");
					this.OnCostAreaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAreaName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CostAreaName
		{
			get
			{
				return this._CostAreaName;
			}
			set
			{
				if ((this._CostAreaName != value))
				{
					this.OnCostAreaNameChanging(value);
					this.SendPropertyChanging();
					this._CostAreaName = value;
					this.SendPropertyChanged("CostAreaName");
					this.OnCostAreaNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberCost
		{
			get
			{
				return this._RequestNumberCost;
			}
			set
			{
				if ((this._RequestNumberCost != value))
				{
					this.OnRequestNumberCostChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberCost = value;
					this.SendPropertyChanged("RequestNumberCost");
					this.OnRequestNumberCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceFeeWithTax
		{
			get
			{
				return this._ParkingSpaceFee;
			}
			set
			{
				if ((this._ParkingSpaceFee != value))
				{
					this.OnParkingSpaceFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceFee = value;
					this.SendPropertyChanged("ParkingSpaceFeeWithTax");
					this.OnParkingSpaceFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InspectionRegistFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InspectionRegistFeeWithTax
		{
			get
			{
				return this._InspectionRegistFee;
			}
			set
			{
				if ((this._InspectionRegistFee != value))
				{
					this.OnInspectionRegistFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._InspectionRegistFee = value;
					this.SendPropertyChanged("InspectionRegistFeeWithTax");
					this.OnInspectionRegistFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInFeeWithTax
		{
			get
			{
				return this._TradeInFee;
			}
			set
			{
				if ((this._TradeInFee != value))
				{
					this.OnTradeInFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._TradeInFee = value;
					this.SendPropertyChanged("TradeInFeeWithTax");
					this.OnTradeInFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> PreparationFeeWithTax
		{
			get
			{
				return this._PreparationFee;
			}
			set
			{
				if ((this._PreparationFee != value))
				{
					this.OnPreparationFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._PreparationFee = value;
					this.SendPropertyChanged("PreparationFeeWithTax");
					this.OnPreparationFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppraisalFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AppraisalFee
		{
			get
			{
				return this._AppraisalFee;
			}
			set
			{
				if ((this._AppraisalFee != value))
				{
					this.OnAppraisalFeeChanging(value);
					this.SendPropertyChanging();
					this._AppraisalFee = value;
					this.SendPropertyChanged("AppraisalFee");
					this.OnAppraisalFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleControlFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleControlFeeWithTax
		{
			get
			{
				return this._RecycleControlFee;
			}
			set
			{
				if ((this._RecycleControlFee != value))
				{
					this.OnRecycleControlFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._RecycleControlFee = value;
					this.SendPropertyChanged("RecycleControlFeeWithTax");
					this.OnRecycleControlFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumberFee", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RequestNumberFeeWithTax
		{
			get
			{
				return this._RequestNumberFee;
			}
			set
			{
				if ((this._RequestNumberFee != value))
				{
					this.OnRequestNumberFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._RequestNumberFee = value;
					this.SendPropertyChanged("RequestNumberFeeWithTax");
					this.OnRequestNumberFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParkingSpaceCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ParkingSpaceCost
		{
			get
			{
				return this._ParkingSpaceCost;
			}
			set
			{
				if ((this._ParkingSpaceCost != value))
				{
					this.OnParkingSpaceCostChanging(value);
					this.SendPropertyChanging();
					this._ParkingSpaceCost = value;
					this.SendPropertyChanged("ParkingSpaceCost");
					this.OnParkingSpaceCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPlateCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> NumberPlateCost
		{
			get
			{
				return this._NumberPlateCost;
			}
			set
			{
				if ((this._NumberPlateCost != value))
				{
					this.OnNumberPlateCostChanging(value);
					this.SendPropertyChanging();
					this._NumberPlateCost = value;
					this.SendPropertyChanged("NumberPlateCost");
					this.OnNumberPlateCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FarRegistFee", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> FarRegistFeeWithTax
		{
			get
			{
				return this._FarRegistFee;
			}
			set
			{
				if ((this._FarRegistFee != value))
				{
					this.OnFarRegistFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._FarRegistFee = value;
					this.SendPropertyChanged("FarRegistFeeWithTax");
					this.OnFarRegistFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInMaintenanceFee", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> TradeInMaintenanceFeeWithTax
		{
			get
			{
				return this._TradeInMaintenanceFee;
			}
			set
			{
				if ((this._TradeInMaintenanceFee != value))
				{
					this.OnTradeInMaintenanceFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._TradeInMaintenanceFee = value;
					this.SendPropertyChanged("TradeInMaintenanceFeeWithTax");
					this.OnTradeInMaintenanceFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InheritedInsuranceFee", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> InheritedInsuranceFeeWithTax
		{
			get
			{
				return this._InheritedInsuranceFee;
			}
			set
			{
				if ((this._InheritedInsuranceFee != value))
				{
					this.OnInheritedInsuranceFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._InheritedInsuranceFee = value;
					this.SendPropertyChanged("InheritedInsuranceFeeWithTax");
					this.OnInheritedInsuranceFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutJurisdictionRegistFeeWithTax", DbType="decimal(10, 0)")]
		public System.Nullable<decimal> OutJurisdictionRegistFeeWithTax
		{
			get
			{
				return this._OutJurisdictionRegistFeeWithTax;
			}
			set
			{
				if ((this._OutJurisdictionRegistFeeWithTax != value))
				{
					this.OnOutJurisdictionRegistFeeWithTaxChanging(value);
					this.SendPropertyChanging();
					this._OutJurisdictionRegistFeeWithTax = value;
					this.SendPropertyChanged("OutJurisdictionRegistFeeWithTax");
					this.OnOutJurisdictionRegistFeeWithTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostArea_CarSalesHeader", Storage="_CarSalesHeader", ThisKey="CostAreaCode", OtherKey="CostAreaCode")]
		public EntitySet<CarSalesHeader> CarSalesHeader
		{
			get
			{
				return this._CarSalesHeader;
			}
			set
			{
				this._CarSalesHeader.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CostArea = this;
		}
		
		private void detach_CarSalesHeader(CarSalesHeader entity)
		{
			this.SendPropertyChanging();
			entity.CostArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceReportByCutomerClaimType")]
	public partial class ServiceReportByCutomerClaimType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CusotmerClaimType;
		
		private bool _ServiceClaimReport;
		
		private bool _ServiceClaimDetailReport;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCusotmerClaimTypeChanging(string value);
    partial void OnCusotmerClaimTypeChanged();
    partial void OnServiceClaimReportChanging(bool value);
    partial void OnServiceClaimReportChanged();
    partial void OnServiceClaimDetailReportChanging(bool value);
    partial void OnServiceClaimDetailReportChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public ServiceReportByCutomerClaimType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CusotmerClaimType", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CusotmerClaimType
		{
			get
			{
				return this._CusotmerClaimType;
			}
			set
			{
				if ((this._CusotmerClaimType != value))
				{
					this.OnCusotmerClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._CusotmerClaimType = value;
					this.SendPropertyChanged("CusotmerClaimType");
					this.OnCusotmerClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceClaimReport", DbType="Bit NOT NULL")]
		public bool ServiceClaimReport
		{
			get
			{
				return this._ServiceClaimReport;
			}
			set
			{
				if ((this._ServiceClaimReport != value))
				{
					this.OnServiceClaimReportChanging(value);
					this.SendPropertyChanging();
					this._ServiceClaimReport = value;
					this.SendPropertyChanged("ServiceClaimReport");
					this.OnServiceClaimReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceClaimDetailReport", DbType="Bit NOT NULL")]
		public bool ServiceClaimDetailReport
		{
			get
			{
				return this._ServiceClaimDetailReport;
			}
			set
			{
				if ((this._ServiceClaimDetailReport != value))
				{
					this.OnServiceClaimDetailReportChanging(value);
					this.SendPropertyChanging();
					this._ServiceClaimDetailReport = value;
					this.SendPropertyChanged("ServiceClaimDetailReport");
					this.OnServiceClaimDetailReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceConsumptionTax")]
	public partial class InvoiceConsumptionTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _InvoiceConsumptionTaxId;
		
		private string _SlipNumber;
		
		private string _CustomerClaimCode;
		
		private int _Rate;
		
		private System.Nullable<decimal> _InvoiceConsumptionTaxAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceConsumptionTaxIdChanging(System.Guid value);
    partial void OnInvoiceConsumptionTaxIdChanged();
    partial void OnSlipNumberChanging(string value);
    partial void OnSlipNumberChanged();
    partial void OnCustomerClaimCodeChanging(string value);
    partial void OnCustomerClaimCodeChanged();
    partial void OnRateChanging(int value);
    partial void OnRateChanged();
    partial void OnInvoiceConsumptionTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceConsumptionTaxAmountChanged();
    partial void OnCreateEmployeeCodeChanging(string value);
    partial void OnCreateEmployeeCodeChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnLastUpdateEmployeeCodeChanging(string value);
    partial void OnLastUpdateEmployeeCodeChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnDelFlagChanging(string value);
    partial void OnDelFlagChanged();
    #endregion
		
		public InvoiceConsumptionTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceConsumptionTaxId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid InvoiceConsumptionTaxId
		{
			get
			{
				return this._InvoiceConsumptionTaxId;
			}
			set
			{
				if ((this._InvoiceConsumptionTaxId != value))
				{
					this.OnInvoiceConsumptionTaxIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceConsumptionTaxId = value;
					this.SendPropertyChanged("InvoiceConsumptionTaxId");
					this.OnInvoiceConsumptionTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this.OnSlipNumberChanging(value);
					this.SendPropertyChanging();
					this._SlipNumber = value;
					this.SendPropertyChanged("SlipNumber");
					this.OnSlipNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this.OnCustomerClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerClaimCode = value;
					this.SendPropertyChanged("CustomerClaimCode");
					this.OnCustomerClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="SmallInt NOT NULL")]
		public int Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceConsumptionTaxAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InvoiceConsumptionTaxAmount
		{
			get
			{
				return this._InvoiceConsumptionTaxAmount;
			}
			set
			{
				if ((this._InvoiceConsumptionTaxAmount != value))
				{
					this.OnInvoiceConsumptionTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceConsumptionTaxAmount = value;
					this.SendPropertyChanged("InvoiceConsumptionTaxAmount");
					this.OnInvoiceConsumptionTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this.OnCreateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._CreateEmployeeCode = value;
					this.SendPropertyChanged("CreateEmployeeCode");
					this.OnCreateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this.OnLastUpdateEmployeeCodeChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateEmployeeCode = value;
					this.SendPropertyChanged("LastUpdateEmployeeCode");
					this.OnLastUpdateEmployeeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this.OnDelFlagChanging(value);
					this.SendPropertyChanging();
					this._DelFlag = value;
					this.SendPropertyChanged("DelFlag");
					this.OnDelFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetPreAccountResult
	{
		
		private string _OfficeCode;
		
		private System.DateTime _ClosedDate;
		
		private string _CloseFlag;
		
		private System.Nullable<int> _NumberOf10000;
		
		private System.Nullable<int> _NumberOf5000;
		
		private System.Nullable<int> _NumberOf2000;
		
		private System.Nullable<int> _NumberOf1000;
		
		private System.Nullable<int> _NumberOf500;
		
		private System.Nullable<int> _NumberOf100;
		
		private System.Nullable<int> _NumberOf50;
		
		private System.Nullable<int> _NumberOf10;
		
		private System.Nullable<int> _NumberOf5;
		
		private System.Nullable<int> _NumberOf1;
		
		private System.Nullable<decimal> _CheckAmount;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private string _DelFlag;
		
		private string _CashAccountCode;
		
		public GetPreAccountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OfficeCode
		{
			get
			{
				return this._OfficeCode;
			}
			set
			{
				if ((this._OfficeCode != value))
				{
					this._OfficeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this._ClosedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseFlag", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CloseFlag
		{
			get
			{
				return this._CloseFlag;
			}
			set
			{
				if ((this._CloseFlag != value))
				{
					this._CloseFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10000", DbType="Int")]
		public System.Nullable<int> NumberOf10000
		{
			get
			{
				return this._NumberOf10000;
			}
			set
			{
				if ((this._NumberOf10000 != value))
				{
					this._NumberOf10000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5000", DbType="Int")]
		public System.Nullable<int> NumberOf5000
		{
			get
			{
				return this._NumberOf5000;
			}
			set
			{
				if ((this._NumberOf5000 != value))
				{
					this._NumberOf5000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf2000", DbType="Int")]
		public System.Nullable<int> NumberOf2000
		{
			get
			{
				return this._NumberOf2000;
			}
			set
			{
				if ((this._NumberOf2000 != value))
				{
					this._NumberOf2000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1000", DbType="Int")]
		public System.Nullable<int> NumberOf1000
		{
			get
			{
				return this._NumberOf1000;
			}
			set
			{
				if ((this._NumberOf1000 != value))
				{
					this._NumberOf1000 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf500", DbType="Int")]
		public System.Nullable<int> NumberOf500
		{
			get
			{
				return this._NumberOf500;
			}
			set
			{
				if ((this._NumberOf500 != value))
				{
					this._NumberOf500 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf100", DbType="Int")]
		public System.Nullable<int> NumberOf100
		{
			get
			{
				return this._NumberOf100;
			}
			set
			{
				if ((this._NumberOf100 != value))
				{
					this._NumberOf100 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf50", DbType="Int")]
		public System.Nullable<int> NumberOf50
		{
			get
			{
				return this._NumberOf50;
			}
			set
			{
				if ((this._NumberOf50 != value))
				{
					this._NumberOf50 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf10", DbType="Int")]
		public System.Nullable<int> NumberOf10
		{
			get
			{
				return this._NumberOf10;
			}
			set
			{
				if ((this._NumberOf10 != value))
				{
					this._NumberOf10 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf5", DbType="Int")]
		public System.Nullable<int> NumberOf5
		{
			get
			{
				return this._NumberOf5;
			}
			set
			{
				if ((this._NumberOf5 != value))
				{
					this._NumberOf5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOf1", DbType="Int")]
		public System.Nullable<int> NumberOf1
		{
			get
			{
				return this._NumberOf1;
			}
			set
			{
				if ((this._NumberOf1 != value))
				{
					this._NumberOf1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CheckAmount
		{
			get
			{
				return this._CheckAmount;
			}
			set
			{
				if ((this._CheckAmount != value))
				{
					this._CheckAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this._CreateEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this._LastUpdateEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashAccountCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CashAccountCode
		{
			get
			{
				return this._CashAccountCode;
			}
			set
			{
				if ((this._CashAccountCode != value))
				{
					this._CashAccountCode = value;
				}
			}
		}
	}
	
	public partial class GetJournalCashResult
	{
		
		private System.Nullable<int> _TargetDateY;
		
		private System.Nullable<int> _TargetDateM;
		
		private System.Nullable<int> _TargetDateD;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		private string _DepartmentCode;
		
		private string _SlipNumber;
		
		private string _CustomerClaimName;
		
		private string _Blank1;
		
		private string _Blank2;
		
		private string _Blank3;
		
		private string _Summary;
		
		private string _Blank4;
		
		private string _Blank5;
		
		private System.Nullable<decimal> _InAmount;
		
		private System.Nullable<decimal> _OutAmount;
		
		public GetJournalCashResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDateY", DbType="Int")]
		public System.Nullable<int> TargetDateY
		{
			get
			{
				return this._TargetDateY;
			}
			set
			{
				if ((this._TargetDateY != value))
				{
					this._TargetDateY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDateM", DbType="Int")]
		public System.Nullable<int> TargetDateM
		{
			get
			{
				return this._TargetDateM;
			}
			set
			{
				if ((this._TargetDateM != value))
				{
					this._TargetDateM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDateD", DbType="Int")]
		public System.Nullable<int> TargetDateD
		{
			get
			{
				return this._TargetDateD;
			}
			set
			{
				if ((this._TargetDateD != value))
				{
					this._TargetDateD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blank1", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Blank1
		{
			get
			{
				return this._Blank1;
			}
			set
			{
				if ((this._Blank1 != value))
				{
					this._Blank1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blank2", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Blank2
		{
			get
			{
				return this._Blank2;
			}
			set
			{
				if ((this._Blank2 != value))
				{
					this._Blank2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blank3", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Blank3
		{
			get
			{
				return this._Blank3;
			}
			set
			{
				if ((this._Blank3 != value))
				{
					this._Blank3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blank4", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Blank4
		{
			get
			{
				return this._Blank4;
			}
			set
			{
				if ((this._Blank4 != value))
				{
					this._Blank4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blank5", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Blank5
		{
			get
			{
				return this._Blank5;
			}
			set
			{
				if ((this._Blank5 != value))
				{
					this._Blank5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> InAmount
		{
			get
			{
				return this._InAmount;
			}
			set
			{
				if ((this._InAmount != value))
				{
					this._InAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OutAmount
		{
			get
			{
				return this._OutAmount;
			}
			set
			{
				if ((this._OutAmount != value))
				{
					this._OutAmount = value;
				}
			}
		}
	}
	
	public partial class GetJournalDataResult
	{
		
		private System.DateTime _JournalDate;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _SlipNumber;
		
		private string _OrderStatus;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private decimal _Amount;
		
		private string _AccountType;
		
		private string _Summary;
		
		private string _AccountCode;
		
		private string _AccountName;
		
		public GetJournalDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this._JournalDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this._OrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this._AccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this._AccountCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
	}
	
	public partial class GetShikakariSummaryResult
	{
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private System.Nullable<decimal> _PartsTotalAmount;
		
		private System.Nullable<decimal> _TotalCost;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		public GetShikakariSummaryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsTotalAmount", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> PartsTotalAmount
		{
			get
			{
				return this._PartsTotalAmount;
			}
			set
			{
				if ((this._PartsTotalAmount != value))
				{
					this._PartsTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this._TotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this._GrandTotalAmount = value;
				}
			}
		}
	}
	
	public partial class GetServiceSalesReportResult
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _QuoteDate;
		
		private System.Nullable<System.DateTime> _WorkingEndDate;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _SlipNumber;
		
		private string _ServiceWorkCode;
		
		private string _WorkTypeName;
		
		private string _ServiceWorkName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private decimal _ServiceAmount;
		
		private decimal _PartsAmount;
		
		private decimal _TotalAmount;
		
		private decimal _TaxAmount;
		
		private decimal _ServiceCost;
		
		private decimal _PartsCost;
		
		private decimal _TotalCost;
		
		private decimal _ServiceProfits;
		
		private decimal _PartsProfits;
		
		private decimal _TotalProfits;
		
		private string _FrontEmployeeName;
		
		private string _MechanicEmployeeName;
		
		private string _CustomerClaimName;
		
		public GetServiceSalesReportResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> QuoteDate
		{
			get
			{
				return this._QuoteDate;
			}
			set
			{
				if ((this._QuoteDate != value))
				{
					this._QuoteDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkingEndDate
		{
			get
			{
				return this._WorkingEndDate;
			}
			set
			{
				if ((this._WorkingEndDate != value))
				{
					this._WorkingEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					this._ServiceWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTypeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WorkTypeName
		{
			get
			{
				return this._WorkTypeName;
			}
			set
			{
				if ((this._WorkTypeName != value))
				{
					this._WorkTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkName
		{
			get
			{
				return this._ServiceWorkName;
			}
			set
			{
				if ((this._ServiceWorkName != value))
				{
					this._ServiceWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAmount", DbType="Decimal(11,1) NOT NULL")]
		public decimal ServiceAmount
		{
			get
			{
				return this._ServiceAmount;
			}
			set
			{
				if ((this._ServiceAmount != value))
				{
					this._ServiceAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsAmount", DbType="Decimal(11,1) NOT NULL")]
		public decimal PartsAmount
		{
			get
			{
				return this._PartsAmount;
			}
			set
			{
				if ((this._PartsAmount != value))
				{
					this._PartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(11,1) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(11,1) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this._TaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCost", DbType="Decimal(11,1) NOT NULL")]
		public decimal ServiceCost
		{
			get
			{
				return this._ServiceCost;
			}
			set
			{
				if ((this._ServiceCost != value))
				{
					this._ServiceCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsCost", DbType="Decimal(11,1) NOT NULL")]
		public decimal PartsCost
		{
			get
			{
				return this._PartsCost;
			}
			set
			{
				if ((this._PartsCost != value))
				{
					this._PartsCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(11,1) NOT NULL")]
		public decimal TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this._TotalCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProfits", DbType="Decimal(11,1) NOT NULL")]
		public decimal ServiceProfits
		{
			get
			{
				return this._ServiceProfits;
			}
			set
			{
				if ((this._ServiceProfits != value))
				{
					this._ServiceProfits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsProfits", DbType="Decimal(11,1) NOT NULL")]
		public decimal PartsProfits
		{
			get
			{
				return this._PartsProfits;
			}
			set
			{
				if ((this._PartsProfits != value))
				{
					this._PartsProfits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalProfits", DbType="Decimal(11,1) NOT NULL")]
		public decimal TotalProfits
		{
			get
			{
				return this._TotalProfits;
			}
			set
			{
				if ((this._TotalProfits != value))
				{
					this._TotalProfits = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontEmployeeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string FrontEmployeeName
		{
			get
			{
				return this._FrontEmployeeName;
			}
			set
			{
				if ((this._FrontEmployeeName != value))
				{
					this._FrontEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MechanicEmployeeName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MechanicEmployeeName
		{
			get
			{
				return this._MechanicEmployeeName;
			}
			set
			{
				if ((this._MechanicEmployeeName != value))
				{
					this._MechanicEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
	}
	
	public partial class GetPartsStockForDialogResult
	{
		
		private string _MakerName;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private decimal _Quantity;
		
		private string _SupplierName;
		
		public GetPartsStockForDialogResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(12,2) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
	}
	
	public partial class GetCarOptionSetListResult
	{
		
		private string _CarOptionCode;
		
		private string _CarOptionName;
		
		private string _MakerCode;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private string _OptionType;
		
		private string _CarGradeCode;
		
		public GetCarOptionSetListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionCode
		{
			get
			{
				return this._CarOptionCode;
			}
			set
			{
				if ((this._CarOptionCode != value))
				{
					this._CarOptionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarOptionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarOptionName
		{
			get
			{
				return this._CarOptionName;
			}
			set
			{
				if ((this._CarOptionName != value))
				{
					this._CarOptionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerCode
		{
			get
			{
				return this._MakerCode;
			}
			set
			{
				if ((this._MakerCode != value))
				{
					this._MakerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this._SalesPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionType", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OptionType
		{
			get
			{
				return this._OptionType;
			}
			set
			{
				if ((this._OptionType != value))
				{
					this._OptionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeCode
		{
			get
			{
				return this._CarGradeCode;
			}
			set
			{
				if ((this._CarGradeCode != value))
				{
					this._CarGradeCode = value;
				}
			}
		}
	}
	
	public partial class GetPartsLocationListResult
	{
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _DelFlag;
		
		public GetPartsLocationListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this._WarehouseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this._WarehouseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
	}
	
	public partial class GetInventoryStockResult
	{
		
		private System.DateTime _InventoryMonth;
		
		private string _PartsNumber;
		
		private string _LocationCode;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _PhysicalQuantity;
		
		private string _Comment;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private string _WarehouseCode;
		
		private string _LocationName;
		
		private string _LocationType;
		
		private string _PartsNameJp;
		
		private System.Nullable<decimal> _AverageCost;
		
		private System.Nullable<decimal> _StandardPrice;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		public GetInventoryStockResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PhysicalQuantity
		{
			get
			{
				return this._PhysicalQuantity;
			}
			set
			{
				if ((this._PhysicalQuantity != value))
				{
					this._PhysicalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this._ProvisionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this._WarehouseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationType
		{
			get
			{
				return this._LocationType;
			}
			set
			{
				if ((this._LocationType != value))
				{
					this._LocationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AverageCost
		{
			get
			{
				return this._AverageCost;
			}
			set
			{
				if ((this._AverageCost != value))
				{
					this._AverageCost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> StandardPrice
		{
			get
			{
				return this._StandardPrice;
			}
			set
			{
				if ((this._StandardPrice != value))
				{
					this._StandardPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class GetLocationListResult
	{
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _BusinessType;
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _LocationTypeName;
		
		private string _DelFlag;
		
		public GetLocationListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string BusinessType
		{
			get
			{
				return this._BusinessType;
			}
			set
			{
				if ((this._BusinessType != value))
				{
					this._BusinessType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this._WarehouseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this._WarehouseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationTypeName
		{
			get
			{
				return this._LocationTypeName;
			}
			set
			{
				if ((this._LocationTypeName != value))
				{
					this._LocationTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelFlag
		{
			get
			{
				return this._DelFlag;
			}
			set
			{
				if ((this._DelFlag != value))
				{
					this._DelFlag = value;
				}
			}
		}
	}
	
	public partial class GetCustomerIntegrateDataResult
	{
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _TelNumber;
		
		private string _MobileNumber;
		
		private string _PostCode;
		
		private string _Prefecture;
		
		private string _City;
		
		private string _Address1;
		
		private string _Address2;
		
		private System.Nullable<int> _CarCnt;
		
		private System.Nullable<int> _ServiceCnt;
		
		public GetCustomerIntegrateDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TelNumber
		{
			get
			{
				return this._TelNumber;
			}
			set
			{
				if ((this._TelNumber != value))
				{
					this._TelNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="NVarChar(15)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this._MobileNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this._PostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Prefecture
		{
			get
			{
				return this._Prefecture;
			}
			set
			{
				if ((this._Prefecture != value))
				{
					this._Prefecture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarCnt", DbType="Int")]
		public System.Nullable<int> CarCnt
		{
			get
			{
				return this._CarCnt;
			}
			set
			{
				if ((this._CarCnt != value))
				{
					this._CarCnt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCnt", DbType="Int")]
		public System.Nullable<int> ServiceCnt
		{
			get
			{
				return this._ServiceCnt;
			}
			set
			{
				if ((this._ServiceCnt != value))
				{
					this._ServiceCnt = value;
				}
			}
		}
	}
	
	public partial class GetServiceSalesHistoryHeaderResult
	{
		
		private string _H_DepartmentName;
		
		private string _H_SystemName;
		
		private string _H_SlipNumber;
		
		private string _H_SalesInputDate;
		
		private string _H_RedSlipType;
		
		private string _H_CustomerCode;
		
		private string _H_CustomerNameKana;
		
		private string _H_CustomerName1;
		
		private string _H_CustomerName2;
		
		private string _H_RegistName;
		
		private string _H_RegistType;
		
		private string _H_RegistNumberKana;
		
		private string _H_RegistNumber;
		
		private string _H_ServiceWorkCode;
		
		private string _H_ServiceWorkName;
		
		private string _H_FrontEmployeeCode;
		
		private string _H_FrontEmployeeName;
		
		private string _H_MechanicEmployeeCode;
		
		private string _H_MechanicEmployeeName;
		
		private string _H_TechnicalFeeAmount;
		
		private string _H_PartsAmount;
		
		private string _H_VariousAmount;
		
		private string _H_TechnicalFeeTaxAmount;
		
		private string _H_VariousTaxAmount;
		
		private string _H_TotalTaxAmount;
		
		private string _H_RunningData;
		
		private string _H_Vin;
		
		public GetServiceSalesHistoryHeaderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_DepartmentName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_DepartmentName
		{
			get
			{
				return this._H_DepartmentName;
			}
			set
			{
				if ((this._H_DepartmentName != value))
				{
					this._H_DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_SystemName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_SystemName
		{
			get
			{
				return this._H_SystemName;
			}
			set
			{
				if ((this._H_SystemName != value))
				{
					this._H_SystemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_SlipNumber", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_SlipNumber
		{
			get
			{
				return this._H_SlipNumber;
			}
			set
			{
				if ((this._H_SlipNumber != value))
				{
					this._H_SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_SalesInputDate", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_SalesInputDate
		{
			get
			{
				return this._H_SalesInputDate;
			}
			set
			{
				if ((this._H_SalesInputDate != value))
				{
					this._H_SalesInputDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RedSlipType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RedSlipType
		{
			get
			{
				return this._H_RedSlipType;
			}
			set
			{
				if ((this._H_RedSlipType != value))
				{
					this._H_RedSlipType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CustomerCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_CustomerCode
		{
			get
			{
				return this._H_CustomerCode;
			}
			set
			{
				if ((this._H_CustomerCode != value))
				{
					this._H_CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CustomerNameKana", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_CustomerNameKana
		{
			get
			{
				return this._H_CustomerNameKana;
			}
			set
			{
				if ((this._H_CustomerNameKana != value))
				{
					this._H_CustomerNameKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CustomerName1", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_CustomerName1
		{
			get
			{
				return this._H_CustomerName1;
			}
			set
			{
				if ((this._H_CustomerName1 != value))
				{
					this._H_CustomerName1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CustomerName2", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_CustomerName2
		{
			get
			{
				return this._H_CustomerName2;
			}
			set
			{
				if ((this._H_CustomerName2 != value))
				{
					this._H_CustomerName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RegistName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RegistName
		{
			get
			{
				return this._H_RegistName;
			}
			set
			{
				if ((this._H_RegistName != value))
				{
					this._H_RegistName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RegistType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RegistType
		{
			get
			{
				return this._H_RegistType;
			}
			set
			{
				if ((this._H_RegistType != value))
				{
					this._H_RegistType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RegistNumberKana", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RegistNumberKana
		{
			get
			{
				return this._H_RegistNumberKana;
			}
			set
			{
				if ((this._H_RegistNumberKana != value))
				{
					this._H_RegistNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RegistNumber", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RegistNumber
		{
			get
			{
				return this._H_RegistNumber;
			}
			set
			{
				if ((this._H_RegistNumber != value))
				{
					this._H_RegistNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_ServiceWorkCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_ServiceWorkCode
		{
			get
			{
				return this._H_ServiceWorkCode;
			}
			set
			{
				if ((this._H_ServiceWorkCode != value))
				{
					this._H_ServiceWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_ServiceWorkName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_ServiceWorkName
		{
			get
			{
				return this._H_ServiceWorkName;
			}
			set
			{
				if ((this._H_ServiceWorkName != value))
				{
					this._H_ServiceWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_FrontEmployeeCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_FrontEmployeeCode
		{
			get
			{
				return this._H_FrontEmployeeCode;
			}
			set
			{
				if ((this._H_FrontEmployeeCode != value))
				{
					this._H_FrontEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_FrontEmployeeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_FrontEmployeeName
		{
			get
			{
				return this._H_FrontEmployeeName;
			}
			set
			{
				if ((this._H_FrontEmployeeName != value))
				{
					this._H_FrontEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_MechanicEmployeeCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_MechanicEmployeeCode
		{
			get
			{
				return this._H_MechanicEmployeeCode;
			}
			set
			{
				if ((this._H_MechanicEmployeeCode != value))
				{
					this._H_MechanicEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_MechanicEmployeeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_MechanicEmployeeName
		{
			get
			{
				return this._H_MechanicEmployeeName;
			}
			set
			{
				if ((this._H_MechanicEmployeeName != value))
				{
					this._H_MechanicEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_TechnicalFeeAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_TechnicalFeeAmount
		{
			get
			{
				return this._H_TechnicalFeeAmount;
			}
			set
			{
				if ((this._H_TechnicalFeeAmount != value))
				{
					this._H_TechnicalFeeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_PartsAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_PartsAmount
		{
			get
			{
				return this._H_PartsAmount;
			}
			set
			{
				if ((this._H_PartsAmount != value))
				{
					this._H_PartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_VariousAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_VariousAmount
		{
			get
			{
				return this._H_VariousAmount;
			}
			set
			{
				if ((this._H_VariousAmount != value))
				{
					this._H_VariousAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_TechnicalFeeTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_TechnicalFeeTaxAmount
		{
			get
			{
				return this._H_TechnicalFeeTaxAmount;
			}
			set
			{
				if ((this._H_TechnicalFeeTaxAmount != value))
				{
					this._H_TechnicalFeeTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_VariousTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_VariousTaxAmount
		{
			get
			{
				return this._H_VariousTaxAmount;
			}
			set
			{
				if ((this._H_VariousTaxAmount != value))
				{
					this._H_VariousTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_TotalTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_TotalTaxAmount
		{
			get
			{
				return this._H_TotalTaxAmount;
			}
			set
			{
				if ((this._H_TotalTaxAmount != value))
				{
					this._H_TotalTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_RunningData", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_RunningData
		{
			get
			{
				return this._H_RunningData;
			}
			set
			{
				if ((this._H_RunningData != value))
				{
					this._H_RunningData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_Vin", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string H_Vin
		{
			get
			{
				return this._H_Vin;
			}
			set
			{
				if ((this._H_Vin != value))
				{
					this._H_Vin = value;
				}
			}
		}
	}
	
	public partial class GetServiceSalesHistoryLineResult
	{
		
		private string _L_DepartmentName;
		
		private string _L_SystemName;
		
		private string _L_SlipNumber;
		
		private string _L_LineNumber;
		
		private string _L_SalesInputDate;
		
		private string _L_RedSlipType;
		
		private string _L_CustomerCode;
		
		private string _L_CustomerNameKana;
		
		private string _L_CustomerName1;
		
		private string _L_CustomerName2;
		
		private string _L_RegistName;
		
		private string _L_RegistType;
		
		private string _L_RegistNumberKana;
		
		private string _L_RegistNumber;
		
		private string _L_ServiceWorkCode;
		
		private string _L_ServiceWorkName;
		
		private string _L_ContentsName;
		
		private string _L_ContentsType;
		
		private string _L_FrontEmployeeCode;
		
		private string _L_FrontEmployeeName;
		
		private string _L_MechanicEmployeeCode;
		
		private string _L_MechanicEmployeeName;
		
		private string _L_MechanicEmployeeCodeDetail;
		
		private string _L_MechanicEmployeeNameDetaL;
		
		private string _L_Quantity;
		
		private string _L_TechnicalFeeAmount;
		
		private string _L_PartsAmount;
		
		private string _L_VariousAmount;
		
		private string _L_ServiceName;
		
		private string _L_TotalTechnicalFeeAmount;
		
		private string _L_TotalPartsAmount;
		
		private string _L_TotalVariousAmount;
		
		private string _L_TechnicalFeeTaxAmount;
		
		private string _L_VariousTaxAmount;
		
		private string _L_TotalTaxAmount;
		
		private string _L_RunnnigData;
		
		public GetServiceSalesHistoryLineResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_DepartmentName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_DepartmentName
		{
			get
			{
				return this._L_DepartmentName;
			}
			set
			{
				if ((this._L_DepartmentName != value))
				{
					this._L_DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_SystemName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_SystemName
		{
			get
			{
				return this._L_SystemName;
			}
			set
			{
				if ((this._L_SystemName != value))
				{
					this._L_SystemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_SlipNumber", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_SlipNumber
		{
			get
			{
				return this._L_SlipNumber;
			}
			set
			{
				if ((this._L_SlipNumber != value))
				{
					this._L_SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_LineNumber", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_LineNumber
		{
			get
			{
				return this._L_LineNumber;
			}
			set
			{
				if ((this._L_LineNumber != value))
				{
					this._L_LineNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_SalesInputDate", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_SalesInputDate
		{
			get
			{
				return this._L_SalesInputDate;
			}
			set
			{
				if ((this._L_SalesInputDate != value))
				{
					this._L_SalesInputDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RedSlipType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RedSlipType
		{
			get
			{
				return this._L_RedSlipType;
			}
			set
			{
				if ((this._L_RedSlipType != value))
				{
					this._L_RedSlipType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_CustomerCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_CustomerCode
		{
			get
			{
				return this._L_CustomerCode;
			}
			set
			{
				if ((this._L_CustomerCode != value))
				{
					this._L_CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_CustomerNameKana", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_CustomerNameKana
		{
			get
			{
				return this._L_CustomerNameKana;
			}
			set
			{
				if ((this._L_CustomerNameKana != value))
				{
					this._L_CustomerNameKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_CustomerName1", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_CustomerName1
		{
			get
			{
				return this._L_CustomerName1;
			}
			set
			{
				if ((this._L_CustomerName1 != value))
				{
					this._L_CustomerName1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_CustomerName2", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_CustomerName2
		{
			get
			{
				return this._L_CustomerName2;
			}
			set
			{
				if ((this._L_CustomerName2 != value))
				{
					this._L_CustomerName2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RegistName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RegistName
		{
			get
			{
				return this._L_RegistName;
			}
			set
			{
				if ((this._L_RegistName != value))
				{
					this._L_RegistName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RegistType", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RegistType
		{
			get
			{
				return this._L_RegistType;
			}
			set
			{
				if ((this._L_RegistType != value))
				{
					this._L_RegistType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RegistNumberKana", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RegistNumberKana
		{
			get
			{
				return this._L_RegistNumberKana;
			}
			set
			{
				if ((this._L_RegistNumberKana != value))
				{
					this._L_RegistNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RegistNumber", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RegistNumber
		{
			get
			{
				return this._L_RegistNumber;
			}
			set
			{
				if ((this._L_RegistNumber != value))
				{
					this._L_RegistNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ServiceWorkCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_ServiceWorkCode
		{
			get
			{
				return this._L_ServiceWorkCode;
			}
			set
			{
				if ((this._L_ServiceWorkCode != value))
				{
					this._L_ServiceWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ServiceWorkName", DbType="VarChar(500)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_ServiceWorkName
		{
			get
			{
				return this._L_ServiceWorkName;
			}
			set
			{
				if ((this._L_ServiceWorkName != value))
				{
					this._L_ServiceWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ContentsName", DbType="VarChar(500)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_ContentsName
		{
			get
			{
				return this._L_ContentsName;
			}
			set
			{
				if ((this._L_ContentsName != value))
				{
					this._L_ContentsName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ContentsType", DbType="VarChar(500)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_ContentsType
		{
			get
			{
				return this._L_ContentsType;
			}
			set
			{
				if ((this._L_ContentsType != value))
				{
					this._L_ContentsType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_FrontEmployeeCode", DbType="VarChar(500)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_FrontEmployeeCode
		{
			get
			{
				return this._L_FrontEmployeeCode;
			}
			set
			{
				if ((this._L_FrontEmployeeCode != value))
				{
					this._L_FrontEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_FrontEmployeeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_FrontEmployeeName
		{
			get
			{
				return this._L_FrontEmployeeName;
			}
			set
			{
				if ((this._L_FrontEmployeeName != value))
				{
					this._L_FrontEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_MechanicEmployeeCode", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_MechanicEmployeeCode
		{
			get
			{
				return this._L_MechanicEmployeeCode;
			}
			set
			{
				if ((this._L_MechanicEmployeeCode != value))
				{
					this._L_MechanicEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_MechanicEmployeeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_MechanicEmployeeName
		{
			get
			{
				return this._L_MechanicEmployeeName;
			}
			set
			{
				if ((this._L_MechanicEmployeeName != value))
				{
					this._L_MechanicEmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_MechanicEmployeeCodeDetail", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_MechanicEmployeeCodeDetail
		{
			get
			{
				return this._L_MechanicEmployeeCodeDetail;
			}
			set
			{
				if ((this._L_MechanicEmployeeCodeDetail != value))
				{
					this._L_MechanicEmployeeCodeDetail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_MechanicEmployeeNameDetaL", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_MechanicEmployeeNameDetaL
		{
			get
			{
				return this._L_MechanicEmployeeNameDetaL;
			}
			set
			{
				if ((this._L_MechanicEmployeeNameDetaL != value))
				{
					this._L_MechanicEmployeeNameDetaL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_Quantity", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_Quantity
		{
			get
			{
				return this._L_Quantity;
			}
			set
			{
				if ((this._L_Quantity != value))
				{
					this._L_Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TechnicalFeeAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TechnicalFeeAmount
		{
			get
			{
				return this._L_TechnicalFeeAmount;
			}
			set
			{
				if ((this._L_TechnicalFeeAmount != value))
				{
					this._L_TechnicalFeeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_PartsAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_PartsAmount
		{
			get
			{
				return this._L_PartsAmount;
			}
			set
			{
				if ((this._L_PartsAmount != value))
				{
					this._L_PartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_VariousAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_VariousAmount
		{
			get
			{
				return this._L_VariousAmount;
			}
			set
			{
				if ((this._L_VariousAmount != value))
				{
					this._L_VariousAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_ServiceName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_ServiceName
		{
			get
			{
				return this._L_ServiceName;
			}
			set
			{
				if ((this._L_ServiceName != value))
				{
					this._L_ServiceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TotalTechnicalFeeAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TotalTechnicalFeeAmount
		{
			get
			{
				return this._L_TotalTechnicalFeeAmount;
			}
			set
			{
				if ((this._L_TotalTechnicalFeeAmount != value))
				{
					this._L_TotalTechnicalFeeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TotalPartsAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TotalPartsAmount
		{
			get
			{
				return this._L_TotalPartsAmount;
			}
			set
			{
				if ((this._L_TotalPartsAmount != value))
				{
					this._L_TotalPartsAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TotalVariousAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TotalVariousAmount
		{
			get
			{
				return this._L_TotalVariousAmount;
			}
			set
			{
				if ((this._L_TotalVariousAmount != value))
				{
					this._L_TotalVariousAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TechnicalFeeTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TechnicalFeeTaxAmount
		{
			get
			{
				return this._L_TechnicalFeeTaxAmount;
			}
			set
			{
				if ((this._L_TechnicalFeeTaxAmount != value))
				{
					this._L_TechnicalFeeTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_VariousTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_VariousTaxAmount
		{
			get
			{
				return this._L_VariousTaxAmount;
			}
			set
			{
				if ((this._L_VariousTaxAmount != value))
				{
					this._L_VariousTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_TotalTaxAmount", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_TotalTaxAmount
		{
			get
			{
				return this._L_TotalTaxAmount;
			}
			set
			{
				if ((this._L_TotalTaxAmount != value))
				{
					this._L_TotalTaxAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_RunnnigData", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string L_RunnnigData
		{
			get
			{
				return this._L_RunnnigData;
			}
			set
			{
				if ((this._L_RunnnigData != value))
				{
					this._L_RunnnigData = value;
				}
			}
		}
	}
	
	public partial class GetMechanicRankingResult
	{
		
		private System.Nullable<long> _Ranking;
		
		private string _DepartmentName;
		
		private string _EmployeeName;
		
		private System.Nullable<decimal> _TechnicalFeeAmount;
		
		public GetMechanicRankingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ranking", DbType="BigInt")]
		public System.Nullable<long> Ranking
		{
			get
			{
				return this._Ranking;
			}
			set
			{
				if ((this._Ranking != value))
				{
					this._Ranking = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalFeeAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TechnicalFeeAmount
		{
			get
			{
				return this._TechnicalFeeAmount;
			}
			set
			{
				if ((this._TechnicalFeeAmount != value))
				{
					this._TechnicalFeeAmount = value;
				}
			}
		}
	}
	
	public partial class GetCarBasicInfoResult
	{
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _NewUsedName;
		
		private string _LocationName;
		
		private string _CarStatusName;
		
		private string _MakerName;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _PossesorName;
		
		private string _UserName;
		
		private string _DelName;
		
		public GetCarBasicInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedName
		{
			get
			{
				return this._NewUsedName;
			}
			set
			{
				if ((this._NewUsedName != value))
				{
					this._NewUsedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatusName
		{
			get
			{
				return this._CarStatusName;
			}
			set
			{
				if ((this._CarStatusName != value))
				{
					this._CarStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PossesorName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PossesorName
		{
			get
			{
				return this._PossesorName;
			}
			set
			{
				if ((this._PossesorName != value))
				{
					this._PossesorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelName", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DelName
		{
			get
			{
				return this._DelName;
			}
			set
			{
				if ((this._DelName != value))
				{
					this._DelName = value;
				}
			}
		}
	}
	
	public partial class GetCarStatusTransitionResult
	{
		
		private string _SlipTypeName;
		
		private string _SlipTypeCode;
		
		private string _SlipType;
		
		private System.Nullable<System.DateTime> _SlipDate;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _SlipStatusCode;
		
		private string _SlipStatus;
		
		private string _EmployeeCode;
		
		private string _EmployeeName;
		
		private string _SalesCarNumber;
		
		private string _SlipNumber;
		
		private System.Nullable<decimal> _VehiclePrice;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<int> _SlipTypeOrder;
		
		public GetCarStatusTransitionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipTypeName", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipTypeName
		{
			get
			{
				return this._SlipTypeName;
			}
			set
			{
				if ((this._SlipTypeName != value))
				{
					this._SlipTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipTypeCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipTypeCode
		{
			get
			{
				return this._SlipTypeCode;
			}
			set
			{
				if ((this._SlipTypeCode != value))
				{
					this._SlipTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipType
		{
			get
			{
				return this._SlipType;
			}
			set
			{
				if ((this._SlipType != value))
				{
					this._SlipType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SlipDate
		{
			get
			{
				return this._SlipDate;
			}
			set
			{
				if ((this._SlipDate != value))
				{
					this._SlipDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipStatusCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipStatusCode
		{
			get
			{
				return this._SlipStatusCode;
			}
			set
			{
				if ((this._SlipStatusCode != value))
				{
					this._SlipStatusCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipStatus", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipStatus
		{
			get
			{
				return this._SlipStatus;
			}
			set
			{
				if ((this._SlipStatus != value))
				{
					this._SlipStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeCode
		{
			get
			{
				return this._EmployeeCode;
			}
			set
			{
				if ((this._EmployeeCode != value))
				{
					this._EmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehiclePrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> VehiclePrice
		{
			get
			{
				return this._VehiclePrice;
			}
			set
			{
				if ((this._VehiclePrice != value))
				{
					this._VehiclePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipTypeOrder", DbType="Int")]
		public System.Nullable<int> SlipTypeOrder
		{
			get
			{
				return this._SlipTypeOrder;
			}
			set
			{
				if ((this._SlipTypeOrder != value))
				{
					this._SlipTypeOrder = value;
				}
			}
		}
	}
	
	public partial class GetCarSalesSlipResult
	{
		
		private string _SlipNumber;
		
		private string _SalesCarNumber;
		
		private string _SalesOrderStatusName;
		
		private string _EmployeeName;
		
		private string _CustomerName;
		
		private string _DepartmentName;
		
		public GetCarSalesSlipResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesOrderStatusName
		{
			get
			{
				return this._SalesOrderStatusName;
			}
			set
			{
				if ((this._SalesOrderStatusName != value))
				{
					this._SalesOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class GetSupplierPaymentListResult
	{
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _SlipNumber;
		
		private string _ServiceWorkName;
		
		private string _LineContents;
		
		private System.Nullable<decimal> _TechnicalFeeAmount;
		
		private System.Nullable<decimal> _Cost;
		
		private string _CustomerClaimName;
		
		private string _CustomerName;
		
		private string _ServiceOrderStatusName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private string _Vin;
		
		public GetSupplierPaymentListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkName
		{
			get
			{
				return this._ServiceWorkName;
			}
			set
			{
				if ((this._ServiceWorkName != value))
				{
					this._ServiceWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents
		{
			get
			{
				return this._LineContents;
			}
			set
			{
				if ((this._LineContents != value))
				{
					this._LineContents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalFeeAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TechnicalFeeAmount
		{
			get
			{
				return this._TechnicalFeeAmount;
			}
			set
			{
				if ((this._TechnicalFeeAmount != value))
				{
					this._TechnicalFeeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatusName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatusName
		{
			get
			{
				return this._ServiceOrderStatusName;
			}
			set
			{
				if ((this._ServiceOrderStatusName != value))
				{
					this._ServiceOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
	}
	
	public partial class GetDuplicationCarInventoryResult
	{
		
		private System.Nullable<System.Guid> _InventoryID;
		
		private System.DateTime _InventoryMonth;
		
		private string _DepartmentCode;
		
		private string _WarehouseCode;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _NewUsedType;
		
		private string _NewUsedTypeName;
		
		private string _CarUsage;
		
		private string _CarStatusName;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _ColorType;
		
		private string _ExteriorColorCode;
		
		private string _ExteriorColorName;
		
		private string _RegistrationNumber;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private System.Nullable<decimal> _PhysicalQuantity;
		
		private string _Comment;
		
		private string _CommentName;
		
		private string _Summary;
		
		public GetDuplicationCarInventoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> InventoryID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this._InventoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryMonth", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryMonth
		{
			get
			{
				return this._InventoryMonth;
			}
			set
			{
				if ((this._InventoryMonth != value))
				{
					this._InventoryMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="NVarChar(6)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this._WarehouseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedTypeName
		{
			get
			{
				return this._NewUsedTypeName;
			}
			set
			{
				if ((this._NewUsedTypeName != value))
				{
					this._NewUsedTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarUsage", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarUsage
		{
			get
			{
				return this._CarUsage;
			}
			set
			{
				if ((this._CarUsage != value))
				{
					this._CarUsage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatusName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatusName
		{
			get
			{
				return this._CarStatusName;
			}
			set
			{
				if ((this._CarStatusName != value))
				{
					this._CarStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColorType
		{
			get
			{
				return this._ColorType;
			}
			set
			{
				if ((this._ColorType != value))
				{
					this._ColorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorCode
		{
			get
			{
				return this._ExteriorColorCode;
			}
			set
			{
				if ((this._ExteriorColorCode != value))
				{
					this._ExteriorColorCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this._ExteriorColorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this._RegistrationNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this._MorterViecleOfficialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this._RegistrationNumberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this._RegistrationNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this._RegistrationNumberPlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PhysicalQuantity
		{
			get
			{
				return this._PhysicalQuantity;
			}
			set
			{
				if ((this._PhysicalQuantity != value))
				{
					this._PhysicalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CommentName
		{
			get
			{
				return this._CommentName;
			}
			set
			{
				if ((this._CommentName != value))
				{
					this._CommentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(255)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	public partial class GetStockCarListResult
	{
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _NewUsedType;
		
		private string _NewUsedTypeName;
		
		private string _CarStatus;
		
		private string _CarStatusName;
		
		private string _CarBrandName;
		
		private string _CarName;
		
		private string _CarGradeName;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private string _ColorType;
		
		private string _ExteriorColorCode;
		
		private string _ExteriorColorName;
		
		private string _MorterViecleOfficialCode;
		
		private string _RegistrationNumberType;
		
		private string _RegistrationNumberKana;
		
		private string _RegistrationNumberPlate;
		
		private string _RegistrationNumber;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _PhysicalQuantity;
		
		private string _Summary;
		
		public GetStockCarListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedType
		{
			get
			{
				return this._NewUsedType;
			}
			set
			{
				if ((this._NewUsedType != value))
				{
					this._NewUsedType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedTypeName
		{
			get
			{
				return this._NewUsedTypeName;
			}
			set
			{
				if ((this._NewUsedTypeName != value))
				{
					this._NewUsedTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatus
		{
			get
			{
				return this._CarStatus;
			}
			set
			{
				if ((this._CarStatus != value))
				{
					this._CarStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarStatusName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarStatusName
		{
			get
			{
				return this._CarStatusName;
			}
			set
			{
				if ((this._CarStatusName != value))
				{
					this._CarStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarGradeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarGradeName
		{
			get
			{
				return this._CarGradeName;
			}
			set
			{
				if ((this._CarGradeName != value))
				{
					this._CarGradeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this._SalesPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorType", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ColorType
		{
			get
			{
				return this._ColorType;
			}
			set
			{
				if ((this._ColorType != value))
				{
					this._ColorType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorCode
		{
			get
			{
				return this._ExteriorColorCode;
			}
			set
			{
				if ((this._ExteriorColorCode != value))
				{
					this._ExteriorColorCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this._ExteriorColorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorterViecleOfficialCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MorterViecleOfficialCode
		{
			get
			{
				return this._MorterViecleOfficialCode;
			}
			set
			{
				if ((this._MorterViecleOfficialCode != value))
				{
					this._MorterViecleOfficialCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberType
		{
			get
			{
				return this._RegistrationNumberType;
			}
			set
			{
				if ((this._RegistrationNumberType != value))
				{
					this._RegistrationNumberType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberKana", DbType="NVarChar(1)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberKana
		{
			get
			{
				return this._RegistrationNumberKana;
			}
			set
			{
				if ((this._RegistrationNumberKana != value))
				{
					this._RegistrationNumberKana = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumberPlate", DbType="NVarChar(4)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumberPlate
		{
			get
			{
				return this._RegistrationNumberPlate;
			}
			set
			{
				if ((this._RegistrationNumberPlate != value))
				{
					this._RegistrationNumberPlate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this._RegistrationNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalQuantity", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> PhysicalQuantity
		{
			get
			{
				return this._PhysicalQuantity;
			}
			set
			{
				if ((this._PhysicalQuantity != value))
				{
					this._PhysicalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NVarChar(200)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this._Summary = value;
				}
			}
		}
	}
	
	public partial class Get_CarSlipStatusChangeResult
	{
		
		private string _SlipNumber;
		
		private string _SalesOrderStatus;
		
		private string _RequestUserName;
		
		private string _CreateEmployeeCode;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _LastUpdateEmployeeCode;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.Nullable<char> _ChangeStatus;
		
		private System.Guid _StatusChangeCode;
		
		private string _EmployeeName;
		
		public Get_CarSlipStatusChangeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderStatus", DbType="NChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesOrderStatus
		{
			get
			{
				return this._SalesOrderStatus;
			}
			set
			{
				if ((this._SalesOrderStatus != value))
				{
					this._SalesOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUserName", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string RequestUserName
		{
			get
			{
				return this._RequestUserName;
			}
			set
			{
				if ((this._RequestUserName != value))
				{
					this._RequestUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CreateEmployeeCode
		{
			get
			{
				return this._CreateEmployeeCode;
			}
			set
			{
				if ((this._CreateEmployeeCode != value))
				{
					this._CreateEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateEmployeeCode", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LastUpdateEmployeeCode
		{
			get
			{
				return this._LastUpdateEmployeeCode;
			}
			set
			{
				if ((this._LastUpdateEmployeeCode != value))
				{
					this._LastUpdateEmployeeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this._LastUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeStatus", DbType="NChar(1)")]
		public System.Nullable<char> ChangeStatus
		{
			get
			{
				return this._ChangeStatus;
			}
			set
			{
				if ((this._ChangeStatus != value))
				{
					this._ChangeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusChangeCode", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid StatusChangeCode
		{
			get
			{
				return this._StatusChangeCode;
			}
			set
			{
				if ((this._StatusChangeCode != value))
				{
					this._StatusChangeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
	}
	
	public partial class GetPartsStatusResult
	{
		
		private string _SlipNumber;
		
		private string _ServiceOrderStatus;
		
		private string _ServiceOrderStatusName;
		
		private string _PartsNumber;
		
		private string _LineContents;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private System.Nullable<System.DateTime> _SalesOrderDate;
		
		private System.Nullable<System.DateTime> _WorkingStartDate;
		
		private System.Nullable<System.DateTime> _WorkingEndDate;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		public GetPartsStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					this._ServiceOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatusName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatusName
		{
			get
			{
				return this._ServiceOrderStatusName;
			}
			set
			{
				if ((this._ServiceOrderStatusName != value))
				{
					this._ServiceOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineContents", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LineContents
		{
			get
			{
				return this._LineContents;
			}
			set
			{
				if ((this._LineContents != value))
				{
					this._LineContents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this._ProvisionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesOrderDate
		{
			get
			{
				return this._SalesOrderDate;
			}
			set
			{
				if ((this._SalesOrderDate != value))
				{
					this._SalesOrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkingStartDate
		{
			get
			{
				return this._WorkingStartDate;
			}
			set
			{
				if ((this._WorkingStartDate != value))
				{
					this._WorkingStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WorkingEndDate
		{
			get
			{
				return this._WorkingEndDate;
			}
			set
			{
				if ((this._WorkingEndDate != value))
				{
					this._WorkingEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
	}
	
	public partial class GetPartsPurchaseListResult
	{
		
		private string _PurchaseNumber;
		
		private string _PurchaseOrderNumber;
		
		private string _SlipNumber;
		
		private string _InvoiceNo;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private System.Nullable<decimal> _PurchaseQuantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private string _MakerOrderNumber;
		
		private string _WebOrderNumber;
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _ReceiptNumber;
		
		private string _PurchaseType;
		
		private string _Memo;
		
		private string _ChangePartsFlag;
		
		private string _OrderPartsNumber;
		
		public GetPartsPurchaseListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this._PurchaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this._RemainingQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchaseQuantity
		{
			get
			{
				return this._PurchaseQuantity;
			}
			set
			{
				if ((this._PurchaseQuantity != value))
				{
					this._PurchaseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this._MakerOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this._WebOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this._ReceiptNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					this._PurchaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePartsFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangePartsFlag
		{
			get
			{
				return this._ChangePartsFlag;
			}
			set
			{
				if ((this._ChangePartsFlag != value))
				{
					this._ChangePartsFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderPartsNumber
		{
			get
			{
				return this._OrderPartsNumber;
			}
			set
			{
				if ((this._OrderPartsNumber != value))
				{
					this._OrderPartsNumber = value;
				}
			}
		}
	}
	
	public partial class GetPartsPurchaseListByPurchaseOrderNumberResult
	{
		
		private string _PurchaseNumber;
		
		private string _PurchaseOrderNumber;
		
		private string _SlipNumber;
		
		private string _InvoiceNo;
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private System.Nullable<decimal> _PurchaseQuantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Amount;
		
		private string _MakerOrderNumber;
		
		private string _WebOrderNumber;
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _ReceiptNumber;
		
		private string _PurchaseType;
		
		private string _Memo;
		
		private string _ChangePartsFlag;
		
		private string _OrderPartsNumber;
		
		public GetPartsPurchaseListByPurchaseOrderNumberResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseNumber
		{
			get
			{
				return this._PurchaseNumber;
			}
			set
			{
				if ((this._PurchaseNumber != value))
				{
					this._PurchaseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this._PurchaseOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="NVarChar(12)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this._RemainingQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PurchaseQuantity
		{
			get
			{
				return this._PurchaseQuantity;
			}
			set
			{
				if ((this._PurchaseQuantity != value))
				{
					this._PurchaseQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerOrderNumber
		{
			get
			{
				return this._MakerOrderNumber;
			}
			set
			{
				if ((this._MakerOrderNumber != value))
				{
					this._MakerOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebOrderNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WebOrderNumber
		{
			get
			{
				return this._WebOrderNumber;
			}
			set
			{
				if ((this._WebOrderNumber != value))
				{
					this._WebOrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this._SupplierCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this._ReceiptNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					this._PurchaseType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePartsFlag", DbType="NVarChar(2)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ChangePartsFlag
		{
			get
			{
				return this._ChangePartsFlag;
			}
			set
			{
				if ((this._ChangePartsFlag != value))
				{
					this._ChangePartsFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderPartsNumber", DbType="NVarChar(25)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OrderPartsNumber
		{
			get
			{
				return this._OrderPartsNumber;
			}
			set
			{
				if ((this._OrderPartsNumber != value))
				{
					this._OrderPartsNumber = value;
				}
			}
		}
	}
	
	public partial class GetServiceSalesSlipResult
	{
		
		private string _SlipNumber;
		
		private System.Nullable<int> _RevisionNumber;
		
		private string _ServiceOrderStatus;
		
		private string _ServiceOrderStatusName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private System.Nullable<System.DateTime> _ArrivalPlanDate;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _ServiceWorkCode;
		
		private string _ServiceWorkName;
		
		private string _CustomerClaimCode;
		
		private string _CustomerClaimName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		public GetServiceSalesSlipResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="Int")]
		public System.Nullable<int> RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this._RevisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatus", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatus
		{
			get
			{
				return this._ServiceOrderStatus;
			}
			set
			{
				if ((this._ServiceOrderStatus != value))
				{
					this._ServiceOrderStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceOrderStatusName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceOrderStatusName
		{
			get
			{
				return this._ServiceOrderStatusName;
			}
			set
			{
				if ((this._ServiceOrderStatusName != value))
				{
					this._ServiceOrderStatusName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalPlanDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ArrivalPlanDate
		{
			get
			{
				return this._ArrivalPlanDate;
			}
			set
			{
				if ((this._ArrivalPlanDate != value))
				{
					this._ArrivalPlanDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this._CustomerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkCode", DbType="NVarChar(5)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkCode
		{
			get
			{
				return this._ServiceWorkCode;
			}
			set
			{
				if ((this._ServiceWorkCode != value))
				{
					this._ServiceWorkCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceWorkName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ServiceWorkName
		{
			get
			{
				return this._ServiceWorkName;
			}
			set
			{
				if ((this._ServiceWorkName != value))
				{
					this._ServiceWorkName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimCode", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimCode
		{
			get
			{
				return this._CustomerClaimCode;
			}
			set
			{
				if ((this._CustomerClaimCode != value))
				{
					this._CustomerClaimCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerClaimName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerClaimName
		{
			get
			{
				return this._CustomerClaimName;
			}
			set
			{
				if ((this._CustomerClaimName != value))
				{
					this._CustomerClaimName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
	}
	
	public partial class GetPartsStockResult
	{
		
		private string _PartsNumber;
		
		private string _PartsNameJp;
		
		private string _LocationCode;
		
		private string _LocationName;
		
		private string _LocationType;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _WarehouseCode;
		
		private string _WarehouseName;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _ProvisionQuantity;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<decimal> _MovingAverageCost;
		
		public GetPartsStockResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNumber", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNumber
		{
			get
			{
				return this._PartsNumber;
			}
			set
			{
				if ((this._PartsNumber != value))
				{
					this._PartsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartsNameJp", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PartsNameJp
		{
			get
			{
				return this._PartsNameJp;
			}
			set
			{
				if ((this._PartsNameJp != value))
				{
					this._PartsNameJp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this._LocationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationName
		{
			get
			{
				return this._LocationName;
			}
			set
			{
				if ((this._LocationName != value))
				{
					this._LocationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationType", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string LocationType
		{
			get
			{
				return this._LocationType;
			}
			set
			{
				if ((this._LocationType != value))
				{
					this._LocationType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseCode", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseCode
		{
			get
			{
				return this._WarehouseCode;
			}
			set
			{
				if ((this._WarehouseCode != value))
				{
					this._WarehouseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this._WarehouseName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvisionQuantity", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProvisionQuantity
		{
			get
			{
				return this._ProvisionQuantity;
			}
			set
			{
				if ((this._ProvisionQuantity != value))
				{
					this._ProvisionQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovingAverageCost", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MovingAverageCost
		{
			get
			{
				return this._MovingAverageCost;
			}
			set
			{
				if ((this._MovingAverageCost != value))
				{
					this._MovingAverageCost = value;
				}
			}
		}
	}
	
	public partial class GetAntiqueLedgerListResult
	{
		
		private System.DateTime _PurchaseDate;
		
		private string _PurchaseStatus;
		
		private string _MakerName;
		
		private string _CarName;
		
		private string _ModelName;
		
		private string _ManufacturingYear;
		
		private string _ExteriorColorName;
		
		private System.Nullable<decimal> _Mileage;
		
		private System.Nullable<decimal> _Amount;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _EmployeeName;
		
		private string _Registration;
		
		private string _SupplierName;
		
		private string _S_PostCode;
		
		private string _S_Prefecture;
		
		private string _S_City;
		
		private string _S_Address1;
		
		private string _S_Address2;
		
		private string _SalesTypeName;
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _CustomerName;
		
		private string _C_Prefecture;
		
		private string _C_City;
		
		private string _C_Address1;
		
		private string _C_Address2;
		
		private string _OccupationName;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<bool> _ConfirmDriverLicense;
		
		private System.Nullable<bool> _ConfirmCertificationSeal;
		
		private string _ConfirmOther;
		
		public GetAntiqueLedgerListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime NOT NULL")]
		public System.DateTime PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this._PurchaseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseStatus", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string PurchaseStatus
		{
			get
			{
				return this._PurchaseStatus;
			}
			set
			{
				if ((this._PurchaseStatus != value))
				{
					this._PurchaseStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string MakerName
		{
			get
			{
				return this._MakerName;
			}
			set
			{
				if ((this._MakerName != value))
				{
					this._MakerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this._ModelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingYear", DbType="NVarChar(10)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ManufacturingYear
		{
			get
			{
				return this._ManufacturingYear;
			}
			set
			{
				if ((this._ManufacturingYear != value))
				{
					this._ManufacturingYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorColorName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ExteriorColorName
		{
			get
			{
				return this._ExteriorColorName;
			}
			set
			{
				if ((this._ExteriorColorName != value))
				{
					this._ExteriorColorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this._Mileage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registration", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Registration
		{
			get
			{
				return this._Registration;
			}
			set
			{
				if ((this._Registration != value))
				{
					this._Registration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_PostCode", DbType="NVarChar(8)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string S_PostCode
		{
			get
			{
				return this._S_PostCode;
			}
			set
			{
				if ((this._S_PostCode != value))
				{
					this._S_PostCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string S_Prefecture
		{
			get
			{
				return this._S_Prefecture;
			}
			set
			{
				if ((this._S_Prefecture != value))
				{
					this._S_Prefecture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string S_City
		{
			get
			{
				return this._S_City;
			}
			set
			{
				if ((this._S_City != value))
				{
					this._S_City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string S_Address1
		{
			get
			{
				return this._S_Address1;
			}
			set
			{
				if ((this._S_Address1 != value))
				{
					this._S_Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string S_Address2
		{
			get
			{
				return this._S_Address2;
			}
			set
			{
				if ((this._S_Address2 != value))
				{
					this._S_Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTypeName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesTypeName
		{
			get
			{
				return this._SalesTypeName;
			}
			set
			{
				if ((this._SalesTypeName != value))
				{
					this._SalesTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Prefecture", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string C_Prefecture
		{
			get
			{
				return this._C_Prefecture;
			}
			set
			{
				if ((this._C_Prefecture != value))
				{
					this._C_Prefecture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_City", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string C_City
		{
			get
			{
				return this._C_City;
			}
			set
			{
				if ((this._C_City != value))
				{
					this._C_City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Address1", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string C_Address1
		{
			get
			{
				return this._C_Address1;
			}
			set
			{
				if ((this._C_Address1 != value))
				{
					this._C_Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_Address2", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string C_Address2
		{
			get
			{
				return this._C_Address2;
			}
			set
			{
				if ((this._C_Address2 != value))
				{
					this._C_Address2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string OccupationName
		{
			get
			{
				return this._OccupationName;
			}
			set
			{
				if ((this._OccupationName != value))
				{
					this._OccupationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmDriverLicense", DbType="Bit")]
		public System.Nullable<bool> ConfirmDriverLicense
		{
			get
			{
				return this._ConfirmDriverLicense;
			}
			set
			{
				if ((this._ConfirmDriverLicense != value))
				{
					this._ConfirmDriverLicense = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmCertificationSeal", DbType="Bit")]
		public System.Nullable<bool> ConfirmCertificationSeal
		{
			get
			{
				return this._ConfirmCertificationSeal;
			}
			set
			{
				if ((this._ConfirmCertificationSeal != value))
				{
					this._ConfirmCertificationSeal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmOther", DbType="NVarChar(100)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string ConfirmOther
		{
			get
			{
				return this._ConfirmOther;
			}
			set
			{
				if ((this._ConfirmOther != value))
				{
					this._ConfirmOther = value;
				}
			}
		}
	}
	
	public partial class GetCarSalesHeaderListResult
	{
		
		private System.Nullable<System.DateTime> _SalesDate;
		
		private string _NewUsedTypeName;
		
		private string _SlipNumber;
		
		private string _SalesCarNumber;
		
		private string _Vin;
		
		private string _CustomerName;
		
		private string _DepartmentCode;
		
		private string _DepartmentName;
		
		private string _Employeename;
		
		private System.Nullable<decimal> _SalesPrice;
		
		private System.Nullable<decimal> _ShopOptionAmountWithTax;
		
		private System.Nullable<decimal> _MaintenancePackageAmount;
		
		private System.Nullable<decimal> _ExtendedWarrantyAmount;
		
		private System.Nullable<decimal> _SurchargeAmount;
		
		private System.Nullable<decimal> _MakerOptionAmount;
		
		private System.Nullable<decimal> _AAAmount;
		
		private System.Nullable<decimal> _SalesCostTotalAmount;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _OtherCostTotalAmount;
		
		private System.Nullable<decimal> _TaxFreeTotalAmount;
		
		private System.Nullable<decimal> _CarLiabilityInsurance;
		
		private System.Nullable<decimal> _RecycleDeposit;
		
		private System.Nullable<decimal> _GrandTotalAmount;
		
		private System.Nullable<decimal> _TradeInTotalAmountNotTax;
		
		private string _TradeInVin1;
		
		private string _TradeInVin2;
		
		private string _TradeInVin3;
		
		private System.Nullable<decimal> _TradeInUnexpiredCarTaxTotalAmount;
		
		private System.Nullable<decimal> _TradeInRemainDebtTotalAmount;
		
		private System.Nullable<decimal> _TradeInAppropriationTotalAmount;
		
		private string _CarName;
		
		private string _CarBrandName;
		
		public GetCarSalesHeaderListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this._SalesDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUsedTypeName", DbType="VarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string NewUsedTypeName
		{
			get
			{
				return this._NewUsedTypeName;
			}
			set
			{
				if ((this._NewUsedTypeName != value))
				{
					this._NewUsedTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SlipNumber
		{
			get
			{
				return this._SlipNumber;
			}
			set
			{
				if ((this._SlipNumber != value))
				{
					this._SlipNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCarNumber", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string SalesCarNumber
		{
			get
			{
				return this._SalesCarNumber;
			}
			set
			{
				if ((this._SalesCarNumber != value))
				{
					this._SalesCarNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vin", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Vin
		{
			get
			{
				return this._Vin;
			}
			set
			{
				if ((this._Vin != value))
				{
					this._Vin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(80)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentCode", DbType="NVarChar(3)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentCode
		{
			get
			{
				return this._DepartmentCode;
			}
			set
			{
				if ((this._DepartmentCode != value))
				{
					this._DepartmentCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this._DepartmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employeename", DbType="NVarChar(40)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string Employeename
		{
			get
			{
				return this._Employeename;
			}
			set
			{
				if ((this._Employeename != value))
				{
					this._Employeename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPrice", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesPrice
		{
			get
			{
				return this._SalesPrice;
			}
			set
			{
				if ((this._SalesPrice != value))
				{
					this._SalesPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopOptionAmountWithTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ShopOptionAmountWithTax
		{
			get
			{
				return this._ShopOptionAmountWithTax;
			}
			set
			{
				if ((this._ShopOptionAmountWithTax != value))
				{
					this._ShopOptionAmountWithTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenancePackageAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MaintenancePackageAmount
		{
			get
			{
				return this._MaintenancePackageAmount;
			}
			set
			{
				if ((this._MaintenancePackageAmount != value))
				{
					this._MaintenancePackageAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedWarrantyAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> ExtendedWarrantyAmount
		{
			get
			{
				return this._ExtendedWarrantyAmount;
			}
			set
			{
				if ((this._ExtendedWarrantyAmount != value))
				{
					this._ExtendedWarrantyAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurchargeAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SurchargeAmount
		{
			get
			{
				return this._SurchargeAmount;
			}
			set
			{
				if ((this._SurchargeAmount != value))
				{
					this._SurchargeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakerOptionAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> MakerOptionAmount
		{
			get
			{
				return this._MakerOptionAmount;
			}
			set
			{
				if ((this._MakerOptionAmount != value))
				{
					this._MakerOptionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AAAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> AAAmount
		{
			get
			{
				return this._AAAmount;
			}
			set
			{
				if ((this._AAAmount != value))
				{
					this._AAAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesCostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> SalesCostTotalAmount
		{
			get
			{
				return this._SalesCostTotalAmount;
			}
			set
			{
				if ((this._SalesCostTotalAmount != value))
				{
					this._SalesCostTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherCostTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> OtherCostTotalAmount
		{
			get
			{
				return this._OtherCostTotalAmount;
			}
			set
			{
				if ((this._OtherCostTotalAmount != value))
				{
					this._OtherCostTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxFreeTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TaxFreeTotalAmount
		{
			get
			{
				return this._TaxFreeTotalAmount;
			}
			set
			{
				if ((this._TaxFreeTotalAmount != value))
				{
					this._TaxFreeTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarLiabilityInsurance", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> CarLiabilityInsurance
		{
			get
			{
				return this._CarLiabilityInsurance;
			}
			set
			{
				if ((this._CarLiabilityInsurance != value))
				{
					this._CarLiabilityInsurance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecycleDeposit", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> RecycleDeposit
		{
			get
			{
				return this._RecycleDeposit;
			}
			set
			{
				if ((this._RecycleDeposit != value))
				{
					this._RecycleDeposit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrandTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> GrandTotalAmount
		{
			get
			{
				return this._GrandTotalAmount;
			}
			set
			{
				if ((this._GrandTotalAmount != value))
				{
					this._GrandTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInTotalAmountNotTax", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInTotalAmountNotTax
		{
			get
			{
				return this._TradeInTotalAmountNotTax;
			}
			set
			{
				if ((this._TradeInTotalAmountNotTax != value))
				{
					this._TradeInTotalAmountNotTax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin1", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin1
		{
			get
			{
				return this._TradeInVin1;
			}
			set
			{
				if ((this._TradeInVin1 != value))
				{
					this._TradeInVin1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin2", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin2
		{
			get
			{
				return this._TradeInVin2;
			}
			set
			{
				if ((this._TradeInVin2 != value))
				{
					this._TradeInVin2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInVin3", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string TradeInVin3
		{
			get
			{
				return this._TradeInVin3;
			}
			set
			{
				if ((this._TradeInVin3 != value))
				{
					this._TradeInVin3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInUnexpiredCarTaxTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInUnexpiredCarTaxTotalAmount
		{
			get
			{
				return this._TradeInUnexpiredCarTaxTotalAmount;
			}
			set
			{
				if ((this._TradeInUnexpiredCarTaxTotalAmount != value))
				{
					this._TradeInUnexpiredCarTaxTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInRemainDebtTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInRemainDebtTotalAmount
		{
			get
			{
				return this._TradeInRemainDebtTotalAmount;
			}
			set
			{
				if ((this._TradeInRemainDebtTotalAmount != value))
				{
					this._TradeInRemainDebtTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeInAppropriationTotalAmount", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> TradeInAppropriationTotalAmount
		{
			get
			{
				return this._TradeInAppropriationTotalAmount;
			}
			set
			{
				if ((this._TradeInAppropriationTotalAmount != value))
				{
					this._TradeInAppropriationTotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarName", DbType="NVarChar(20)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarName
		{
			get
			{
				return this._CarName;
			}
			set
			{
				if ((this._CarName != value))
				{
					this._CarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarBrandName", DbType="NVarChar(50)")]
		[DisplayFormat(ConvertEmptyStringToNull = false)]
		public string CarBrandName
		{
			get
			{
				return this._CarBrandName;
			}
			set
			{
				if ((this._CarBrandName != value))
				{
					this._CarBrandName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
